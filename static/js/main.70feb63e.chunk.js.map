{"version":3,"sources":["core/fetch.utils.ts","core/api-urls.ts","main/dashboard/FindUserByTicket.tsx","main/Dashboard.tsx","custom.theme.ts","core/mapper.utils.ts","core/ticket-info/ticket-base-info.mapper.ts","core/ticket-info/ticket-info.provider.ts","core/condition.builder.ts","provider/auth/auth.provider.ts","main/TicketInfoList.tsx","main/TicketInfoView.tsx","App.tsx","provider/providers.factory.ts","provider/auth/fake-auth.provider.ts","provider/auth/no-auth.provider.ts","provider/data/fake-data.provider.ts","reportWebVitals.ts","index.tsx"],"names":["baseHeaders","authHeaders","token","Authorization","get","baseUrl","path","fetch","method","headers","then","res","ok","json","Promise","reject","getByConditions","pathParam","API_V1","process","AUTH_URL","BOOKINGS_URL","CUSTOMERS_URL","EVENTS_URL","TICKETS_URL","useStyles","makeStyles","theme","createStyles","root","display","height","spacing","input","button","fontWeight","marginLeft","FindUserByTicket","classes","history","useHistory","useState","error","loading","ticketCode","setState","navigate","useCallback","tickets","length","push","pathname","id","search","stringify","filter","JSON","fetchTickets","a","localStorage","getItem","filterByTicketCodeCondition","handleClick","prevState","Box","className","FormControl","disabled","InputLabel","Input","onInput","event","target","value","FormHelperText","Button","variant","color","onClick","header","textAlign","letterSpacing","Dashboard","Grid","container","item","xs","Card","CardHeader","title","sm","CardContent","customTheme","defaultTheme","palette","primary","deepPurple","secondary","green","typography","fontFamily","join","body1","body2","h5","toMapById","values","Map","map","v","mapToTicketBaseInfo","firstname","lastname","pesel","eventName","name","ticketType","mapToTicketBaseInfoList","bookings","customers","events","bookingById","customerById","eventById","ticket","bookingId","customerId","eventId","customer","getByUniqueIds","ids","uniqueIds","Array","from","Set","toUniqueIds","firstId","reduce","prev","curr","buildFilterByIdsCondition","getList","resource","bookingIds","customerIds","eventIds","pendingCustomers","pendingEvents","all","ticketBaseInfoList","resolve","data","total","getOne","ticketId","pendingCustomer","pendingEvent","login","url","body","username","password","setItem","logout","removeItem","checkError","status","checkAuth","getPermissions","getIdentity","fullName","DataTable","useListContext","filterValues","m","Typography","paragraph","Divider","Datagrid","rowClick","TextField","sortable","source","TicketInfoList","props","useLocation","List","actions","pagination","Toolbar","justifyContent","TicketInfoView","Show","TabbedShowLayout","syncWithLocation","Tab","label","App","env","authProvider","dataProvider","ticketsProvider","fakeDataProvider","users","email","address","street","suite","city","zipcode","geo","lat","lng","phone","website","company","catchPhrase","bs","providersFactory","Admin","dashboard","Resource","options","list","show","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mZAAMA,EAA2B,CAC/B,eAAgB,oBAGZC,EAA8C,SAACC,GAAD,mBAAC,eAChDF,GAD+C,IAElDG,cAAc,UAAD,OAAYD,MAGdE,EAAM,SAAIC,EAAiBC,EAAcJ,GAAnC,OACjBK,MAAM,GAAD,OAAIF,GAAJ,OAAcC,GAAQ,CACzBE,OAAQ,MACRC,QAASR,EAAYC,KACpBQ,MAAK,SAACC,GAAD,OAAUA,EAAIC,GAAMD,EAAIE,OAAwBC,QAAQC,aAErDC,EAAkB,SAC7BX,EACAY,EACAf,GAH6B,OAIZE,EAASC,EAAN,2BAAmCY,GAAaf,ICnBhEgB,EAAM,UAAMC,iCAAN,WACCC,EAAQ,UAAMF,EAAN,+BACRG,EAAY,UAAMH,EAAN,8BACZI,EAAa,UAAMJ,EAAN,+BACbK,EAAU,UAAML,EAAN,4BAEVM,GADS,UAAMN,EAAN,2BACE,UAAMA,EAAN,8B,OCelBO,EAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,KAAM,CACJC,QAAS,OACTC,OAAQJ,EAAMK,QAAQ,IAExBC,MAAO,GACPC,OAAQ,CACNC,WAAY,OACZJ,OAAQJ,EAAMK,QAAQ,GACtBI,WAAYT,EAAMK,QAAQ,SAKnBK,EAAmB,WAC9B,IAAMC,EAAUb,IACVc,EAAUC,cAEhB,EAAmDC,mBAAS,CAC1DC,MAAO,GACPC,SAAS,EACTC,WAAY,KAHd,0BAASF,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,QAASC,EAAzB,EAAyBA,WAAcC,EAAvC,KAMMC,EAAWC,uBACf,SAACC,GACwB,IAAnBA,EAAQC,OACVV,EAAQW,KAAK,CAAEC,SAAS,gBAAD,OAAkBH,EAAQ,GAAGI,GAA7B,WAEvBb,EAAQW,KAAK,CACXC,SAAS,eACTE,OAAQC,oBAAU,CAChBC,OAAQC,KAAKF,UAAU,CACrBV,qBAMV,CAACL,EAASK,IAGNa,EAAeV,sBAAW,sBAAC,8BAAAW,EAAA,6DACzBxD,EAAQyD,aAAaC,QAAQ,SAC7BC,EAFyB,4BAE0BjB,EAF1B,uBAGxB5B,EACLQ,EACAqC,EACA3D,IAN6B,2CAQ9B,CAAC0C,IAEEkB,EAAW,uCAAG,4BAAAJ,EAAA,0DACdd,EADc,uBAEhBC,GAAS,SAACkB,GAAD,mBAAC,eAAoBA,GAArB,IAAgCpB,SAAS,EAAMD,MAAO,QAF/C,SAGMe,IAHN,OAGVT,EAHU,OAIhBH,GAAS,SAACkB,GAAD,mBAAC,eAAoBA,GAArB,IAAgCpB,SAAS,OAC9CK,EAAQC,OACVH,EAASE,GAETH,GAAS,SAACkB,GAAD,mBAAC,eACLA,GADI,IAEPrB,MAAO,oCAVK,uBAchBG,GAAS,SAACkB,GAAD,mBAAC,eAAoBA,GAArB,IAAgCrB,MAAO,sBAdhC,4CAAH,qDAsBjB,OACE,eAACsB,EAAA,EAAD,CAAKC,UAAW3B,EAAQT,KAAxB,UACE,eAACqC,EAAA,EAAD,CAAaD,UAAW3B,EAAQL,MAAOkC,SAAUxB,EAAjD,UACE,cAACyB,EAAA,EAAD,yBACA,cAACC,EAAA,EAAD,CAAO3B,QAASA,EAAMO,OAAQqB,QARhB,SAACC,GACnB1B,GAAS,SAACkB,GAAD,mBAAC,eAAoBA,GAArB,IAAgCnB,WAAY2B,EAAMC,OAAOC,gBAQ3D/B,EAAMO,QAAU,cAACyB,EAAA,EAAD,CAAgBhC,OAAK,EAArB,SAAuBA,OAE5C,cAACiC,EAAA,EAAD,CACEV,UAAW3B,EAAQJ,OACnB0C,QAAQ,YACRC,MAAM,UACNV,SAAUxB,EACVmC,QAAShB,EALX,SAOE,cAAC,IAAD,UClGFrC,EAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXmD,OAAQ,CACNC,UAAW,SACXC,cAAetD,EAAMK,QAAQ,UAKtBkD,EAAY,WACvB,IAAM5C,EAAUb,IAChB,OACE,eAAC0D,EAAA,EAAD,CAAMC,WAAS,EAACpD,QAAS,EAAzB,UACE,cAACmD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEvB,UAAW3B,EAAQyC,OACnBU,MAAM,qDAIZ,cAACN,EAAA,EAAD,CAAME,MAAI,EAACK,GAAI,EAAGJ,GAAI,GAAtB,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYC,MAAM,kDAClB,cAACE,EAAA,EAAD,UACE,cAAC,EAAD,e,2BCjCCC,EAAyB,2BACjCC,KADiC,IAEpCC,QAAS,CACPC,QAASC,IACTC,UAAWC,KAEbC,WAAY,CAEVC,WAAY,CACV,gBACA,qBACA,aACA,QACA,cACAC,KAAK,KACPC,MAAO,CACLnE,WAAY,KAEdoE,MAAO,CACLpE,WAAY,KAEdqE,GAAI,CACFrE,WAAY,Q,SC1BLsE,EAAY,SAA2BC,GAA3B,OACvB,IAAIC,IAAID,EAAOE,KAAI,SAACC,GAAD,MAAoB,CAACA,EAAEzD,GAAIyD,QCMnCC,EAAsB,SAAC,EAAD,SAC/BC,EAD+B,EAC/BA,UAAWC,EADoB,EACpBA,SAAUC,EADU,EACVA,MACfC,EAFyB,EAE/BC,KAF+B,MAIb,CACpB/D,GALiC,EAG/BA,GAGF2D,YACAC,WACAC,QACAC,YACAtE,WAViC,EAGjBA,WAQhBwE,WAXiC,EAGLA,aAWjBC,EAA0B,SACrCC,EACAC,EACAC,EACAxE,GAEA,IAAMyE,EAAchB,EAAUa,GACxBI,EAAejB,EAAUc,GACzBI,EAAYlB,EAAUe,GAC5B,OAAOxE,EAAQ4D,KAAI,SAACgB,GAClB,MAAgCH,EAAYrH,IAC1CwH,EAAOC,WADDC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,QAGdC,EAAWN,EAAatH,IAAI0H,GAC5BvD,EAAQoD,EAAUvH,IAAI2H,GAC5B,OAAOjB,EAAoBkB,EAAUzD,EAAOqD,O,SCH1CK,GAAiB,SACrB5H,EACA6H,EACAhI,GAEA,IAAMiI,EAPY,SAACD,GAAD,OAAmBE,MAAMC,KAAK,IAAIC,IAAIJ,IAOtCK,CAAYL,GAC9B,OAAOlH,EACLX,ECxCqC,SAAC6H,GACxC,kBAA8BA,GAAvBM,EAAP,KACA,OADA,YACmB,IAAIC,QACrB,SAACC,EAAMC,GAAP,gBAAmBD,EAAnB,mBAA4CC,KADvC,mBAEOH,IDqCZI,CAA0BT,GAC1BjI,IAIW,IACb2I,QAAQ,WAAD,4BAAE,WACPC,EADO,8CAAApF,EAAA,6DAELH,EAFK,EAELA,OAEIrD,EAAQyD,aAAaC,QAAQ,SAC7BC,EALC,4BAKkDN,EAAOX,WALzD,cAMe5B,EACpBQ,EACAqC,EACA3D,GATK,cAMD8C,EANC,OAYD+F,EAAa/F,EAAQ4D,KAAI,SAACC,GAAD,OAAOA,EAAEgB,aAZjC,SAagBI,GACrB5G,EACA0H,EACA7I,GAhBK,cAaDoH,EAbC,OAmBD0B,EAAc1B,EAASV,KAAI,SAACC,GAAD,OAAOA,EAAEiB,cACpCmB,EAAW3B,EAASV,KAAI,SAACC,GAAD,OAAOA,EAAEkB,WACjCmB,EAAmBjB,GACvB3G,EACA0H,EACA9I,GAEIiJ,EAAgBlB,GAAyB1G,EAAY0H,EAAU/I,GA1B9D,UA2B2BY,QAAQsI,IAAI,CAC5CF,EACAC,IA7BK,2CA2BA5B,EA3BA,KA2BWC,EA3BX,KAgCD6B,EAAqBhC,EACzBC,EACAC,EACAC,EACAxE,GApCK,kBAsCAlC,QAAQwI,QAAQ,CACrBC,KAAMF,EACNG,MAAOH,EAAmBpG,UAxCrB,4CAAF,qDAAC,GA2CRwG,OAAO,WAAD,4BAAE,WACNX,EADM,wCAAApF,EAAA,6DAEAgG,EAFA,EAEJtG,GAEIlD,EAAQyD,aAAaC,QAAQ,SAJ7B,SAKexD,EAAeoB,EAAZ,WAA6BkI,GAAYxJ,GAL3D,cAKA0H,EALA,gBAMgCxH,EACpCiB,EADuC,WAEnCuG,EAAOC,WACX3H,GATI,uBAME4H,EANF,EAMEA,WAAYC,EANd,EAMcA,QANd,UAYwB3H,EAC5BkB,EAD+B,WAE3BwG,GACJ5H,GAfI,eAYAyJ,EAZA,iBAiBqBvJ,EAAcmB,EAAX,WAA2BwG,GAAW7H,GAjB9D,eAiBA0J,EAjBA,iBAkB0B9I,QAAQsI,IAAI,CAACO,EAAiBC,IAlBxD,2CAkBC5B,EAlBD,KAkBWzD,EAlBX,uBAoBC,CACLgF,KAAMzC,EAAoBkB,EAAUzD,EAAOqD,KArBvC,4CAAF,qDAAC,IEpFM,oBAAqB,CAClCiC,MAAO,gBTckBC,EAAaC,ESd5BC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,SAAb,OTckBH,ESbI1I,ETaS2I,ESbC,CAAEF,MAAOG,EAAUC,YTc1D1J,MAAMuJ,EAAK,CACTtJ,OAAQ,OACRuJ,KAAMvG,KAAKF,UAAUyG,GACrBtJ,QAAST,IACRU,MAAK,SAACC,GAAD,OAAUA,EAAIC,GAAMD,EAAIE,OAAwBC,QAAQC,aSlBML,MAClE,YAAgB,IAAbR,EAAY,EAAZA,MACDyD,aAAauG,QAAQ,WAAYF,GACjCrG,aAAauG,QAAQ,QAAShK,OAGpCiK,OAAQ,WAGN,OAFAxG,aAAayG,WAAW,YACxBzG,aAAayG,WAAW,SACjBtJ,QAAQwI,WAEjBe,WAAY,YAAiB,IAAdC,EAAa,EAAbA,OACb,OAAe,MAAXA,GAA6B,MAAXA,GACpB3G,aAAayG,WAAW,YACxBzG,aAAayG,WAAW,SACjBtJ,QAAQC,UAEVD,QAAQwI,WAEjBiB,UAAW,kBACT5G,aAAaC,QAAQ,SAAW9C,QAAQwI,UAAYxI,QAAQC,UAC9DyJ,eAAgB,kBAAM1J,QAAQwI,WAC9BmB,YAAa,kBACX3J,QAAQwI,QAAQ,CACdlG,GAAI,OACJsH,SAAU/G,aAAaC,QAAQ,iB,4DC3B/B+G,GAAY,WAChB,IACkB/H,EACdgI,eADFC,aAAgBjI,WAElB,OACE,qCACE,cAACoB,EAAA,EAAD,CAAK8G,EAAG,EAAR,SACE,eAACC,GAAA,EAAD,CAAYnG,QAAQ,KAAKoG,WAAS,EAAlC,2CACiCpI,OAGnC,cAACqI,GAAA,EAAD,IACA,eAACC,GAAA,EAAD,CAAUC,SAAS,OAAnB,UACE,cAACC,GAAA,EAAD,CAAWC,UAAU,EAAOC,OAAO,cACnC,cAACF,GAAA,EAAD,CAAWC,UAAU,EAAOC,OAAO,aACnC,cAACF,GAAA,EAAD,CAAWC,UAAU,EAAOC,OAAO,UACnC,cAACF,GAAA,EAAD,CAAWC,UAAU,EAAOC,OAAO,cACnC,cAACF,GAAA,EAAD,CAAWC,UAAU,EAAOC,OAAO,eACnC,cAACF,GAAA,EAAD,CAAWC,UAAU,EAAOC,OAAO,sBAO9BC,GAAiB,SAACC,GAC7B,IAAQnI,EAAWoI,cAAXpI,OACR,OACE,qCACE,cAAC,EAAD,MACGA,GACD,cAACqI,GAAA,EAAD,yBAAMC,SAAS,EAAOC,YAAY,GAAWJ,GAA7C,aACE,cAAC,GAAD,W,8BClCJK,GAAU,kBACd,eAAC7H,EAAA,EAAD,CAAKlC,QAAQ,OAAOgK,eAAe,WAAnC,UACE,cAACnH,EAAA,EAAD,CAAQR,UAAQ,EAACS,QAAQ,WAAWC,MAAM,UAA1C,sCAGA,cAACF,EAAA,EAAD,CAAQR,UAAQ,EAACS,QAAQ,WAAWC,MAAM,UAA1C,0BAMSkH,GAAiB,SAACP,GAAD,OAC5B,qCACE,cAACQ,GAAA,EAAD,2BAAUR,GAAV,aACE,cAACS,GAAA,EAAD,CAAkBC,kBAAkB,EAApC,SACE,eAACC,GAAA,EAAD,CAAKC,MAAM,SAAX,UACE,cAAChB,GAAA,EAAD,CAAWE,OAAO,cAClB,cAACF,GAAA,EAAD,CAAWE,OAAO,aAClB,cAACF,GAAA,EAAD,CAAWE,OAAO,UAClB,cAACF,GAAA,EAAD,CAAWE,OAAO,cAClB,cAACF,GAAA,EAAD,CAAWE,OAAO,eAClB,cAACF,GAAA,EAAD,CAAWE,OAAO,uBAIxB,cAAC,GAAD,QCAWe,GAnBH,WACV,MCE8B,SAC9BC,GAEA,OAAQA,GACN,IAAK,aACH,MAAO,CACLC,aAAcA,KACdC,aAAcC,IAElB,IAAK,cACH,MAAO,CACLF,aCtB4B,CAClC1C,MAAO,YAAmB,IAAhBG,EAAe,EAAfA,SAER,OADArG,aAAauG,QAAQ,WAAYF,GAC1BlJ,QAAQwI,WAEjBa,OAAQ,WAEN,OADAxG,aAAayG,WAAW,YACjBtJ,QAAQwI,WAEjBe,WAAY,YAAiB,IAAdC,EAAa,EAAbA,OACb,OAAe,MAAXA,GAA6B,MAAXA,GACpB3G,aAAayG,WAAW,YACjBtJ,QAAQC,UAEVD,QAAQwI,WAEjBiB,UAAW,kBACT5G,aAAaC,QAAQ,YAAc9C,QAAQwI,UAAYxI,QAAQC,UACjEyJ,eAAgB,kBAAM1J,QAAQwI,WAC9BmB,YAAa,kBACX3J,QAAQwI,QAAQ,CACdlG,GAAI,OACJsH,SAAU/G,aAAaC,QAAQ,gBDC7B4I,aAAcC,IAElB,QACE,MAAO,CACLF,aE3B4B,CAClC1C,MAAO,kBAAM/I,QAAQwI,WACrBa,OAAQ,kBAAMrJ,QAAQwI,WACtBe,WAAY,kBAAMvJ,QAAQwI,WAC1BiB,UAAW,kBAAMzJ,QAAQwI,WACzBkB,eAAgB,kBAAM1J,QAAQwI,WAC9BmB,YAAa,kBACX3J,QAAQwI,QAAQ,CACdlG,GAAI,UACJsH,SAAU,cFmBR8B,aG3BNE,YAAiB,CACfC,MAAO,CACL,CACEvJ,GAAI,EACJ+D,KAAM,gBACN6C,SAAU,OACV4C,MAAO,oBACPC,QAAS,CACPC,OAAQ,cACRC,MAAO,WACPC,KAAM,cACNC,QAAS,aACTC,IAAK,CACHC,IAAK,WACLC,IAAK,YAGTC,MAAO,wBACPC,QAAS,gBACTC,QAAS,CACPpG,KAAM,kBACNqG,YAAa,yCACbC,GAAI,gCAGR,CACErK,GAAI,EACJ+D,KAAM,eACN6C,SAAU,YACV4C,MAAO,oBACPC,QAAS,CACPC,OAAQ,gBACRC,MAAO,YACPC,KAAM,cACNC,QAAS,aACTC,IAAK,CACHC,IAAK,WACLC,IAAK,aAGTC,MAAO,sBACPC,QAAS,gBACTC,QAAS,CACPpG,KAAM,eACNqG,YAAa,iCACbC,GAAI,0CJrC2BC,CAAiBvM,cAAhDoL,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,aACtB,OACE,cAACmB,EAAA,EAAD,CACEhM,MAAOiE,EACPgI,UAAW1I,EACXqH,aAAcA,EACdC,aAAcA,EAJhB,SAME,cAACqB,EAAA,EAAD,CACEC,QAAS,CAAE1B,MAAO,UAClBjF,KAAK,cACL4G,KAAMxC,GACNyC,KAAMjC,QKTCkC,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBzN,MAAK,YAAkD,IAA/C0N,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BZ,O","file":"static/js/main.70feb63e.chunk.js","sourcesContent":["const baseHeaders: HeadersInit = {\n  'Content-Type': 'application/json',\n}\n\nconst authHeaders: (token: string) => HeadersInit = (token: string) => ({\n  ...baseHeaders,\n  Authorization: `Bearer ${token}`,\n})\n\nexport const get = <T>(baseUrl: string, path: string, token: string) =>\n  fetch(`${baseUrl}${path}`, {\n    method: 'GET',\n    headers: authHeaders(token),\n  }).then((res) => (res.ok ? (res.json() as Promise<T>) : Promise.reject()))\n\nexport const getByConditions = <T>(\n  baseUrl: string,\n  pathParam: string,\n  token: string,\n): Promise<T[]> => get<T[]>(baseUrl, `/GetByConditions/${pathParam}`, token)\n\nexport const post = <T, K>(url: string, body: T) =>\n  fetch(url, {\n    method: 'POST',\n    body: JSON.stringify(body),\n    headers: baseHeaders,\n  }).then((res) => (res.ok ? (res.json() as Promise<K>) : Promise.reject()))\n","const API_V1 = `${process.env.REACT_APP_API_BASE_URL}/api/v1`\nexport const AUTH_URL = `${API_V1}/Authorization/Authenticate`\nexport const BOOKINGS_URL = `${API_V1}/ticketManagement/Bookings`\nexport const CUSTOMERS_URL = `${API_V1}/ticketManagement/Customers`\nexport const EVENTS_URL = `${API_V1}/ticketManagement/Events`\nexport const SEATS_URL = `${API_V1}/ticketManagement/Seats`\nexport const TICKETS_URL = `${API_V1}/ticketManagement/Tickets`\n","import {\n  Box,\n  Button,\n  createStyles,\n  FormControl,\n  FormHelperText,\n  Input,\n  InputLabel,\n  makeStyles,\n  Theme,\n} from '@material-ui/core'\nimport * as React from 'react'\nimport { ChangeEvent, useCallback, useState } from 'react'\nimport { stringify } from 'querystring'\nimport { useHistory } from 'react-router-dom'\nimport SearchIcon from '@material-ui/icons/Search'\nimport { TicketDto } from '../../core/dto/ticket.dto'\nimport { getByConditions } from '../../core/fetch.utils'\nimport { TICKETS_URL } from '../../core/api-urls'\nimport { TicketInfoParams } from '../../core/ticket-info/ticket-info.provider'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      height: theme.spacing(8),\n    },\n    input: {},\n    button: {\n      fontWeight: 'bold',\n      height: theme.spacing(6),\n      marginLeft: theme.spacing(2),\n    },\n  }),\n)\n\nexport const FindUserByTicket = () => {\n  const classes = useStyles()\n  const history = useHistory()\n\n  const [{ error, loading, ticketCode }, setState] = useState({\n    error: '',\n    loading: false,\n    ticketCode: '',\n  })\n\n  const navigate = useCallback(\n    (tickets: TicketDto[]) => {\n      if (tickets.length === 1) {\n        history.push({ pathname: `/ticket-info/${tickets[0].id}/show` })\n      } else {\n        history.push({\n          pathname: `/ticket-info`,\n          search: stringify({\n            filter: JSON.stringify({\n              ticketCode,\n            } as TicketInfoParams['filter']),\n          }),\n        })\n      }\n    },\n    [history, ticketCode],\n  )\n\n  const fetchTickets = useCallback(async () => {\n    const token = localStorage.getItem('token') as string\n    const filterByTicketCodeCondition = `t=>t.TicketCode==\"${ticketCode}\"`\n    return getByConditions<TicketDto>(\n      TICKETS_URL,\n      filterByTicketCodeCondition,\n      token,\n    )\n  }, [ticketCode])\n\n  const handleClick = async () => {\n    if (ticketCode) {\n      setState((prevState) => ({ ...prevState, loading: true, error: '' }))\n      const tickets = await fetchTickets()\n      setState((prevState) => ({ ...prevState, loading: false }))\n      if (tickets.length) {\n        navigate(tickets)\n      } else {\n        setState((prevState) => ({\n          ...prevState,\n          error: 'Nie ma biletu o takim kodzie',\n        }))\n      }\n    } else {\n      setState((prevState) => ({ ...prevState, error: 'Input required' }))\n    }\n  }\n\n  const handleInput = (event: ChangeEvent<HTMLInputElement>) => {\n    setState((prevState) => ({ ...prevState, ticketCode: event.target.value }))\n  }\n\n  return (\n    <Box className={classes.root}>\n      <FormControl className={classes.input} disabled={loading}>\n        <InputLabel>Kod biletu</InputLabel>\n        <Input error={!!error.length} onInput={handleInput} />\n        {!!error.length && <FormHelperText error>{error}</FormHelperText>}\n      </FormControl>\n      <Button\n        className={classes.button}\n        variant=\"contained\"\n        color=\"primary\"\n        disabled={loading}\n        onClick={handleClick}\n      >\n        <SearchIcon />\n      </Button>\n    </Box>\n  )\n}\n","import {\n  Card,\n  CardContent,\n  CardHeader,\n  createStyles,\n  Grid,\n  makeStyles,\n  Theme,\n} from '@material-ui/core'\nimport * as React from 'react'\nimport { FindUserByTicket } from './dashboard/FindUserByTicket'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    header: {\n      textAlign: 'center',\n      letterSpacing: theme.spacing(0.2),\n    },\n  }),\n)\n\nexport const Dashboard = () => {\n  const classes = useStyles()\n  return (\n    <Grid container spacing={1}>\n      <Grid item xs={12}>\n        <Card>\n          <CardHeader\n            className={classes.header}\n            title=\"Witaj w aplikacji administracyjne Sport Data\"\n          />\n        </Card>\n      </Grid>\n      <Grid item sm={6} xs={12}>\n        <Card>\n          <CardHeader title=\"Znajdź użytkownika po kodzie biletu\" />\n          <CardContent>\n            <FindUserByTicket />\n          </CardContent>\n        </Card>\n      </Grid>\n    </Grid>\n  )\n}\n","import { defaultTheme } from 'react-admin'\nimport { deepPurple, green } from '@material-ui/core/colors'\nimport { ThemeOptions } from '@material-ui/core'\n\nexport const customTheme: ThemeOptions = {\n  ...defaultTheme,\n  palette: {\n    primary: deepPurple,\n    secondary: green,\n  },\n  typography: {\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Arial',\n      'sans-serif',\n    ].join(','),\n    body1: {\n      fontWeight: 300,\n    },\n    body2: {\n      fontWeight: 300,\n    },\n    h5: {\n      fontWeight: 200,\n    },\n  },\n}\n","export const toMapById = <T extends { id: number }>(values: T[]) =>\n  new Map(values.map((v): [number, T] => [v.id, v]))\n","import { CustomerDto } from '../dto/customer.dto'\nimport { EventDto } from '../dto/event.dto'\nimport { TicketDto } from '../dto/ticket.dto'\nimport { TicketBaseInfo } from './ticket-base-info'\nimport { BookingDto } from '../dto/booking.dto'\nimport { toMapById } from '../mapper.utils'\n\nexport const mapToTicketBaseInfo = (\n  { firstname, lastname, pesel }: CustomerDto,\n  { name: eventName }: EventDto,\n  { id: ticketId, ticketCode, ticketType }: TicketDto,\n): TicketBaseInfo => ({\n  id: ticketId,\n  firstname,\n  lastname,\n  pesel,\n  eventName,\n  ticketCode,\n  ticketType,\n})\n\nexport const mapToTicketBaseInfoList = (\n  bookings: BookingDto[],\n  customers: CustomerDto[],\n  events: EventDto[],\n  tickets: TicketDto[],\n): TicketBaseInfo[] => {\n  const bookingById = toMapById(bookings)\n  const customerById = toMapById(customers)\n  const eventById = toMapById(events)\n  return tickets.map((ticket) => {\n    const { customerId, eventId } = bookingById.get(\n      ticket.bookingId,\n    ) as BookingDto\n    const customer = customerById.get(customerId) as CustomerDto\n    const event = eventById.get(eventId) as EventDto\n    return mapToTicketBaseInfo(customer, event, ticket)\n  })\n}\n","import {\n  DataProvider,\n  GetListParams,\n  GetListResult,\n  GetOneParams,\n  GetOneResult,\n} from 'react-admin'\nimport {\n  BOOKINGS_URL,\n  CUSTOMERS_URL,\n  EVENTS_URL,\n  TICKETS_URL,\n} from '../api-urls'\nimport { get, getByConditions } from '../fetch.utils'\nimport { BookingDto } from '../dto/booking.dto'\nimport { TicketBaseInfo } from './ticket-base-info'\nimport { TicketDto } from '../dto/ticket.dto'\nimport { CustomerDto } from '../dto/customer.dto'\nimport { EventDto } from '../dto/event.dto'\nimport {\n  mapToTicketBaseInfo,\n  mapToTicketBaseInfoList,\n} from './ticket-base-info.mapper'\nimport { buildFilterByIdsCondition } from '../condition.builder'\n\nexport interface TicketInfoParams extends GetListParams {\n  filter: {\n    ticketCode: string\n  }\n}\n\nconst toUniqueIds = (ids: number[]) => Array.from(new Set(ids))\n\nconst getByUniqueIds = <T>(\n  baseUrl: string,\n  ids: number[],\n  token: string,\n): Promise<T[]> => {\n  const uniqueIds = toUniqueIds(ids)\n  return getByConditions<T>(\n    baseUrl,\n    buildFilterByIdsCondition(uniqueIds),\n    token,\n  )\n}\n\nexport default {\n  getList: async (\n    resource: string,\n    { filter }: TicketInfoParams,\n  ): Promise<GetListResult<TicketBaseInfo>> => {\n    const token = localStorage.getItem('token') as string\n    const filterByTicketCodeCondition = `t=>t.TicketCode==\"${filter.ticketCode}\"`\n    const tickets = await getByConditions<TicketDto>(\n      TICKETS_URL,\n      filterByTicketCodeCondition,\n      token,\n    )\n\n    const bookingIds = tickets.map((v) => v.bookingId)\n    const bookings = await getByUniqueIds<BookingDto>(\n      BOOKINGS_URL,\n      bookingIds,\n      token,\n    )\n\n    const customerIds = bookings.map((v) => v.customerId)\n    const eventIds = bookings.map((v) => v.eventId)\n    const pendingCustomers = getByUniqueIds<CustomerDto>(\n      CUSTOMERS_URL,\n      customerIds,\n      token,\n    )\n    const pendingEvents = getByUniqueIds<EventDto>(EVENTS_URL, eventIds, token)\n    const [customers, events] = await Promise.all([\n      pendingCustomers,\n      pendingEvents,\n    ])\n\n    const ticketBaseInfoList = mapToTicketBaseInfoList(\n      bookings,\n      customers,\n      events,\n      tickets,\n    )\n    return Promise.resolve({\n      data: ticketBaseInfoList,\n      total: ticketBaseInfoList.length,\n    })\n  },\n  getOne: async (\n    resource: string,\n    { id: ticketId }: GetOneParams,\n  ): Promise<GetOneResult<TicketBaseInfo>> => {\n    const token = localStorage.getItem('token') as string\n    const ticket = await get<TicketDto>(TICKETS_URL, `/${ticketId}`, token)\n    const { customerId, eventId } = await get<BookingDto>(\n      BOOKINGS_URL,\n      `/${ticket.bookingId}`,\n      token,\n    )\n\n    const pendingCustomer = await get<CustomerDto>(\n      CUSTOMERS_URL,\n      `/${customerId}`,\n      token,\n    )\n    const pendingEvent = await get<EventDto>(EVENTS_URL, `/${eventId}`, token)\n    const [customer, event] = await Promise.all([pendingCustomer, pendingEvent])\n\n    return {\n      data: mapToTicketBaseInfo(customer, event, ticket),\n    }\n  },\n} as DataProvider\n","export const buildFilterByIdsCondition = (ids: number[]): string => {\n  const [firstId, ...restIds] = ids\n  return (restIds || []).reduce(\n    (prev, curr) => `${prev as string}||v.Id==${curr}`,\n    `v=>v.Id==${firstId}`,\n  )\n}\n","import { AuthProvider } from 'react-admin'\nimport { post } from '../../core/fetch.utils'\nimport { AuthDto } from '../../core/dto/auth.dto'\nimport { AUTH_URL } from '../../core/api-urls'\nimport { AuthRequest } from '../../core/request/auth.request'\n\nexport default (): AuthProvider => ({\n  login: ({ username, password }) =>\n    post<AuthRequest, AuthDto>(AUTH_URL, { login: username, password }).then(\n      ({ token }) => {\n        localStorage.setItem('username', username)\n        localStorage.setItem('token', token)\n      },\n    ),\n  logout: () => {\n    localStorage.removeItem('username')\n    localStorage.removeItem('token')\n    return Promise.resolve()\n  },\n  checkError: ({ status }) => {\n    if (status === 401 || status === 403) {\n      localStorage.removeItem('username')\n      localStorage.removeItem('token')\n      return Promise.reject()\n    }\n    return Promise.resolve()\n  },\n  checkAuth: () =>\n    localStorage.getItem('token') ? Promise.resolve() : Promise.reject(),\n  getPermissions: () => Promise.resolve(),\n  getIdentity: () =>\n    Promise.resolve({\n      id: 'user',\n      fullName: localStorage.getItem('username') as string,\n    }),\n})\n","import * as React from 'react'\nimport { Datagrid, List, TextField, useListContext } from 'react-admin'\nimport { useLocation } from 'react-router-dom'\nimport { Box, Divider, ListProps, Typography } from '@material-ui/core'\nimport { FindUserByTicket } from './dashboard/FindUserByTicket'\n\nconst DataTable = () => {\n  const {\n    filterValues: { ticketCode },\n  } = useListContext()\n  return (\n    <>\n      <Box m={2}>\n        <Typography variant=\"h5\" paragraph>\n          Wyszukiwanie biletu o kodzie: {ticketCode}\n        </Typography>\n      </Box>\n      <Divider />\n      <Datagrid rowClick=\"show\">\n        <TextField sortable={false} source=\"firstname\" />\n        <TextField sortable={false} source=\"lastname\" />\n        <TextField sortable={false} source=\"pesel\" />\n        <TextField sortable={false} source=\"eventName\" />\n        <TextField sortable={false} source=\"ticketCode\" />\n        <TextField sortable={false} source=\"ticketType\" />\n      </Datagrid>\n    </>\n  )\n}\n\n// TODO: Disable table when searching again\nexport const TicketInfoList = (props: ListProps) => {\n  const { search } = useLocation()\n  return (\n    <>\n      <FindUserByTicket />\n      {!!search && (\n        <List actions={false} pagination={false} {...props}>\n          <DataTable />\n        </List>\n      )}\n    </>\n  )\n}\n","import * as React from 'react'\nimport { Show, ShowProps, Tab, TabbedShowLayout, TextField } from 'react-admin'\nimport { Box, Button } from '@material-ui/core'\n\nconst Toolbar = () => (\n  <Box display=\"flex\" justifyContent=\"flex-end\">\n    <Button disabled variant=\"outlined\" color=\"primary\">\n      Oznacz jako wykorzystane\n    </Button>\n    <Button disabled variant=\"outlined\" color=\"primary\">\n      Zablokuj\n    </Button>\n  </Box>\n)\n\nexport const TicketInfoView = (props: ShowProps) => (\n  <>\n    <Show {...props}>\n      <TabbedShowLayout syncWithLocation={false}>\n        <Tab label=\"Ticket\">\n          <TextField source=\"firstname\" />\n          <TextField source=\"lastname\" />\n          <TextField source=\"pesel\" />\n          <TextField source=\"eventName\" />\n          <TextField source=\"ticketCode\" />\n          <TextField source=\"ticketType\" />\n        </Tab>\n      </TabbedShowLayout>\n    </Show>\n    <Toolbar />\n  </>\n)\n","import React from 'react'\nimport { Admin, Resource } from 'react-admin'\nimport { Dashboard } from './main/Dashboard'\nimport { customTheme } from './custom.theme'\nimport { providersFactory } from './provider/providers.factory'\nimport { TicketInfoList } from './main/TicketInfoList'\nimport { TicketInfoView } from './main/TicketInfoView'\n\n// TODO: merge customers and products view\n// TODO: chage dashboard name - https://stackoverflow.com/questions/59879156/react-admin-how-to-change-the-dashboard-name-in-the-menu/59880647#59880647\nconst App = () => {\n  const { authProvider, dataProvider } = providersFactory(process.env.NODE_ENV)\n  return (\n    <Admin\n      theme={customTheme}\n      dashboard={Dashboard}\n      authProvider={authProvider}\n      dataProvider={dataProvider}\n    >\n      <Resource\n        options={{ label: 'Bilety' }}\n        name=\"ticket-info\"\n        list={TicketInfoList}\n        show={TicketInfoView}\n      />\n    </Admin>\n  )\n}\n\nexport default App\n","import { AuthProvider, DataProvider } from 'react-admin'\nimport fakeDataProvider from './data/fake-data.provider'\nimport noAuthProvider from './auth/no-auth.provider'\nimport fakeAuthProvider from './auth/fake-auth.provider'\nimport ticketsProvider from '../core/ticket-info/ticket-info.provider'\nimport authProvider from './auth/auth.provider'\n\ninterface Providers {\n  readonly authProvider: AuthProvider\n  readonly dataProvider: DataProvider\n}\n\n// TODO: change to real data\nexport const providersFactory = (\n  env: 'development' | 'test' | 'production',\n): Providers => {\n  switch (env) {\n    case 'production':\n      return {\n        authProvider: authProvider(),\n        dataProvider: ticketsProvider, // TODO: make it more generic\n      }\n    case 'development':\n      return {\n        authProvider: fakeAuthProvider(), // TODO: change to authProvider\n        dataProvider: ticketsProvider,\n      }\n    default:\n      return {\n        authProvider: noAuthProvider(),\n        dataProvider: fakeDataProvider(),\n      }\n  }\n}\n","import { AuthProvider } from 'react-admin'\n\nexport default (): AuthProvider => ({\n  login: ({ username }) => {\n    localStorage.setItem('username', username)\n    return Promise.resolve()\n  },\n  logout: () => {\n    localStorage.removeItem('username')\n    return Promise.resolve()\n  },\n  checkError: ({ status }) => {\n    if (status === 401 || status === 403) {\n      localStorage.removeItem('username')\n      return Promise.reject()\n    }\n    return Promise.resolve()\n  },\n  checkAuth: () =>\n    localStorage.getItem('username') ? Promise.resolve() : Promise.reject(),\n  getPermissions: () => Promise.resolve(),\n  getIdentity: () =>\n    Promise.resolve({\n      id: 'user',\n      fullName: localStorage.getItem('username') as string,\n    }),\n})\n","import { AuthProvider } from 'react-admin'\n\nexport default (): AuthProvider => ({\n  login: () => Promise.resolve(),\n  logout: () => Promise.resolve(),\n  checkError: () => Promise.resolve(),\n  checkAuth: () => Promise.resolve(),\n  getPermissions: () => Promise.resolve(),\n  getIdentity: () =>\n    Promise.resolve({\n      id: 'no-auth',\n      fullName: 'no-auth',\n    }),\n})\n","import fakeDataProvider from 'ra-data-fakerest'\n\nexport default () =>\n  fakeDataProvider({\n    users: [\n      {\n        id: 1,\n        name: 'Leanne Graham',\n        username: 'Bret',\n        email: 'Sincere@april.biz',\n        address: {\n          street: 'Kulas Light',\n          suite: 'Apt. 556',\n          city: 'Gwenborough',\n          zipcode: '92998-3874',\n          geo: {\n            lat: '-37.3159',\n            lng: '81.1496',\n          },\n        },\n        phone: '1-770-736-8031 x56442',\n        website: 'hildegard.org',\n        company: {\n          name: 'Romaguera-Crona',\n          catchPhrase: 'Multi-layered client-server neural-net',\n          bs: 'harness real-time e-markets',\n        },\n      },\n      {\n        id: 2,\n        name: 'Ervin Howell',\n        username: 'Antonette',\n        email: 'Shanna@melissa.tv',\n        address: {\n          street: 'Victor Plains',\n          suite: 'Suite 879',\n          city: 'Wisokyburgh',\n          zipcode: '90566-7771',\n          geo: {\n            lat: '-43.9509',\n            lng: '-34.4618',\n          },\n        },\n        phone: '010-692-6593 x09125',\n        website: 'anastasia.net',\n        company: {\n          name: 'Deckow-Crist',\n          catchPhrase: 'Proactive didactic contingency',\n          bs: 'synergize scalable supply-chains',\n        },\n      },\n    ],\n  })\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}