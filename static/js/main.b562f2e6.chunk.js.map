{"version":3,"sources":["core/constants/reducer.actions.ts","core/common/theme.reducer.ts","core/ResourceName.ts","core/enum/TicketType.ts","core/enum/BookingType.ts","core/enum/BookingDisabledOption.ts","core/enum/CustomerDocumentType.ts","core/enum/Gender.ts","core/fake/providers/fake-access-usings.provider.ts","core/fake/providers/fake-bookings.provider.ts","core/fake/providers/fake-logs.provider.ts","core/fake/providers/fake-stats-overall-view-list.provider.ts","core/fake/providers/fake-stats-overall-view.provider.ts","core/fake/providers/fake-ticket-details.provider.ts","core/enum/AccessActivePeriodStartingOptions.ts","core/enum/AccessBonuses.ts","core/enum/DayOfWeek.ts","core/fake/providers/fake-ticket-info.provider.ts","core/fake/providers/fake-tickets.provider.ts","core/fake/providers/fake-accesses.provider.ts","core/enum/EventStatus.ts","core/fake/providers/fake-events.provider.ts","core/enum/DeviceDirection.ts","core/fake/providers/fake-customer-details.provider.ts","core/fake/providers/fake-customer-info.provider.ts","core/fake/providers/fake-access-dates.provider.ts","core/fake/providers/fake-companies.provider.ts","core/fake/providers/fake-objects.provider.ts","core/fake/providers/fake-palms.provider.ts","core/fake/providers/fake-engines.provider.ts","core/fake/fake-data.provider.ts","core/fake/providers/fake-auth.provider.ts","core/common/header.parser.ts","core/common/fetch.utils.ts","core/api-urls.ts","core/auth/auth.provider.ts","core/access-usings/access-usings-sort.mapper.ts","core/ticket-details/toggle-button.ts","core/access-usings/access-usings-filter.mapper.ts","core/access-usings/access-usings.provider.ts","core/bookings/booking-filter.mapper.ts","core/bookings/booking-sort.mapper.ts","core/bookings/bookings.mapper.ts","core/bookings/bookings.provider.ts","core/logs/log-filter.mapper.ts","core/logs/log-sort.mapper.ts","core/logs/extended-logs.mapper.ts","core/logs/extended-logs.provider.ts","core/common/filter.values.ts","core/stats/overall-view/overall-view-list-sort.mapper.ts","core/stats/overall-view/overall-view-list.mapper.ts","core/stats/overall-view/overall-view-list.provider.ts","core/stats/overall-view/overall-view.mapper.ts","core/stats/overall-view/overall-view.provider.ts","core/common/condition.builder.ts","core/common/mapper.utils.ts","core/ticket-details/ticket-details.mapper.ts","core/ticket-details/ticket-details.provider.ts","core/ticket-info/ticket-info.mapper.ts","core/ticket-info/ticket-info.provider.ts","core/tickets/tickets.provider.ts","core/accesses/access-filter.mapper.ts","core/accesses/access-sort.mapper.ts","core/accesses/access.provider.ts","core/events/event-sort.mapper.ts","core/events/event.provider.ts","core/customer-details/customer-details.provider.ts","core/customer-info/customer-info-sort.mapper.ts","core/customer-info/customer-info.provider.ts","core/access-dates/access-dates-filter.mapper.ts","core/access-dates/access-dates-sort.mapper.ts","core/access-dates/access-dates.provider.ts","core/companies/companies.mapper.ts","core/companies/company-filter.mapper.ts","core/companies/company-sort.mapper.ts","core/companies/companies.provider.ts","core/objects/object.mapper.ts","core/objects/object-filter.mapper.ts","core/objects/object-sort.mapper.ts","core/objects/objects.provider.ts","core/palms/palm-filter.mapper.ts","core/palms/palm-sort.mapper.ts","core/palms/palms.provider.ts","core/palms/palm.mapper.ts","core/engines/engine-filter.mapper.ts","core/engines/engine-sort.mapper.ts","core/engines/engines.provider.ts","core/engines/engine.mapper.ts","core/data.provider.ts","core/i18n.provider.ts","app.theme.ts","main/common/AppSubmenu.tsx","main/common/AppMenu.tsx","main/common/AppLayout.tsx","main/common/Pagination.tsx","main/logs/DateFilterInput.tsx","main/logs/LogsComponents.ts","main/logs/LogRow.tsx","core/common/visual.utils.ts","main/logs/LogGrid.tsx","main/logs/LogList.tsx","main/customer-details/CustomerBookingsList.tsx","main/customer-details/CustomerDetailsView.tsx","main/common/common-styles.ts","main/common/SearchInput.tsx","main/common/FindCustomerByInfo.tsx","main/customer-info/CustomerInfoList.tsx","main/common/FindUserByTicket.tsx","main/events/EventList.tsx","main/Dashboard.tsx","main/events/EventEdit.tsx","main/events/EventShow.tsx","main/stats/overall-view/OverallView.tsx","main/stats/overall-view/OverallViewList.tsx","main/ticket-details/accesses/AccessUsingsList.tsx","core/ticket-details/ticket-details-values.mapper.ts","main/ticket-details/TicketDetailsHeader.tsx","main/ticket-details/TicketDetailsTicketsField.tsx","core/ticket-details/toggle-access-button.reducer.ts","main/ticket-details/ToggleAccessButton.tsx","core/ticket-details/toggle-ticket-button.reducer.ts","main/ticket-details/ToggleTicketButton.tsx","main/ticket-details/accesses/AccessList.tsx","main/ticket-details/TicketDetailsComponents.tsx","main/ticket-details/accesses/AccessDatesList.tsx","main/ticket-details/accesses/AccessShow.tsx","main/ticket-details/TicketDetailsView.tsx","main/common/MaskField.tsx","core/common/mask.utils.ts","main/ticket-info/TicketInfoList.tsx","main/common/Configuration.tsx","main/common/routes.tsx","App.tsx","core/providers.factory.ts","reportWebVitals.ts","i18n.init.ts","index.tsx"],"names":["CHANGE_THEME","identity","localStorage","getItem","initialState","darkMode","themeReducer","ResourceName","state","action","type","setItem","TicketType","BookingType","BookingDisabledOption","CustomerDocumentType","Gender","provider","updateMany","resource","params","a","Promise","resolve","data","create","id","update","fakeLogs","date","ticketCode","bookingId","deviceName","text","color","getList","total","length","fakeStatsOverallViewList","name","dateStart","dateEnd","eventName","capacity","sold","entered","objects","getOne","found","find","v","reject","Error","AccessActivePeriodStartingOptions","AccessBonuses","DayOfWeek","fakeTicketDetailsList","firstname","lastname","pesel","variantName","accessesIds","bookingType","NORMAL","activeFrom","activeTo","tickets","ticketType","K","accessUsings","createdAt","M","modifiedAt","bookingDisabled","STORNO","company","birthdate","documentType","ID_CARD","documentNumber","nationality","gender","MALE","seatId","blockId","accesses","objectName","tribuneName","blockName","rowNumber","fakeTicketInfoList","eventId","eventDate","fakeTickets","active","accessUsingsIds","EventStatus","fakeAccesses","bonus","N","entranceId","allowReenter","multipleEntry","multiple","usePriority","isTicketUnlockWithNextDay","releaseTime","releaseDayOfWeek","FRIDAY","releaseDayOfMonth","delay","activePeriod","activePeriodStartingFrom","FIRST_USE","variantsIds","accessDatesIds","createdById","modifiedById","createdByName","modifiedByName","DeviceDirection","fakeEvents","status","INACTIVE","fakeCustomerDetailsList","bookingsIds","c","fakeCustomerInfoList","fakeCompanies","usersIds","eventsIds","fakeObjects","tribunesIds","fakePalms","fakeEngines","dataProviders","ACCESS_DATES","fakeAccessDatesProvider","ACCESSES","fakeAccessesProvider","ACCESS_USINGS","fakeAccessUsingsProvider","BOOKINGS","fakeBookingsProvider","COMPANIES","fakeCompaniesProvider","CUSTOMER_DETAILS","fakeCustomerDetailsProvider","CUSTOMER_INFO","fakeCustomerInfoProvider","ENGINES","fakeEnginesProvider","EVENTS","fakeEventsProvider","LOGS","fakeLogsProvider","OBJECTS","fakeObjectsProvider","PALMS","fakePalmsProvider","TICKETS","fakeTicketsProvider","TICKET_INFO","fakeTicketInfoProvider","TICKET_DETAILS","fakeTicketDetailsProvider","TICKET_LOGS","STATS_OVERALL_VIEW","fakeStatsOverallViewProvider","STATS_OVERALL_VIEW_LIST","fakeStatsOverallViewListProvider","fetchType","sanitizeFetchType","authProvider","login","logout","checkError","checkAuth","getPermissions","getIdentity","fullName","contentRangeParser","headerValue","split","rangeFrom","summarySecondPartSplit","rangeTo","parseInt","getToken","baseHeaders","authHeaders","token","Authorization","getWithHeaders","url","headers","fetchUtils","fetchJson","method","Headers","then","json","postWithHeaders","body","JSON","stringify","get","baseUrl","path","getWithToken","getByConditions","getWithPagination","range","patch","put","API_V1","process","AUTH_URL","PERMISSIONS_URL","ACCESSES_URL","BOOKINGS_URL","CUSTOMERS_URL","EVENTS_URL","EXTENDED_LOGS_URL","TICKETS_URL","VARIANTS_URL","SEATS_URL","BLOCKS_URL","TRIBUNES_URL","OBJECTS_URL","ENGINES_URL","PALMS_URL","COMPANIES_URL","USERS_URL","username","password","permissionDtos","permissions","map","p","join","removeItem","ToggleType","mapping","direction","ticketId","accessId","lambdaParameter","value","getFilterParams","filter","Object","keys","entries","key","getFilterMapper","mapper","reduce","ids","pendingUpdates","auId","req","all","au","ticketIds","accessIds","request","flatMap","Date","toISOString","IN","verifierDeviceId","sort","field","order","pagination","page","perPage","filterParams","toString","queryParams","push","pathParams","tId","ticket","mapToBookings","events","variants","disabled","customerId","variantId","ticketsIds","foundEvent","event","foundVariant","variant","eventDateStart","booking","eventIds","variantIds","mapToExtendedLog","locale","scheme","device","logEntry","language","includes","partialValues","partialFilterValues","extendedLogs","dto","ALL_RESULTS","mapToEventOverallView","overallViewList","calculateCapacity","seats","bookings","b","mapToTribuneOverallView","tribune","blocks","enteredBookingIds","blocksIds","block","filteredSeats","s","filteredBookingIds","concat","filteredBookings","book","filteredEnteredBookingIds","enteredBookingId","filteredEnteredBookings","enteredBookings","soldNormal","enteredNormal","soldAbo","ABO","enteredAbo","soldInfix","INFIX","enteredInfix","soldService","SERVICE","enteredService","soldPoints","POINTS","enteredPoints","mapToBlockOverallView","mapToOverallView","selectedEvent","tribunes","o","objectsIds","object","filteredTribunes","t","objectId","filteredBlocks","filteredSeatIds","seatsIds","tribuneId","mapToObjectOverallView","pendingSelectedEvent","pendingObjects","pendingTribunes","pendingBlocks","pendingSeats","bookingsCondition","pendingBookings","pendingEnteredBookings","overallViewData","buildFilterByIdsCondition","firstId","prev","curr","toMapById","values","Map","toUniqueValues","Array","from","Set","mapToTicketDetails","seat","accessUsingById","mapToTicket","rowAlias","fetchTicketsWithAccessUsings","accessUsingIds","pendingCustomer","pendingEvent","pendingVariant","pendingTicketsWithAccessUsings","customer","mapToTicketBaseInfoList","customers","bookingById","customerById","eventById","mapToTicketBaseInfo","getByUniqueIds","uniqueIds","filterByTicketCodeCondition","bookingIds","customerIds","pendingCustomers","pendingEvents","ticketBaseInfoList","access","modifiedBy","createdBy","userName","previousData","eventUpdate","previousName","previousDateStart","previousDateEnd","getTime","getTimezoneOffset","toJSON","activate","undefined","deactivate","getCompaniesList","companies","attachCompanies","eventCompanies","detachCompanies","attachObjects","eventObjects","detachObjects","getDevicesList","devices","attachDevices","eventDevices","detachDevices","filterByCustomerInfoCondition","info","q","mapToCompany","attached","attachedCompanies","pendingCompanies","companiesIds","mapToObject","attachedObjects","categoryId","attachedDevices","pendingDevices","verifierDevicesIds","engine","accessDatesProvider","accessesProvider","accessUsingsProvider","bookingsProvider","companiesProvider","customersDetailsProvider","customersInfoProvider","engineProvider","eventsProvider","logsProvider","objectsProvider","palmProvider","ticketsProvider","ticketInfoProvider","ticketDetailsProvider","statsOverallViewProvider","statsOverallViewListProvider","translate","options","i18n","changeLocale","changeLanguage","getLocale","overriddenTheme","defaultTheme","typography","fontFamily","body1","fontWeight","body2","h5","LightTheme","palette","primary","deepPurple","secondary","green","DarkTheme","light","main","dark","contrastText","useStyles","makeStyles","theme","icon","minWidth","spacing","sidebarIsOpen","transition","paddingLeft","sidebarIsClosed","SubMenu","props","handleToggle","isOpen","children","sidebarOpen","useSelector","admin","ui","classes","header","MenuItem","button","onClick","ListItemIcon","className","ExpandMore","Typography","Tooltip","title","placement","Collapse","in","timeout","unmountOnExit","component","disablePadding","open","width","closed","AppMenu","useState","menuStats","setOpen","useTranslate","style","userSelect","DashboardMenuItem","MenuItemLink","to","primaryText","leftIcon","List","Event","menu","Sort","transform","flex","textOverflow","whiteSpace","overflow","AppUserMenu","UserMenu","Settings","AppTopBar","AppBar","userMenu","AppLayout","Layout","appBar","MobilePostPagination","useListContext","setPage","setPerPage","nbPages","Math","ceil","Toolbar","Grid","container","item","xs","Paper","elevation","height","display","flexDirection","justifyContent","alignItems","Select","textAlign","onChange","e","target","ButtonGroup","Button","createStyles","verticalAlign","marginBottom","DateFilterInput","source","defaultFromDate","React","now","setHours","defaultToDate","dateFrom","setDateFrom","dateTo","setDateTo","useField","input","meta","touched","error","convertedDate","substring","defaultValue","parse","helperText","alignSelf","size","marginTop","BookingButton","withStyles","root","backgroundColor","boxShadow","FullWidthButton","CenterGrid","NoPaddingCell","paddingBottom","paddingTop","TableCell","LogRow","compactMode","noBooking","history","useHistory","isDarkMode","useEffect","defineStyle","hexcolor","substr","TableRow","Hidden","mdUp","IconButton","DateField","record","showTime","TextField","smDown","xlDown","sortable","pathname","colSpan","LogGrid","useListSortContext","currentSort","setSort","handleSortChange","sortBy","HeaderCell","startIcon","TableContainer","Table","padding","TableHead","toUpperCase","TableBody","ListFilters","Filter","TextInput","alwaysOn","SelectInput","label","choices","LogList","listProps","useTheme","smallScreen","useMediaQuery","breakpoints","down","useLocale","exporter","Pagination","rowsPerPageOptions","filters","BookingGrid","cursor","FunctionField","render","replace","BookingList","up","CustomerBookingsView","useShowContext","basePath","Box","paddingY","ResourceContextProvider","actions","CustomerLogsView","CustomerTabs","bookingPresent","useMemo","TabbedShowLayout","Tab","r","CustomerDetailsView","Show","useCommonStyles","textCentered","RoundInputBox","borderRadius","marginLeft","border","borderColor","RoundInputBoxBtn","background","borderTopLeftRadius","borderBottomLeftRadius","margin","RoundInputBoxFC","FormControl","SearchInput","onValue","inputError","setInputError","inputValue","setInputValue","handleClick","Input","disableUnderline","placeholder","onInput","onKeyDown","ev","FormHelperText","FindCustomerByInfo","titleCentered","notify","useNotify","setError","useMutation","mutate","loading","commonClasses","fetchCustomers","useCallback","GET_LIST","payload","returnPromise","onlyCustomer","search","message","CardHeader","clsx","CardContent","CustomerInfoGrid","filterValues","m","paragraph","Divider","Datagrid","loaded","rowClick","repeat","CustomerInfoList","useLocation","Card","FindUserByTicket","fetchTickets","onlyTicket","EventsBody","toLowerCase","Link","EventsHead","EventGrid","EventList","letterSpacing","TicketFinder","LastLogs","LastEvents","Dashboard","useGetIdentity","isItemShown","userId","titleTypographyProps","sm","EditTitle","EventEdit","Edit","SimpleForm","DateTimeInput","ShowTitle","Attachments","refresh","useRefresh","handleAttach","handleDetach","Checkbox","checked","GeneralEditButton","handleActivation","IN_TRANSITION","ACTIVE","marginRight","EditButton","EventShow","noBottomBorder","borderBottom","quarterWidth","ViewTitle","description","BlockGrid","firstColumnEntries","secondColumnEntries","thirdColumnEntries","TribuneGrid","TribuneHeader","ArrayField","expand","isRowExpandable","ObjectGrid","OverallView","OverallViewGrid","OverallViewList","AccessUsingsGrid","patchAccess","UPDATE_MANY","fontSize","AccessUsingsList","bookingTypeMapping","ticketTypeMapping","Z","P","U","R","mapFromBookingType","mapFromTicketType","TicketDetailsHeader","ticketBox","ticketField","TicketDetailsTicketsField","fields","useRecordContext","mappedRecord","Labeled","Chip","flexWrap","blockMutation","ticketDetails","CREATE","unblockMutation","activeAccessUsingIds","blockAccessButtonInitialState","DISABLED","toggleAccessButtonReducer","BLOCK","mutateQuery","UNBLOCK","common","white","ToggleAccessButton","useReducer","dispatch","mutationLoading","some","query","blockTicketButtonInitialState","toggleTicketButtonReducer","mutateParam","ADMIN","ToggleTicketButton","UPDATE","AccessGrid","setSelected","hover","AccessList","ButtonBase","BackButton","writingMode","textOrientation","BackButtonText","AccessDatesRow","dayOfWeek","timeFrom","timeTo","AccessDatesGrid","AccessDatesList","TabButton","selected","change","AccessDetails","NO_LIMIT","AccessDates","AccessUses","AccessShow","selectedTab","setSelectedTab","handleTabChange","prop","MappedChipField","mappedValue","AccessDetailsView","selectedAccess","setSelectedAccess","ProfileDetailsView","addLabel","StatusButtons","TicketMainView","TicketLogsView","TicketDetailsView","syncWithLocation","MaskField","rest","recordWithMappedValue","word","threshold","firstChars","lastChars","slice","restCharsLength","maskMiddlePart","TicketInfoGrid","TicketInfoList","select","compsContainer","DashboardCustomization","ticketfinder","dashlogs","lastevents","componentsOpen","setComponentsOpen","componentsChange","FormControlLabel","control","Switch","labelPlacement","Configuration","useDispatch","setLocale","useSetLocale","Title","exact","App","env","dataProvider","i18nProvider","fakeAuthProvider","fakeDataProvider","providersFactory","Admin","dashboard","customReducers","customRoutes","routes","layout","Resource","ReceiptIcon","list","show","ViewComfyIcon","edit","PersonIcon","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","lng","use","initReactI18next","init","fallbackLng","debug","interpolation","escapeValue","resources","pl","translation","plTranslation","en","enTranslation","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b562f2e6.chunk.js","sourcesContent":["export const CHANGE_THEME = 'change-theme'","import { Action } from 'redux'\nimport { CHANGE_THEME } from '../constants/reducer.actions'\n\nconst identity = localStorage.getItem('username')\n\nexport type ThemeState = {\n  theme: {\n    darkMode: 'light' | 'dark'\n  }\n}\n\nconst initialState = {\n  darkMode: localStorage.getItem(`${identity}.darkMode`) === 'dark' ? 'dark' : 'light',\n}\n\nfunction themeReducer(state = initialState, action: Action<any>) {\n    if (action.type === CHANGE_THEME) {\n        if (state.darkMode === 'dark') localStorage.setItem(`${identity}.darkMode`, 'light')\n        else localStorage.setItem(`${identity}.darkMode`, 'dark')\n        return {\n            ...state,\n            darkMode: state.darkMode === 'dark' ? 'light' : 'dark'\n        }\n    }\n    return state\n}\n\nexport default themeReducer","export enum ResourceName {\n  ACCESS_DATES = 'access-dates',\n  ACCESSES = 'accesses',\n  ACCESS_USINGS = 'access-usings',\n  BOOKINGS = 'bookings',\n  ENGINES = 'engines',\n  EVENTS = 'events',\n  COMPANIES = 'companies',\n  CUSTOMER_DETAILS = 'customer-details',\n  CUSTOMER_INFO = 'customer-info',\n  LOGS = 'logs',\n  OBJECTS = 'objects',\n  PALMS = 'palms',\n  TICKETS = 'tickets',\n  TICKET_DETAILS = 'ticket-details',\n  TICKET_INFO = 'ticket-info',\n  TICKET_LOGS = 'ticket-logs',\n  STATS_OVERALL_VIEW_LIST = \"stats-overall-view-list\",\n  STATS_OVERALL_VIEW = \"stats-overall-view\"\n}\n","export enum TicketType {\n  K = 'K',\n  M = 'M',\n  Z = 'Z',\n  N = 'N',\n  P = 'P',\n  U = 'U',\n  R = 'R',\n}\n","export enum BookingType {\n  NORMAL = 'NORMAL',\n  ABO = 'ABO',\n  INFIX = 'INFIX',\n  SERVICE = 'SERVICE',\n  POINTS = 'POINTS',\n}\n","export enum BookingDisabledOption {\n  ADMIN = 'ADMIN',\n  BAN = 'BAN',\n  STORNO = 'STORNO',\n  MISTAKE = 'MISTAKE',\n}\n","export enum CustomerDocumentType {\n  OTHER = 'OTHER',\n  ID_CARD = 'ID_CARD',\n  PASSPORT = 'PASSPORT',\n  STUDENT_CARD = 'STUDENT_CARD',\n  SCHOOL_ID = 'SCHOOL_ID',\n  DRIVING_LICENSE = 'DRIVING_LICENSE',\n}\n","export enum Gender {\n  MALE = 'MALE',\n  FEMALE = 'FEMALE',\n}\n","import { CreateResult, DataProvider, UpdateManyResult } from 'react-admin'\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  updateMany: async (resource, params): Promise<UpdateManyResult> =>\n    Promise.resolve({\n      data: [1],\n    }),\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  create: async (resource, params): Promise<CreateResult<unknown>> =>\n    Promise.resolve({\n      data: { id: 1 },\n    }),\n} as DataProvider\n\nexport default provider\n","import { DataProvider, UpdateResult } from 'react-admin'\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  update: async (resource, params): Promise<UpdateResult<unknown>> =>\n    Promise.resolve({\n      data: { id: 1 },\n    }),\n} as DataProvider\n\nexport default provider\n","import { DataProvider } from 'react-admin'\nimport { ExtendedLog } from '../../logs/extended-log'\n\nconst fakeLogs: ExtendedLog[] = [\n  {\n    id: 1,\n    date: '2021-07-15T08:50:27.2054',\n    ticketCode: 'A',\n    bookingId: 52815,\n    deviceName: 'Device name',\n    text: 'MF',\n    color: 'transparent',\n  },\n  {\n    id: 2,\n    date: '2021-07-15T08:50:27.2054',\n    ticketCode: 'A',\n    bookingId: 52816,\n    deviceName: 'Device name',\n    text: 'MF',\n    color: 'transparent',\n  },\n  {\n    id: 3,\n    date: '2021-07-15T08:50:27.2054',\n    ticketCode: 'A',\n    bookingId: 1111,\n    deviceName: 'Device name',\n    text: 'MF',\n    color: 'transparent',\n  },\n  {\n    id: 4,\n    date: '2021-07-15T08:50:27.2054',\n    ticketCode: 'A',\n    bookingId: 11112,\n    deviceName: 'Device name',\n    text: 'MF',\n    color: 'transparent',\n  },\n  {\n    id: 5,\n    date: '2021-07-15T08:50:27.2054',\n    ticketCode: 'A',\n    bookingId: 16612,\n    deviceName: 'Device name',\n    text: 'MF',\n    color: 'transparent',\n  },\n  {\n    id: 6,\n    date: '2021-07-15T08:50:27.2054',\n    ticketCode: 'A',\n    bookingId: 167782,\n    deviceName: 'Device name',\n    text: 'MF',\n    color: 'transparent',\n  },\n  {\n    id: 7,\n    date: '2021-07-15T08:50:27.2054',\n    ticketCode: 'A',\n    bookingId: 122782,\n    deviceName: 'Device name',\n    text: 'MF',\n    color: 'transparent',\n  },\n  {\n    id: 8,\n    date: '2021-07-15T08:50:27.2054',\n    ticketCode: 'A',\n    bookingId: 189782,\n    deviceName: 'Device name',\n    text: 'MF',\n    color: 'transparent',\n  },\n  {\n    id: 9,\n    date: '2021-07-15T08:50:27.2054',\n    ticketCode: 'A',\n    bookingId: 183332,\n    deviceName: 'Device name',\n    text: 'MF',\n    color: 'transparent',\n  },\n  {\n    id: 10,\n    date: '2021-07-15T08:50:27.2054',\n    ticketCode: 'A',\n    bookingId: 656565,\n    deviceName: 'Device name',\n    text: 'MF',\n    color: 'transparent',\n  },\n]\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getList: (resource, params) =>\n    Promise.resolve({ data: fakeLogs, total: fakeLogs.length }),\n} as DataProvider\n\nexport default provider\n","import { DataProvider } from 'react-admin'\nimport { EventOverallView } from '../../stats/overall-view/event-overall-view'\n\nconst fakeStatsOverallViewList: EventOverallView[] = [\n  {\n    id: 1,\n    name: \"\",\n    dateStart: '2021-07-13T15:11:06.771267',\n    dateEnd: '2021-07-13T15:11:06.771267'\n  },\n  {\n    id: 2,\n    name: \"\",\n    dateStart: '2021-07-13T15:11:06.771267',\n    dateEnd: '2021-07-13T15:11:06.771267'\n  },\n  {\n    id: 3,\n    name: \"\",\n    dateStart: '2021-07-13T15:11:06.771267',\n    dateEnd: '2021-07-13T15:11:06.771267'\n  },\n  {\n    id: 4,\n    name: \"\",\n    dateStart: '2021-07-13T15:11:06.771267',\n    dateEnd: '2021-07-13T15:11:06.771267'\n  },\n  {\n    id: 5,\n    name: \"\",\n    dateStart: '2021-07-13T15:11:06.771267',\n    dateEnd: '2021-07-13T15:11:06.771267'\n  },\n]\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getList: (resource, params) =>\n    Promise.resolve({ data: fakeStatsOverallViewList, total: fakeStatsOverallViewList.length }),\n} as DataProvider\n\nexport default provider","import { DataProvider } from 'react-admin'\nimport { DateTime } from '../../common/date-time'\nimport { OverallView } from '../../stats/overall-view/overall-view'\n\nconst fakeStatsOverallViewList: OverallView[] = [\n  {\n    id: 1,\n    eventName: \"\",\n    capacity: 0,\n    sold: 0,\n    entered: 0,\n    objects: [],\n    date: \"01-01-2021T00:00.00\" as DateTime\n  },\n  {\n    id: 2,\n    eventName: \"\",\n    capacity: 0,\n    sold: 0,\n    entered: 0,\n    objects: [],\n    date: \"01-01-2021T00:00.00\" as DateTime\n  },\n  {\n    id: 3,\n    eventName: \"\",\n    capacity: 0,\n    sold: 0,\n    entered: 0,\n    objects: [],\n    date: \"01-01-2021T00:00.00\" as DateTime\n  },\n  {\n    id: 4,\n    eventName: \"\",\n    capacity: 0,\n    sold: 0,\n    entered: 0,\n    objects: [],\n    date: \"01-01-2021T00:00.00\" as DateTime\n  },\n  {\n    id: 5,\n    eventName: \"\",\n    capacity: 0,\n    sold: 0,\n    entered: 0,\n    objects: [],\n    date: \"01-01-2021T00:00.00\" as DateTime\n  },\n]\n\nconst provider = {\n  getOne: (resource, { id }: { id: string }) => {\n    const found = fakeStatsOverallViewList.find((v) => `${v.id}` === id)\n    if (found) {\n      return Promise.resolve({\n        data: found,\n      })\n    }\n    return Promise.reject(new Error())\n  },\n} as DataProvider\n\nexport default provider","import { DataProvider } from 'react-admin'\nimport { TicketType } from '../../enum/TicketType'\nimport { TicketDetails } from '../../ticket-details/ticket-details'\nimport { BookingType } from '../../enum/BookingType'\nimport { BookingDisabledOption } from '../../enum/BookingDisabledOption'\nimport { CustomerDocumentType } from '../../enum/CustomerDocumentType'\nimport { Gender } from '../../enum/Gender'\n\nconst fakeTicketDetailsList: TicketDetails[] = [\n  {\n    id: 1,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    accessesIds: [10],\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56424,\n        ticketCode: '060000020917',\n        ticketType: TicketType.K,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n      {\n        id: 56425,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.M,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    bookingDisabled: BookingDisabledOption.STORNO,\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    documentNumber: \"12345678901\",\n    nationality: \"Poland\",\n    gender: Gender.MALE,\n    seatId: null,\n    blockId: null,\n    accesses: [],\n    objectName: null,\n    tribuneName: null,\n    blockName: null,\n    rowNumber: null\n  },\n  {\n    id: 2,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    accessesIds: [10],\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56424,\n        ticketCode: '060000020917',\n        ticketType: TicketType.K,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n      {\n        id: 56425,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.M,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    bookingDisabled: BookingDisabledOption.STORNO,\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    documentNumber: \"12345678901\",\n    nationality: \"Poland\",\n    gender: Gender.MALE,\n    seatId: null,\n    blockId: null,\n    accesses: [],\n    objectName: null,\n    tribuneName: null,\n    blockName: null,\n    rowNumber: null\n  },\n  {\n    id: 3,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    accessesIds: [10],\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56424,\n        ticketCode: '060000020917',\n        ticketType: TicketType.K,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n      {\n        id: 56425,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.M,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    bookingDisabled: null,\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    documentNumber: \"12345678901\",\n    nationality: \"Poland\",\n    gender: Gender.MALE,\n    seatId: null,\n    blockId: null,\n    accesses: [],\n    objectName: null,\n    tribuneName: null,\n    blockName: null,\n    rowNumber: null\n  },\n  {\n    id: 4,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    accessesIds: [10],\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56424,\n        ticketCode: '060000020917',\n        ticketType: TicketType.K,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n      {\n        id: 56425,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.M,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    bookingDisabled: null,\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    documentNumber: \"12345678901\",\n    nationality: \"Poland\",\n    gender: Gender.MALE,\n    seatId: null,\n    blockId: null,\n    accesses: [],\n    objectName: null,\n    tribuneName: null,\n    blockName: null,\n    rowNumber: null\n  },\n  {\n    id: 5,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    accessesIds: [10],\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56424,\n        ticketCode: '060000020917',\n        ticketType: TicketType.K,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n      {\n        id: 56425,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.M,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    bookingDisabled: null,\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    documentNumber: \"12345678901\",\n    nationality: \"Poland\",\n    gender: Gender.MALE,\n    seatId: null,\n    blockId: null,\n    accesses: [],\n    objectName: null,\n    tribuneName: null,\n    blockName: null,\n    rowNumber: null\n  },\n  {\n    id: 6,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    accessesIds: [10],\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56424,\n        ticketCode: '060000020917',\n        ticketType: TicketType.K,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n      {\n        id: 56425,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.M,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    bookingDisabled: null,\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    documentNumber: \"12345678901\",\n    nationality: \"Poland\",\n    gender: Gender.MALE,\n    seatId: null,\n    blockId: null,\n    accesses: [],\n    objectName: null,\n    tribuneName: null,\n    blockName: null,\n    rowNumber: null\n  },\n  {\n    id: 7,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    accessesIds: [10],\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56424,\n        ticketCode: '060000020917',\n        ticketType: TicketType.K,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n      {\n        id: 56425,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.M,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    bookingDisabled: null,\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    documentNumber: \"12345678901\",\n    nationality: \"Poland\",\n    gender: Gender.MALE,\n    seatId: null,\n    blockId: null,\n    accesses: [],\n    objectName: null,\n    tribuneName: null,\n    blockName: null,\n    rowNumber: null\n  },\n  {\n    id: 8,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    accessesIds: [10],\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56424,\n        ticketCode: '060000020917',\n        ticketType: TicketType.K,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n      {\n        id: 56425,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.M,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    bookingDisabled: null,\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    documentNumber: \"12345678901\",\n    nationality: \"Poland\",\n    gender: Gender.MALE,\n    seatId: null,\n    blockId: null,\n    accesses: [],\n    objectName: null,\n    tribuneName: null,\n    blockName: null,\n    rowNumber: null\n  },\n  {\n    id: 9,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    accessesIds: [10],\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56424,\n        ticketCode: '060000020917',\n        ticketType: TicketType.K,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n      {\n        id: 56425,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.M,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    bookingDisabled: null,\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    documentNumber: \"12345678901\",\n    nationality: \"Poland\",\n    gender: Gender.MALE,\n    seatId: null,\n    blockId: null,\n    accesses: [],\n    objectName: null,\n    tribuneName: null,\n    blockName: null,\n    rowNumber: null\n  },\n  {\n    id: 10,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    accessesIds: [10],\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56424,\n        ticketCode: '060000020917',\n        ticketType: TicketType.K,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n      {\n        id: 56425,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.M,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    bookingDisabled: null,\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    documentNumber: \"12345678901\",\n    nationality: \"Poland\",\n    gender: Gender.MALE,\n    seatId: null,\n    blockId: null,\n    accesses: [],\n    objectName: null,\n    tribuneName: null,\n    blockName: null,\n    rowNumber: null\n  },\n]\n\nconst provider = {\n  getOne: (resource, { id }: { id: string }) => {\n    const found = fakeTicketDetailsList.find((v) => `${v.id}` === id)\n    if (found) {\n      return Promise.resolve({\n        data: found,\n      })\n    }\n    return Promise.reject(new Error())\n  },\n} as DataProvider\n\nexport default provider\n","export enum AccessActivePeriodStartingOptions {\n  NO_LIMIT = 'NO_LIMIT',\n  PURCHASE_DATE = 'PURCHASE_DATE',\n  FIRST_USE = 'FIRST_USE',\n}\n","export enum AccessBonuses {\n  N = 'N',\n  Y = 'Y',\n  Z = 'Z',\n  D = 'D',\n}\n","export enum DayOfWeek {\n  SUNDAY = 'Sunday',\n  MONDAY = 'Monday',\n  TUESDAY = 'Tuesday',\n  WEDNESDAY = 'Wednesday',\n  THURSDAY = 'Thursday',\n  FRIDAY = 'Friday',\n  SATURDAY = 'Saturday',\n}\n","import { DataProvider } from 'react-admin'\nimport { TicketType } from '../../enum/TicketType'\nimport { TicketInfo } from '../../ticket-info/ticket-info'\n\nconst fakeTicketInfoList: TicketInfo[] = [\n  {\n    id: 1,\n    firstname: 'Marek',\n    lastname: 'Pies',\n    pesel: '47120554776',\n    eventId: 0,\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    eventDate: '2021-07-15T08:50:27.2054',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n  },\n  {\n    id: 2,\n    firstname: 'Janek',\n    lastname: 'Krużganek',\n    pesel: '47120554776',\n    eventId: 0,\n    eventName: 'POGOŃ SZCZECIN 20/21',\n    eventDate: '2021-07-15T08:50:27.2054',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n  },\n  {\n    id: 3,\n    firstname: 'Wacław',\n    lastname: 'Rymski',\n    pesel: '9988711225',\n    eventId: 0,\n    eventName: 'POGOŃ SZCZECIN 20/21',\n    eventDate: '2021-07-15T08:50:27.2054',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n  },\n  {\n    id: 4,\n    firstname: 'Mirka',\n    lastname: 'Korzeń',\n    pesel: '56483978659',\n    eventId: 0,\n    eventName: 'POGOŃ SZCZECIN 20/21',\n    eventDate: '2021-07-15T08:50:27.2054',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n  },\n  {\n    id: 5,\n    firstname: 'Tis',\n    lastname: 'Lomasz',\n    pesel: '47120554776',\n    eventId: 0,\n    eventName: 'POGOŃ SZCZECIN 20/21',\n    eventDate: '2021-07-15T08:50:27.2054',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n  },\n  {\n    id: 6,\n    firstname: 'Bogdana',\n    lastname: 'Jaruzelska',\n    pesel: '47120554776',\n    eventId: 0,\n    eventName: 'POGOŃ SZCZECIN 20/21',\n    eventDate: '2021-07-15T08:50:27.2054',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n  },\n  {\n    id: 7,\n    firstname: 'Jeremi',\n    lastname: 'Pomidor',\n    pesel: '12345678900',\n    eventId: 0,\n    eventName: 'POGOŃ SZCZECIN 20/21',\n    eventDate: '2021-07-15T08:50:27.2054',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n  },\n  {\n    id: 8,\n    firstname: 'Roman',\n    lastname: 'Zoman',\n    pesel: '13243567890',\n    eventId: 0,\n    eventName: 'POGOŃ SZCZECIN 20/21',\n    eventDate: '2021-07-15T08:50:27.2054',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n  },\n  {\n    id: 9,\n    firstname: 'Bacha',\n    lastname: 'Kaszalot',\n    pesel: '98097612678',\n    eventId: 0,\n    eventName: 'POGOŃ SZCZECIN 20/21',\n    eventDate: '2021-07-15T08:50:27.2054',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n  },\n  {\n    id: 10,\n    firstname: 'Jadwiga',\n    lastname: 'Ogórek',\n    pesel: '47120554776',\n    eventId: 0,\n    eventName: 'POGOŃ SZCZECIN 20/21',\n    eventDate: '2021-07-15T08:50:27.2054',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n  },\n]\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getList: (resource, params) =>\n    Promise.resolve({\n      data: fakeTicketInfoList,\n      total: fakeTicketInfoList.length,\n    }),\n} as DataProvider\n\nexport default provider\n","import { DataProvider } from 'react-admin'\nimport { TicketDto } from '../../dto/ticket.dto'\nimport { TicketType } from '../../enum/TicketType'\n\nconst fakeTickets: TicketDto[] = [\n  {\n    id: 1,\n    ticketCode: 'A',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52815,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n  {\n    id: 2,\n    ticketCode: 'A',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52816,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n  {\n    id: 3,\n    ticketCode: '010000011492',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52817,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n  {\n    id: 4,\n    ticketCode: '411000006572',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52818,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n  {\n    id: 5,\n    ticketCode: '871000006824',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52819,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n  {\n    id: 6,\n    ticketCode: '370000011495',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52820,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n  {\n    id: 7,\n    ticketCode: '450000011501',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52821,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n  {\n    id: 8,\n    ticketCode: '630000011502',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52822,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n  {\n    id: 9,\n    ticketCode: '020000011503',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52823,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n  {\n    id: 10,\n    ticketCode: '310000011504',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52824,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n]\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getList: (resource, params) =>\n    Promise.resolve({ data: fakeTickets, total: fakeTickets.length }),\n} as DataProvider\n\nexport default provider\n","import { DataProvider } from 'react-admin'\nimport { Access } from '../../accesses/access'\nimport { AccessActivePeriodStartingOptions } from '../../enum/AccessActivePeriodStartingOptions'\nimport { AccessBonuses } from '../../enum/AccessBonuses'\nimport { DayOfWeek } from '../../enum/DayOfWeek'\n\nconst fakeAccesses: Access[] = [\n  {\n    id: 1,\n    name: 'access1',\n    bonus: AccessBonuses.N,\n    entranceId: 0,\n    allowReenter: false,\n    multipleEntry: false,\n    multiple: 0,\n    usePriority: 0,\n    isTicketUnlockWithNextDay: false,\n    releaseTime: '2021-07-15T08:50:27.2054',\n    releaseDayOfWeek: DayOfWeek.FRIDAY,\n    releaseDayOfMonth: 1,\n    delay: '',\n    activePeriod: '',\n    activePeriodStartingFrom: AccessActivePeriodStartingOptions.FIRST_USE,\n    variantsIds: [],\n    accessDatesIds: [],\n    createdById: 0,\n    modifiedById: 0,\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    createdByName: \"abc\",\n    modifiedByName: \"abc\"\n  },\n  {\n    id: 2,\n    name: 'access2',\n    bonus: AccessBonuses.N,\n    entranceId: 0,\n    allowReenter: false,\n    multipleEntry: false,\n    multiple: 0,\n    usePriority: 0,\n    isTicketUnlockWithNextDay: false,\n    releaseTime: '2021-07-15T08:50:27.2054',\n    releaseDayOfWeek: DayOfWeek.FRIDAY,\n    releaseDayOfMonth: 1,\n    delay: '',\n    activePeriod: '',\n    activePeriodStartingFrom: AccessActivePeriodStartingOptions.FIRST_USE,\n    variantsIds: [],\n    accessDatesIds: [],\n    createdById: 0,\n    modifiedById: 0,\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    createdByName: \"abc\",\n    modifiedByName: \"abc\"\n  },\n  {\n    id: 3,\n    name: 'access3',\n    bonus: AccessBonuses.N,\n    entranceId: 0,\n    allowReenter: false,\n    multipleEntry: false,\n    multiple: 0,\n    usePriority: 0,\n    isTicketUnlockWithNextDay: false,\n    releaseTime: '2021-07-15T08:50:27.2054',\n    releaseDayOfWeek: DayOfWeek.FRIDAY,\n    releaseDayOfMonth: 1,\n    delay: '',\n    activePeriod: '',\n    activePeriodStartingFrom: AccessActivePeriodStartingOptions.FIRST_USE,\n    variantsIds: [],\n    accessDatesIds: [],\n    createdById: 0,\n    modifiedById: 0,\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    createdByName: \"abc\",\n    modifiedByName: \"abc\"\n  },\n  {\n    id: 4,\n    name: 'access4',\n    bonus: AccessBonuses.N,\n    entranceId: 0,\n    allowReenter: false,\n    multipleEntry: false,\n    multiple: 0,\n    usePriority: 0,\n    isTicketUnlockWithNextDay: false,\n    releaseTime: '2021-07-15T08:50:27.2054',\n    releaseDayOfWeek: DayOfWeek.FRIDAY,\n    releaseDayOfMonth: 1,\n    delay: '',\n    activePeriod: '',\n    activePeriodStartingFrom: AccessActivePeriodStartingOptions.FIRST_USE,\n    variantsIds: [],\n    accessDatesIds: [],\n    createdById: 0,\n    modifiedById: 0,\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    createdByName: \"abc\",\n    modifiedByName: \"abc\"\n  },\n  {\n    id: 5,\n    name: 'access5',\n    bonus: AccessBonuses.N,\n    entranceId: 0,\n    allowReenter: false,\n    multipleEntry: false,\n    multiple: 0,\n    usePriority: 0,\n    isTicketUnlockWithNextDay: false,\n    releaseTime: '2021-07-15T08:50:27.2054',\n    releaseDayOfWeek: DayOfWeek.FRIDAY,\n    releaseDayOfMonth: 1,\n    delay: '',\n    activePeriod: '',\n    activePeriodStartingFrom: AccessActivePeriodStartingOptions.FIRST_USE,\n    variantsIds: [],\n    accessDatesIds: [],\n    createdById: 0,\n    modifiedById: 0,\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    createdByName: \"abc\",\n    modifiedByName: \"abc\"\n  },\n  {\n    id: 6,\n    name: 'access6',\n    bonus: AccessBonuses.N,\n    entranceId: 0,\n    allowReenter: false,\n    multipleEntry: false,\n    multiple: 0,\n    usePriority: 0,\n    isTicketUnlockWithNextDay: false,\n    releaseTime: '2021-07-15T08:50:27.2054',\n    releaseDayOfWeek: DayOfWeek.FRIDAY,\n    releaseDayOfMonth: 1,\n    delay: '',\n    activePeriod: '',\n    activePeriodStartingFrom: AccessActivePeriodStartingOptions.FIRST_USE,\n    variantsIds: [],\n    accessDatesIds: [],\n    createdById: 0,\n    modifiedById: 0,\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    createdByName: \"abc\",\n    modifiedByName: \"abc\"\n  },\n  {\n    id: 7,\n    name: 'access7',\n    bonus: AccessBonuses.N,\n    entranceId: 0,\n    allowReenter: false,\n    multipleEntry: false,\n    multiple: 0,\n    usePriority: 0,\n    isTicketUnlockWithNextDay: false,\n    releaseTime: '2021-07-15T08:50:27.2054',\n    releaseDayOfWeek: DayOfWeek.FRIDAY,\n    releaseDayOfMonth: 1,\n    delay: '',\n    activePeriod: '',\n    activePeriodStartingFrom: AccessActivePeriodStartingOptions.FIRST_USE,\n    variantsIds: [],\n    accessDatesIds: [],\n    createdById: 0,\n    modifiedById: 0,\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    createdByName: \"abc\",\n    modifiedByName: \"abc\"\n  },\n  {\n    id: 8,\n    name: 'access8',\n    bonus: AccessBonuses.N,\n    entranceId: 0,\n    allowReenter: false,\n    multipleEntry: false,\n    multiple: 0,\n    usePriority: 0,\n    isTicketUnlockWithNextDay: false,\n    releaseTime: '2021-07-15T08:50:27.2054',\n    releaseDayOfWeek: DayOfWeek.FRIDAY,\n    releaseDayOfMonth: 1,\n    delay: '',\n    activePeriod: '',\n    activePeriodStartingFrom: AccessActivePeriodStartingOptions.FIRST_USE,\n    variantsIds: [],\n    accessDatesIds: [],\n    createdById: 0,\n    modifiedById: 0,\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    createdByName: \"abc\",\n    modifiedByName: \"abc\"\n  },\n  {\n    id: 9,\n    name: 'access9',\n    bonus: AccessBonuses.N,\n    entranceId: 0,\n    allowReenter: false,\n    multipleEntry: false,\n    multiple: 0,\n    usePriority: 0,\n    isTicketUnlockWithNextDay: false,\n    releaseTime: '2021-07-15T08:50:27.2054',\n    releaseDayOfWeek: DayOfWeek.FRIDAY,\n    releaseDayOfMonth: 1,\n    delay: '',\n    activePeriod: '',\n    activePeriodStartingFrom: AccessActivePeriodStartingOptions.FIRST_USE,\n    variantsIds: [],\n    accessDatesIds: [],\n    createdById: 0,\n    modifiedById: 0,\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    createdByName: \"abc\",\n    modifiedByName: \"abc\"\n  },\n  {\n    id: 10,\n    name: 'access10',\n    bonus: AccessBonuses.N,\n    entranceId: 0,\n    allowReenter: false,\n    multipleEntry: false,\n    multiple: 0,\n    usePriority: 0,\n    isTicketUnlockWithNextDay: false,\n    releaseTime: '2021-07-15T08:50:27.2054',\n    releaseDayOfWeek: DayOfWeek.FRIDAY,\n    releaseDayOfMonth: 1,\n    delay: '',\n    activePeriod: '',\n    activePeriodStartingFrom: AccessActivePeriodStartingOptions.FIRST_USE,\n    variantsIds: [],\n    accessDatesIds: [],\n    createdById: 0,\n    modifiedById: 0,\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    createdByName: \"abc\",\n    modifiedByName: \"abc\"\n  },\n]\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getList: (resource, params) =>\n    Promise.resolve({ data: fakeAccesses, total: fakeAccesses.length }),\n} as DataProvider\n\nexport default provider\n","export enum EventStatus {\n  INACTIVE = 'INACTIVE',\n  ACTIVE = 'ACTIVE',\n  IN_TRANSITION = 'IN_TRANSITION',\n}\n","import { DataProvider } from 'react-admin'\nimport { EventStatus } from '../../enum/EventStatus'\nimport { Event } from '../../events/event'\n\nconst fakeEvents: Event[] = [\n  {\n    id: 1,\n    name: \"Event1\",\n    dateStart: '2021-07-15T08:50:27.2054',\n    dateEnd: '2021-07-15T08:50:27.2054',\n    status: EventStatus.INACTIVE\n  },\n  {\n    id: 2,\n    name: \"Event2\",\n    dateStart: '2021-07-15T08:50:27.2054',\n    dateEnd: '2021-07-15T08:50:27.2054',\n    status: EventStatus.INACTIVE\n  },\n  {\n    id: 3,\n    name: \"Event3\",\n    dateStart: '2021-07-15T08:50:27.2054',\n    dateEnd: '2021-07-15T08:50:27.2054',\n    status: EventStatus.INACTIVE\n  },\n  {\n    id: 4,\n    name: \"Event4\",\n    dateStart: '2021-07-15T08:50:27.2054',\n    dateEnd: '2021-07-15T08:50:27.2054',\n    status: EventStatus.INACTIVE\n  },\n  {\n    id: 5,\n    name: \"Event5\",\n    dateStart: '2021-07-15T08:50:27.2054',\n    dateEnd: '2021-07-15T08:50:27.2054',\n    status: EventStatus.INACTIVE\n  },\n  {\n    id: 6,\n    name: \"Event6\",\n    dateStart: '2021-07-15T08:50:27.2054',\n    dateEnd: '2021-07-15T08:50:27.2054',\n    status: EventStatus.INACTIVE\n  },\n  {\n    id: 7,\n    name: \"Event7\",\n    dateStart: '2021-07-15T08:50:27.2054',\n    dateEnd: '2021-07-15T08:50:27.2054',\n    status: EventStatus.INACTIVE\n  },\n  {\n    id: 8,\n    name: \"Event8\",\n    dateStart: '2021-07-15T08:50:27.2054',\n    dateEnd: '2021-07-15T08:50:27.2054',\n    status: EventStatus.INACTIVE\n  },\n  {\n    id: 9,\n    name: \"Event9\",\n    dateStart: '2021-07-15T08:50:27.2054',\n    dateEnd: '2021-07-15T08:50:27.2054',\n    status: EventStatus.INACTIVE\n  },\n  {\n    id: 10,\n    name: \"Event10\",\n    dateStart: '2021-07-15T08:50:27.2054',\n    dateEnd: '2021-07-15T08:50:27.2054',\n    status: EventStatus.INACTIVE\n  },\n]\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getList: (resource, params) =>\n    Promise.resolve({ data: fakeEvents, total: fakeEvents.length })\n} as DataProvider\n\nexport default provider","export enum DeviceDirection {\n  IN = 'IN',\n  OUT = 'OUT',\n  INFO = 'INFO',\n}\n","import { DataProvider } from 'react-admin'\nimport { CustomerDetails } from \"../../customer-details/customer-details\";\nimport { CustomerDocumentType } from '../../enum/CustomerDocumentType'\nimport { Gender } from '../../enum/Gender'\n\nconst fakeCustomerDetailsList: CustomerDetails[] = [\n  {\n    id: 1,\n    type: \"MANUAL\",\n    firstname: \"Jan\",\n    lastname: \"Kowalski\",\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    pesel: \"12345678901\",\n    documentNumber: null,\n    nationality: \"PL\",\n    gender: Gender.MALE,\n    bookingsIds: []\n  },\n  {\n    id: 2,\n    type: \"MANUAL\",\n    firstname: \"Jan\",\n    lastname: \"Kowalski\",\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    pesel: \"12345678901\",\n    documentNumber: null,\n    nationality: \"PL\",\n    gender: Gender.MALE,\n    bookingsIds: []\n  },\n  {\n    id: 3,\n    type: \"MANUAL\",\n    firstname: \"Jan\",\n    lastname: \"Kowalski\",\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    pesel: \"12345678901\",\n    documentNumber: null,\n    nationality: \"PL\",\n    gender: Gender.MALE,\n    bookingsIds: []\n  },\n  {\n    id: 4,\n    type: \"MANUAL\",\n    firstname: \"Jan\",\n    lastname: \"Kowalski\",\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    pesel: \"12345678901\",\n    documentNumber: null,\n    nationality: \"PL\",\n    gender: Gender.MALE,\n    bookingsIds: []\n  },\n  {\n    id: 5,\n    type: \"MANUAL\",\n    firstname: \"Jan\",\n    lastname: \"Kowalski\",\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    pesel: \"12345678901\",\n    documentNumber: null,\n    nationality: \"PL\",\n    gender: Gender.MALE,\n    bookingsIds: []\n  },\n  {\n    id: 6,\n    type: \"MANUAL\",\n    firstname: \"Jan\",\n    lastname: \"Kowalski\",\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    pesel: \"12345678901\",\n    documentNumber: null,\n    nationality: \"PL\",\n    gender: Gender.MALE,\n    bookingsIds: []\n  },\n  {\n    id: 7,\n    type: \"MANUAL\",\n    firstname: \"Jan\",\n    lastname: \"Kowalski\",\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    pesel: \"12345678901\",\n    documentNumber: null,\n    nationality: \"PL\",\n    gender: Gender.MALE,\n    bookingsIds: []\n  },\n  {\n    id: 8,\n    type: \"MANUAL\",\n    firstname: \"Jan\",\n    lastname: \"Kowalski\",\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    pesel: \"12345678901\",\n    documentNumber: null,\n    nationality: \"PL\",\n    gender: Gender.MALE,\n    bookingsIds: []\n  },\n  {\n    id: 9,\n    type: \"MANUAL\",\n    firstname: \"Jan\",\n    lastname: \"Kowalski\",\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    pesel: \"12345678901\",\n    documentNumber: null,\n    nationality: \"PL\",\n    gender: Gender.MALE,\n    bookingsIds: []\n  },\n  {\n    id: 10,\n    type: \"MANUAL\",\n    firstname: \"Jan\",\n    lastname: \"Kowalski\",\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    pesel: \"12345678901\",\n    documentNumber: null,\n    nationality: \"PL\",\n    gender: Gender.MALE,\n    bookingsIds: []\n  },\n]\n\nconst provider = {\n  getOne: (resource, { id }: { id: string }) => {\n    const found = fakeCustomerDetailsList.find((c) => `${c.id}` === id)\n    if(found) {\n      return Promise.resolve({\n        data: found\n      })\n    }\n    return Promise.reject(new Error())\n  }\n} as DataProvider\n\nexport default provider","import { DataProvider } from 'react-admin'\nimport { CustomerInfo } from '../../customer-info/customer-info'\n\nconst fakeCustomerInfoList: CustomerInfo[] = [\n  {\n    id: 1,\n    firstname: \"jan\",\n    lastname: \"kowalski\",\n    pesel: \"12345678901\",\n    documentNumber: \"12345678901\"\n  },\n  {\n    id: 2,\n    firstname: \"jan\",\n    lastname: \"kowalski\",\n    pesel: \"12345678901\",\n    documentNumber: \"12345678901\"\n  },\n  {\n    id: 3,\n    firstname: \"jan\",\n    lastname: \"kowalski\",\n    pesel: \"12345678901\",\n    documentNumber: \"12345678901\"\n  },\n  {\n    id: 4,\n    firstname: \"jan\",\n    lastname: \"kowalski\",\n    pesel: \"12345678901\",\n    documentNumber: \"12345678901\"\n  },\n  {\n    id: 5,\n    firstname: \"jan\",\n    lastname: \"kowalski\",\n    pesel: \"12345678901\",\n    documentNumber: \"12345678901\"\n  },\n  {\n    id: 6,\n    firstname: \"jan\",\n    lastname: \"kowalski\",\n    pesel: \"12345678901\",\n    documentNumber: \"12345678901\"\n  },\n  {\n    id: 7,\n    firstname: \"jan\",\n    lastname: \"kowalski\",\n    pesel: \"12345678901\",\n    documentNumber: \"12345678901\"\n  },\n  {\n    id: 8,\n    firstname: \"jan\",\n    lastname: \"kowalski\",\n    pesel: \"12345678901\",\n    documentNumber: \"12345678901\"\n  },\n  {\n    id: 9,\n    firstname: \"jan\",\n    lastname: \"kowalski\",\n    pesel: \"12345678901\",\n    documentNumber: \"12345678901\"\n  },\n  {\n    id: 10,\n    firstname: \"jan\",\n    lastname: \"kowalski\",\n    pesel: \"12345678901\",\n    documentNumber: \"12345678901\"\n  },\n]\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getList: (resource, params) =>\n    Promise.resolve({ data: fakeCustomerInfoList, total: fakeCustomerInfoList.length })\n} as DataProvider\n\nexport default provider","import { DataProvider } from 'react-admin'\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getList: (resource, params) =>\n    Promise.resolve({ data: {}, total: 0 }),\n} as DataProvider\n\nexport default provider","import { DataProvider } from \"react-admin\"\nimport { Company } from \"../../companies/company\"\n\nconst fakeCompanies: Company[] = [\n  {\n    id: 0,\n    name: \"0\",\n    usersIds: [],\n    eventsIds: []\n  },\n  {\n    id: 1,\n    name: \"1\",\n    usersIds: [],\n    eventsIds: []\n  },\n  {\n    id: 2,\n    name: \"2\",\n    usersIds: [],\n    eventsIds: []\n  },\n  {\n    id: 3,\n    name: \"3\",\n    usersIds: [],\n    eventsIds: []\n  },\n  {\n    id: 4,\n    name: \"4\",\n    usersIds: [],\n    eventsIds: []\n  },\n  {\n    id: 5,\n    name: \"5\",\n    usersIds: [],\n    eventsIds: []\n  },\n  {\n    id: 6,\n    name: \"6\",\n    usersIds: [],\n    eventsIds: []\n  },\n  {\n    id: 7,\n    name: \"7\",\n    usersIds: [],\n    eventsIds: []\n  },\n  {\n    id: 8,\n    name: \"8\",\n    usersIds: [],\n    eventsIds: []\n  },\n  {\n    id: 9,\n    name: \"9\",\n    usersIds: [],\n    eventsIds: []\n  },\n]\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getList: (resource, params) =>\n    Promise.resolve({ data: fakeCompanies, total: fakeCompanies.length })\n} as DataProvider\n\nexport default provider","import { DataProvider } from 'react-admin'\nimport { ObjectType } from \"../../objects/object\";\n\nconst fakeObjects: ObjectType[] = [\n  {\n    id: 0,\n    name: \"0\",\n    tribunesIds: [],\n    eventsIds: []\n  },\n  {\n    id: 1,\n    name: \"1\",\n    tribunesIds: [],\n    eventsIds: []\n  },\n  {\n    id: 2,\n    name: \"2\",\n    tribunesIds: [],\n    eventsIds: []\n  },\n  {\n    id: 3,\n    name: \"3\",\n    tribunesIds: [],\n    eventsIds: []\n  },\n  {\n    id: 4,\n    name: \"4\",\n    tribunesIds: [],\n    eventsIds: []\n  },\n  {\n    id: 5,\n    name: \"5\",\n    tribunesIds: [],\n    eventsIds: []\n  },\n  {\n    id: 6,\n    name: \"6\",\n    tribunesIds: [],\n    eventsIds: []\n  },\n  {\n    id: 7,\n    name: \"7\",\n    tribunesIds: [],\n    eventsIds: []\n  },\n  {\n    id: 8,\n    name: \"8\",\n    tribunesIds: [],\n    eventsIds: []\n  },\n  {\n    id: 9,\n    name: \"9\",\n    tribunesIds: [],\n    eventsIds: []\n  },\n]\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getList: (resource, params) =>\n    Promise.resolve({ data: fakeObjects, total: fakeObjects.length })\n} as DataProvider\n\nexport default provider","import { DataProvider } from 'react-admin'\nimport { Palm } from \"../../palms/palm\";\n\nconst fakePalms: Palm[] = []\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getList: (resource, params) =>\n    Promise.resolve({ data: fakePalms, total: fakePalms.length })\n} as DataProvider\n\nexport default provider","import { DataProvider } from 'react-admin'\nimport { Engine } from '../../engines/engine'\n\nconst fakeEngines: Engine[] = []\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getList: (resource, params) =>\n    Promise.resolve({ data: fakeEngines, total: fakeEngines.length })\n} as DataProvider\n\nexport default provider","import { DataProvider, sanitizeFetchType } from 'react-admin'\nimport { ResourceName } from '../ResourceName'\nimport fakeAccessUsingsProvider from './providers/fake-access-usings.provider'\nimport fakeBookingsProvider from './providers/fake-bookings.provider'\nimport fakeLogsProvider from './providers/fake-logs.provider'\nimport fakeStatsOverallViewListProvider from './providers/fake-stats-overall-view-list.provider'\nimport fakeStatsOverallViewProvider from './providers/fake-stats-overall-view.provider'\nimport fakeTicketDetailsProvider from './providers/fake-ticket-details.provider'\nimport fakeTicketInfoProvider from './providers/fake-ticket-info.provider'\nimport fakeTicketsProvider from './providers/fake-tickets.provider'\nimport fakeAccessesProvider from './providers/fake-accesses.provider'\nimport fakeEventsProvider from './providers/fake-events.provider'\nimport fakeCustomerDetailsProvider from './providers/fake-customer-details.provider'\nimport fakeCustomerInfoProvider from './providers/fake-customer-info.provider'\nimport fakeAccessDatesProvider from './providers/fake-access-dates.provider'\nimport fakeCompaniesProvider from './providers/fake-companies.provider'\nimport fakeObjectsProvider from './providers/fake-objects.provider'\nimport fakePalmsProvider from './providers/fake-palms.provider'\nimport fakeEnginesProvider from './providers/fake-engines.provider'\n\nconst dataProviders: Record<ResourceName, DataProvider> = {\n  [ResourceName.ACCESS_DATES]: fakeAccessDatesProvider,\n  [ResourceName.ACCESSES]: fakeAccessesProvider,\n  [ResourceName.ACCESS_USINGS]: fakeAccessUsingsProvider,\n  [ResourceName.BOOKINGS]: fakeBookingsProvider,\n  [ResourceName.COMPANIES]: fakeCompaniesProvider,\n  [ResourceName.CUSTOMER_DETAILS]: fakeCustomerDetailsProvider,\n  [ResourceName.CUSTOMER_INFO]: fakeCustomerInfoProvider,\n  [ResourceName.ENGINES]: fakeEnginesProvider,\n  [ResourceName.EVENTS]: fakeEventsProvider,\n  [ResourceName.LOGS]: fakeLogsProvider,\n  [ResourceName.OBJECTS]: fakeObjectsProvider,\n  [ResourceName.PALMS]: fakePalmsProvider,\n  [ResourceName.TICKETS]: fakeTicketsProvider,\n  [ResourceName.TICKET_INFO]: fakeTicketInfoProvider,\n  [ResourceName.TICKET_DETAILS]: fakeTicketDetailsProvider,\n  [ResourceName.TICKET_LOGS]: fakeLogsProvider,\n  [ResourceName.STATS_OVERALL_VIEW]: fakeStatsOverallViewProvider,\n  [ResourceName.STATS_OVERALL_VIEW_LIST]: fakeStatsOverallViewListProvider,\n}\n\nexport default (\n  fetchType: string,\n  resource: string,\n  params: unknown,\n): Promise<unknown> => {\n  const selectedProvider = dataProviders[resource as ResourceName]\n  const type = sanitizeFetchType(fetchType)\n  return selectedProvider[type](resource, params)\n}\n","import { AuthProvider } from 'react-admin'\n\nconst authProvider: AuthProvider = {\n  login: () => Promise.resolve(),\n  logout: () => Promise.resolve(),\n  checkError: () => Promise.resolve(),\n  checkAuth: () => Promise.resolve(),\n  getPermissions: () => Promise.resolve(),\n  getIdentity: () =>\n    Promise.resolve({\n      id: 'no-auth',\n      fullName: 'no-auth',\n    }),\n}\n\nexport default authProvider\n","export type ContentRangeHeaderValue = `bytes ${number}-${number}/${number}`\n\nexport const contentRangeParser = (headerValue: ContentRangeHeaderValue) => {\n  if (!headerValue) {\n    // 'content-range' header should exist otherwise pagination doesn't work\n    return {\n      total: 0,\n    }\n  }\n  const summary = headerValue.split(' ')[1]\n  const split = summary.split('-')\n  const rangeFrom = split[0]\n  const summarySecondPartSplit = split[1].split('/')\n  const rangeTo = summarySecondPartSplit[0]\n  const total = summarySecondPartSplit[1]\n  return {\n    rangeFrom: parseInt(rangeFrom, 10),\n    rangeTo: parseInt(rangeTo, 10),\n    total: parseInt(total, 10),\n  }\n}\n","import { fetchUtils } from 'react-admin'\nimport { ContentRangeHeaderValue, contentRangeParser } from './header.parser'\n\nconst getToken = () => localStorage.getItem('token') as string\n\nconst baseHeaders: HeadersInit = {\n  'Content-Type': 'application/json',\n}\n\nconst authHeaders = (token = getToken()): HeadersInit => ({\n  ...baseHeaders,\n  Authorization: `Bearer ${token}`,\n})\n\nconst getWithHeaders = <T>(url: string, headers: HeadersInit) =>\n  fetchUtils\n    .fetchJson(url, {\n      method: 'GET',\n      headers: new Headers(headers),\n    })\n    .then(({ json }) => json as Promise<T>)\n\nconst postWithHeaders = <T, K>(url: string, body: T, headers: HeadersInit) =>\n  fetchUtils\n    .fetchJson(url, {\n      method: 'POST',\n      body: JSON.stringify(body),\n      headers: new Headers(headers),\n    })\n    .then(({ json }) => json as Promise<K>)\n\nexport const get = <T>(baseUrl: string, path: string) =>\n  getWithHeaders<T>(`${baseUrl}${path}`, authHeaders())\n\nexport const getWithToken = <T>(url: string, token: string) =>\n  getWithHeaders<T>(url, authHeaders(token))\n\nexport const getByConditions = <T>(\n  baseUrl: string,\n  path: string,\n): Promise<T[]> =>\n  getWithHeaders<T[]>(`${baseUrl}/GetByConditions/${path}`, authHeaders())\n\nexport const getWithPagination = <T>(baseUrl: string, path: string) =>\n  fetchUtils\n    .fetchJson(`${baseUrl}${path}`, {\n      method: 'GET',\n      headers: new Headers(authHeaders()),\n    })\n    .then(({ json, headers }) =>\n      Promise.resolve({\n        data: json as T,\n        range: contentRangeParser(\n          headers.get('content-range') as ContentRangeHeaderValue,\n        ),\n      }),\n    )\n\nexport const authPost = <T, K>(url: string, body: T) =>\n  postWithHeaders<T, K>(url, body, baseHeaders)\n\nexport const post = <T, K>(url: string, body: T) =>\n  postWithHeaders<T, K>(url, body, authHeaders())\n\nexport const patch = <T, K>(baseUrl: string, body: T) =>\n  fetchUtils\n    .fetchJson(baseUrl, {\n      method: 'PATCH',\n      body: JSON.stringify(body),\n      headers: new Headers(authHeaders()),\n    })\n    .then(({ json }) => json as Promise<K>)\n\nexport const put = <T, K>(baseUrl: string, body: T) =>\n  fetchUtils\n    .fetchJson(baseUrl, {\n      method: 'PUT',\n      body: JSON.stringify(body),\n      headers: new Headers(authHeaders()),\n    })\n    .then(({ json }) => json as Promise<K>)\n","const API_V1 = `${process.env.REACT_APP_API_BASE_URL}/api/v1`\nexport const AUTH_URL = `${API_V1}/Authorization/Authenticate`\nexport const PERMISSIONS_URL = `${API_V1}/User/GetPermissions`\nexport const ACCESS_USINGS = `${API_V1}/ticketManagement/AccessUsings`\nexport const ACCESSES_URL = `${API_V1}/ticketManagement/Accesses`\nexport const ACCESS_DATES = `${API_V1}/ticketManagement/AccessDates`\nexport const BOOKINGS_URL = `${API_V1}/ticketManagement/Bookings`\nexport const CUSTOMERS_URL = `${API_V1}/ticketManagement/Customers`\nexport const EVENTS_URL = `${API_V1}/ticketManagement/Events`\nexport const EXTENDED_LOGS_URL = `${API_V1}/ticketManagement/Logs/GetExtendedLogByConditions`\nexport const TICKETS_URL = `${API_V1}/ticketManagement/Tickets`\nexport const VARIANTS_URL = `${API_V1}/ticketManagement/Variants`\nexport const SEATS_URL = `${API_V1}/ticketManagement/Seats`\nexport const BLOCKS_URL = `${API_V1}/ticketManagement/Blocks`\nexport const TRIBUNES_URL = `${API_V1}/ticketManagement/Tribunes`\nexport const OBJECTS_URL = `${API_V1}/ticketManagement/Objects`\nexport const ENGINES_URL = `${API_V1}/deviceManagement/Engines`\nexport const PALMS_URL = `${API_V1}/deviceManagement/Palms`\nexport const COMPANIES_URL = `${API_V1}/Administrator/GetCompaniesByConditions`\nexport const USERS_URL = `${API_V1}/Administrator/GetUserById/`","import { AuthProvider } from 'react-admin'\nimport { authPost, getWithToken } from '../common/fetch.utils'\nimport { AuthDto } from '../dto/auth.dto'\nimport { AUTH_URL, PERMISSIONS_URL } from '../api-urls'\nimport { AuthRequest } from './auth.request'\nimport { PermissionDto } from '../dto/permission.dto'\n\nconst authProvider: AuthProvider = {\n  login: async ({ username, password }) => {\n    const { token } = await authPost<AuthRequest, AuthDto>(AUTH_URL, {\n      login: username,\n      password,\n    })\n    const permissionDtos = await getWithToken<PermissionDto[]>(\n      PERMISSIONS_URL,\n      token,\n    )\n    const permissions = permissionDtos.map((p) => p.name)\n    localStorage.setItem('username', username)\n    localStorage.setItem('token', token)\n    localStorage.setItem('permissions', permissions.join())\n  },\n  logout: () => {\n    localStorage.removeItem('username')\n    localStorage.removeItem('token')\n    localStorage.removeItem('permissions')\n    return Promise.resolve()\n  },\n  checkError: ({ status }) => {\n    if (status === 401 || status === 403) {\n      localStorage.removeItem('username')\n      localStorage.removeItem('token')\n      localStorage.removeItem('permissions')\n      return Promise.reject()\n    }\n    return Promise.resolve()\n  },\n  checkAuth: () =>\n    localStorage.getItem('token') ? Promise.resolve() : Promise.reject(),\n  getPermissions: () => {\n    const permissions = localStorage.getItem('permissions') as string\n    return Promise.resolve(permissions?.split(',') || [])\n  },\n  getIdentity: () =>\n    Promise.resolve({\n      id: localStorage.getItem('username') as string,\n    }),\n}\n\nexport default authProvider\n","import { AccessUsingDto } from \"../dto/access-using.dto\"\n\nconst mapping: Partial<Record<keyof AccessUsingDto, string>> = {\n  id: 'au=>au.Id',\n  date: 'au=>au.Date',\n  direction: 'au=>au.Direction',\n  active: 'au=>au.Active',\n  ticketId: 'au=>au.TicketId',\n  accessId: 'au=>au.AccessId'\n}\n\nexport const mapSortAccessUsingsParam = (key: keyof AccessUsingDto) => mapping[key]","export enum ToggleType {\n  BLOCK = 'BLOCK',\n  UNBLOCK = 'UNBLOCK',\n  DISABLED = 'DISABLED',\n}\n\nexport type ToggleButtonState = {\n  type: ToggleType\n  text: string\n}\n\nexport type Action = { type: ToggleType }\n","import { AccessUsingDto } from \"../dto/access-using.dto\"\n\nconst mapping: Partial<\n  Record<keyof AccessUsingDto, (lambdaParameter: string, value: string | number) => string>\n> = {\n  id: (lambdaParameter, value) => `${(lambdaParameter)}.Id.ToString().Contains(\"${value}\")`,\n  ticketId: (lambdaParameter, value) => `\"${value}\".Contains(${(lambdaParameter)}.TicketId.ToString())`,\n  accessId: (lambdaParameter, value) => `${(lambdaParameter)}.AccessId.ToString().Contains(\"${value}\")`,\n}\n\nexport const getFilterMapper = (key: keyof AccessUsingDto) =>\n  mapping[key] as (lambdaParameter: string, value: string | number) => string\n","import {\n  CreateParams,\n  CreateResult,\n  DataProvider,\n  UpdateManyParams,\n  UpdateManyResult,\n  GetListResult\n} from 'react-admin'\nimport { AccessUsingsCreateParams } from './access-usings-create.params'\nimport { AccessUsingDto } from '../dto/access-using.dto'\nimport { DeviceDirection } from '../enum/DeviceDirection'\nimport { DateTime } from '../common/date-time'\nimport { getByConditions, getWithPagination, patch, post } from '../common/fetch.utils'\nimport { ACCESS_USINGS, TICKETS_URL } from '../api-urls'\nimport { AccessUsingsListParams } from './access-usings-list.params'\nimport { mapSortAccessUsingsParam } from './access-usings-sort.mapper'\nimport { getFilterMapper } from './access-usings-filter.mapper'\nimport { TicketDto } from '../dto/ticket.dto'\nimport { AccessUsing } from './access-using'\n\nconst getFilterParams = (filter: Partial<AccessUsingDto>) => {\n  if (Object.keys(filter).length) {\n    const filterParams = Object.entries(filter).map(([key, value]) => {\n      const mapper = getFilterMapper(key as keyof AccessUsingDto)\n      return mapper(\"au\", value as string)\n    })\n    return filterParams.reduce((p, c) => `${p}&&${c}`)\n  }\n  return \"true\"\n}\n\ntype CreateAccessUsingRequest = Array<\n  Omit<AccessUsingDto, 'id' | 'verifierDeviceId'> & { verifierDeviceId: null }\n>\ntype UpdateAccessUsingRequest = Pick<AccessUsingDto, 'id'> & { active: false }\n\nconst provider = {\n  updateMany: async (\n    resource,\n    { ids, data: { active = false } }: UpdateManyParams,\n  ): Promise<UpdateManyResult> => {\n    const pendingUpdates = ids\n      .map((auId) => ({ id: auId, active } as UpdateAccessUsingRequest))\n      .map((req) =>\n        patch<UpdateAccessUsingRequest, AccessUsingDto>(ACCESS_USINGS, req),\n      )\n    const accessUsings = await Promise.all(pendingUpdates)\n    return Promise.resolve({\n      data: accessUsings.map((au) => au.id),\n    })\n  },\n  create: async (\n    resource,\n    { data }: CreateParams<AccessUsingsCreateParams>,\n  ): Promise<CreateResult> => {\n    const { ticketIds, accessIds } = data\n    const request: CreateAccessUsingRequest = accessIds.flatMap((accessId) =>\n      ticketIds.map((ticketId) => ({\n        date: new Date().toISOString() as DateTime,\n        direction: DeviceDirection.IN,\n        active: true,\n        accessId,\n        ticketId,\n        verifierDeviceId: null,\n      })),\n    )\n    await post<CreateAccessUsingRequest, AccessUsingDto[]>(\n      ACCESS_USINGS,\n      request,\n    )\n    return Promise.resolve({\n      data: { id: 0 }, // need to return something\n    })\n  },\n  getList: async (\n    resource: string,\n    {\n      filter,\n      sort: { field, order },\n      pagination: { page, perPage }\n    }: AccessUsingsListParams\n  ): Promise<GetListResult<AccessUsingDto>> => {\n    const filterParams = `au=>${getFilterParams(filter).toString()}`\n    const queryParams: string[] = []\n    queryParams.push(`sortBy=${mapSortAccessUsingsParam(field)}`)\n    queryParams.push(`sortOrder=${order}`)\n    queryParams.push(`rangeFrom=${page * perPage - perPage}`)\n    queryParams.push(`rangeTo=${page * perPage}`)\n\n    const pathParams = queryParams.reduce((p, c) => `${p}&${c}`)\n    const path = `/${filterParams}?${pathParams}`\n\n    const {\n      data,\n      range: { total }\n    } = await getWithPagination<AccessUsingDto[]>(`${ACCESS_USINGS}/GetByConditions`, path)\n\n    const tickets = await getByConditions<TicketDto>\n      (TICKETS_URL, `t=>${filter?.ticketId?.toString().split(\" \").map((tId) => `t.Id==${tId}`).join(\"||\")}`)\n\n    const accessUsings = data.map(({\n      id, date, direction, active, ticketId, accessId, verifierDeviceId\n    }) => ({\n      id, date, direction, active, ticketId, accessId, verifierDeviceId,\n      ticketCode: tickets.find((ticket) => ticket.id === ticketId)?.ticketCode\n    } as AccessUsing))\n\n    return Promise.resolve({\n      data: accessUsings,\n      total\n    })\n  }\n} as DataProvider\n\nexport default provider\n","import { BookingDto } from '../dto/booking.dto'\n\nconst mapping: Partial<\n  Record<keyof BookingDto, (lambdaParameter: string, value: string | number) => string>\n> = {\n  id: (lambdaParameter, value) => value?.toString().split(\",\").length > 1 ?\n    `\"${value}\".Contains(${(lambdaParameter)}.Id.ToString())` :\n    `${(lambdaParameter)}.Id==${value}`,\n}\n\nexport const getFilterMapper = (key: keyof BookingDto) =>\n  mapping[key] as (lambdaParameters: string, value: string | number) => string","import { BookingDto } from \"../dto/booking.dto\"\n\nconst mapping: Partial<Record<keyof BookingDto, string>> = {\n  id: 'l=>l.Id',\n}\n\nexport const mapSortBookingParam = (key: keyof BookingDto) => mapping[key]\n","import { BookingDto } from \"../dto/booking.dto\";\nimport { EventDto } from \"../dto/event.dto\";\nimport { VariantDto } from \"../dto/variant.dto\";\nimport { Booking } from \"./booking\";\n\nexport const mapToBookings = (\n  {\n    id,\n    type,\n    disabled,\n    activeFrom,\n    activeTo,\n    eventId,\n    seatId,\n    blockId,\n    customerId,\n    variantId,\n    ticketsIds,\n    createdAt,\n    modifiedAt\n  }: BookingDto,\n  events: EventDto[],\n  variants: VariantDto[]\n): Booking => {\n  const foundEvent = events.find((event) => event.id === eventId)\n  const foundVariant = variants.find((variant) => variant.id === variantId)\n  return({\n    id,\n    type,\n    disabled,\n    activeFrom,\n    activeTo,\n    eventId,\n    seatId,\n    blockId,\n    customerId,\n    variantId,\n    ticketsIds,\n    createdAt,\n    modifiedAt,\n    eventName: foundEvent?.name,\n    eventDateStart: foundEvent?.dateStart,\n    variantName: foundVariant?.name\n  })\n}","import { DataProvider, UpdateParams, UpdateResult, GetListResult } from 'react-admin'\nimport { getByConditions, getWithPagination, patch } from '../common/fetch.utils'\nimport { BOOKINGS_URL, EVENTS_URL, VARIANTS_URL } from '../api-urls'\nimport { BookingUpdateRequest } from './booking-update.request'\nimport { BookingDto } from '../dto/booking.dto'\nimport { BookingListParams } from './booking-list.params'\nimport { getFilterMapper } from './booking-filter.mapper'\nimport { mapSortBookingParam } from './booking-sort.mapper'\nimport { Booking } from './booking'\nimport { EventDto } from '../dto/event.dto'\nimport { mapToBookings } from './bookings.mapper'\nimport { VariantDto } from '../dto/variant.dto'\n\nconst getFilterParams = (filter: Partial<BookingDto>) => {\n  if (Object.keys(filter).length) {\n    const filterParams = Object.entries(filter).map(([key, value]) => {\n      const mapper = getFilterMapper(key as keyof BookingDto)\n      return mapper(\"b\", value as string)\n    })\n    return filterParams.reduce((p, c) => `${p}&&${c}`)\n  }\n  return \"true\"\n}\n\nconst provider = {\n  update: async (\n    resource: string,\n    { data }: UpdateParams<BookingUpdateRequest>,\n  ): Promise<UpdateResult<BookingDto>> => {\n    const booking = await patch<BookingUpdateRequest, BookingDto>(\n      BOOKINGS_URL,\n      data,\n    )\n    return Promise.resolve({\n      data: booking,\n    })\n  },\n  getList: async (\n    resource: string,\n    {\n      filter,\n      sort: { field, order },\n      pagination: { page, perPage },\n    }: BookingListParams\n  ): Promise<GetListResult<Booking>> => {\n    const filterParams = `b=>${getFilterParams(filter).toString()}`\n    const queryParams: string [] = []\n    queryParams.push(`sortBy=${mapSortBookingParam(field)}`)\n    queryParams.push(`sortOrder=${order}`)\n    queryParams.push(`rangeFrom=${page * perPage - perPage}`)\n    queryParams.push(`rangeTo=${page * perPage}`)\n\n    const pathParams = queryParams.reduce((p, c) => `${p}&${c}`)\n    const path = `/${filterParams}?${pathParams}`\n\n    const {\n      data,\n    } = await getWithPagination<BookingDto[]>(`${BOOKINGS_URL}/GetByConditions`, path)\n\n    const eventIds = data.map((booking) => booking.eventId)\n    const events = await getByConditions<EventDto>(EVENTS_URL, `e=>\"${eventIds.join(\",\")}\".Contains(e.Id.ToString())`)\n\n    const variantIds = data.map((booking) => booking.variantId)\n    const variants = await getByConditions<VariantDto>(VARIANTS_URL, `v=>\"${variantIds.join(\",\")}\".Contains(v.Id.ToString())`)\n\n    return {\n      data: data.map((booking) => mapToBookings(booking, events, variants)),\n      total: data.length\n    }\n  }\n} as DataProvider\n\nexport default provider\n","import { ExtendedLogFilterValues } from './extended-log'\n\nconst mapping: Partial<\n  Record<\n    keyof ExtendedLogFilterValues,\n    (lambdaParameter: string, value: string | number) => string\n  >\n> = {\n  ticketCode: (lambdaParameter, value) => `${(lambdaParameter)}.TicketCode.Contains(\"${value}\")`,\n  bookingId: (lambdaParameter, value) => value?.toString().split(\",\").length > 1 ?\n    `\"${value}\".Contains(${(lambdaParameter)}.BookingId.ToString())` :\n    `${(lambdaParameter)}.BookingId.ToString().Contains(\"${value}\")`,\n  date: (lambdaParameter, value) => `${(lambdaParameter)}.Date > DateTimeOffset.FromUnixTimeMilliseconds(${value.toString().split(';')[0]}).DateTime && l.Date < DateTimeOffset.FromUnixTimeMilliseconds(${value.toString().split(';')[1]}).DateTime`,\n  deviceName: (lambdaParameter, value) => `${(lambdaParameter)}.Device.Name.Contains(\"${value}\")`,\n  text: (lambdaParameter, value) => `${(lambdaParameter)}.Data.Text.Contains(\"${value}\")`,\n  event: (lambdaParameter, value) => `${(lambdaParameter)}.Booking.Event.Name.Contains(\"${value}\")`\n}\n\nexport const getFilterMapper = (key: keyof ExtendedLogFilterValues) =>\n  mapping[key] as (lambdaParameter: string, value: string | number) => string\n","import { ExtendedLog } from './extended-log'\n\nconst mapping: Partial<Record<keyof ExtendedLog, string>> = {\n  id: 'l=>l.Id',\n  date: 'l=>l.Date',\n  deviceName: 'l=>l.Device.Name',\n  ticketCode: 'l=>l.TicketCode',\n  bookingId: 'l=>l.BookingId',\n}\n\nexport const mapSortLogParam = (key: keyof ExtendedLog) => mapping[key]\n","import { ExtendedLog } from './extended-log'\nimport { ExtendedLogDto } from '../dto/extended-log.dto'\n\nexport const mapToExtendedLog = (\n  {\n    id,\n    date,\n    ticketCode,\n    bookingId,\n    scheme,\n    device: { name: deviceName },\n    data,\n  }: ExtendedLogDto,\n  locale: string,\n): ExtendedLog => {\n  const logEntry = data.filter(({ language }) => language.includes(locale))[0]\n  return {\n    id,\n    date,\n    deviceName,\n    ticketCode,\n    text: logEntry?.text || scheme,\n    color: data[0].color || 'transparent',\n    bookingId,\n  }\n}\n","import { DataProvider, GetListResult } from 'react-admin'\nimport { EXTENDED_LOGS_URL } from '../api-urls'\nimport { getWithPagination } from '../common/fetch.utils'\nimport { ExtendedLogDto } from '../dto/extended-log.dto'\nimport { ExtendedLog, ExtendedLogFilterValues } from './extended-log'\nimport { LogListParams } from './log-list.params'\nimport { getFilterMapper } from './log-filter.mapper'\nimport { mapSortLogParam } from './log-sort.mapper'\nimport { mapToExtendedLog } from './extended-logs.mapper'\n\nconst getFilterParams = (\n  partialValues: Partial<ExtendedLogFilterValues>,\n): string => {\n  if (Object.keys(partialValues).length) {\n    const filterParams = Object.entries(partialValues).map(([key, value]) => {\n      const mapper = getFilterMapper(key as keyof ExtendedLogFilterValues)\n      return mapper('l', value as string)\n    })\n    return filterParams.reduce((p, c) => `${p}&&${c}`)\n  }\n  return 'true'\n}\n\nconst provider = {\n  getList: async (\n    resource: string,\n    {\n      filter: { locale, ...partialFilterValues },\n      sort: { field, order },\n      pagination: { page, perPage },\n    }: LogListParams,\n  ): Promise<GetListResult<ExtendedLog>> => {\n    const filterParams = `l=>${getFilterParams(partialFilterValues)}`\n    const queryParams: string[] = []\n    queryParams.push(`sortBy=${mapSortLogParam(field)}`)\n    queryParams.push(`sortOrder=${order}`)\n    queryParams.push(`rangeFrom=${page * perPage - perPage}`)\n    queryParams.push(`rangeTo=${page * perPage}`)\n\n    const pathParams = queryParams.reduce((p, c) => `${p}&${c}`)\n    const path = `/${filterParams}?${pathParams}`\n\n    const {\n      data,\n      range: { total },\n    } = await getWithPagination<ExtendedLogDto[]>(EXTENDED_LOGS_URL, path)\n    const extendedLogs = data.map((dto) => mapToExtendedLog(dto, locale))\n\n    return Promise.resolve({\n      data: extendedLogs,\n      total,\n    })\n  },\n} as DataProvider\n\nexport default provider\n","export const ALL_RESULTS = 'l=>true'\n","import { EventOverallView } from \"./event-overall-view\"\n\nconst mapping: Partial<Record<keyof EventOverallView, string>> = {\n  id: 'e=>e.Id',\n  name: 'e=>e.Name',\n  dateStart: 'e=>e.DateStart',\n  dateEnd: 'e=>e.DateEnd'\n}\n\nexport const mapSortOverallViewParam = (key: keyof EventOverallView) => mapping[key]","import { EventDto } from \"../../dto/event.dto\"\nimport { EventOverallView } from \"./event-overall-view\"\n\nexport const mapToEventOverallView = (\n  event: EventDto\n): EventOverallView => ({\n  id: event.id,\n  name: event.name,\n  dateStart: event.dateStart,\n  dateEnd: event.dateEnd\n})","import { DataProvider, GetListResult } from \"react-admin\"\nimport { EVENTS_URL } from '../../api-urls'\nimport { getWithPagination } from '../../common/fetch.utils'\nimport { ALL_RESULTS } from \"../../common/filter.values\"\nimport { NameFilter } from \"../../common/name.filter\"\nimport { EventDto } from \"../../dto/event.dto\"\nimport { EventOverallView } from \"./event-overall-view\"\nimport { mapSortOverallViewParam } from \"./overall-view-list-sort.mapper\"\nimport { mapToEventOverallView } from \"./overall-view-list.mapper\"\n\nconst provider = {\n  getList: async (\n    resource: string,\n    { filter, sort: { order, field }, pagination: { page, perPage } }: NameFilter,\n  ): Promise<GetListResult<EventOverallView>> => {\n    const queryParams: string[] = []\n    queryParams.push(`sortBy=${mapSortOverallViewParam(field)}`)\n    queryParams.push(`sortOrder=${order}`)\n    queryParams.push(`rangeFrom=${page * perPage - perPage}`)\n    queryParams.push(`rangeTo=${page * perPage}`)\n\n    const pathParams = queryParams.reduce((p, c) => `${p}&${c}`)\n    const path = `${filter.name ? `e=>e.Name.Contains(\"${filter.name}\")` : ALL_RESULTS}?${pathParams}`\n\n    const { data, range: { total } } = await getWithPagination<EventDto[]>(\n      `${EVENTS_URL}/GetByConditions/`, path)\n\n    const overallViewList = data.map((event) => mapToEventOverallView(event))\n\n    return {\n      data: overallViewList,\n      total\n    }\n  },\n} as DataProvider\n\nexport default provider","import { BlockDto } from \"../../dto/block.dto\"\nimport { BookingDto } from \"../../dto/booking.dto\"\nimport { EventDto } from \"../../dto/event.dto\"\nimport { ObjectDto } from \"../../dto/object.dto\"\nimport { SeatDto } from \"../../dto/seat.dto\"\nimport { TribuneDto } from \"../../dto/tribune.dto\"\nimport { BookingType } from \"../../enum/BookingType\"\nimport { BlockOverallView, ObjectOverallView, OverallView, TribuneOverallView } from \"./overall-view\"\n\nconst calculateCapacity = (seats: SeatDto[], bookings: BookingDto[]) => (\n  seats.length + bookings.filter(b => b.seatId == null).length\n)\n\nconst mapToBlockOverallView = (\n  block: BlockDto,\n  seats: SeatDto[],\n  bookings: BookingDto[],\n  enteredBookings: BookingDto[]\n): BlockOverallView => ({\n  id: block.id,\n  name: block.name,\n  capacity: calculateCapacity(seats, bookings),\n  sold: bookings.length,\n  entered: enteredBookings.length,\n  soldNormal: bookings.filter(b => b.type === BookingType.NORMAL).length,\n  enteredNormal: enteredBookings.filter(b => b.type === BookingType.NORMAL).length,\n  soldAbo: bookings.filter(b => b.type === BookingType.ABO).length,\n  enteredAbo: enteredBookings.filter(b => b.type === BookingType.ABO).length,\n  soldInfix: bookings.filter(b => b.type === BookingType.INFIX).length,\n  enteredInfix: enteredBookings.filter(b => b.type === BookingType.INFIX).length,\n  soldService: bookings.filter(b => b.type === BookingType.SERVICE).length,\n  enteredService: enteredBookings.filter(b => b.type === BookingType.SERVICE).length,\n  soldPoints: bookings.filter(b => b.type === BookingType.POINTS).length,\n  enteredPoints: enteredBookings.filter(b => b.type === BookingType.POINTS).length,\n})\n\nconst mapToTribuneOverallView = (\n  tribune: TribuneDto,\n  blocks: BlockDto[],\n  seats: SeatDto[],\n  bookings: BookingDto[],\n  enteredBookingIds: number[]\n): TribuneOverallView => ({\n  id: tribune.id,\n  name: tribune.name,\n  capacity: calculateCapacity(seats, bookings),\n  sold: bookings.length,\n  entered: enteredBookingIds.length,\n  blocks: blocks.filter(b => tribune.blocksIds.includes(b.id))\n    .map((block) => {\n      const filteredSeats = seats.filter((s) => s.blockId === block.id)\n      const filteredBookingIds = block.bookingsIds.concat(filteredSeats.flatMap((s) => s.bookingsIds))\n      const filteredBookings = bookings.filter((book) => filteredBookingIds.includes(book.id))\n      const filteredEnteredBookingIds = enteredBookingIds.filter((enteredBookingId) => filteredBookingIds.includes(enteredBookingId))\n      const filteredEnteredBookings = bookings.filter((book) => filteredEnteredBookingIds.includes(book.id))\n      return mapToBlockOverallView(\n        block,\n        filteredSeats,\n        filteredBookings,\n        filteredEnteredBookings\n      )\n    })\n})\n\nconst mapToObjectOverallView = (\n  object: ObjectDto,\n  tribunes: TribuneDto[],\n  blocks: BlockDto[],\n  seats: SeatDto[],\n  bookings: BookingDto[],\n  enteredBookingIds: number[]\n): ObjectOverallView => ({\n  id: object.id,\n  name: object.name,\n  capacity: calculateCapacity(seats, bookings),\n  sold: bookings.length,\n  entered: enteredBookingIds.length,\n  tribunes: tribunes.filter(t => object.tribunesIds.includes(t.id))\n    .map((tribune) => {\n      const filteredBlocks = blocks.filter((b) => b.tribuneId === tribune.id)\n      const filteredSeatIds = filteredBlocks.flatMap((b) => b.seatsIds)\n      const filteredSeats = seats.filter((s) => filteredSeatIds.includes(s.id))\n      const filteredBookingIds = filteredBlocks.flatMap((b) => b.bookingsIds).concat(filteredSeats.flatMap((s) => s.bookingsIds))\n      const filteredBookings = bookings.filter((book) => filteredBookingIds.includes(book.id))\n      const filteredEnteredBookingIds = enteredBookingIds.filter((enteredBookingId) => filteredBookingIds.includes(enteredBookingId))\n      return mapToTribuneOverallView(\n        tribune,\n        filteredBlocks,\n        filteredSeats,\n        filteredBookings,\n        filteredEnteredBookingIds\n      )\n    })\n})\n\nexport const mapToOverallView = (\n  selectedEvent: EventDto,\n  objects: ObjectDto[],\n  tribunes: TribuneDto[],\n  blocks: BlockDto[],\n  seats: SeatDto[],\n  bookings: BookingDto[],\n  enteredBookingIds: number[]\n): OverallView => ({\n  id: selectedEvent.id,\n  eventName: selectedEvent.name,\n  capacity: calculateCapacity(seats, bookings),\n  sold: bookings.length,\n  entered: enteredBookingIds.length,\n  date: selectedEvent.dateStart,\n  objects: objects.filter(o => selectedEvent.objectsIds.includes(o.id))\n    .map((object) => {\n      const filteredTribunes = tribunes.filter((t) => t.objectId === object.id)\n      const filteredBlocks = blocks.filter((b) => filteredTribunes.flatMap((t) => t.blocksIds).includes(b.id))\n      const filteredSeatIds = filteredBlocks.flatMap((b) => b.seatsIds)\n      const filteredSeats = seats.filter((s) => filteredSeatIds.includes(s.id))\n      const filteredBookingIds = filteredBlocks.flatMap((b) => b.bookingsIds).concat(filteredSeats.flatMap((s) => s.bookingsIds))\n      const filteredBookings = bookings.filter((book) => filteredBookingIds.includes(book.id))\n      const filteredEnteredBookingIds = enteredBookingIds.filter((enteredBookingId) => filteredBookingIds.includes(enteredBookingId))\n      return mapToObjectOverallView(\n        object,\n        filteredTribunes,\n        filteredBlocks,\n        filteredSeats,\n        filteredBookings,\n        filteredEnteredBookingIds\n      )\n    })\n})","import { DataProvider, GetOneParams, GetOneResult } from \"react-admin\"\nimport {\n  BLOCKS_URL,\n  BOOKINGS_URL, EVENTS_URL, OBJECTS_URL, SEATS_URL, TRIBUNES_URL\n} from '../../api-urls'\nimport { get, getByConditions } from '../../common/fetch.utils'\nimport { BlockDto } from \"../../dto/block.dto\"\nimport { BookingDto } from \"../../dto/booking.dto\"\nimport { EventDto } from \"../../dto/event.dto\"\nimport { ObjectDto } from \"../../dto/object.dto\"\nimport { SeatDto } from \"../../dto/seat.dto\"\nimport { TribuneDto } from \"../../dto/tribune.dto\"\nimport { OverallView } from \"./overall-view\"\nimport { mapToOverallView } from \"./overall-view.mapper\"\n\nconst provider = {\n  getOne: async (\n    resource: string,\n    { id: eventId }: GetOneParams\n  ): Promise<GetOneResult<OverallView>> => {\n    const pendingSelectedEvent = get<EventDto>(EVENTS_URL, `/${eventId}`)\n    const pendingObjects = getByConditions<ObjectDto>(OBJECTS_URL, `o=>o.Events.Any(e => e.Id.Equals(${eventId}))?sortBy=o=>o.Name&sortOrder=ASC`)\n    const pendingTribunes = getByConditions<TribuneDto>(TRIBUNES_URL, `t=>t.Object.Events.Any(e => e.Id.Equals(${eventId}))?sortBy=t=>t.Name&sortOrder=ASC`)\n    const pendingBlocks = getByConditions<BlockDto>(BLOCKS_URL, `b=>b.Tribune.Object.Events.Any(e => e.Id.Equals(${eventId}))?sortBy=b=>b.Name&sortOrder=ASC`)\n    const pendingSeats = getByConditions<SeatDto>(SEATS_URL, `s=>s.Block.Tribune.Object.Events.Any(e => e.Id.Equals(${eventId}))`)\n    const bookingsCondition = `b=>b.EventId.Equals(${eventId}) && b.Disabled != TicketAPI.Models.Enums.TicketManagement.BookingDisabledOptions.STORNO`\n    const pendingBookings = getByConditions<BookingDto>(BOOKINGS_URL, bookingsCondition)\n    const pendingEnteredBookings = getByConditions<BookingDto>(BOOKINGS_URL,\n      `${bookingsCondition} && b.Tickets.SelectMany(t => t.AccessUsings).Any(au => au.Active == true && au.Direction.Equals(TicketAPI.Models.Enums.DeviceManagement.DeviceDirections.IN))`)\n\n    const [selectedEvent, objects, tribunes, blocks, seats, bookings, enteredBookingIds] =\n      await Promise.all([\n        pendingSelectedEvent,\n        pendingObjects,\n        pendingTribunes,\n        pendingBlocks,\n        pendingSeats,\n        pendingBookings,\n        Promise.all((await Promise.resolve(pendingEnteredBookings)).map(book => book.id))\n      ])\n\n    const overallViewData =\n      Promise.resolve(\n        mapToOverallView(\n          selectedEvent,\n          objects,\n          tribunes,\n          blocks,\n          seats,\n          bookings,\n          enteredBookingIds\n        ))\n\n    return {\n      data: await overallViewData\n    }\n  },\n} as DataProvider\n\nexport default provider","export const buildFilterByIdsCondition = (ids: number[]): string => {\n  const [firstId, ...restIds] = ids\n  return (restIds || []).reduce(\n    (prev, curr) => `${prev as string}||v.Id==${curr}`,\n    `v=>v.Id==${firstId}`,\n  )\n}\n","export const toMapById = <T extends { id: number }>(values: T[]) =>\n  new Map(values.map((v): [number, T] => [v.id, v]))\n\nexport const toUniqueValues = (values: number[]) => Array.from(new Set(values))\n","import { CustomerDto } from '../dto/customer.dto'\nimport { EventDto } from '../dto/event.dto'\nimport { TicketDto } from '../dto/ticket.dto'\nimport { VariantDto } from '../dto/variant.dto'\nimport { TicketDetails } from './ticket-details'\nimport { BookingDto } from '../dto/booking.dto'\nimport { AccessUsingDto } from '../dto/access-using.dto'\nimport { Ticket } from './ticket'\nimport { toMapById } from '../common/mapper.utils'\nimport { BlockDto } from '../dto/block.dto'\nimport { TribuneDto } from '../dto/tribune.dto'\nimport { SeatDto } from '../dto/seat.dto'\nimport { ObjectDto } from '../dto/object.dto'\n\nconst mapToTicket = (\n  { id, ticketCode, ticketType, createdAt, accessUsingsIds }: TicketDto,\n  accessUsingById: Map<number, AccessUsingDto>,\n): Ticket => ({\n  id,\n  ticketCode,\n  ticketType,\n  createdAt,\n  accessUsings: accessUsingsIds.map(\n    (auId) => accessUsingById.get(auId) as AccessUsingDto,\n  ),\n})\n\nexport const mapToTicketDetails = (\n  {\n    id: bookingId,\n    disabled: bookingDisabled,\n    type: bookingType,\n    activeFrom,\n    activeTo,\n    createdAt,\n    modifiedAt,\n    seatId,\n    blockId\n  }: BookingDto,\n  {\n    firstname,\n    lastname,\n    pesel,\n    company,\n    birthdate,\n    documentType,\n    documentNumber,\n    nationality,\n    gender\n  }: CustomerDto,\n  { name: eventName }: EventDto,\n  { name: variantName, accessesIds }: VariantDto,\n  tickets: TicketDto[],\n  accessUsings: AccessUsingDto[],\n  block: BlockDto,\n  tribune: TribuneDto,\n  object: ObjectDto,\n  seat: SeatDto | null\n): TicketDetails => {\n  const accessUsingById = toMapById(accessUsings)\n  return {\n    id: bookingId,\n    firstname,\n    lastname,\n    eventName,\n    pesel,\n    variantName,\n    accessesIds,\n    bookingType,\n    activeFrom,\n    activeTo,\n    tickets: tickets.map((t) => mapToTicket(t, accessUsingById)),\n    createdAt,\n    modifiedAt,\n    bookingDisabled,\n    company,\n    birthdate,\n    documentType,\n    documentNumber,\n    nationality,\n    gender,\n    seatId,\n    blockId,\n    objectName: object?.name || null,\n    tribuneName: tribune?.name || null,\n    blockName: block?.name || null,\n    rowNumber: seat?.rowAlias || null\n  }\n}\n","import { DataProvider, GetOneParams, GetOneResult } from 'react-admin'\nimport {\n  ACCESS_USINGS,\n  BLOCKS_URL,\n  BOOKINGS_URL,\n  CUSTOMERS_URL,\n  EVENTS_URL,\n  OBJECTS_URL,\n  SEATS_URL,\n  TICKETS_URL,\n  TRIBUNES_URL,\n  VARIANTS_URL,\n} from '../api-urls'\nimport { get, getByConditions } from '../common/fetch.utils'\nimport { BookingDto } from '../dto/booking.dto'\nimport { TicketDto } from '../dto/ticket.dto'\nimport { CustomerDto } from '../dto/customer.dto'\nimport { EventDto } from '../dto/event.dto'\nimport { buildFilterByIdsCondition } from '../common/condition.builder'\nimport { mapToTicketDetails } from './ticket-details.mapper'\nimport { VariantDto } from '../dto/variant.dto'\nimport { TicketDetails } from './ticket-details'\nimport { toUniqueValues } from '../common/mapper.utils'\nimport { AccessUsingDto } from '../dto/access-using.dto'\nimport { TribuneDto } from '../dto/tribune.dto'\nimport { BlockDto } from '../dto/block.dto'\nimport { SeatDto } from '../dto/seat.dto'\nimport { ObjectDto } from '../dto/object.dto'\n\nconst fetchTicketsWithAccessUsings = async (ticketIds: number[]) => {\n  const tickets = await getByConditions<TicketDto>(\n    TICKETS_URL,\n    buildFilterByIdsCondition(ticketIds),\n  )\n  const accessUsingIds = tickets.flatMap((t) => t.accessUsingsIds)\n  const accessUsings = accessUsingIds.length\n    ? await getByConditions<AccessUsingDto>(\n        ACCESS_USINGS,\n        buildFilterByIdsCondition(toUniqueValues(accessUsingIds)),\n      )\n    : []\n  return {\n    tickets,\n    accessUsings,\n  }\n}\n\nconst provider = {\n  getOne: async (\n    resource: string,\n    { id: bookingId }: GetOneParams,\n  ): Promise<GetOneResult<TicketDetails>> => {\n    const booking = await get<BookingDto>(BOOKINGS_URL, `/${bookingId}`)\n    const { customerId, eventId, variantId } = booking\n\n    const pendingCustomer = get<CustomerDto>(CUSTOMERS_URL, `/${customerId}`)\n    const pendingEvent = get<EventDto>(EVENTS_URL, `/${eventId}`)\n    const pendingVariant = get<VariantDto>(VARIANTS_URL, `/${variantId}`)\n    const pendingTicketsWithAccessUsings = fetchTicketsWithAccessUsings(\n      booking.ticketsIds,\n    )\n\n    const seat = booking.seatId\n      ? await get<SeatDto>(SEATS_URL, `/${booking.seatId.toString()}`)\n      : null\n    const block = seat\n      ? await get<BlockDto>(BLOCKS_URL, `/${seat.blockId.toString()}`)\n      : await get<BlockDto>(BLOCKS_URL, `/${booking?.blockId?.toString()}`)\n    const tribune = await get<TribuneDto>(\n      TRIBUNES_URL,\n      `/${block.tribuneId.toString()}`,\n    )\n    const object = await get<ObjectDto>(\n      OBJECTS_URL,\n      `/${tribune.objectId.toString()}`,\n    )\n\n    const [customer, event, variant, { tickets, accessUsings }] =\n      await Promise.all([\n        pendingCustomer,\n        pendingEvent,\n        pendingVariant,\n        pendingTicketsWithAccessUsings,\n      ])\n\n    return {\n      data: mapToTicketDetails(\n        booking,\n        customer,\n        event,\n        variant,\n        tickets,\n        accessUsings,\n        block,\n        tribune,\n        object,\n        seat,\n      ),\n    }\n  },\n} as DataProvider\n\nexport default provider\n","import { CustomerDto } from '../dto/customer.dto'\nimport { EventDto } from '../dto/event.dto'\nimport { TicketDto } from '../dto/ticket.dto'\nimport { TicketInfo } from './ticket-info'\nimport { BookingDto } from '../dto/booking.dto'\nimport { toMapById } from '../common/mapper.utils'\n\nexport const mapToTicketBaseInfo = (\n  { firstname, lastname, pesel }: CustomerDto,\n  { id: eventId, name: eventName, dateStart: eventDate }: EventDto,\n  { bookingId, ticketCode, ticketType }: TicketDto,\n): TicketInfo => ({\n  id: bookingId,\n  firstname,\n  lastname,\n  pesel,\n  eventId,\n  eventName,\n  eventDate,\n  ticketCode,\n  ticketType,\n})\n\nexport const mapToTicketBaseInfoList = (\n  bookings: BookingDto[],\n  customers: CustomerDto[],\n  events: EventDto[],\n  tickets: TicketDto[],\n): TicketInfo[] => {\n  const bookingById = toMapById(bookings)\n  const customerById = toMapById(customers)\n  const eventById = toMapById(events)\n  return tickets.map((ticket) => {\n    const { customerId, eventId } = bookingById.get(\n      ticket.bookingId,\n    ) as BookingDto\n    const customer = customerById.get(customerId) as CustomerDto\n    const event = eventById.get(eventId) as EventDto\n    return mapToTicketBaseInfo(customer, event, ticket)\n  })\n}\n","import { DataProvider, GetListResult } from 'react-admin'\nimport {\n  BOOKINGS_URL,\n  CUSTOMERS_URL,\n  EVENTS_URL,\n  TICKETS_URL,\n} from '../api-urls'\nimport { getByConditions } from '../common/fetch.utils'\nimport { BookingDto } from '../dto/booking.dto'\nimport { TicketInfo } from './ticket-info'\nimport { TicketDto } from '../dto/ticket.dto'\nimport { CustomerDto } from '../dto/customer.dto'\nimport { EventDto } from '../dto/event.dto'\nimport { mapToTicketBaseInfoList } from './ticket-info.mapper'\nimport { buildFilterByIdsCondition } from '../common/condition.builder'\nimport { TicketCodeFilter } from '../common/ticket-code.filter'\nimport { toUniqueValues } from '../common/mapper.utils'\n\nconst getByUniqueIds = <T>(baseUrl: string, ids: number[]): Promise<T[]> => {\n  const uniqueIds = toUniqueValues(ids)\n  return getByConditions<T>(baseUrl, buildFilterByIdsCondition(uniqueIds))\n}\n\nconst provider = {\n  getList: async (\n    resource: string,\n    { filter }: TicketCodeFilter,\n  ): Promise<GetListResult<TicketInfo>> => {\n    const filterByTicketCodeCondition = `t=>t.TicketCode==\"${filter.ticketCode}\"`\n    const tickets = await getByConditions<TicketDto>(\n      TICKETS_URL,\n      filterByTicketCodeCondition,\n    )\n\n    const bookingIds = tickets.map((v) => v.bookingId)\n    const bookings = await getByUniqueIds<BookingDto>(BOOKINGS_URL, bookingIds)\n\n    const customerIds = bookings.map((v) => v.customerId)\n    const eventIds = bookings.map((v) => v.eventId)\n\n    const pendingCustomers = getByUniqueIds<CustomerDto>(\n      CUSTOMERS_URL,\n      customerIds,\n    )\n    const pendingEvents = getByUniqueIds<EventDto>(EVENTS_URL, eventIds)\n    const [customers, events] = await Promise.all([\n      pendingCustomers,\n      pendingEvents,\n    ])\n\n    const ticketBaseInfoList = mapToTicketBaseInfoList(\n      bookings,\n      customers,\n      events,\n      tickets,\n    )\n    return Promise.resolve({\n      data: ticketBaseInfoList,\n      total: ticketBaseInfoList.length,\n    })\n  },\n} as DataProvider\n\nexport default provider\n","import { DataProvider, GetListResult } from 'react-admin'\nimport { getByConditions } from '../common/fetch.utils'\nimport { TICKETS_URL } from '../api-urls'\nimport { TicketCodeFilter } from '../common/ticket-code.filter'\nimport { TicketDto } from '../dto/ticket.dto'\n\nconst provider = {\n  getList: async (\n    resource: string,\n    { filter }: TicketCodeFilter,\n  ): Promise<GetListResult<TicketDto>> => {\n    const filterByTicketCodeCondition = `t=>t.TicketCode==\"${filter.ticketCode}\"`\n    const tickets = await getByConditions<TicketDto>(\n      TICKETS_URL,\n      filterByTicketCodeCondition,\n    )\n    return Promise.resolve({\n      data: tickets,\n      total: tickets.length,\n    })\n  },\n} as DataProvider\n\nexport default provider\n","import { Access } from './access'\n\nconst mapping: Partial<\n  Record<\n    keyof Access,\n    (lambdaParameter: string, value: string | number) => string\n  >\n> = {\n  id: (lambdaParameter, value) => value.toString().split(\",\").map((v) => `${v}==${lambdaParameter}.Id`).join(\"&&\"),\n}\n\nexport const getFilterMapper = (key: keyof Access) =>\n  mapping[key] as (lambdaParameter: string, value: string | number) => string\n","import { Access } from './access'\n\nconst mapping: Partial<Record<keyof Access, string>> = {\n  id: 'a=>a.Id',\n}\n\nexport const mapSortAccessParam = (key: keyof Access) => mapping[key]\n","import {\n  DataProvider,\n  GetListResult,\n  GetOneParams,\n  GetOneResult,\n} from 'react-admin'\nimport { ACCESSES_URL, USERS_URL } from '../api-urls'\nimport { getWithPagination, get } from '../common/fetch.utils'\nimport { AccessDto } from '../dto/access.dto'\nimport { UserDto } from '../dto/user.dto'\nimport { Access } from './access'\nimport { getFilterMapper } from './access-filter.mapper'\nimport { mapSortAccessParam } from './access-sort.mapper'\nimport { AccessParams } from './access.params'\n\nconst getFilterParams = (filter: Partial<Access>) => {\n  if (Object.keys(filter).length) {\n    const filterParams = Object.entries(filter).map(([key, value]) => {\n      const mapper = getFilterMapper(key as keyof Access)\n      return mapper('a', value as string)\n    })\n    return filterParams.reduce((p, c) => `${p}&&${c}`)\n  }\n  return 'true'\n}\n\nconst provider = {\n  getList: async (\n    resource: string,\n    {\n      filter,\n      sort: { field, order },\n      pagination: { page, perPage },\n    }: AccessParams,\n  ): Promise<GetListResult<Access>> => {\n    const filterParams = `a=>${getFilterParams(filter).toString()}`\n    const queryParams: string[] = []\n    queryParams.push(`sortBy=${mapSortAccessParam(field)}`)\n    queryParams.push(`sortOrder=${order}`)\n    queryParams.push(`rangeFrom=${page * perPage - perPage}`)\n    queryParams.push(`rangeTo=${page * perPage}`)\n\n    const pathParams = queryParams.reduce((p, c) => `${p}&${c}`)\n    const path = `/${filterParams}?${pathParams}`\n\n    const { data } = await getWithPagination<AccessDto[]>(\n      `${ACCESSES_URL}/GetByConditions`,\n      path,\n    )\n    const accesses = data.map(\n      ({\n        id,\n        name,\n        bonus,\n        entranceId,\n        allowReenter,\n        multipleEntry,\n        multiple,\n        usePriority,\n        isTicketUnlockWithNextDay,\n        releaseTime,\n        releaseDayOfWeek,\n        releaseDayOfMonth,\n        delay,\n        activePeriod,\n        activePeriodStartingFrom,\n        variantsIds,\n        accessDatesIds,\n        createdById,\n        modifiedById,\n        createdAt,\n        modifiedAt,\n      }) =>\n        ({\n          id,\n          name,\n          bonus,\n          entranceId,\n          allowReenter,\n          multipleEntry,\n          multiple,\n          usePriority,\n          isTicketUnlockWithNextDay,\n          releaseTime,\n          releaseDayOfWeek,\n          releaseDayOfMonth,\n          delay,\n          activePeriod,\n          activePeriodStartingFrom,\n          variantsIds,\n          accessDatesIds,\n          createdById,\n          modifiedById,\n          createdAt,\n          modifiedAt,\n        } as Access),\n    )\n\n    return Promise.resolve({\n      data: accesses,\n      total: accesses.length,\n    })\n  },\n  getOne: async (\n    resource: string,\n    { id }: GetOneParams,\n  ): Promise<GetOneResult<Access>> => {\n    const access = await get<AccessDto>(ACCESSES_URL, `/${id}`)\n    const modifiedBy = await get<UserDto>(\n      USERS_URL,\n      access.modifiedById.toString(),\n    )\n    const createdBy =\n      access.modifiedById === access.createdById\n        ? modifiedBy\n        : await get<UserDto>(USERS_URL, access.createdById.toString())\n    return {\n      data: {\n        ...access,\n        modifiedByName: modifiedBy.userName,\n        createdByName: createdBy.userName,\n      },\n    }\n  },\n} as DataProvider\n\nexport default provider\n","import { Event } from './event'\n\nconst mapping: Partial<Record<keyof Event, string>> = {\n  id: 'e=>e.Id',\n  name: 'e=>e.Name',\n  dateStart: 'e=>e.DateStart',\n  dateEnd: 'e=>e.DateEnd',\n  status: 'e=>e.Status'\n}\n\nexport const mapSortEventParam = (key: keyof Event) => mapping[key]\n","import { DataProvider, GetListResult, GetOneParams, GetOneResult, UpdateParams, UpdateResult, GetListParams, Identifier, ValidUntil } from \"react-admin\"\nimport { EVENTS_URL } from \"../api-urls\"\nimport { get, patch, put, getWithPagination } from \"../common/fetch.utils\"\nimport { ALL_RESULTS } from \"../common/filter.values\"\nimport { EventDto } from \"../dto/event.dto\"\nimport { Event } from \"./event\"\nimport { DateTime } from \"../common/date-time\"\nimport { EventStatus } from \"../enum/EventStatus\"\nimport { mapSortEventParam } from './event-sort.mapper'\nimport { EventDevices } from \"../dto/event-devices.dto\"\nimport { EventCompanies } from \"../dto/event-companies.dto\"\nimport { EventObjects } from \"../dto/event-objects.dto\"\n\ntype EventUpdateRequest = {\n  id: number,\n  name?: string,\n  dateStart?: DateTime,\n  dateEnd?: DateTime,\n  status?: EventStatus\n}\n\ninterface EventListParams extends GetListParams {\n  readonly sort: {\n    readonly field: keyof Event\n    readonly order: 'ASC' | 'DESC'\n  }\n  readonly filter:\n  {\n    readonly name: string\n  }\n}\n\nconst provider = {\n  getList: async (\n    resource: string,\n    {\n      filter: { name },\n      sort: { field, order },\n      pagination: { page, perPage }\n    }: EventListParams,\n  ): Promise<GetListResult<Event>> => {\n    const queryParams: string[] = []\n    queryParams.push(`sortBy=${mapSortEventParam(field)}`)\n    queryParams.push(`sortOrder=${order}`)\n    queryParams.push(`rangeFrom=${page * perPage - perPage}`)\n    queryParams.push(`rangeTo=${page * perPage}`)\n    const pathParams = queryParams.reduce((p, c) => `${p}&${c}`)\n    const { data: events, range: { total } } = await getWithPagination<EventDto[]>(`${EVENTS_URL}/GetByConditions/`, `${name ? `e=>e.Name.Contains(\"${name}\")` : ALL_RESULTS}?${pathParams}`)\n\n    const data = events.map((event) => ({\n      id: event.id,\n      name: event.name,\n      dateStart: event.dateStart,\n      dateEnd: event.dateEnd,\n      status: event.status\n    }))\n\n    return Promise.resolve({\n      data,\n      total\n    })\n  },\n  getOne: async (\n    resource: string,\n    { id }: GetOneParams\n  ): Promise<GetOneResult<Event>> => {\n    const event = await get<EventDto>(EVENTS_URL, `/${id}`)\n\n    return {\n      data: event\n    }\n  },\n  update: async (\n    resource: string,\n    { id, data, previousData }: UpdateParams\n  ): Promise<UpdateResult> => {\n    const { name, dateStart, dateEnd } = data\n\n    let eventUpdate = data\n    if (previousData) {\n      const { name: previousName, dateStart: previousDateStart, dateEnd: previousDateEnd } = previousData\n      eventUpdate = await patch<EventUpdateRequest, EventDto>(EVENTS_URL, {\n        id: parseInt(id as string, 10),\n        name: name ?? previousName,\n        dateStart: dateStart ?\n          new Date(new Date(dateStart).getTime() - (new Date(dateStart).getTimezoneOffset() * 60000)).toJSON() as DateTime :\n          previousDateStart,\n        dateEnd: dateEnd ?\n          new Date(new Date(dateEnd).getTime() - (new Date(dateEnd).getTimezoneOffset() * 60000)).toJSON() as DateTime :\n          previousDateEnd\n      })\n    }\n\n    return Promise.resolve({\n      data: { id, ...data, ...eventUpdate }\n    })\n  },\n  activate: async (\n    resource: string,\n    { eventId }: ChangeStateParams\n  ): Promise<ChangeStateResult<ChangeStateResponse>> => {\n    const activate = await put<undefined, ChangeStateResponse>\n      (`${EVENTS_URL}/ActivateAsyncJob/${eventId}`, undefined)\n    return {\n      data: activate\n    }\n  },\n  deactivate: async (\n    resource: string,\n    { eventId }: ChangeStateParams\n  ): Promise<ChangeStateResult<ChangeStateResponse>> => {\n    const deactivate = await put<undefined, ChangeStateResponse>\n      (`${EVENTS_URL}/DeactivateAsyncJob/${eventId}`, undefined)\n    return {\n      data: deactivate\n    }\n  },\n  getCompaniesList: async (\n    resource: string,\n    { eventId }: GetCompaniesParams\n  ): Promise<EventCompaniesResult<EventCompanies>> => {\n    const companies = await put<undefined, EventCompanies>\n      (`${EVENTS_URL}/GetCompanies/${eventId}`, undefined)\n    return {\n      data: companies\n    }\n  },\n  attachCompanies: async (\n    resource: string,\n    params: EventCompanies\n  ): Promise<EventCompaniesResult<EventCompanies>> => {\n    const eventCompanies = await put<EventCompanies, EventCompanies>\n      (`${EVENTS_URL}/AttachCompanies`, params)\n    return {\n      data: eventCompanies\n    }\n  },\n  detachCompanies: async (\n    resource: string,\n    params: EventCompanies\n  ): Promise<EventCompaniesResult<EventCompanies>> => {\n    const eventCompanies = await put<EventCompanies, EventCompanies>\n      (`${EVENTS_URL}/DetachCompanies`, params)\n    return {\n      data: eventCompanies\n    }\n  },\n  attachObjects: async (\n    resource: string,\n    params: EventObjects\n  ): Promise<EventObjectsResult<EventObjects>> => {\n    const eventObjects = await put<EventObjects, EventObjects>\n      (`${EVENTS_URL}/AttachObjects`, params)\n    return {\n      data: eventObjects\n    }\n  },\n  detachObjects: async (\n    resource: string,\n    params: EventObjects\n  ): Promise<EventObjectsResult<EventObjects>> => {\n    const eventObjects = await put<EventObjects, EventObjects>\n      (`${EVENTS_URL}/DetachObjects`, params)\n    return {\n      data: eventObjects\n    }\n  },\n  getDevicesList: async (\n    resource: string,\n    { eventId }: GetDevicesParams\n  ): Promise<EventDevicesResult<EventDevices>> => {\n    const devices = await put<undefined, EventDevices>\n      (`${EVENTS_URL}/GetDevices/${eventId}`, undefined)\n    return {\n      data: devices\n    }\n  },\n  attachDevices: async (\n    resource: string,\n    params: EventDevices\n  ): Promise<EventDevicesResult<EventDevices>> => {\n    const eventDevices = await put<EventDevices, EventDevices>\n      (`${EVENTS_URL}/AttachDevices`, params)\n    return {\n      data: eventDevices\n    }\n  },\n  detachDevices: async (\n    resource: string,\n    params: EventDevices\n  ): Promise<EventDevicesResult<EventDevices>> => {\n    const eventDevices = await put<EventDevices, EventDevices>\n      (`${EVENTS_URL}/DetachDevices`, params)\n    return {\n      data: eventDevices\n    }\n  }\n} as EventDataProvider\n\ninterface EventDataProvider extends DataProvider {\n  activate: (\n    resource: string,\n    params: ChangeStateParams\n  ) => Promise<ChangeStateResult<ChangeStateResponse>>;\n\n  deactivate: (\n    resource: string,\n    params: ChangeStateParams\n  ) => Promise<ChangeStateResult<ChangeStateResponse>>;\n\n  getCompaniesList: (\n    resource: string,\n    params: GetCompaniesParams\n  ) => Promise<EventCompaniesResult<EventCompanies>>;\n\n  attachCompanies: (\n    resource: string,\n    params: EventCompanies\n  ) => Promise<EventCompaniesResult<EventCompanies>>;\n\n  detachCompanies: (\n    resource: string,\n    params: EventCompanies\n  ) => Promise<EventCompaniesResult<EventCompanies>>;\n\n  getObjectsList: (\n    resource: string,\n    params: GetObjectsParams\n  ) => Promise<EventObjectsResult<EventObjects>>;\n\n  attachObjects: (\n    resource: string,\n    params: EventObjects\n  ) => Promise<EventObjectsResult<EventObjects>>;\n\n  detachObjects: (\n    resource: string,\n    params: EventObjects\n  ) => Promise<EventObjectsResult<EventObjects>>;\n\n  getDevicesList: (\n    resource: string,\n    params: GetDevicesParams\n  ) => Promise<EventDevicesResult<EventDevices>>;\n\n  attachDevices: (\n    resource: string,\n    params: EventDevices\n  ) => Promise<EventDevicesResult<EventDevices>>;\n\n  detachDevices: (\n    resource: string,\n    params: EventDevices\n  ) => Promise<EventDevicesResult<EventDevices>>;\n};\n\nexport interface ChangeStateParams {\n  eventId: Identifier;\n}\n\nexport interface ChangeStateResponse {\n  jobId: Identifier;\n}\n\nexport interface ChangeStateResult<RecordType = ChangeStateResponse> {\n  data: RecordType;\n}\n\nexport interface GetCompaniesParams {\n  eventId: Identifier;\n}\n\nexport interface GetObjectsParams {\n  eventId: Identifier;\n}\n\nexport interface GetDevicesParams {\n  eventId: Identifier;\n}\n\nexport interface EventCompaniesResult<RecordType = EventCompanies> {\n  data: RecordType;\n  validUntil?: ValidUntil;\n}\n\nexport interface EventObjectsResult<RecordType = EventObjects> {\n  data: RecordType;\n  validUntil?: ValidUntil;\n}\n\nexport interface EventDevicesResult<RecordType = EventDevices> {\n  data: RecordType;\n  validUntil?: ValidUntil;\n}\n\nexport default provider","import { DataProvider, GetOneParams, GetOneResult } from \"react-admin\"\nimport { CustomerDetails } from \"./customer-details\"\nimport { CustomerDto } from \"../dto/customer.dto\"\nimport { CUSTOMERS_URL } from \"../api-urls\"\nimport { get } from '../common/fetch.utils'\n\nconst provider = {\n  getOne: async (\n    resource: string,\n    { id: customerId }: GetOneParams,\n  ): Promise<GetOneResult<CustomerDetails>> => {\n    const customer = await get<CustomerDto>(CUSTOMERS_URL, `/${customerId}`)\n    return {\n      data: customer as CustomerDetails\n    }\n  }\n} as DataProvider\n\nexport default provider","import { CustomerInfo } from './customer-info'\n\nconst mapping: Partial<Record<keyof CustomerInfo, string>> = {\n  id: 'c=>c.Id',\n  firstname: 'c=>c.Firstname',\n  lastname: 'c=>c.Lastname',\n  pesel: 'c=>c.Pesel',\n  documentNumber: 'c=>c.DocumentNumber'\n}\n\nexport const mapSortCustomerParams = (key: keyof CustomerInfo) => mapping[key]","import { GetListResult, DataProvider } from \"react-admin\";\nimport { CUSTOMERS_URL } from \"../api-urls\";\nimport { getWithPagination } from \"../common/fetch.utils\";\nimport { CustomerDto } from \"../dto/customer.dto\";\nimport { CustomerInfo } from \"./customer-info\";\nimport { mapSortCustomerParams } from \"./customer-info-sort.mapper\";\nimport { CustomerInfoFilter } from \"./customer-info.params\";\n\nconst provider = {\n  getList: async (\n    resource: string,\n    { filter, sort, pagination }: CustomerInfoFilter\n  ): Promise<GetListResult<CustomerInfo>> => {\n    const queryParams: string[] = []\n    if (!!pagination && !!sort) {\n      queryParams.push(`sortBy=${mapSortCustomerParams(sort.field)}`)\n      queryParams.push(`sortOrder=${sort.order}`)\n      queryParams.push(`rangeFrom=${pagination.page * pagination.perPage - pagination.perPage}`)\n      queryParams.push(`rangeTo=${pagination.page * pagination.perPage}`)\n    }\n    else queryParams.push('')\n    const pathParams = queryParams.reduce((p, c) => `${p}&${c}`)\n\n    const filterByCustomerInfoCondition = `c=>${filter.info.split(\" \").map((q) =>\n      `(c.Firstname+c.Lastname+c.Pesel+c.DocumentNumber).Contains(\"${q}\")`).join(\"&&\")}`\n\n    const { data, range: { total } } = await getWithPagination<CustomerDto[]>(\n      `${CUSTOMERS_URL}/GetByConditions/`,\n      `${filterByCustomerInfoCondition}?${pathParams}`\n    )\n\n    return Promise.resolve({\n      data,\n      total\n    })\n  }\n} as DataProvider\n\nexport default provider","import { AccessDateDto } from '../dto/access-date.dto'\n\nconst mapping: Partial<\n  Record<keyof AccessDateDto, (lambdaParameter: string, value: string | number) => string>\n> = {\n  id: (lambdaParameter, value) => value.toString().split(\",\").map((v) => `${v}==${lambdaParameter}.Id`).join(\"&&\"),\n}\n\nexport const getFilterMapper = (key: keyof AccessDateDto) =>\n  mapping[key] as (lambdaParameter: string, value: string | number) => string\n","import { AccessDateDto } from \"../dto/access-date.dto\"\n\nconst mapping: Partial<Record<keyof AccessDateDto, string>> = {\n  id: 'au=>au.Id',\n  activeFrom: 'au=>au.ActiveFrom',\n  activeTo: 'au=>au.ActiveTo',\n  type: 'au=>au.Type'\n}\n\nexport const mapSortAccessDatesParam = (key: keyof AccessDateDto) => mapping[key]","import {\n  DataProvider, GetListResult\n} from 'react-admin'\nimport { AccessDateDto } from '../dto/access-date.dto'\nimport { getFilterMapper } from './access-dates-filter.mapper'\nimport { AccessDatesListParams } from './access-dates-list.params'\nimport { mapSortAccessDatesParam } from './access-dates-sort.mapper'\nimport { getWithPagination } from '../common/fetch.utils'\nimport { ACCESS_DATES } from '../api-urls'\n\nconst getFilterParams = (filter: Partial<AccessDateDto>) => {\n  if (Object.keys(filter).length) {\n    const filterParams = Object.entries(filter).map(([key, value]) => {\n      const mapper = getFilterMapper(key as keyof AccessDateDto)\n      return mapper(\"ad\", value as string)\n    })\n    return filterParams.reduce((p, c) => `${p}&&${c}`)\n  }\n  return \"true\"\n}\n\nconst provider = {\n  getList: async (\n    resource: string,\n    {\n      filter,\n      sort: { field, order },\n      pagination: { page, perPage }\n    }: AccessDatesListParams\n  ): Promise<GetListResult<AccessDateDto>> => {\n    const filterParams = `ad=>${getFilterParams(filter).toString()}`\n    const queryParams: string[] = []\n    queryParams.push(`sortBy=${mapSortAccessDatesParam(field)}`)\n    queryParams.push(`sortOrder=${order}`)\n    queryParams.push(`rangeFrom=${page * perPage - perPage}`)\n    queryParams.push(`rangeTo=${page * perPage}`)\n\n    const pathParams = queryParams.reduce((p, c) => `${p}&${c}`)\n    const path = `/${filterParams}?${pathParams}`\n\n    const {\n      data,\n      range: { total }\n    } = await getWithPagination<AccessDateDto[]>(`${ACCESS_DATES}/GetByConditions`, path)\n\n    return Promise.resolve({\n      data,\n      total\n    })\n  }\n} as DataProvider\n\nexport default provider","import { CompanyDto } from '../dto/company.dto'\nimport { Company } from \"./company\"\n\nexport const mapToCompany = (\n  {\n    id,\n    name,\n    usersIds,\n    eventsIds\n  }: CompanyDto,\n  attached: number[]\n): Company => ({\n  id,\n  name,\n  usersIds,\n  eventsIds,\n  attached: attached.includes(id)\n})","import { Company } from \"./company\"\n\nconst mapping: Partial<\n  Record<\n    keyof Company,\n    (lambdaParameter: string, value: string | number) => string\n  >\n> = {\n  name: (lambdaParameter, value) => `${(lambdaParameter)}.Name.Contains(\"${value}\")`\n}\n\nexport const getFilterMapper = (key: keyof Company) =>\n  mapping[key] as (lambdaParameter: string, value: string | number) => string\n","import { Company } from './company'\n\nconst mapping: Partial<Record<keyof Company, string>> = {\n  id: 'c=>c.Id'\n}\n\nexport const mapSortCompanyParam = (key: keyof Company) => mapping[key]\n","import { DataProvider, GetListResult } from \"react-admin\"\nimport { Company, EventCompany } from \"./company\"\nimport { CompanyListParams } from \"./company-list.params\"\nimport { get, getWithPagination } from \"../common/fetch.utils\"\nimport { COMPANIES_URL, EVENTS_URL } from \"../api-urls\"\nimport { CompanyDto } from \"../dto/company.dto\"\nimport { mapToCompany } from \"./companies.mapper\"\nimport { getFilterMapper } from \"./company-filter.mapper\"\nimport { mapSortCompanyParam } from \"./company-sort.mapper\"\n\nconst getFilterParams = (\n  partialValues: Partial<Company>\n): string => {\n  if (Object.keys(partialValues).length) {\n    const filterParams = Object.entries(partialValues).map(([key, value]) => {\n      const mapper = getFilterMapper(key as keyof Company)\n      return mapper('c', value as string)\n    })\n    return filterParams.reduce((p, c) => `${p}&&${c}`)\n  }\n  return 'true'\n}\n\nconst provider = {\n  getList: async (\n    resource: string,\n    {\n      filter: { event, ...filter },\n      sort: { field, order },\n      pagination: { page, perPage }\n    }: CompanyListParams\n  ): Promise<GetListResult<Company>> => {\n    const attachedCompanies: number[] = []\n    if (event) {\n      const pendingCompanies = await get<EventCompany>(EVENTS_URL, `/GetCompanies/${event}`)\n      attachedCompanies.push(...pendingCompanies.companiesIds)\n    }\n\n    const filterParams = `c=>${getFilterParams(filter)}`\n    const queryParams: string[] = []\n    queryParams.push(`sortBy=${mapSortCompanyParam(field)}`)\n    queryParams.push(`sortOrder=${order}`)\n    queryParams.push(`rangeFrom=${page * perPage - perPage}`)\n    queryParams.push(`rangeTo=${page * perPage}`)\n\n    const pathParams = queryParams.reduce((p, c) => `${p}&${c}`)\n    const path = `/${filterParams}?${pathParams}`\n\n    const {\n      data,\n      range: { total }\n    } = await getWithPagination<CompanyDto[]>(COMPANIES_URL, path)\n    const companies = data.map((dto) => mapToCompany(dto, attachedCompanies))\n\n    return Promise.resolve({\n      data: companies,\n      total\n    })\n  }\n} as DataProvider\n\nexport default provider","import { ObjectDto } from '../dto/object.dto'\nimport { ObjectType } from './object'\n\nexport const mapToObject = (\n  {\n    id,\n    name,\n    tribunesIds,\n    eventsIds\n  }: ObjectDto,\n  attached: number[]\n): ObjectType => ({\n  id,\n  name,\n  tribunesIds,\n  eventsIds,\n  attached: attached.includes(id)\n})","import { ObjectType } from \"./object\"\n\nconst mapping: Partial<\n  Record<\n    keyof ObjectType,\n    (lambdaParameter: string, value: string | number) => string\n  >\n> = {\n  name: (lambdaParameter, value) => `${(lambdaParameter)}.Name.Contains(\"${value}\")`\n}\n\nexport const getFilterMapper = (key: keyof ObjectType) =>\n  mapping[key] as (lambdaParameter: string, value: string | number) => string\n","import { ObjectType } from './object'\n\nconst mapping: Partial<Record<keyof ObjectType, string>> = {\n  id: 'l=>l.Id'\n}\n\nexport const mapSortCompanyParam = (key: keyof ObjectType) => mapping[key]\n","import { DataProvider, GetListResult } from \"react-admin\"\nimport { EventObject, ObjectType } from \"./object\"\nimport { ObjectListParams } from \"./object-list.params\"\nimport { get, getWithPagination } from \"../common/fetch.utils\"\nimport { OBJECTS_URL, EVENTS_URL } from \"../api-urls\"\nimport { ObjectDto } from \"../dto/object.dto\"\nimport { mapToObject } from \"./object.mapper\"\nimport { getFilterMapper } from \"./object-filter.mapper\"\nimport { mapSortCompanyParam } from \"./object-sort.mapper\"\n\nconst getFilterParams = (\n  partialValues: Partial<ObjectType>\n): string => {\n  if (Object.keys(partialValues).length) {\n    const filterParams = Object.entries(partialValues).map(([key, value]) => {\n      const mapper = getFilterMapper(key as keyof ObjectType)\n      return mapper('o', value as string)\n    })\n    return filterParams.reduce((p, c) => `${p}&&${c}`)\n  }\n  return 'true'\n}\n\nconst provider = {\n  getList: async (\n    resource: string,\n    {\n      filter: { event, ...filter },\n      sort: { field, order },\n      pagination: { page, perPage }\n    }: ObjectListParams\n  ): Promise<GetListResult<ObjectType>> => {\n    const attachedObjects: number[] = []\n    if (event) {\n      const pendingEvent = get<EventObject>(EVENTS_URL, `/${event}`)\n      const { objectsIds } = await Promise.resolve(pendingEvent)\n      attachedObjects.push(...objectsIds)\n    }\n\n    const filterParams = `o=>${getFilterParams(filter)}`\n    const queryParams: string[] = []\n    queryParams.push(`sortBy=${mapSortCompanyParam(field)}`)\n    queryParams.push(`sortOrder=${order}`)\n    queryParams.push(`rangeFrom=${page * perPage - perPage}`)\n    queryParams.push(`rangeTo=${page * perPage}`)\n\n    const pathParams = queryParams.reduce((p, c) => `${p}&${c}`)\n    const path = `/${filterParams}?${pathParams}`\n\n    const {\n      data,\n      range: { total }\n    } = await getWithPagination<ObjectDto[]>(`${OBJECTS_URL}/GetByConditions`, path)\n    const companies = data.map((dto) => mapToObject(dto, attachedObjects))\n\n    return Promise.resolve({\n      data: companies,\n      total\n    })\n  }\n} as DataProvider\n\nexport default provider","import { Palm } from \"./palm\"\n\nconst mapping: Partial<\n  Record<\n    keyof Palm,\n    (lambdaParameter: string, value: string | number) => string\n  >\n> = {\n  name: (lambdaParameter, value) => `${(lambdaParameter)}.Name.Contains(\"${value}\")`,\n  categoryId: (lambdaParameter, value) => `${(lambdaParameter)}.CategoryId==${value}`\n}\n\nexport const getFilterMapper = (key: keyof Palm) =>\n  mapping[key] as (lambdaParameter: string, value: string | number) => string","import { Palm } from \"./palm\"\n\nconst mapping: Partial<Record<keyof Palm, string>> = {\n  id: 'l=>l.Id'\n}\n\nexport const mapSortPalmParam = (key: keyof Palm) => mapping[key]\n","import { DataProvider, GetListResult } from \"react-admin\"\nimport { Palm, EventPalm } from \"./palm\"\nimport { PalmListParams } from \"./palm-list.params\"\nimport { get, getWithPagination } from \"../common/fetch.utils\"\nimport { EVENTS_URL, PALMS_URL } from \"../api-urls\"\nimport { getFilterMapper } from \"./palm-filter.mapper\"\nimport { mapSortPalmParam } from \"./palm-sort.mapper\"\nimport { mapToPalms } from \"./palm.mapper\"\nimport { PalmDto } from \"../dto/palm.dto\"\n\nconst getFilterParams = (\n  partialValues: Partial<Palm>\n): string => {\n  if (Object.keys(partialValues).length) {\n    const filterParams = Object.entries(partialValues).map(([key, value]) => {\n      const mapper = getFilterMapper(key as keyof Palm)\n      return mapper('o', value as string)\n    })\n    return filterParams.reduce((p, c) => `${p}&&${c}`)\n  }\n  return 'true'\n}\n\nconst provider = {\n  getList: async (\n    resource: string,\n    {\n      filter: { event, ...filter },\n      sort: { field, order },\n      pagination: { page, perPage }\n    }: PalmListParams\n  ): Promise<GetListResult<Palm>> => {\n    const attachedDevices: number[] = []\n    if (event) {\n      const pendingDevices = await get<EventPalm>(EVENTS_URL, `/GetDevices/${event}`)\n      attachedDevices.push(...pendingDevices.verifierDevicesIds)\n    }\n\n    const filterParams = `o=>${getFilterParams(filter)}`\n    const queryParams: string[] = []\n    queryParams.push(`sortBy=${mapSortPalmParam(field)}`)\n    queryParams.push(`sortOrder=${order}`)\n    queryParams.push(`rangeFrom=${page * perPage - perPage}`)\n    queryParams.push(`rangeTo=${page * perPage - 1}`)\n\n    const pathParams = queryParams.reduce((p, c) => `${p}&${c}`)\n    const path = `/${filterParams}?${pathParams}`\n\n    const {\n      data,\n      range: { total }\n    } = await getWithPagination<PalmDto[]>(`${PALMS_URL}/GetByConditions`, path)\n    const companies = data.map((dto) => mapToPalms(dto, attachedDevices))\n\n    return Promise.resolve({\n      data: companies,\n      total\n    })\n  }\n} as DataProvider\n\nexport default provider","import { PalmDto } from '../dto/palm.dto'\nimport { Palm } from './palm'\n\nexport const mapToPalms = (\n  engine: PalmDto,\n  attached: number[]\n): Palm => ({\n  ...engine,\n  attached: attached.includes(engine.id)\n})","import { Engine } from \"./engine\"\n\nconst mapping: Partial<\n  Record<\n    keyof Engine,\n    (lambdaParameter: string, value: string | number) => string\n  >\n> = {\n  name: (lambdaParameter, value) => `${(lambdaParameter)}.Name.Contains(\"${value}\")`,\n  categoryId: (lambdaParameter, value) => `${(lambdaParameter)}.CategoryId==${value}`\n}\n\nexport const getFilterMapper = (key: keyof Engine) =>\n  mapping[key] as (lambdaParameter: string, value: string | number) => string\n","import { Engine } from './engine'\n\nconst mapping: Partial<Record<keyof Engine, string>> = {\n  id: 'l=>l.Id'\n}\n\nexport const mapSortEngineParam = (key: keyof Engine) => mapping[key]\n","import { DataProvider, GetListResult } from \"react-admin\"\nimport { EngineDto } from \"../dto/engine.dto\"\nimport { Engine, EventEngine } from \"./engine\"\nimport { EngineListParams } from \"./engine-list.params\"\nimport { get, getWithPagination } from \"../common/fetch.utils\"\nimport { ENGINES_URL, EVENTS_URL } from \"../api-urls\"\nimport { getFilterMapper } from \"./engine-filter.mapper\"\nimport { mapSortEngineParam } from \"./engine-sort.mapper\"\nimport { mapToEvents } from \"./engine.mapper\"\n\nconst getFilterParams = (\n  partialValues: Partial<Engine>\n): string => {\n  if (Object.keys(partialValues).length) {\n    const filterParams = Object.entries(partialValues).map(([key, value]) => {\n      const mapper = getFilterMapper(key as keyof Engine)\n      return mapper('o', value as string)\n    })\n    return filterParams.reduce((p, c) => `${p}&&${c}`)\n  }\n  return 'true'\n}\n\nconst provider = {\n  getList: async (\n    resource: string,\n    {\n      filter: { event, ...filter },\n      sort: { field, order },\n      pagination: { page, perPage }\n    }: EngineListParams\n  ): Promise<GetListResult<Engine>> => {\n    const attachedDevices: number[] = []\n    if (event) {\n      const pendingDevices = await get<EventEngine>(EVENTS_URL, `/GetDevices/${event}`)\n      attachedDevices.push(...pendingDevices.verifierDevicesIds)\n    }\n\n    const filterParams = `o=>${getFilterParams(filter)}`\n    const queryParams: string[] = []\n    queryParams.push(`sortBy=${mapSortEngineParam(field)}`)\n    queryParams.push(`sortOrder=${order}`)\n    queryParams.push(`rangeFrom=${page * perPage - perPage}`)\n    queryParams.push(`rangeTo=${page * perPage - 1}`)\n\n    const pathParams = queryParams.reduce((p, c) => `${p}&${c}`)\n    const path = `/${filterParams}?${pathParams}`\n\n    const {\n      data,\n      range: { total }\n    } = await getWithPagination<EngineDto[]>(`${ENGINES_URL}/GetByConditions`, path)\n    const companies = data.map((dto) => mapToEvents(dto, attachedDevices))\n\n    return Promise.resolve({\n      data: companies,\n      total\n    })\n  }\n} as DataProvider\n\nexport default provider","import { EngineDto } from '../dto/engine.dto'\nimport { Engine } from './engine'\n\nexport const mapToEvents = (\n  engine: EngineDto,\n  attached: number[]\n): Engine => ({\n  ...engine,\n  attached: attached.includes(engine.id)\n})","import { DataProvider, sanitizeFetchType } from 'react-admin'\nimport accessUsingsProvider from './access-usings/access-usings.provider'\nimport bookingsProvider from './bookings/bookings.provider'\nimport logsProvider from './logs/extended-logs.provider'\nimport { ResourceName } from './ResourceName'\nimport statsOverallViewListProvider from './stats/overall-view/overall-view-list.provider'\nimport statsOverallViewProvider from './stats/overall-view/overall-view.provider'\nimport ticketDetailsProvider from './ticket-details/ticket-details.provider'\nimport ticketInfoProvider from './ticket-info/ticket-info.provider'\nimport ticketsProvider from './tickets/tickets.provider'\nimport accessesProvider from './accesses/access.provider'\nimport eventsProvider from './events/event.provider'\nimport customersDetailsProvider from './customer-details/customer-details.provider'\nimport customersInfoProvider from './customer-info/customer-info.provider'\nimport accessDatesProvider from './access-dates/access-dates.provider'\nimport companiesProvider from './companies/companies.provider'\nimport objectsProvider from './objects/objects.provider'\nimport palmProvider from './palms/palms.provider'\nimport engineProvider from './engines/engines.provider'\n\nconst dataProviders: Record<ResourceName, DataProvider> = {\n  [ResourceName.ACCESS_DATES]: accessDatesProvider,\n  [ResourceName.ACCESSES]: accessesProvider,\n  [ResourceName.ACCESS_USINGS]: accessUsingsProvider,\n  [ResourceName.BOOKINGS]: bookingsProvider,\n  [ResourceName.COMPANIES]: companiesProvider,\n  [ResourceName.CUSTOMER_DETAILS]: customersDetailsProvider,\n  [ResourceName.CUSTOMER_INFO]: customersInfoProvider,\n  [ResourceName.ENGINES]: engineProvider,\n  [ResourceName.EVENTS]: eventsProvider,\n  [ResourceName.LOGS]: logsProvider,\n  [ResourceName.OBJECTS]: objectsProvider,\n  [ResourceName.PALMS]: palmProvider,\n  [ResourceName.TICKETS]: ticketsProvider,\n  [ResourceName.TICKET_INFO]: ticketInfoProvider,\n  [ResourceName.TICKET_DETAILS]: ticketDetailsProvider,\n  [ResourceName.TICKET_LOGS]: logsProvider,\n  [ResourceName.STATS_OVERALL_VIEW]: statsOverallViewProvider,\n  [ResourceName.STATS_OVERALL_VIEW_LIST]: statsOverallViewListProvider,\n}\n\nexport default (\n  fetchType: string,\n  resource: string,\n  params: unknown,\n): Promise<unknown> => {\n  const selectedProvider = dataProviders[resource as ResourceName]\n  const type = sanitizeFetchType(fetchType)\n  return selectedProvider[type](resource, params)\n}\n","import i18n from 'i18next'\n\nconst provider = {\n  translate: (key: string, options: any): string => i18n.t(key, options),\n  changeLocale: async (locale: string): Promise<void> => {\n    const identity = localStorage.getItem('username') as string\n    localStorage.setItem(`${identity}.lng`, locale)\n    await i18n.changeLanguage(locale)\n  },\n  getLocale: (): string => i18n.language,\n}\n\nexport default provider","import { defaultTheme } from 'react-admin'\nimport { deepPurple, green } from '@material-ui/core/colors'\nimport { ThemeOptions } from '@material-ui/core'\n\nconst overriddenTheme: ThemeOptions = {\n  ...defaultTheme,\n  typography: {\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Arial',\n      'sans-serif',\n    ].join(','),\n    body1: {\n      fontWeight: 300,\n    },\n    body2: {\n      fontWeight: 300,\n    },\n    h5: {\n      fontWeight: 200,\n    },\n  },\n}\n\nexport const LightTheme: ThemeOptions = {\n  ...overriddenTheme,\n  palette: {\n    primary: deepPurple,\n    secondary: green,\n    type: 'light'\n  },\n}\n\nexport const DarkTheme: ThemeOptions = {\n  ...overriddenTheme,\n  palette: {\n    primary: {\n      light: deepPurple[100],\n      main: deepPurple[200],\n      dark: deepPurple[300],\n      contrastText: '#F1F1F1'\n    },\n    secondary: green,\n    type: 'dark'\n  },\n\n}","import { MenuItem, Collapse, Tooltip, ListItemIcon, Typography, List } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ExpandMore } from '@material-ui/icons';\nimport React, { ReactElement, ReactNode } from 'react';\nimport { useSelector } from 'react-redux';\nimport { ReduxState } from 'react-admin';\n\nconst useStyles = makeStyles(theme => ({\n  icon: {\n    minWidth: theme.spacing(5)\n  },\n  sidebarIsOpen: {\n    '& a': {\n      transition: 'padding-left 195ms cubic-bezier(0.4, 0, 0.6, 1) 0ms',\n      paddingLeft: theme.spacing(4),\n    },\n  },\n  sidebarIsClosed: {\n    '& a': {\n      transition: 'padding-left 195ms cubic-bezier(0.4, 0, 0.6, 1) 0ms',\n      paddingLeft: theme.spacing(2),\n    },\n  },\n}));\n\ninterface SubMenuProps {\n  handleToggle: () => void\n  icon: ReactElement\n  isOpen: boolean\n  name: string\n  children: ReactNode\n}\n\nexport const SubMenu = (props: SubMenuProps) => {\n  const { handleToggle, icon, isOpen, name, children } = props\n  const sidebarOpen = useSelector((state: ReduxState) => state?.admin.ui.sidebarOpen)\n  const classes = useStyles()\n\n  const header = (\n    <MenuItem button onClick={handleToggle}>\n      <ListItemIcon className={classes.icon}>\n        {isOpen ? <ExpandMore /> : icon}\n      </ListItemIcon>\n      <Typography variant=\"inherit\" color=\"textSecondary\">\n        {name}\n      </Typography>\n    </MenuItem>\n  )\n\n  return (\n    <>\n      {sidebarOpen || isOpen ? (\n        header\n      ) : (\n        <Tooltip title={name} placement=\"right\">\n          {header}\n        </Tooltip>\n      )}\n      <Collapse in={isOpen} timeout=\"auto\" unmountOnExit>\n        <List\n          component=\"div\"\n          disablePadding\n          className={sidebarOpen ? classes.sidebarIsOpen : classes.sidebarIsClosed}>\n          {children}\n        </List>\n      </Collapse>\n    </>\n  )\n}\n","import { makeStyles } from '@material-ui/core/styles';\nimport { ViewComfy, Receipt, List, Sort, Person, Event } from '@material-ui/icons';\nimport React, { useState } from 'react';\nimport { DashboardMenuItem, MenuItemLink, useTranslate, ReduxState } from 'react-admin';\nimport { useSelector } from 'react-redux';\nimport { SubMenu } from './AppSubmenu';\n\nconst useStyles = makeStyles({\n  open: {\n    width: \"240px\",\n  },\n  closed: {\n    width: \"55px\"\n  },\n});\n\nexport const AppMenu = () => {\n  const sidebarOpen = useSelector((state: ReduxState) => state.admin.ui.sidebarOpen)\n  const theme = useStyles()\n  const [open, setOpen] = useState({\n    menuStats: true\n  })\n  const translate = useTranslate()\n\n  const handleToggle = (menu: \"menuStats\") => setOpen(state => ({ ...state, [menu]: !state[menu] }))\n\n  return (\n    <div\n      style={{ userSelect: \"none\" }}\n      className={sidebarOpen ? theme.open : theme.closed}>\n      <DashboardMenuItem />\n      <MenuItemLink\n        to=\"/ticket-info\"\n        primaryText={translate('resources.ticket-info.name')}\n        leftIcon={<Receipt />} />\n      <MenuItemLink\n        to=\"/customer-info\"\n        primaryText={translate('resources.customer-info.name')}\n        leftIcon={<Person />} />\n      <MenuItemLink\n        to=\"/logs\"\n        primaryText={translate('resources.logs.name')}\n        leftIcon={<List />} />\n      <MenuItemLink\n        to=\"/events\"\n        primaryText={translate('resources.events.name')}\n        leftIcon={<Event />} />\n      <SubMenu\n        handleToggle={() => handleToggle(\"menuStats\")}\n        isOpen={open.menuStats}\n        name={translate('side-menu.stats.name')}\n        icon={<ViewComfy />}>\n        <MenuItemLink\n          to=\"/stats-overall-view-list\"\n          primaryText={translate('side-menu.stats.overall-view')}\n          leftIcon={<Sort style={{ transform: \"scaleX(-1)\" }} />} />\n      </SubMenu>\n    </div>\n  )\n}","import { Typography } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Settings } from '@material-ui/icons'\nimport React from 'react'\nimport { AppBar, AppBarProps, CoreLayoutProps, Layout, UserMenu, UserMenuProps, MenuItemLink, useTranslate } from 'react-admin'\nimport { useSelector } from 'react-redux'\nimport { DarkTheme, LightTheme } from '../../app.theme'\nimport { ThemeState } from '../../core/common/theme.reducer'\nimport { AppMenu } from './AppMenu'\n\nconst useStyles = makeStyles({\n  title: {\n    flex: 1,\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n  },\n})\n\nconst AppUserMenu = (props: UserMenuProps) => {\n  const translate = useTranslate()\n  return (\n    <UserMenu {...props}>\n      <MenuItemLink\n        to=\"/configuration\"\n        primaryText={translate(\"settings.name\")}\n        leftIcon={<Settings />} />\n    </UserMenu>\n  )\n}\n\nconst AppTopBar = (props: AppBarProps) => {\n  const classes = useStyles()\n  return (\n    <AppBar {...props} userMenu={<AppUserMenu />}>\n      <Typography\n        variant=\"h6\"\n        className={classes.title}\n        id=\"react-admin-title\"\n      />\n    </AppBar>\n  )\n}\n\nexport const AppLayout = (props: CoreLayoutProps) => {\n  const theme = useSelector((state: ThemeState) =>\n    state.theme.darkMode === 'dark' ? DarkTheme : LightTheme,\n  )\n\n  return (\n    <Layout\n      {...props}\n      menu={AppMenu}\n      appBar={AppTopBar}\n      theme={theme} />)\n}\n","import * as React from 'react'\nimport { useListContext } from 'react-admin';\nimport { Button, Toolbar, Grid, Paper, ButtonGroup, Select, MenuItem } from '@material-ui/core';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\n\nexport const MobilePostPagination = () => {\n  const { page, perPage, total, setPage, setPerPage } = useListContext();\n  const nbPages = Math.ceil(total / perPage) || 1;\n  return (\n      nbPages > 1 ?\n        <Toolbar>\n          <Grid container>\n            <Grid item xs={3}>\n            <Paper elevation={0}\n              style={{height: '100%', display: 'flex', flexDirection: 'row', justifyContent: 'flex-end', alignItems: 'center'}}>\n              <Select value={perPage} style={{width: '100%', height: '70%', textAlign: 'center'}} variant='outlined'\n              onChange={e => setPerPage(parseInt(e.target.value as string, 10))}>\n                <MenuItem value={20}> 20 </MenuItem>\n                <MenuItem value={50}> 50 </MenuItem>\n                <MenuItem value={100}> 100 </MenuItem>\n              </Select>\n            </Paper>\n            </Grid>\n            <Grid item xs={4} />\n            <Grid item xs={5}>\n              <Paper elevation={0}\n              style={{height: '100%', display: 'flex', flexDirection: 'row', justifyContent: 'flex-end', alignItems: 'center'}}>\n                <ButtonGroup style={{height: '70%'}}>\n                  {page > 1 ?\n                    <Button variant=\"outlined\" color=\"primary\" key=\"prev\" onClick={() => setPage(page - 1)}>\n                      <ChevronLeft />\n                    </Button> :\n                    <Button variant=\"outlined\" color=\"primary\" disabled>\n                      <ChevronLeft />\n                    </Button> \n                  }\n                  <Button disabled variant=\"contained\"> {page} </Button>\n                  {page !== nbPages ?\n                    <Button variant=\"outlined\" color=\"primary\" key=\"next\" onClick={() => setPage(page + 1)}>\n                      <ChevronRight />\n                    </Button> :\n                    <Button variant=\"outlined\" color=\"primary\" disabled>\n                      <ChevronRight />\n                    </Button>\n                  }\n                </ButtonGroup>\n              </Paper>\n            </Grid>\n          </Grid>\n        </Toolbar> :\n        <div />\n  );\n}","import * as React from 'react'\nimport { TextField, makeStyles, Theme, createStyles } from '@material-ui/core'\nimport { useField } from 'react-final-form'\nimport ArrowRightAltIcon from '@material-ui/icons/ArrowRightAlt'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      display: 'flex',\n      justifyContent: 'center',\n      verticalAlign: 'center',\n      marginBottom: theme.spacing(1)\n    }\n  })\n)\n\nexport const DateFilterInput = ({ source }: { source: string }) => {\n  const classes = useStyles()\n  const defaultFromDate = React.useMemo(() => new Date(Date.now() - 2678400000), [])\n  defaultFromDate.setHours(0, 0, 0, 0)\n  const defaultToDate = new Date(Date.now())\n  defaultToDate.setHours(23, 59, 0, 0)\n  const [dateFrom, setDateFrom] = React.useState(\n    defaultFromDate.getTime().toString(),\n  )\n  const [dateTo, setDateTo] = React.useState(defaultToDate.getTime().toString())\n  const {\n    input: { onChange },\n    meta: { touched, error },\n  } = useField(source)\n\n  React.useEffect(() => {\n    onChange([\n      (parseInt(dateFrom, 10) - (defaultFromDate.getTimezoneOffset() * 60000)).toString(),\n      (parseInt(dateTo, 10) - (defaultFromDate.getTimezoneOffset() * 60000)).toString()].join(';'))\n  }, [dateFrom, dateTo, onChange, defaultFromDate])\n\n  const convertedDate = (date: Date) =>\n    new Date(date.getTime() - (defaultFromDate.getTimezoneOffset() * 60000)).toJSON().substring(0, 16)\n\n  return (\n    <span\n      key=\"date\"\n      className={classes.container}\n    >\n      <TextField\n        variant=\"filled\"\n        defaultValue={convertedDate(defaultFromDate)}\n        name={source}\n        type=\"datetime-local\"\n        onChange={(e) => setDateFrom(Date.parse(e.target.value).toString())}\n        error={!!(touched && error)}\n        helperText={touched && error}\n        style={{ alignSelf: 'center' }}\n        size=\"small\"\n      />\n      <ArrowRightAltIcon style={{ marginTop: '4%' }} />\n      <TextField\n        variant=\"filled\"\n        defaultValue={convertedDate(defaultToDate)}\n        name={source}\n        type=\"datetime-local\"\n        onChange={(e) => setDateTo(Date.parse(e.target.value).toString())}\n        error={!!(touched && error)}\n        helperText={touched && error}\n        size=\"small\"\n      />\n    </span>\n  )\n}\n","import { Button, Grid, TableCell, withStyles } from '@material-ui/core'\n\nexport const BookingButton = withStyles({\n  root: {\n    width: '100%',\n    backgroundColor: 'rgb(220, 220, 220)',\n    boxShadow: '0px 0px 3px',\n    '&:hover': {\n      backgroundColor: 'rgb(220, 230, 230)',\n    },\n  },\n})(Button)\n\nexport const FullWidthButton = withStyles({\n  root: {\n    width: '100%',\n  },\n})(Button)\n\nexport const CenterGrid = withStyles({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'column',\n  },\n})(Grid)\n\nexport const NoPaddingCell = withStyles({\n  root: {\n    paddingBottom: 0,\n    paddingTop: 0,\n  },\n})(TableCell)\n","import React, { CSSProperties, useEffect, useState } from 'react'\nimport {\n  Collapse,\n  Grid,\n  Hidden,\n  IconButton,\n  TableCell,\n  TableRow,\n} from '@material-ui/core'\nimport { DateField, TextField, useTranslate } from 'react-admin'\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown'\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp'\nimport { useHistory } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport { ResourceName } from '../../core/ResourceName'\nimport { BookingButton, CenterGrid, NoPaddingCell } from './LogsComponents'\nimport { ExtendedLog } from '../../core/logs/extended-log'\nimport { ThemeState } from '../../core/common/theme.reducer'\nimport { getContrastColor } from '../../core/common/visual.utils'\n\ninterface LogRowProps {\n  readonly compactMode: boolean\n  readonly noBooking: boolean\n  readonly data: ExtendedLog\n}\n\nexport const LogRow = (props: LogRowProps) => {\n  const { data, compactMode, noBooking } = props\n  const [open, setOpen] = useState(false)\n  const history = useHistory()\n  const isDarkMode = useSelector(\n    (state: ThemeState) => state.theme.darkMode === 'dark',\n  )\n  const t = useTranslate()\n\n  useEffect(() => {\n    setOpen(false)\n  }, [data])\n\n  const defineStyle = () => {\n    if (\n      (!isDarkMode && data.color === 'transparent') ||\n      getContrastColor(data.color) === 'black'\n    ) {\n      return { color: 'black', fontWeight: 'normal' } as CSSProperties\n    }\n    return { color: 'white', fontWeight: 'bold' } as CSSProperties\n  }\n\n  return (\n    <>\n      <TableRow style={{ backgroundColor: data.color }}>\n        <Hidden mdUp={!compactMode}>\n          <TableCell>\n            <IconButton onClick={() => setOpen((v) => !v)}>\n              {open ? (\n                <ArrowDropUpIcon style={defineStyle()} />\n              ) : (\n                <ArrowDropDownIcon style={defineStyle()} />\n              )}\n            </IconButton>\n          </TableCell>\n        </Hidden>\n        <TableCell>\n          <DateField\n            record={data}\n            source=\"date\"\n            showTime\n            style={defineStyle()}\n          />\n        </TableCell>\n        <TableCell>\n          <TextField record={data} source=\"deviceName\" style={defineStyle()} />\n        </TableCell>\n        <TableCell>\n          <TextField record={data} source=\"ticketCode\" style={defineStyle()} />\n        </TableCell>\n        <Hidden smDown xlDown={compactMode}>\n          <TableCell>\n            <TextField\n              record={data}\n              source=\"text\"\n              sortable={false}\n              style={defineStyle()}\n            />\n          </TableCell>\n        </Hidden>\n        <Hidden smDown xlDown={compactMode || noBooking}>\n          <TableCell>\n            {data.bookingId == null ? (\n              <div />\n            ) : (\n              <BookingButton\n                onClick={() =>\n                  history.push({\n                    pathname: `/${ResourceName.TICKET_DETAILS}/${data.bookingId}/show`,\n                  })\n                }\n              >\n                {data.bookingId}\n              </BookingButton>\n            )}\n          </TableCell>\n        </Hidden>\n      </TableRow>\n      <Hidden mdUp={!compactMode}>\n        <TableRow>\n          <NoPaddingCell colSpan={4}>\n            <Collapse in={open}>\n              <Grid\n                container\n                style={{ marginTop: '1%', marginBottom: '1%' }}\n                item\n              >\n                <Hidden xlDown={noBooking}>\n                  <CenterGrid item xs={5}>\n                    {`${t('resources.logs.fields.bookingId')}:`}\n                  </CenterGrid>\n                  <CenterGrid item xs={7}>\n                    {data.bookingId == null ? (\n                      <div />\n                    ) : (\n                      <BookingButton\n                        onClick={() =>\n                          history.push({\n                            pathname: `/${ResourceName.TICKET_DETAILS}/${data.bookingId}/show`,\n                          })\n                        }\n                      >\n                        {data.bookingId}\n                      </BookingButton>\n                    )}\n                  </CenterGrid>\n                  <hr\n                    style={{\n                      width: '90%',\n                      marginTop: '1%',\n                      marginBottom: '1%',\n                    }}\n                  />\n                </Hidden>\n                <CenterGrid item xs={5}>\n                  {`${t('resources.logs.fields.description')}:`}\n                </CenterGrid>\n                <CenterGrid item xs={7}>\n                  {data.text}\n                </CenterGrid>\n              </Grid>\n            </Collapse>\n          </NoPaddingCell>\n        </TableRow>\n      </Hidden>\n    </>\n  )\n}\n","export const getContrastColor = (hexcolor: string) => {\n    const r = parseInt(hexcolor.substr(1, 2), 16);\n    const g = parseInt(hexcolor.substr(3, 2), 16);\n    const b = parseInt(hexcolor.substr(5, 2), 16);\n    const yiq = ((r * 299) + (g * 587) + (b * 114)) / 1000;\n    return (yiq >= 128) ? 'black' : 'white';\n  }","import React from 'react'\nimport {\n  Hidden,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from '@material-ui/core'\nimport { useListContext, useListSortContext, useTranslate } from 'react-admin'\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward'\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward'\nimport { ExtendedLog } from '../../core/logs/extended-log'\nimport { FullWidthButton } from './LogsComponents'\nimport { LogRow } from './LogRow'\n\ninterface LogGridProps {\n  readonly compactMode: boolean\n  readonly noBooking: boolean\n}\n\nexport const LogGrid = (props: LogGridProps) => {\n  const { compactMode, noBooking } = props\n  const { ids, data } = useListContext()\n  const { currentSort, setSort } = useListSortContext()\n  const t = useTranslate()\n\n  const inverseOrder = (order: string) => (order === 'ASC' ? 'DESC' : 'ASC')\n\n  const handleSortChange = (sortBy: string) => {\n    setSort(\n      sortBy,\n      sortBy === currentSort.field ? inverseOrder(currentSort.order) : 'DESC',\n    )\n  }\n\n  const HeaderCell = (name: string, display: string) => (\n    <>\n      {currentSort.field === name ? (\n        <FullWidthButton\n          startIcon={\n            currentSort.order === 'ASC' ? (\n              <ArrowUpwardIcon />\n            ) : (\n              <ArrowDownwardIcon />\n            )\n          }\n        >\n          {t(display)}\n        </FullWidthButton>\n      ) : (\n        <FullWidthButton>{t(display)}</FullWidthButton>\n      )}\n    </>\n  )\n\n  return (\n    <TableContainer component={Paper}>\n      <Table\n        aria-label=\"a dense table\"\n        size=\"small\"\n        padding={compactMode ? 'none' : 'default'}\n      >\n        <TableHead>\n          <TableRow>\n            <Hidden mdUp={!compactMode}>\n              <TableCell style={{ width: '3%' }} />\n            </Hidden>\n            <TableCell\n              onClick={() => handleSortChange('date')}\n              style={{ width: '10%' }}\n            >\n              {HeaderCell('date', 'resources.logs.fields.date')}\n            </TableCell>\n            <TableCell\n              onClick={() => handleSortChange('deviceName')}\n              style={{ width: '15%' }}\n            >\n              {HeaderCell('deviceName', 'resources.logs.fields.deviceName')}\n            </TableCell>\n            <TableCell\n              onClick={() => handleSortChange('ticketCode')}\n              style={{ width: '25%' }}\n            >\n              {HeaderCell('ticketCode', 'resources.logs.fields.ticketCode')}\n            </TableCell>\n            <Hidden smDown xlDown={compactMode}>\n              <TableCell style={{ textAlign: 'center', width: '25%' }}>\n                {t('resources.logs.fields.description').toUpperCase()}\n              </TableCell>\n            </Hidden>\n            <Hidden smDown xlDown={compactMode || noBooking}>\n              <TableCell\n                onClick={() => handleSortChange('bookingId')}\n                style={{ width: '15%' }}\n              >\n                {HeaderCell('bookingId', 'resources.logs.fields.bookingId')}\n              </TableCell>\n            </Hidden>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {ids.map((id) => (\n            <LogRow\n              key={id}\n              data={data[id] as ExtendedLog}\n              compactMode={compactMode}\n              noBooking={noBooking}\n            />\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n","import { useMediaQuery, useTheme } from '@material-ui/core'\nimport React from 'react'\nimport {\n  Filter,\n  FilterProps,\n  List,\n  ListProps,\n  Pagination,\n  SelectInput,\n  TextInput,\n  useLocale,\n  useTranslate,\n} from 'react-admin'\nimport { MobilePostPagination } from '../common/Pagination'\nimport { DateFilterInput } from './DateFilterInput'\nimport { LogGrid } from './LogGrid'\n\ninterface LogListProps extends ListProps {\n  readonly compactMode?: boolean\n  readonly noBooking?: boolean\n}\n\nconst ListFilters = (props: Omit<FilterProps, 'children'>) => {\n  const t = useTranslate()\n  return (\n    <Filter {...props}>\n      <TextInput source=\"ticketCode\" alwaysOn />\n      <SelectInput\n        label={t('resources.logs.filters.deviceName')}\n        source=\"deviceName\"\n        choices={[\n          {\n            id: 'Czytnik',\n            name: t('resources.logs.fields.deviceNameChoices.reader'),\n          },\n          {\n            id: 'Przej\\u015Bcie',\n            name: t('resources.logs.fields.deviceNameChoices.gateway'),\n          },\n        ]}\n      />\n      <DateFilterInput source=\"date\" key=\"date\" />\n      <TextInput source=\"bookingId\" />\n      <TextInput source=\"event\" />\n    </Filter>\n  )\n}\n\nexport const LogList = ({\n  compactMode = false,\n  noBooking = false,\n  ...props\n}: LogListProps) => {\n  const { filter, ...listProps } = props\n  const theme = useTheme()\n  const smallScreen = useMediaQuery(theme.breakpoints.down('sm'))\n  const locale = useLocale()\n  return (\n    <List\n      perPage={20}\n      exporter={false}\n      pagination={\n        smallScreen ? (\n          <MobilePostPagination />\n        ) : (\n          <Pagination rowsPerPageOptions={[20, 50, 100]} />\n        )\n      }\n      filters={<ListFilters />}\n      filter={{ ...filter, locale }}\n      sort={{ field: 'date', order: 'DESC' }}\n      {...listProps}\n    >\n      <LogGrid compactMode={compactMode} noBooking={noBooking} />\n    </List>\n  )\n}","import React from \"react\"\nimport { ListProps, List, useListContext, Pagination, useTranslate, FunctionField, Record, TextField } from \"react-admin\"\nimport { TableContainer, Table, TableHead, TableBody, TableRow, TableCell, useMediaQuery, useTheme } from \"@material-ui/core\"\nimport { useHistory } from \"react-router\"\nimport { MobilePostPagination } from '../common/Pagination'\nimport { ResourceName } from \"../../core/ResourceName\"\n\nconst BookingGrid = () => {\n  const { data, ids } = useListContext()\n  const history = useHistory()\n  const translate = useTranslate()\n  return (\n    <TableContainer>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>{translate(`resources.bookings.fields.eventId`)}</TableCell>\n            <TableCell>{translate(`resources.bookings.fields.id`)}</TableCell>\n            <TableCell>{translate(`resources.bookings.fields.variantName`)}</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {ids.map(id =>\n            <TableRow key={id} style={{ cursor: \"pointer\" }}>\n              <TableCell onClick={() =>\n                history.push({ pathname: `/${ResourceName.TICKET_DETAILS}/${id}/show`, })\n              }>\n                <FunctionField record={data[id]} render={(record: Record | undefined) => (\n                  `${record?.eventId}. ${record?.eventName} ${record?.eventDateStart.replace(\"T\", \" \").substring(0, 19)}`\n                )} />\n              </TableCell>\n              <TableCell onClick={() =>\n                history.push({ pathname: `/${ResourceName.TICKET_DETAILS}/${id}/show`, })\n              }>\n                <TextField record={data[id]} source=\"id\" />\n              </TableCell>\n              <TableCell onClick={() =>\n                history.push({ pathname: `/${ResourceName.TICKET_DETAILS}/${id}/show`, })\n              }>\n                <TextField record={data[id]} source=\"variantName\" />\n              </TableCell>\n            </TableRow>\n          )}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n\nexport const BookingList = (props: ListProps) => {\n  const theme = useTheme()\n  return (\n    <List\n      perPage={20}\n      exporter={false}\n      pagination={\n        useMediaQuery(theme.breakpoints.up('md')) ? (\n          <Pagination rowsPerPageOptions={[20, 50, 100]} />\n        ) : (\n          <MobilePostPagination />\n        )\n      }\n      sort={{ field: 'id', order: 'DESC' }}\n      {...props}\n    >\n      <BookingGrid />\n    </List>\n  )\n}","import {\n  ResourceContextProvider, ShowProps, Show, TabbedShowLayout, Tab, TextField, useShowContext, DateField,\n  FunctionField, Record, useTranslate\n} from \"react-admin\"\nimport React, { useMemo } from \"react\"\nimport { Box } from \"@material-ui/core\"\nimport { LogList } from '../logs/LogList'\nimport { ResourceName } from \"../../core/ResourceName\"\nimport { BookingList } from \"./CustomerBookingsList\"\n\nconst CustomerBookingsView = () => {\n  const { record, basePath } = useShowContext()\n  return (\n    <Box paddingY={2}>\n      <ResourceContextProvider value={ResourceName.BOOKINGS}>\n        <BookingList\n          basePath={basePath}\n          filter={{ id: record?.bookingsIds.join(\",\") }}\n          filters={undefined}\n          actions={false}\n          title=\" \"\n        />\n      </ResourceContextProvider>\n    </Box>\n  )\n}\n\nconst CustomerLogsView = () => {\n  const { record, basePath } = useShowContext()\n  return (\n    <Box paddingY={2}>\n      <ResourceContextProvider value={ResourceName.TICKET_LOGS}>\n        <LogList\n          basePath={basePath}\n          filter={{ bookingId: record?.bookingsIds.join(\",\") }}\n          filters={undefined}\n          actions={false}\n          title=\" \"\n        />\n      </ResourceContextProvider>\n    </Box>\n  )\n}\n\nconst CustomerTabs = () => {\n  const { record } = useShowContext()\n  const translate = useTranslate()\n  const bookingPresent = useMemo(() => record?.bookingsIds.length > 0, [record])\n  return (\n    <TabbedShowLayout>\n      <Tab label={translate('resources.customer-details.tabs.profile')}>\n        <TextField source=\"firstname\" label=\"resources.customer-details.fields.firstname\" />\n        <TextField source=\"lastname\" label=\"resources.customer-details.fields.lastname\" />\n        {record?.company &&\n          <TextField source=\"company\" label=\"resources.customer-details.fields.company\" />}\n        {record?.birthdate &&\n          <>\n            {record.birthdate.split(\".\")[0].length === 1 && 0}\n            <DateField source=\"birthdate\" label=\"resources.customer-details.fields.birthdate\" />\n          </>}\n        {record?.documentType &&\n          <TextField source=\"documentType\" label=\"resources.customer-details.fields.documentType\" />}\n        {record?.pesel ?\n          <TextField source=\"pesel\" label=\"resources.customer-details.fields.pesel\" /> :\n          <TextField source=\"documentNumber\" label=\"resources.customer-details.fields.documentNumber\" />\n        }\n        {record?.nationality &&\n          <TextField source=\"nationality\" label=\"resources.customer-details.fields.nationality\" />}\n        {record?.gender &&\n          <FunctionField label=\"resources.customer-details.fields.gender\"\n            render={(r: Record | undefined) =>\n              r && translate(`resources.enums.gender.${r.gender}`)} />}\n      </Tab>\n      {bookingPresent &&\n        <Tab label={translate('resources.customer-details.tabs.bookings')}>\n          <CustomerBookingsView />\n        </Tab>\n      }\n      {bookingPresent &&\n        <Tab label={translate('resources.customer-details.tabs.logs')}>\n          <CustomerLogsView />\n        </Tab>\n      }\n    </TabbedShowLayout>\n  )\n}\n\nexport const CustomerDetailsView = (props: ShowProps) => (\n  <Show {...props}>\n    <CustomerTabs />\n  </Show>\n)","import { createStyles, makeStyles } from '@material-ui/core'\n\nexport const useCommonStyles = makeStyles(() =>\n  createStyles({\n    textCentered: {\n      textAlign: 'center',\n    },\n  }),\n)\n","import React, { ChangeEvent, FC, useState } from 'react'\nimport {\n  Box,\n  Button,\n  FormControl,\n  FormHelperText,\n  Input,\n  withStyles,\n} from '@material-ui/core'\nimport SearchIcon from '@material-ui/icons/Search'\nimport { useTranslate } from 'react-admin'\n\nconst RoundInputBox = withStyles({\n  root: {\n    borderRadius: 16,\n    width: '90%',\n    marginLeft: '5%',\n    display: 'flex',\n    flexDirection: 'row-reverse',\n    border: 'solid',\n    borderColor: '#673ab7',\n  },\n})(Box)\n\nconst RoundInputBoxBtn = withStyles({\n  root: {\n    background: '#673ab7',\n    variant: 'contained',\n    borderRadius: 11,\n    borderTopLeftRadius: 0,\n    borderBottomLeftRadius: 0,\n    margin: 0,\n    fontWeight: 'bold',\n    '&:hover': {\n      background: '#7e57c2',\n    },\n  },\n})(Button)\n\nconst RoundInputBoxFC = withStyles({\n  root: {\n    width: '100%',\n    marginLeft: 13,\n    marginTop: 2,\n  },\n})(FormControl)\n\nexport type SearchInputProps = {\n  label: string\n  onValue: (value: string) => void\n  disabled: boolean\n  error: string\n}\n\nconst SearchInput: FC<Readonly<SearchInputProps>> = ({\n  label,\n  onValue,\n  disabled,\n  error,\n}) => {\n  const [inputError, setInputError] = useState(false)\n  const [inputValue, setInputValue] = useState('')\n  const t = useTranslate()\n\n  const handleInput = (event: ChangeEvent<HTMLInputElement>) => {\n    setInputValue(event.target.value)\n  }\n\n  const handleClick = () => {\n    if (inputValue) {\n      setInputError(false)\n      onValue(inputValue)\n    } else {\n      setInputError(true)\n    }\n  }\n\n  return (\n    <RoundInputBox>\n      <RoundInputBoxBtn onClick={handleClick} disabled={disabled}>\n        <SearchIcon style={{ color: 'white' }} />\n      </RoundInputBoxBtn>\n      <RoundInputBoxFC disabled={disabled}>\n        <Input\n          disableUnderline\n          placeholder={t(label)}\n          onInput={handleInput}\n          onKeyDown={(ev) => ev.key === 'Enter' && handleClick()}\n          error={inputError || !!error}\n        />\n        {inputError && (\n          <FormHelperText error>{t('ra.validation.required')}</FormHelperText>\n        )}\n        {!!error && <FormHelperText error>{t(error)}</FormHelperText>}\n      </RoundInputBoxFC>\n    </RoundInputBox>\n  )\n}\n\nexport default SearchInput\n","import React, { useCallback, useState } from \"react\"\nimport { useNotify, useMutation, useTranslate, sanitizeFetchType, GetListResult, GET_LIST } from \"react-admin\"\nimport { useHistory } from \"react-router\"\nimport { stringify } from \"querystring\"\nimport { CardContent, CardHeader } from \"@material-ui/core\"\nimport clsx from \"clsx\"\nimport { ResourceName } from \"../../core/ResourceName\"\nimport { useCommonStyles } from \"./common-styles\"\nimport { CustomerInfoFilter } from '../../core/customer-info/customer-info.params'\nimport { CustomerInfo } from \"../../core/customer-info/customer-info\"\nimport SearchInput from './SearchInput'\n\ntype FindCustomerByInfoProps = Readonly<{ titleCentered?: boolean }>\n\nexport const FindCustomerByInfo = ({\n  titleCentered = false\n}: FindCustomerByInfoProps) => {\n  const history = useHistory()\n  const notify = useNotify()\n  const [error, setError] = useState(\"\")\n  const [mutate, { loading }] = useMutation()\n  const commonClasses = useCommonStyles()\n  const t = useTranslate()\n\n  const fetchCustomers = useCallback(\n    (info: string) =>\n      mutate({\n        type: sanitizeFetchType(GET_LIST),\n        resource: ResourceName.CUSTOMER_INFO,\n        payload: { filter: { info } } as CustomerInfoFilter\n      },\n        { returnPromise: true },\n      ) as Promise<GetListResult<CustomerInfo>>,\n    [mutate]\n  )\n\n  const onValue = useCallback(\n    async (info: string) => {\n      if (info.replace(/\\s/g, \"\").length === 0) {\n        setError('common.find-customer-by-info.invalidQuery')\n      }\n      else if (info.length < 2) {\n        setError('common.find-customer-by-info.tooShort')\n      }\n      else {\n        setError('')\n        try {\n          const {\n            total,\n            data: [onlyCustomer],\n          } = await fetchCustomers(info)\n          if (!total) {\n            setError('common.find-customer-by-info.error')\n          } else if (total === 1) {\n            history.push({\n              pathname: `/${ResourceName.CUSTOMER_DETAILS}/${onlyCustomer.id}/show`\n            })\n          } else {\n            history.push({\n              pathname: `/${ResourceName.CUSTOMER_INFO}`,\n              search: stringify({\n                filter: JSON.stringify({\n                  info\n                } as CustomerInfoFilter['filter'])\n              })\n            })\n          }\n        } catch (err) {\n          notify((err as Error)?.message, 'error')\n        }\n      }\n    },\n    [fetchCustomers, history, notify]\n  )\n\n  return (\n    <>\n      <CardHeader\n        className={clsx({ [commonClasses.textCentered]: titleCentered })}\n        title={t('common.find-customer-by-info.title')} />\n      <CardContent>\n        <SearchInput\n          label=\"common.find-customer-by-info.input-label\"\n          onValue={onValue}\n          disabled={loading}\n          error={error}\n        />\n      </CardContent>\n    </>\n  )\n}","import { Card, Box, Typography, Divider } from \"@material-ui/core\"\nimport React from \"react\"\nimport { useLocation } from \"react-router\"\nimport { List, ListProps, useListContext, useTranslate, Datagrid, TextField, FunctionField, Record } from 'react-admin'\nimport { FindCustomerByInfo } from \"../common/FindCustomerByInfo\"\nimport { ResourceName } from \"../../core/ResourceName\"\n\nconst CustomerInfoGrid = () => {\n  const {\n    loading,\n    filterValues: { info }\n  } = useListContext()\n  const t = useTranslate()\n  return (\n    <>\n      <Box m={2}>\n        <Typography variant=\"h5\" paragraph>\n          {t('resources.customer-info.search-list-title', { info })}\n        </Typography>\n      </Box>\n      <Divider />\n      <Datagrid\n        loaded={!loading}\n        rowClick={(id) => `${ResourceName.CUSTOMER_DETAILS}/${id}/show`}>\n        <TextField source=\"firstname\" />\n        <TextField source=\"lastname\" />\n        <TextField source=\"pesel\" />\n        <FunctionField source=\"pesel\" render={(record: Record | undefined, source: string | undefined) => (\n          record && source && record[source] &&\n          `${record[source].substring(0, 2)}${\"*\".repeat(record[source].length - 4)}${record[source].substring(record[source].length - 3, record[source].length - 1)}`\n        )} />\n      </Datagrid>\n    </>\n  )\n}\n\nexport const CustomerInfoList = (props: ListProps) => {\n  const { search } = useLocation()\n  return (\n    <>\n      <Card>\n        <FindCustomerByInfo titleCentered />\n      </Card>\n      {!!search && (\n        <List actions={false} {...props} sort={{ field: \"lastname\", order: \"ASC\" }}>\n          <CustomerInfoGrid />\n        </List>\n      )}\n    </>\n  )\n}","import { stringify } from 'querystring'\nimport * as React from 'react'\nimport { useCallback, useState } from 'react'\nimport clsx from 'clsx'\nimport {\n  GET_LIST,\n  GetListResult,\n  sanitizeFetchType,\n  useMutation,\n  useNotify,\n  useTranslate,\n} from 'react-admin'\nimport { CardContent, CardHeader } from '@material-ui/core'\nimport { useHistory } from 'react-router-dom'\nimport { TicketCodeFilter } from '../../core/common/ticket-code.filter'\nimport { TicketDto } from '../../core/dto/ticket.dto'\nimport { ResourceName } from '../../core/ResourceName'\nimport SearchInput from './SearchInput'\nimport { useCommonStyles } from './common-styles'\n\ntype FindUserByTicketProps = Readonly<{ titleCentered?: boolean }>\n\nexport const FindUserByTicket = ({\n  titleCentered = false,\n}: FindUserByTicketProps) => {\n  const history = useHistory()\n  const notify = useNotify()\n  const [error, setError] = useState('')\n  const [mutate, { loading }] = useMutation()\n  const commonClasses = useCommonStyles()\n  const t = useTranslate()\n\n  const fetchTickets = useCallback(\n    (ticketCode: string) =>\n      mutate(\n        {\n          type: sanitizeFetchType(GET_LIST),\n          resource: ResourceName.TICKETS,\n          payload: { filter: { ticketCode } } as TicketCodeFilter,\n        },\n        { returnPromise: true },\n      ) as Promise<GetListResult<TicketDto>>,\n    [mutate],\n  )\n\n  const onValue = useCallback(\n    async (ticketCode: string) => {\n      setError('')\n      try {\n        const {\n          total,\n          data: [onlyTicket],\n        } = await fetchTickets(ticketCode)\n        if (!total) {\n          setError('common.find-user-by-ticket.error')\n        } else if (total === 1) {\n          history.push({\n            pathname: `/${ResourceName.TICKET_DETAILS}/${onlyTicket.bookingId}/show`,\n          })\n        } else {\n          history.push({\n            pathname: `/${ResourceName.TICKET_INFO}`,\n            search: stringify({\n              filter: JSON.stringify({\n                ticketCode,\n              } as TicketCodeFilter['filter']),\n            }),\n          })\n        }\n      } catch (err) {\n        notify((err as Error)?.message, 'error')\n      }\n    },\n    [fetchTickets, history, notify],\n  )\n\n  return (\n    <>\n      <CardHeader\n        className={clsx({ [commonClasses.textCentered]: titleCentered })}\n        title={t('common.find-user-by-ticket.title')}\n      />\n      <CardContent>\n        <SearchInput\n          label=\"common.find-user-by-ticket.input-label\"\n          onValue={onValue}\n          disabled={loading}\n          error={error}\n        />\n      </CardContent>\n    </>\n  )\n}\n","import {\n  List, ListProps, FilterProps, Filter, TextInput, useListContext, Datagrid,\n  TextField, DateField, FunctionField, useTranslate, Record, Pagination, Link\n} from \"react-admin\"\nimport React from \"react\"\nimport { TableBody, TableCell, TableHead, TableRow, IconButton } from \"@material-ui/core\"\nimport { Sort, Event } from '@material-ui/icons'\nimport { ResourceName } from \"../../core/ResourceName\"\nimport EventType from \"../../core/events/event\"\n\nconst ListFilters = (props: Omit<FilterProps, 'children'>) => (\n  <Filter {...props}>\n    <TextInput source=\"name\" alwaysOn />\n  </Filter>\n)\n\n\nconst EventsBody = () => {\n  const translate = useTranslate()\n  const { ids, data } = useListContext()\n  return (\n    <TableBody>\n      {ids.map((id) => (\n        <TableRow key={id}>\n          <TableCell>\n            <FunctionField record={data[id] as EventType} render={(record: Record | undefined) =>\n              `${record?.id}. ${record?.name}`} />\n          </TableCell>\n          <TableCell>\n            <FunctionField resource=\"events\" label={translate(\"resources.events.fields.status\")}\n              record={data[id] as EventType} render={(r: Record | undefined) =>\n                (translate(`resources.enums.eventStatus.${r?.status.toLowerCase()}`))} />\n          </TableCell>\n          <TableCell padding=\"none\">\n            <Link to={`/events/${id}/show`}>\n              <IconButton>\n                <Event />\n              </IconButton>\n            </Link>\n          </TableCell>\n          <TableCell padding=\"none\">\n            <Link to={`/stats-overall-view/${id}/show`}>\n              <IconButton>\n                <Sort style={{ transform: \"scaleX(-1)\" }} />\n              </IconButton>\n            </Link>\n          </TableCell>\n        </TableRow>\n      ))}\n    </TableBody>\n  )\n}\n\nconst EventsHead = () => {\n  const translate = useTranslate()\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell>\n          {translate('resources.events.fields.name')}\n        </TableCell>\n        <TableCell>\n          {translate('resources.events.fields.status')}\n        </TableCell>\n        <TableCell />\n        <TableCell />\n      </TableRow>\n    </TableHead>\n  )\n}\n\nconst EventGrid = ({ compactMode }: { compactMode?: boolean }) => {\n  const { loading } = useListContext()\n  const translate = useTranslate()\n  return (\n    <>\n      {compactMode ? (\n        <Datagrid body={EventsBody} header={EventsHead}>\n          <div />\n        </Datagrid>\n      ) : (\n        <Datagrid size=\"small\" loaded={!loading} rowClick={(id) => `${ResourceName.EVENTS}/${id}/show`}>\n          <TextField source=\"id\" label=\"ID\" />\n          <TextField source=\"name\" />\n          <DateField source=\"dateStart\" showTime />\n          <DateField source=\"dateEnd\" showTime />\n          <FunctionField resource=\"events\" label={translate(\"resources.events.fields.status\")}\n            render={(r: Record | undefined) =>\n              (translate(`resources.enums.eventStatus.${r?.status.toLowerCase()}`))} />\n        </Datagrid>\n      )}\n    </>\n  )\n}\n\ninterface EventListProps extends ListProps {\n  compactMode?: boolean\n}\n\nexport const EventList = ({\n  compactMode = false,\n  ...props\n}: EventListProps) => compactMode ?\n    <List {...props} actions={false} filters={undefined} perPage={10}\n      pagination={false}>\n      <EventGrid compactMode />\n    </List> :\n    <List {...props} actions={false} filters={<ListFilters />} perPage={20}\n      pagination={<Pagination rowsPerPageOptions={[10, 20, 50]} />}>\n      <EventGrid />\n    </List>","import {\n  Card,\n  CardContent,\n  CardHeader,\n  createStyles,\n  Grid,\n  makeStyles,\n  Theme,\n} from '@material-ui/core'\nimport React from 'react'\nimport {\n  ResourceContextProvider,\n  useGetIdentity,\n  UserIdentity,\n  useTranslate,\n} from 'react-admin'\nimport { ResourceName } from '../core/ResourceName'\nimport { FindUserByTicket } from './common/FindUserByTicket'\nimport { EventList } from './events/EventList'\nimport { LogList } from './logs/LogList'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    header: {\n      textAlign: 'center',\n      letterSpacing: theme.spacing(0.2),\n    },\n  }),\n)\n\nconst TicketFinder = () => (\n  <Card style={{ width: '100%', marginBottom: '5px' }}>\n    <FindUserByTicket />\n  </Card>\n)\n\nconst LastLogs = () => {\n  const t = useTranslate()\n  return (\n    <Card style={{ width: '100%', marginBottom: '5px' }}>\n      <CardHeader title={t('dashboard.cards.last-logs.title')} />\n      <CardContent>\n        <ResourceContextProvider value={ResourceName.LOGS}>\n          <LogList\n            basePath=\"/\"\n            title=\" \"\n            compactMode\n            pagination={false}\n            perPage={10}\n            actions={false}\n            filters={undefined}\n          />\n        </ResourceContextProvider>\n      </CardContent>\n    </Card>\n  )\n}\n\nconst LastEvents = () => {\n  const t = useTranslate()\n  return (\n    <Card style={{ width: '100%', marginBottom: '5px' }}>\n      <CardHeader title={t('dashboard.cards.last-events.title')} />\n      <CardContent>\n        <ResourceContextProvider value={ResourceName.EVENTS}>\n          <EventList\n            sort={{ field: 'status', order: 'DESC' }}\n            compactMode\n            basePath=\"/\"\n            title=\" \"\n          />\n        </ResourceContextProvider>\n      </CardContent>\n    </Card>\n  )\n}\n\nexport const Dashboard = () => {\n  const { identity } = useGetIdentity()\n  const classes = useStyles()\n  const t = useTranslate()\n\n  const isItemShown = (item: string, userId?: UserIdentity) => {\n    const show = localStorage.getItem(`${userId?.id}.${item}`)\n    return show !== '0'\n  }\n\n  return (\n    <Grid container spacing={1}>\n      <Grid item xs={12}>\n        <Card>\n          <CardHeader\n            className={classes.header}\n            title={t('dashboard.welcome')}\n            titleTypographyProps={{ variant: 'h4' }}\n          />\n        </Card>\n      </Grid>\n      <Grid item sm={6} xs={12}>\n        {isItemShown('ticketfinder', identity) && <TicketFinder />}\n        {isItemShown('lastevents', identity) && <LastEvents />}\n      </Grid>\n      <Grid\n        item\n        sm={6}\n        xs={12}\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'flex-end',\n          width: '10%',\n        }}\n      >\n        {isItemShown('dashlogs', identity) && <LastLogs />}\n      </Grid>\n    </Grid>\n  )\n}\n","import {\n  Edit, EditProps, TextField, TextInput, FunctionField,\n  DateTimeInput, useTranslate, SimpleForm, Record\n} from \"react-admin\"\nimport React, { useMemo } from \"react\"\n\nconst EditTitle = (record: any) => {\n  const { record: { name, dateStart, id } } = record\n  const translate = useTranslate()\n  const date = useMemo(() => !(dateStart instanceof Date) ? dateStart.replace('T', ' ') : '', [dateStart])\n  return (\n    <span>{translate('resources.events.titles.edit')}: {name} {date} {id}</span>\n  )\n}\n\nexport const EventEdit = (props: EditProps) => {\n  const translate = useTranslate()\n  return (\n    <Edit {...props} title={<EditTitle />}>\n      <SimpleForm>\n        <TextField source=\"id\" label=\"ID\" />\n        <TextInput source=\"name\" />\n        <DateTimeInput source=\"dateStart\" />\n        <DateTimeInput source=\"dateEnd\" />\n        <FunctionField resource=\"events\" label={translate(\"resources.events.fields.status\")}\n          render={(r: Record | undefined) =>\n            (translate(`resources.enums.eventStatus.${r?.status.toLowerCase()}`))} />\n      </SimpleForm>\n    </Edit>\n  )\n}","import React from \"react\"\nimport {\n  Show, ShowProps, TabbedShowLayout, Tab, TextField, DateField, useListContext,\n  useShowContext, useTranslate, FunctionField, Record, ResourceContextProvider,\n  List, useMutation, useRefresh, sanitizeFetchType, EditButton, TextInput, useNotify,\n} from \"react-admin\"\nimport {\n  Checkbox, TableContainer, Table, TableHead, TableBody, TableRow, TableCell, Divider, Box, Button, ButtonGroup\n} from '@material-ui/core'\nimport { ResourceName } from \"../../core/ResourceName\"\nimport { EventStatus } from \"../../core/enum/EventStatus\"\n\nconst ShowTitle = (record: any) => {\n  const { record: { name, dateStart, id } } = record\n  const translate = useTranslate()\n  return (\n    <span>{translate('resources.events.titles.show')}: {!!name && name} {dateStart.replace(\"T\", \" \")} {!!id && id}</span>\n  )\n}\n\nconst Attachments = ({ source }: { source: 'COMPANIES' | 'OBJECTS' | 'ENGINES' | 'PALMS' }) => {\n  const { data, ids } = useListContext()\n  const { record: event } = useShowContext()\n  const translate = useTranslate()\n  const [mutate] = useMutation()\n  const refresh = useRefresh()\n  const notify = useNotify()\n\n  const handleAttach = async (id: number[]) => {\n    switch (source) {\n      case 'COMPANIES':\n        await mutate({\n          type: sanitizeFetchType(\"attachCompanies\"),\n          resource: ResourceName.EVENTS,\n          payload: {\n            eventId: event && event.id,\n            companiesIds: id\n          }\n        }, { returnPromise: true })\n      break;\n      case 'OBJECTS':\n        await mutate({\n          type: sanitizeFetchType(\"attachObjects\"),\n          resource: ResourceName.EVENTS,\n          payload: {\n            eventId: event && event.id,\n            objectsIds: id\n          }\n        }, { returnPromise: true })\n      break;\n      case 'ENGINES':\n      case 'PALMS':\n        await mutate({\n          type: sanitizeFetchType(\"attachDevices\"),\n          resource: ResourceName.EVENTS,\n          payload: {\n            eventId: event && event.id,\n            verifierDevicesIds: id\n          }\n        }, { returnPromise: true })\n      break;\n      default:\n        notify(`Source '${source}' is not implemented yet.`);\n    }\n    refresh()\n  }\n\n  const handleDetach = async (id: number[]) => {\n    switch (source) {\n      case 'COMPANIES':\n        await mutate({\n          type: sanitizeFetchType(\"detachCompanies\"),\n          resource: ResourceName.EVENTS,\n          payload: {\n            eventId: event && event.id,\n            companiesIds: id\n          }\n        }, { returnPromise: true })\n      break;\n      case 'OBJECTS':\n        await mutate({\n          type: sanitizeFetchType(\"detachObjects\"),\n          resource: ResourceName.EVENTS,\n          payload: {\n            eventId: event && event.id,\n            objectsIds: id\n          }\n        }, { returnPromise: true })\n      break;\n      case 'ENGINES':\n      case 'PALMS':\n        await mutate({\n          type: sanitizeFetchType(\"detachDevices\"),\n          resource: ResourceName.EVENTS,\n          payload: {\n            eventId: event && event.id,\n            verifierDevicesIds: id\n          }\n        }, { returnPromise: true })\n      break;\n      default:\n        notify(`Source '${source}' is not implemented yet.`);\n    }\n    refresh()\n  }\n\n  return (\n    <TableContainer>\n      <ButtonGroup>\n        <Button variant=\"contained\" onClick={() => handleAttach(ids as number[])}>\n          {translate('resources.events.actions.attachAll')}</Button>\n        <Button variant=\"contained\" onClick={() => handleDetach(ids as number[])}>\n          {translate('resources.events.actions.detachAll')}</Button>\n      </ButtonGroup>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>\n              {translate(`resources.events.fields.attachment.name`)}\n            </TableCell>\n            <TableCell style={{ width: \"10%\" }}>\n              {translate(`resources.events.fields.attachment.attached`)}\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {ids.map((id) => (\n            <TableRow key={id}>\n              <TableCell>\n                <TextField source=\"name\" record={data[id]} />\n              </TableCell>\n              <TableCell>\n                <Checkbox checked={data[id]?.attached} onClick={data[id]?.attached ? () => handleDetach([id as number]) : () => handleAttach([id as number])} />\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n\nconst GeneralEditButton = () => {\n  const { record } = useShowContext()\n  const [mutate] = useMutation()\n  const refresh = useRefresh()\n  const translate = useTranslate()\n\n  const handleActivation = async () => {\n    if (record?.status !== EventStatus.IN_TRANSITION) {\n      if (record?.status === EventStatus.ACTIVE){\n        await mutate({\n          type: sanitizeFetchType(\"deactivate\"),\n          resource: ResourceName.EVENTS,\n          payload: {\n            eventId: record?.id\n          }\n        }, { returnPromise: false })\n      }\n      else {\n        await mutate({\n          type: sanitizeFetchType(\"activate\"),\n          resource: ResourceName.EVENTS,\n          payload: {\n            eventId: record?.id\n          }\n        }, { returnPromise: false })\n      }\n      refresh()\n    }\n  }\n\n  return (\n    <>\n      <Divider />\n      <Box p={1} display=\"flex\" justifyContent=\"flex-end\">\n        <Button variant=\"contained\" onClick={handleActivation}\n          color=\"primary\" style={{ marginRight: \"5px\" }}\n          disabled={record?.status === EventStatus.IN_TRANSITION}>\n          {record?.status === EventStatus.INACTIVE ?\n            translate('resources.events.actions.activate') :\n            translate('resources.events.actions.deactivate')}\n        </Button>\n        <EditButton basePath=\"/events\" record={record} variant=\"contained\" />\n      </Box>\n    </>\n  )\n}\n\nexport const EventShow = (props: ShowProps) => {\n  const translate = useTranslate()\n  const { id, basePath } = props\n  return (\n    <Show {...props} title={<ShowTitle />} actions={false}>\n      <TabbedShowLayout>\n        <Tab label={translate(\"resources.events.tabs.general\")}>\n          <TextField source=\"id\" label=\"ID\" />\n          <TextField source=\"name\" />\n          <DateField source=\"dateStart\" showTime />\n          <DateField source=\"dateEnd\" showTime />\n          <FunctionField resource=\"events\" label={translate(\"resources.events.fields.status\")}\n            render={(r: Record | undefined) =>\n              (translate(`resources.enums.eventStatus.${r?.status.toLowerCase()}`))} />\n          <GeneralEditButton />\n        </Tab>\n        <Tab label={translate(\"resources.events.tabs.palms\")}>\n          <>\n            <Box paddingY={2}>\n              <ResourceContextProvider value={ResourceName.PALMS} >\n                <List basePath={basePath} filter={{ event: id }} exporter={false} title=\" \"\n                  filters={[\n                    <TextInput source=\"name\" alwaysOn />,\n                    <TextInput source=\"categoryId\" />\n                  ]}>\n                  <Attachments source=\"PALMS\" />\n                </List>\n              </ResourceContextProvider>\n            </Box>\n          </>\n        </Tab>\n        <Tab label={translate(\"resources.events.tabs.engines\")}>\n          <>\n            <Box paddingY={2}>\n              <ResourceContextProvider value={ResourceName.ENGINES}>\n                <List basePath={basePath} filter={{ event: id }} exporter={false} title=\" \"\n                  filters={[\n                    <TextInput source=\"name\" alwaysOn />,\n                    <TextInput source=\"categoryId\" />\n                  ]}>\n                  <Attachments source=\"ENGINES\" />\n                </List>\n              </ResourceContextProvider>\n            </Box>\n          </>\n        </Tab>\n        <Tab label={translate(\"resources.events.tabs.objects\")}>\n          <>\n            <Box paddingY={2}>\n              <ResourceContextProvider value={ResourceName.OBJECTS}>\n                <List basePath={basePath} filter={{ event: id }} exporter={false} title=\" \"\n                  filters={[\n                    <TextInput source=\"name\" alwaysOn />\n                  ]}>\n                  <Attachments source=\"OBJECTS\" />\n                </List>\n              </ResourceContextProvider>\n            </Box>\n          </>\n        </Tab>\n        <Tab label={translate(\"resources.events.tabs.companies\")}>\n          <>\n            <Box paddingY={2}>\n              <ResourceContextProvider value={ResourceName.COMPANIES}>\n                <List basePath={basePath} filter={{ event: id }} exporter={false} title=\" \"\n                  filters={[\n                    <TextInput source=\"name\" alwaysOn />\n                  ]}>\n                  <Attachments source=\"COMPANIES\" />\n                </List>\n              </ResourceContextProvider>\n            </Box>\n          </>\n        </Tab>\n      </TabbedShowLayout>\n    </Show>\n  )\n}","import React from 'react'\nimport {\n  makeStyles,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from '@material-ui/core'\nimport { Show, ShowProps, useTranslate, ArrayField, Datagrid, TextField } from 'react-admin'\n\nconst useStyles = makeStyles({\n  noBottomBorder: {\n    borderBottom: 'none',\n  },\n  quarterWidth: {\n    width: '25%',\n  },\n})\n\nconst ViewTitle = (record: any) => {\n  const {\n    record: { eventName, date, id },\n  } = record\n  const t = useTranslate()\n  const description = `${eventName} ${date.replace('T', ' ')} ${id}`\n  return (\n    <span>{`${t('resources.stats-overall-view.name')}: ${description}`}</span>\n  )\n}\n\nconst BlockGrid = (props: any) => {\n  const {\n    record: {\n      soldAbo, soldInfix, soldNormal, soldPoints, soldService\n    }\n  } = props\n  const classes = useStyles()\n  const translate = useTranslate()\n\n  const firstColumnEntries = [\n    { label: \"abo\", value: soldAbo },\n    { label: \"infix\", value: soldInfix },\n    { label: \"normal\", value: soldNormal },\n    { label: \"points\", value: soldPoints },\n    { label: \"service\", value: soldService },\n  ].map(({ label, value }) => (\n    !!value && (\n      <div key={label}>{translate(`resources.stats-overall-view.fields.${label}`)}</div>\n    )\n  ))\n\n  const secondColumnEntries = [\n    { label: \"enteredAbo\", value: soldAbo },\n    { label: \"enteredInfix\", value: soldInfix },\n    { label: \"enteredNormal\", value: soldNormal },\n    { label: \"enteredPoints\", value: soldPoints },\n    { label: \"enteredService\", value: soldService },\n  ].map(({ label, value }) =>\n    !!value && (\n      <TextField key={label} source={label} label=\" \" />\n    ))\n\n  const thirdColumnEntries = [\n    { label: \"soldAbo\", value: soldAbo },\n    { label: \"soldInfix\", value: soldInfix },\n    { label: \"soldNormal\", value: soldNormal },\n    { label: \"soldPoints\", value: soldPoints },\n    { label: \"soldService\", value: soldService },\n  ].map(({ label, value }) => (\n    !!value && (\n      <TextField key={label} source={label} label=\" \" />\n    )\n  ))\n\n  return (\n    <TableContainer style={{ paddingTop: \"10px\", marginBottom: \"10px\" }}>\n      <Table padding=\"none\">\n        <TableBody>\n          <TableRow>\n            <TableCell style={{ width: \"15%\" }} className={classes.noBottomBorder} />\n            <TableCell style={{ width: \"40%\" }} className={classes.noBottomBorder}>{firstColumnEntries}</TableCell>\n            <TableCell style={{ width: \"15%\" }} className={classes.noBottomBorder}>{secondColumnEntries}</TableCell>\n            <TableCell style={{ width: \"15%\" }} className={classes.noBottomBorder}>{thirdColumnEntries}</TableCell>\n            <TableCell style={{ width: \"15%\" }} className={classes.noBottomBorder} />\n          </TableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n\nconst TribuneGrid = () => {\n  const translate = useTranslate()\n\n  const TribuneHeader = () => (\n    <TableHead>\n      <TableRow>\n        <TableCell style={{ width: \"15%\" }} />\n        <TableCell style={{ width: \"40%\" }}>{translate('resources.stats-overall-view.fields.block')}</TableCell>\n        <TableCell style={{ width: \"15%\" }} />\n        <TableCell style={{ width: \"15%\" }} />\n        <TableCell style={{ width: \"15%\" }} />\n      </TableRow>\n    </TableHead>\n  )\n\n  return (\n    <ArrayField source=\"blocks\">\n      <Datagrid expand={<BlockGrid />} padding=\"none\" header={<TribuneHeader />} isRowExpandable={record => !!record.sold}>\n        <TextField source=\"name\" label=\"Sektor\" />\n        <TextField source=\"entered\" label=\" \" />\n        <TextField source=\"sold\" label=\" \" />\n        <TextField source=\"capacity\" label=\" \" />\n      </Datagrid>\n    </ArrayField>\n  )\n}\n\nconst ObjectGrid = () => {\n  const translate = useTranslate()\n\n  const objectHeader = () => (\n    <TableHead>\n      <TableRow>\n        <TableCell style={{ width: \"10%\" }} />\n        <TableCell style={{ width: \"45%\" }}>{translate('resources.stats-overall-view.fields.tribune')}</TableCell>\n        <TableCell style={{ width: \"15%\" }} />\n        <TableCell style={{ width: \"15%\" }} />\n        <TableCell style={{ width: \"15%\" }} />\n      </TableRow>\n    </TableHead>\n  )\n\n  return (\n    <ArrayField source=\"tribunes\">\n      <Datagrid expand={<TribuneGrid />} padding=\"none\" header={objectHeader}>\n        <TextField source=\"name\" label=\"Trybuna\" />\n        <TextField source=\"entered\" label=\" \" />\n        <TextField source=\"sold\" label=\" \" />\n        <TextField source=\"capacity\" label=\" \" />\n      </Datagrid>\n    </ArrayField>\n  )\n}\n\nexport const OverallView = (props: ShowProps) => {\n  const translate = useTranslate()\n\n  const overallHeader = () => (\n    <TableHead>\n      <TableRow>\n        <TableCell style={{ width: \"5%\" }} />\n        <TableCell style={{ width: \"50%\" }}>{translate('resources.stats-overall-view.fields.name')}</TableCell>\n        <TableCell style={{ width: \"15%\" }}>{translate('resources.stats-overall-view.fields.entered')}</TableCell>\n        <TableCell style={{ width: \"15%\" }}>{translate('resources.stats-overall-view.fields.sold')}</TableCell>\n        <TableCell style={{ width: \"15%\" }}>{translate('resources.stats-overall-view.fields.capacity')}</TableCell>\n      </TableRow>\n    </TableHead>\n  )\n\n  return (\n    <Show title={<ViewTitle />} {...props}>\n      <ArrayField source=\"objects\">\n        <Datagrid expand={<ObjectGrid />} padding=\"none\" header={overallHeader}>\n          <TextField source=\"name\" label=\"Obiekt\" />\n          <TextField source=\"entered\" />\n          <TextField source=\"sold\" />\n          <TextField source=\"capacity\" />\n        </Datagrid>\n      </ArrayField>\n    </Show>\n  )\n}","import * as React from 'react'\nimport {\n  Datagrid,\n  DateField,\n  Filter,\n  FilterProps,\n  List,\n  ListProps,\n  TextField,\n  TextInput,\n  useListContext,\n} from 'react-admin'\nimport { ResourceName } from '../../../core/ResourceName'\n\nconst ListFilters = (props: Omit<FilterProps, 'children'>) => (\n  <Filter {...props}>\n    <TextInput source=\"name\" alwaysOn />\n  </Filter>\n)\n\nconst OverallViewGrid = () => {\n  const { loading } = useListContext()\n  // TODO: header doesn't change color when theme value is switched\n  //  the reason is the need to change the theme at <Admin> level - not at <Layout> level\n  //  the solution is here - https://stackoverflow.com/a/63967145 -> after that customReducer needs to be removed\n  return (\n    <Datagrid\n      loaded={!loading}\n      rowClick={(id) => `${ResourceName.STATS_OVERALL_VIEW}/${id}/show`}\n    >\n      <TextField source=\"id\" />\n      <TextField source=\"name\" />\n      <DateField source=\"dateStart\" showTime />\n      <DateField source=\"dateEnd\" showTime />\n    </Datagrid>\n  )\n}\n\nexport const OverallViewList = (props: ListProps) => (\n  <List {...props} actions={false} filters={<ListFilters />} sort={{ field: 'id', order: 'DESC'}} >\n    <OverallViewGrid />\n  </List>\n)\n","import {\n  List,\n  ListProps,\n  useListContext,\n  useTranslate,\n  useMutation,\n  sanitizeFetchType,\n  Record,\n  useRefresh,\n  UPDATE_MANY,\n  useListSortContext,\n  TextField,\n  DateField,\n  FunctionField,\n} from 'react-admin'\nimport React from 'react'\nimport {\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from '@material-ui/core'\nimport { ArrowDownward, ArrowUpward } from '@material-ui/icons'\nimport { AccessUsingDto } from '../../../core/dto/access-using.dto'\nimport { ResourceName } from '../../../core/ResourceName'\n\nconst AccessUsingsGrid = () => {\n  const translate = useTranslate()\n  const { data, ids } = useListContext()\n  const [mutate] = useMutation()\n  const refresh = useRefresh()\n  const { currentSort, setSort } = useListSortContext()\n\n  const patchAccess = async (access: AccessUsingDto) => {\n    await mutate(\n      {\n        type: sanitizeFetchType(UPDATE_MANY),\n        resource: ResourceName.ACCESS_USINGS,\n        payload: {\n          ids: [access.id],\n          data: {\n            active: !access.active,\n          },\n        },\n      },\n      { returnPromise: true },\n    )\n    refresh()\n  }\n\n  const inverseOrder = () => (currentSort.order === 'ASC' ? 'DESC' : 'ASC')\n\n  const handleSortChange = (field: string) => {\n    setSort(field, currentSort.field === field ? inverseOrder() : 'DESC')\n  }\n\n  const HeaderCell = (name: string, display: string) => (\n    <div style={{ display: 'flex', cursor: 'pointer', textAlign: 'center' }}>\n      {currentSort.field === name && (\n        <>{currentSort.order === 'ASC' ? <ArrowUpward /> : <ArrowDownward />}</>\n      )}\n      <div> {translate(display)} </div>\n    </div>\n  )\n\n  return (\n    <TableContainer>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell onClick={() => handleSortChange('date')}>\n              {HeaderCell('date', 'resources.access-usings.fields.date')}\n            </TableCell>\n            <TableCell onClick={() => handleSortChange('direction')}>\n              {HeaderCell('direction', 'resources.access-usings.fields.direction')}\n            </TableCell>\n            <TableCell onClick={() => handleSortChange('active')}>\n              {HeaderCell('active', 'resources.access-usings.fields.active')}\n            </TableCell>\n            <TableCell>\n              {translate('resources.access-usings.fields.ticketId')}\n            </TableCell>\n            <TableCell style={{ width: '20%' }} />\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {ids.map((id) => (\n            <TableRow key={id}>\n              <TableCell>\n                <DateField\n                  source=\"date\"\n                  record={data[id] as AccessUsingDto}\n                  showTime\n                />\n              </TableCell>\n              <TableCell>\n                <TextField\n                  source=\"direction\"\n                  record={data[id] as AccessUsingDto}\n                />\n              </TableCell>\n              <TableCell>\n                <FunctionField\n                  record={data[id]}\n                  render={(record: Record | undefined) =>\n                    record?.active\n                      ? translate('const.yes')\n                      : translate('const.no')\n                  }\n                />\n              </TableCell>\n              <TableCell>\n                <TextField\n                  source=\"ticketCode\"\n                  record={data[id] as AccessUsingDto}\n                />\n              </TableCell>\n              <TableCell>\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  style={{ width: '100%', fontSize: '13px' }}\n                  onClick={() => patchAccess(data[id] as AccessUsingDto)}\n                >\n                  {translate(\n                    `resources.access-usings.actions.${data[id].active ? `deactivate` : `activate`\n                    }`,\n                  )}\n                </Button>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n\nexport const AccessUsingsList = (props: ListProps) => (\n  <List\n    {...props}\n    exporter={false}\n    perPage={20}\n    sort={{ field: 'date', order: 'DESC' }}\n  >\n    <AccessUsingsGrid />\n  </List>\n)\n","import { TicketType } from '../enum/TicketType'\nimport { BookingType } from '../enum/BookingType'\n\nconst bookingTypeMapping: Record<BookingType, string> = {\n  [BookingType.NORMAL]: 'resources.enums.bookingType.normal',\n  [BookingType.ABO]: 'resources.enums.bookingType.abo',\n  [BookingType.INFIX]: 'resources.enums.bookingType.infix',\n  [BookingType.POINTS]: 'resources.enums.bookingType.points',\n  [BookingType.SERVICE]: 'resources.enums.bookingType.service',\n}\n\nconst ticketTypeMapping: Record<TicketType, string> = {\n  [TicketType.K]: 'resources.enums.ticketType.k',\n  [TicketType.M]: 'resources.enums.ticketType.m',\n  [TicketType.Z]: 'resources.enums.ticketType.z',\n  [TicketType.N]: 'resources.enums.ticketType.n',\n  [TicketType.P]: 'resources.enums.ticketType.p',\n  [TicketType.U]: 'resources.enums.ticketType.u',\n  [TicketType.R]: 'resources.enums.ticketType.r',\n}\n\nexport const mapFromBookingType = (bookingType: BookingType): string =>\n  bookingTypeMapping[bookingType]\n\nexport const mapFromTicketType = (ticketType: TicketType): string =>\n  ticketTypeMapping[ticketType]\n","import * as React from 'react'\nimport { useShowContext } from 'react-admin'\nimport {\n  Box,\n  createStyles,\n  makeStyles,\n  Theme,\n  Typography,\n} from '@material-ui/core'\nimport { TicketDetails } from '../../core/ticket-details/ticket-details'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    header: {\n      letterSpacing: theme.spacing(0.2),\n    },\n  }),\n)\nexport const TicketDetailsHeader = () => {\n  const classes = useStyles()\n  const { record } = useShowContext<TicketDetails>()\n  return (\n    <Box m={2}>\n      <Typography className={classes.header} variant=\"h5\" paragraph>\n        {record?.firstname} {record?.lastname}\n      </Typography>\n    </Box>\n  )\n}\n","import * as React from 'react'\nimport {\n  DateField,\n  Labeled,\n  TextField,\n  TextFieldProps,\n  useRecordContext,\n  useTranslate,\n} from 'react-admin'\nimport {\n  Box,\n  Chip,\n  createStyles,\n  makeStyles,\n  Paper,\n  Theme,\n} from '@material-ui/core'\nimport { mapFromTicketType } from '../../core/ticket-details/ticket-details-values.mapper'\nimport { TicketDetails } from '../../core/ticket-details/ticket-details'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ticketBox: {\n      display: 'flex',\n      flexDirection: 'column',\n      padding: theme.spacing(1),\n      marginLeft: theme.spacing(1),\n    },\n    ticketField: {\n      padding: theme.spacing(0),\n      margin: theme.spacing(0),\n      marginBottom: theme.spacing(0.5),\n    },\n  }),\n)\n\nexport const TicketDetailsTicketsField = ({ label }: TextFieldProps) => {\n  const classes = useStyles()\n  const t = useTranslate()\n  const record = useRecordContext<TicketDetails>()\n  const mappedRecords = (record.tickets || []).map(\n    ({ id, ticketType, createdAt, ticketCode }) => ({\n      id,\n      ticketCode,\n      ticketType: mapFromTicketType(ticketType),\n      createdAt,\n    }),\n  )\n  const fields = mappedRecords.map((mappedRecord) => (\n    <Paper\n      key={mappedRecord.id}\n      variant=\"elevation\"\n      className={classes.ticketBox}\n    >\n      <Labeled\n        className={classes.ticketField}\n        label=\"resources.ticket-details.fields.tickets.fields.id\"\n      >\n        <TextField\n          className={classes.ticketField}\n          record={mappedRecord}\n          source=\"id\"\n        />\n      </Labeled>\n      <Labeled\n        className={classes.ticketField}\n        label=\"resources.ticket-details.fields.tickets.fields.ticketCode\"\n      >\n        <TextField\n          className={classes.ticketField}\n          record={mappedRecord}\n          source=\"ticketCode\"\n        />\n      </Labeled>\n      <Labeled\n        className={classes.ticketField}\n        label=\"resources.ticket-details.fields.tickets.fields.ticketType\"\n      >\n        <Chip\n          label={t(mappedRecord.ticketType)}\n          className={classes.ticketField}\n        />\n      </Labeled>\n      <Labeled\n        className={classes.ticketField}\n        label=\"resources.ticket-details.fields.tickets.fields.createdAt\"\n      >\n        <DateField\n          className={classes.ticketField}\n          record={mappedRecord}\n          source=\"createdAt\"\n          showTime\n        />\n      </Labeled>\n    </Paper>\n  ))\n  return (\n    <Labeled label={label}>\n      <Box display=\"flex\" flexWrap=\"wrap\" flexDirection=\"row\">\n        {fields}\n      </Box>\n    </Labeled>\n  )\n}\n","import {\n  CREATE,\n  CreateParams,\n  sanitizeFetchType,\n  UPDATE_MANY,\n  UpdateManyParams,\n} from 'react-admin'\nimport { TicketDetails } from './ticket-details'\nimport { ResourceName } from '../ResourceName'\nimport { AccessUsingsCreateParams } from '../access-usings/access-usings-create.params'\nimport { ToggleType, Action, ToggleButtonState } from './toggle-button'\n\ntype Mutation = {\n  type: string\n  resource: string\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  payload?: object\n}\n\nconst blockMutation = (ticketDetails: TicketDetails): Mutation => {\n  const { accessesIds, tickets } = ticketDetails\n  const ticketIds = tickets.map((t) => t.id)\n  return {\n    type: sanitizeFetchType(CREATE),\n    resource: ResourceName.ACCESS_USINGS,\n    payload: {\n      data: { ticketIds, accessIds: accessesIds },\n    } as CreateParams<AccessUsingsCreateParams>,\n  }\n}\n\nconst unblockMutation = ({ tickets }: TicketDetails): Mutation => {\n  const activeAccessUsingIds = tickets\n    .flatMap((t) => t.accessUsings)\n    .filter((au) => au.active)\n    .map((au) => au.id)\n  return {\n    type: sanitizeFetchType(UPDATE_MANY),\n    resource: ResourceName.ACCESS_USINGS,\n    payload: {\n      ids: activeAccessUsingIds,\n      data: {\n        active: false\n      }\n    } as UpdateManyParams,\n  }\n}\n\ntype State = {\n  mutateQuery?: (ticketDetails: TicketDetails) => Mutation\n} & ToggleButtonState\n\nexport const blockAccessButtonInitialState = {\n  type: ToggleType.DISABLED,\n  text: 'resources.ticket-details.actions.blockAccessNA',\n}\n\nexport const toggleAccessButtonReducer = (\n  state: State,\n  { type }: Action,\n): State => {\n  switch (type) {\n    case ToggleType.BLOCK: {\n      return {\n        type,\n        text: 'resources.ticket-details.actions.blockAccess',\n        mutateQuery: blockMutation,\n      }\n    }\n    case ToggleType.UNBLOCK: {\n      return {\n        type,\n        text: 'resources.ticket-details.actions.unblockAccess',\n        mutateQuery: unblockMutation,\n      }\n    }\n    case ToggleType.DISABLED: {\n      return blockAccessButtonInitialState\n    }\n    default:\n      throw new Error()\n  }\n}\n","import * as React from 'react'\nimport { useEffect, useReducer } from 'react'\nimport {\n  useMutation,\n  useNotify,\n  useRecordContext,\n  useRefresh,\n  useShowContext,\n  useTranslate,\n} from 'react-admin'\nimport { Button, createStyles, makeStyles, Theme } from '@material-ui/core'\nimport { ToggleType } from '../../core/ticket-details/toggle-button'\nimport { TicketDetails } from '../../core/ticket-details/ticket-details'\nimport {\n  blockAccessButtonInitialState,\n  toggleAccessButtonReducer,\n} from '../../core/ticket-details/toggle-access-button.reducer'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    button: {\n      color: theme.palette.common.white,\n      marginLeft: theme.spacing(1),\n    },\n  }),\n)\n\nexport const ToggleAccessButton = () => {\n  const classes = useStyles()\n  const t = useTranslate()\n  const notify = useNotify()\n  const { loading } = useShowContext()\n  const [{ type, text, mutateQuery }, dispatch] = useReducer(\n    toggleAccessButtonReducer,\n    blockAccessButtonInitialState,\n  )\n  const ticketDetails = useRecordContext<TicketDetails>()\n  const [mutate, { loading: mutationLoading }] = useMutation()\n  const refresh = useRefresh()\n\n  const isActive = (td: TicketDetails) =>\n    td.tickets.some((ticket) => ticket.accessUsings.some((a) => a.active))\n\n  useEffect(() => {\n    if (isActive(ticketDetails)) {\n      dispatch({ type: ToggleType.UNBLOCK })\n    } else {\n      dispatch({ type: ToggleType.BLOCK })\n    }\n  }, [ticketDetails])\n\n  const onClick = async () => {\n    try {\n      const query = mutateQuery?.(ticketDetails)\n      await mutate(query, { returnPromise: true })\n      refresh()\n    } catch (err) {\n      notify((err as Error)?.message, 'error')\n    }\n  }\n\n  return (\n    <Button\n      disabled={type === ToggleType.DISABLED || loading || mutationLoading}\n      className={classes.button}\n      variant=\"contained\"\n      color=\"secondary\"\n      onClick={onClick}\n    >\n      {t(text)}\n    </Button>\n  )\n}\n","import { ToggleType, Action, ToggleButtonState } from './toggle-button'\nimport { BookingUpdateRequest } from '../bookings/booking-update.request'\nimport { BookingDisabledOption } from '../enum/BookingDisabledOption'\n\ntype State = {\n  mutateParam?: BookingUpdateRequest['disabled']\n} & ToggleButtonState\n\nexport const blockTicketButtonInitialState = {\n  type: ToggleType.DISABLED,\n  text: 'resources.ticket-details.actions.blockTicketNA',\n}\n\nexport const toggleTicketButtonReducer = (\n  state: State,\n  { type }: Action,\n): State => {\n  switch (type) {\n    case ToggleType.BLOCK: {\n      return {\n        type,\n        text: 'resources.ticket-details.actions.blockTicket',\n        mutateParam: BookingDisabledOption.ADMIN,\n      }\n    }\n    case ToggleType.UNBLOCK: {\n      return {\n        type,\n        text: 'resources.ticket-details.actions.unblockTicket',\n        mutateParam: null,\n      }\n    }\n    case ToggleType.DISABLED: {\n      return blockTicketButtonInitialState\n    }\n    default:\n      throw new Error()\n  }\n}\n","import * as React from 'react'\nimport { useEffect, useReducer } from 'react'\nimport {\n  sanitizeFetchType,\n  UPDATE,\n  UpdateParams,\n  useMutation,\n  useNotify,\n  useRecordContext,\n  useRefresh,\n  useShowContext,\n  useTranslate,\n} from 'react-admin'\nimport { Button, createStyles, makeStyles, Theme } from '@material-ui/core'\nimport { TicketDetails } from '../../core/ticket-details/ticket-details'\nimport { BookingUpdateRequest } from '../../core/bookings/booking-update.request'\nimport { BookingDisabledOption } from '../../core/enum/BookingDisabledOption'\nimport { ResourceName } from '../../core/ResourceName'\nimport {\n  blockTicketButtonInitialState,\n  toggleTicketButtonReducer,\n} from '../../core/ticket-details/toggle-ticket-button.reducer'\nimport { ToggleType } from '../../core/ticket-details/toggle-button'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    button: {\n      color: theme.palette.common.white,\n      marginLeft: theme.spacing(1),\n    },\n  }),\n)\n\nexport const ToggleTicketButton = () => {\n  const classes = useStyles()\n  const t = useTranslate()\n  const notify = useNotify()\n  const { loading } = useShowContext()\n  const [{ type, text, mutateParam }, dispatch] = useReducer(\n    toggleTicketButtonReducer,\n    blockTicketButtonInitialState,\n  )\n  const { id: bookingId, bookingDisabled } = useRecordContext<TicketDetails>()\n  const [mutate, { loading: mutationLoading }] = useMutation()\n  const refresh = useRefresh()\n\n  useEffect(() => {\n    if (bookingDisabled === null) {\n      dispatch({ type: ToggleType.BLOCK })\n    } else if (bookingDisabled === BookingDisabledOption.ADMIN) {\n      dispatch({ type: ToggleType.UNBLOCK })\n    } else {\n      dispatch({ type: ToggleType.DISABLED })\n    }\n  }, [bookingDisabled])\n\n  const onClick = async () => {\n    try {\n      await mutate(\n        {\n          type: sanitizeFetchType(UPDATE),\n          resource: ResourceName.BOOKINGS,\n          payload: {\n            data: { id: bookingId, disabled: mutateParam },\n          } as UpdateParams<BookingUpdateRequest>,\n        },\n        { returnPromise: true },\n      )\n      refresh()\n    } catch (err) {\n      notify((err as Error)?.message, 'error')\n    }\n  }\n\n  return (\n    <Button\n      disabled={type === ToggleType.DISABLED || loading || mutationLoading}\n      className={classes.button}\n      variant=\"contained\"\n      color=\"secondary\"\n      onClick={onClick}\n    >\n      {t(text)}\n    </Button>\n  )\n}\n","import React from 'react'\nimport {\n  useMediaQuery,\n  useTheme,\n  TableContainer,\n  Table,\n  TableHead,\n  TableBody,\n  TableRow,\n  TableCell,\n} from '@material-ui/core'\nimport { ListProps, List, Pagination, useListContext, useTranslate } from 'react-admin'\nimport { MobilePostPagination } from '../../common/Pagination'\n\ninterface AccessListProps extends ListProps {\n  setSelected: (prop: number | undefined) => void\n}\n\nconst AccessGrid = ({\n  setSelected,\n}: {\n  setSelected: (prop: number | undefined) => void\n}) => {\n  const translate = useTranslate()\n  const { data, ids } = useListContext()\n\n  return (\n    <>\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>ID</TableCell>\n              <TableCell>{translate('resources.access.fields.name')}</TableCell>\n              <TableCell>{translate('resources.access.fields.entranceId')}</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {ids.map((id) => (\n              <TableRow key={id} style={{ cursor: 'pointer' }} hover>\n                <TableCell onClick={() => setSelected(id as number)}>\n                  {data[id]?.id}\n                </TableCell>\n                <TableCell onClick={() => setSelected(id as number)}>\n                  {data[id]?.name}\n                </TableCell>\n                <TableCell onClick={() => setSelected(id as number)}>\n                  {data[id]?.entranceId}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  )\n}\n\nexport const AccessList = ({setSelected, ...props}: AccessListProps) => {\n  const theme = useTheme()\n\n  return (\n    <List\n      perPage={20}\n      exporter={false}\n      pagination={\n        useMediaQuery(theme.breakpoints.up('md')) ? (\n          <Pagination rowsPerPageOptions={[20, 50, 100]} />\n        ) : (\n          <MobilePostPagination />\n        )\n      }\n      {...props}\n    >\n      <AccessGrid setSelected={setSelected} />\n    </List>\n  )\n}\n","import { ButtonBase, Typography, withStyles } from '@material-ui/core'\n\nexport const FullWidthButton = withStyles({\n  root: {\n    width: '100%',\n    height: '52px',\n    fontSize: '17px',\n    marginBottom: '1px',\n    '&:hover': {\n      color: 'lightgrey',\n    }\n  },\n})(ButtonBase)\n\nexport const BackButton = withStyles({\n  root: {\n    height: '100%',\n    writingMode: 'vertical-lr',\n    textOrientation: 'mixed',\n    width: '100%',\n    '&:hover': {\n      color: 'lightgrey'\n    }\n  }\n})(ButtonBase)\n\nexport const BackButtonText = withStyles({\n  root: {\n    writingMode: 'vertical-lr',\n    textOrientation: 'mixed',\n  }\n})(Typography)","import {\n  List,\n  ListProps,\n  useListContext,\n  useTranslate,\n  TextField,\n  DateField,\n  useListSortContext\n} from 'react-admin'\nimport React, { useState } from 'react'\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  IconButton,\n  Collapse,\n} from '@material-ui/core'\nimport { ArrowDropUp, ArrowDropDown, ArrowUpward, ArrowDownward } from '@material-ui/icons'\nimport { AccessDateDto } from '../../../core/dto/access-date.dto'\n\nconst AccessDatesRow = ({ record }: { record: AccessDateDto }) => {\n  const [open, setOpen] = useState(false)\n  const translate = useTranslate()\n  return (\n    <>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <IconButton\n            onClick={() => setOpen((state) => !state)}\n            style={{ width: 40, height: 40 }}\n          >\n            {open ? <ArrowDropUp /> : <ArrowDropDown />}\n          </IconButton>\n        </TableCell>\n        <TableCell>\n          <DateField record={record} source=\"activeFrom\" />\n        </TableCell>\n        <TableCell>\n          <DateField record={record} source=\"activeTo\" />\n        </TableCell>\n        <TableCell>\n          <TextField record={record} source=\"type\" />\n        </TableCell>\n        <TableCell>\n          <TextField record={record} source=\"priority\" />\n        </TableCell>\n      </TableRow>\n      {(record.dayOfWeek || record.timeFrom || record.timeTo) && (\n        <TableRow>\n          <TableCell colSpan={5} style={{ paddingBottom: 0, paddingTop: 0 }}>\n            <Collapse in={open}>\n              <TableContainer>\n                <Table>\n                  <TableBody>\n                    {record.dayOfWeek && (\n                      <TableRow>\n                        <TableCell>\n                          {translate('resources.access-dates.fields.dayOfWeek')}\n                        </TableCell>\n                        <TableCell style={{ textAlign: 'end' }}>\n                          <TextField\n                            record={record}\n                            source=\"dayOfWeek\"\n                            label=\" \"\n                          />\n                        </TableCell>\n                      </TableRow>\n                    )}\n                    {record.timeFrom && (\n                      <TableRow>\n                        <TableCell>\n                          {translate('resources.access-dates.fields.timeFrom')}\n                        </TableCell>\n                        <TableCell style={{ textAlign: 'end' }}>\n                          <DateField\n                            record={record}\n                            source=\"timeFrom\"\n                            label=\" \"\n                            showTime\n                          />\n                        </TableCell>\n                      </TableRow>\n                    )}\n                    {record.timeTo && (\n                      <TableRow>\n                        <TableCell>\n                          {translate('resources.access-dates.fields.timeTo')}\n                        </TableCell>\n                        <TableCell style={{ textAlign: 'end' }}>\n                          <DateField\n                            record={record}\n                            source=\"timeTo\"\n                            label=\" \"\n                            showTime\n                          />\n                        </TableCell>\n                      </TableRow>\n                    )}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n            </Collapse>\n          </TableCell>\n        </TableRow>\n      )}\n    </>\n  )\n}\n\nconst AccessDatesGrid = () => {\n  const translate = useTranslate()\n  const { data, ids } = useListContext()\n  const { currentSort, setSort } = useListSortContext()\n\n  const inverseOrder = () => (currentSort.order === 'ASC' ? 'DESC' : 'ASC')\n\n  const handleSortChange = (field: string) => {\n    setSort(field, currentSort.field === field ? inverseOrder() : 'DESC')\n  }\n\n  const HeaderCell = (name: string, display: string) => (\n    <div style={{ display: 'flex', cursor: 'pointer', textAlign: 'center' }}>\n      {currentSort.field === name && (\n        <>{currentSort.order === 'ASC' ? <ArrowUpward /> : <ArrowDownward />}</>\n      )}\n      <div> {translate(display)} </div>\n    </div>\n  )\n\n  return (\n    <TableContainer>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell style={{ width: '5%' }} />\n            <TableCell onClick={() => handleSortChange('activeFrom')}>\n              {HeaderCell('activeFrom', 'resources.access-dates.fields.activeFrom')}\n            </TableCell>\n            <TableCell onClick={() => handleSortChange('activeTo')}>\n              {HeaderCell('activeTo', 'resources.access-dates.fields.activeTo')}\n            </TableCell>\n            <TableCell onClick={() => handleSortChange('type')}>\n              {HeaderCell('type', 'resources.access-dates.fields.type')}\n            </TableCell>\n            <TableCell>\n              {translate('resources.access-dates.fields.priority')}\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {ids.map((id) => (\n            <AccessDatesRow key={id} record={data[id] as AccessDateDto} />\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n\nexport const AccessDatesList = (props: ListProps) => (\n  <List\n    {...props}\n    exporter={false}\n    perPage={20}\n    sort={{ field: 'id', order: 'DESC' }}\n  >\n    <AccessDatesGrid />\n  </List>\n)\n","import React, { useState } from 'react'\nimport {\n  ShowProps,\n  Show,\n  useShowContext,\n  ResourceContextProvider,\n  useTranslate,\n  TextField,\n  DateField,\n  FunctionField,\n  Record,\n  Pagination\n} from 'react-admin'\nimport {\n  TableContainer,\n  Table,\n  TableBody,\n  TableRow,\n  TableCell,\n  Grid,\n  Paper,\n  Box,\n} from '@material-ui/core'\nimport { Access } from '../../../core/accesses/access'\nimport { FullWidthButton } from '../TicketDetailsComponents'\nimport { ResourceName } from '../../../core/ResourceName'\nimport { AccessUsingsList } from './AccessUsingsList'\nimport { AccessDatesList } from './AccessDatesList'\nimport { AccessActivePeriodStartingOptions } from '../../../core/enum/AccessActivePeriodStartingOptions'\n\nconst TabButton = ({\n  value,\n  selected,\n  change,\n  children,\n}: {\n  value: number\n  selected: number\n  change: (prop: number) => void\n  children: any\n}) => (\n  <FullWidthButton\n    style={{\n      background: selected === value ? 'rgba(0,0,0,0.2)' : 'inherit',\n    }}\n    onClick={() => change(value)}\n  >\n    {children}\n  </FullWidthButton>\n)\n\nconst AccessDetails = () => {\n  const translate = useTranslate()\n  const { record: access } = useShowContext<Access>()\n  return (\n    <TableContainer>\n      <Table>\n        <TableBody>\n          <TableRow>\n            <TableCell style={{ width: '50%' }}>ID</TableCell>\n            <TableCell style={{ width: '50%' }}>\n              <TextField source=\"id\" />\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>{translate('resources.access.fields.name')}</TableCell>\n            <TableCell>\n              <TextField source=\"name\" />\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>{translate('resources.access.fields.bonus')}</TableCell>\n            <TableCell>\n              <FunctionField\n                render={(record: Record | undefined) =>\n                  translate(`resources.enums.bonus.${record?.bonus}`)\n                }\n              />\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              {translate('resources.access.fields.entranceId')}\n            </TableCell>\n            <TableCell>\n              <TextField source=\"entranceId\" />\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              {translate('resources.access.fields.modifiedById')}\n            </TableCell>\n            <TableCell>\n              <TextField source=\"modifiedByName\" />\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              {translate('resources.access.fields.createdById')}\n            </TableCell>\n            <TableCell>\n              <TextField source=\"createdByName\" />\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              {translate('resources.access.fields.allowReenter')}\n            </TableCell>\n            <TableCell>\n              <FunctionField\n                render={(record: Record | undefined) =>\n                  record?.allowReenter\n                    ? translate('const.yes')\n                    : translate('const.no')\n                }\n              />\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              {translate('resources.access.fields.multipleEntry')}\n            </TableCell>\n            <TableCell>\n              <FunctionField\n                render={(record: Record | undefined) =>\n                  record?.multipleEntry\n                    ? translate('const.yes')\n                    : translate('const.no')\n                }\n              />\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              {translate('resources.access.fields.multiple')}\n            </TableCell>\n            <TableCell>\n              <TextField source=\"multiple\" />\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              {translate('resources.access.fields.usePriority')}\n            </TableCell>\n            <TableCell>\n              <TextField source=\"usePriority\" />\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>{translate('resources.access.fields.delay')}</TableCell>\n            <TableCell>\n              <TextField source=\"delay\" />\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              {translate('resources.access.fields.releaseTime')}\n            </TableCell>\n            <TableCell>\n              <DateField source=\"releaseTime\" />\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              {translate('resources.access.fields.releaseDayOfMonth')}\n            </TableCell>\n            <TableCell>\n              <TextField source=\"releaseDayOfMonth\" />\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              {translate('resources.access.fields.releaseDayOfWeek')}\n            </TableCell>\n            <TableCell>\n              <TextField source=\"releaseDayOfWeek\" />\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              {translate('resources.access.fields.createdAt')}\n            </TableCell>\n            <TableCell>\n              <DateField source=\"createdAt\" />\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              {translate('resources.access.fields.modifiedAt')}\n            </TableCell>\n            <TableCell>\n              <DateField source=\"modifiedAt\" />\n            </TableCell>\n          </TableRow>\n          {access?.activePeriodStartingFrom !==\n            AccessActivePeriodStartingOptions.NO_LIMIT && (\n              <TableRow>\n                <TableCell>\n                  {translate('resources.access.fields.activePeriod')}\n                </TableCell>\n                <TableCell>\n                  <TextField source=\"activePeriod\" />\n                </TableCell>\n              </TableRow>\n            )}\n          <TableRow>\n            <TableCell>\n              {translate('resources.access.fields.activePeriodStartingFrom')}\n            </TableCell>\n            <TableCell>\n              <FunctionField\n                render={(record: Record | undefined) =>\n                  translate(\n                    `resources.enums.activePeriodStartingFrom.${record?.activePeriodStartingFrom}`,\n                  )\n                }\n              />\n            </TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n\nconst AccessDates = () => {\n  const { basePath, record } = useShowContext<Access>()\n  return (\n    <Box>\n      <ResourceContextProvider value={ResourceName.ACCESS_DATES}>\n        <AccessDatesList\n          title=\" \"\n          basePath={basePath}\n          filter={{\n            id: record?.accessDatesIds.join(','),\n          }}\n          actions={false}\n          perPage={20}\n          pagination={<Pagination rowsPerPageOptions={[20, 50, 100]} />}\n        />\n      </ResourceContextProvider>\n    </Box>\n  )\n}\n\nconst AccessUses = ({ id, tickets }: { id: string; tickets: number[] }) => {\n  const { basePath } = useShowContext<Access>()\n  return (\n    <Box>\n      <ResourceContextProvider value={ResourceName.ACCESS_USINGS}>\n        <AccessUsingsList\n          title=\" \"\n          basePath={basePath}\n          filter={{\n            ticketId: tickets.join(' '),\n            accessId: id,\n          }}\n          actions={false}\n          perPage={20}\n          pagination={<Pagination rowsPerPageOptions={[20, 50, 100]} />}\n        />\n      </ResourceContextProvider>\n    </Box>\n  )\n}\n\nexport const AccessShow = (props: ShowProps) => {\n  const translate = useTranslate()\n  const [selectedTab, setSelectedTab] = useState(0)\n  const { record } = useShowContext()\n  const { id } = props\n\n  const handleTabChange = (prop: number) => setSelectedTab(prop)\n\n  return (\n    <Show {...props}>\n      <>\n        <Grid container>\n          <Grid item xs={4}>\n            <Paper style={{ height: '100%' }}>\n              <TabButton\n                value={0}\n                selected={selectedTab}\n                change={handleTabChange}\n              >\n                {translate('resources.access.tabs.details')}\n              </TabButton>\n              <TabButton\n                value={1}\n                selected={selectedTab}\n                change={handleTabChange}\n              >\n                {translate('resources.access.tabs.dates')}\n              </TabButton>\n              <TabButton\n                value={2}\n                selected={selectedTab}\n                change={handleTabChange}\n              >\n                {translate('resources.access.tabs.uses')}\n              </TabButton>\n            </Paper>\n          </Grid>\n          <Grid item xs={8}>\n            <Paper style={{ height: '100%' }}>\n              {selectedTab === 0 && <AccessDetails />}\n              {selectedTab === 1 && <AccessDates />}\n              {selectedTab === 2 && (\n                <AccessUses\n                  id={id as string}\n                  tickets={\n                    record?.tickets.map((ticket: any) => ticket.id) as number[]\n                  }\n                />\n              )}\n            </Paper>\n          </Grid>\n        </Grid>\n      </>\n    </Show>\n  )\n}\n","import React, { useEffect } from 'react'\nimport {\n  ChipFieldProps,\n  DateField,\n  Labeled,\n  ResourceContextProvider,\n  Show,\n  ShowProps,\n  Tab,\n  TabbedShowLayout,\n  TextField,\n  useRecordContext,\n  useTranslate,\n  useShowContext,\n} from 'react-admin'\nimport { Box, Chip, Divider, Hidden, Grid, Typography } from '@material-ui/core'\nimport { TicketDetails } from '../../core/ticket-details/ticket-details'\nimport { mapFromBookingType } from '../../core/ticket-details/ticket-details-values.mapper'\nimport { TicketDetailsHeader } from './TicketDetailsHeader'\nimport { TicketDetailsTicketsField } from './TicketDetailsTicketsField'\nimport { ToggleAccessButton } from './ToggleAccessButton'\nimport { ToggleTicketButton } from './ToggleTicketButton'\nimport { ResourceName } from '../../core/ResourceName'\nimport { LogList } from '../logs/LogList'\nimport { AccessList } from './accesses/AccessList'\nimport { AccessShow } from './accesses/AccessShow'\nimport { BackButton, BackButtonText } from './TicketDetailsComponents'\n\nconst MappedChipField = <T extends unknown>({\n  mapper,\n  source,\n}: ChipFieldProps & { mapper: (value: T) => string }) => {\n  const record = useRecordContext<TicketDetails>()\n  const t = useTranslate()\n  const mappedValue = mapper(record[source as string])\n  return <Chip label={t(mappedValue)} />\n}\n\nconst AccessDetailsView = () => {\n  const { record, basePath } = useShowContext()\n  const translate = useTranslate()\n  const [selectedAccess, setSelectedAccess] = React.useState<\n    number | undefined\n  >(undefined)\n\n  const handleAccessChange = (prop: number | undefined) => {\n    setSelectedAccess(prop)\n  }\n\n  useEffect(() => {\n    if (record?.accessesIds && record.accessesIds.length === 1)\n      setSelectedAccess(record?.accessesIds.toString())\n  }, [record, setSelectedAccess])\n\n  return (\n    <>\n      <Divider />\n      <Hidden xlDown={!!selectedAccess && record?.accessesIds.length === 1}>\n        <Typography variant=\"h5\">\n          {translate('resources.access.actions.choose')}\n        </Typography>\n        <ResourceContextProvider value={ResourceName.ACCESSES}>\n          <AccessList\n            basePath={basePath}\n            actions={false}\n            filters={undefined}\n            filter={{ id: record?.accessesIds.toString() }}\n            title=\" \"\n            setSelected={handleAccessChange}\n          />\n        </ResourceContextProvider>\n      </Hidden>\n      {selectedAccess && (\n        <Box paddingY={2}>\n          <Grid container>\n            <Hidden xlDown={record?.accessesIds.length === 1}>\n              <Grid item xs={1}>\n                <BackButton onClick={() => setSelectedAccess(undefined)}>\n                  <BackButtonText>\n                    {translate('resources.access.actions.back')}\n                  </BackButtonText>\n                </BackButton>\n              </Grid>\n            </Hidden>\n            <Grid item xs={record?.accessesIds.length === 1 ? 12 : 11}>\n              <AccessShow\n                basePath={basePath}\n                actions={false}\n                id={selectedAccess.toString()}\n                resource={ResourceName.ACCESSES}\n                title=\" \"\n              />\n            </Grid>\n          </Grid>\n        </Box>\n      )}\n    </>\n  )\n}\n\nconst ProfileDetailsView = () => {\n  const { record } = useShowContext()\n  return (\n    <Tab label=\"resources.ticket-details.tabs.profile\">\n      {record?.documentType && (\n        <TextField\n          addLabel\n          label=\"resources.ticket-details.fields.documentType\"\n          source=\"documentType\"\n        />\n      )}\n      {record?.pesel && (\n        <TextField\n          label=\"resources.ticket-details.fields.pesel\"\n          source=\"pesel\"\n        />\n      )}\n      {record?.documentNumber && (\n        <TextField\n          label=\"resources.ticket-details.fields.documentNumber\"\n          source=\"documentNumber\"\n        />\n      )}\n      <TextField\n        label=\"resources.ticket-details.fields.firstname\"\n        source=\"firstname\"\n      />\n      <TextField\n        label=\"resources.ticket-details.fields.lastname\"\n        source=\"lastname\"\n      />\n      {record?.gender && (\n        <TextField\n          label=\"resources.ticket-details.fields.gender\"\n          source=\"gender\"\n        />\n      )}\n      {record?.birthdate && (\n        <DateField\n          label=\"resources.ticket-details.fields.birthdate\"\n          source=\"birthdate\"\n        />\n      )}\n      {record?.company && (\n        <TextField\n          label=\"resources.ticket-details.fields.company\"\n          source=\"company\"\n        />\n      )}\n      {record?.nationality && (\n        <TextField\n          label=\"resources.ticket-details.fields.nationality\"\n          source=\"nationality\"\n        />\n      )}\n    </Tab>\n  )\n}\n\nconst StatusButtons = () => (\n  <>\n    <Divider />\n    <Box p={1} display=\"flex\" justifyContent=\"flex-end\">\n      <ToggleAccessButton />\n      <ToggleTicketButton />\n    </Box>\n  </>\n)\n\nconst TicketMainView = () => {\n  const { record: ticketDetails } = useShowContext<TicketDetails>()\n  return (\n    <Tab label=\"resources.ticket-details.tabs.booking\">\n      <TextField\n        label=\"resources.ticket-details.fields.eventName\"\n        source=\"eventName\"\n      />\n      {ticketDetails?.seatId ? (\n        <TextField\n          label=\"resources.ticket-details.fields.seatId\"\n          source=\"seatId\"\n        />\n      ) : (\n        <TextField\n          label=\"resources.ticket-details.fields.bookingId\"\n          source=\"bookingId\"\n        />\n      )}\n      {ticketDetails?.objectName && (\n        <TextField\n          label=\"resources.ticket-details.fields.blockId\"\n          source=\"objectName\"\n        />\n      )}\n      {ticketDetails?.tribuneName && (\n        <TextField\n          label=\"resources.ticket-details.fields.tribuneName\"\n          source=\"tribuneName\"\n        />\n      )}\n      {ticketDetails?.blockName && (\n        <TextField\n          label=\"resources.ticket-details.fields.blockName\"\n          source=\"blockName\"\n        />\n      )}\n      {ticketDetails?.rowNumber && (\n        <TextField\n          label=\"resources.ticket-details.fields.rowNumber\"\n          source=\"rowNumber\"\n        />\n      )}\n      <Labeled label=\"resources.ticket-details.fields.bookingType\">\n        <MappedChipField source=\"bookingType\" mapper={mapFromBookingType} />\n      </Labeled>\n      {ticketDetails?.activeFrom && (\n        <DateField\n          label=\"resources.ticket-details.fields.activeFrom\"\n          source=\"activeFrom\"\n          showTime\n        />\n      )}\n      {ticketDetails?.activeTo && (\n        <DateField\n          label=\"resources.ticket-details.fields.activeTo\"\n          source=\"activeTo\"\n          showTime\n        />\n      )}\n      <TicketDetailsTicketsField label=\"resources.ticket-details.fields.tickets.name\" />\n      <DateField\n        label=\"resources.ticket-details.fields.createdAt\"\n        source=\"createdAt\"\n        showTime\n      />\n      <DateField\n        label=\"resources.ticket-details.fields.modifiedAt\"\n        source=\"modifiedAt\"\n        showTime\n      />\n      <StatusButtons />\n    </Tab>\n  )\n}\n\nconst TicketLogsView = () => {\n  const { record, basePath } = useShowContext()\n  return (\n    <ResourceContextProvider value={ResourceName.TICKET_LOGS}>\n      <LogList\n        basePath={basePath}\n        filter={{ bookingId: record?.id }}\n        filters={undefined}\n        actions={false}\n        title=\" \"\n        noBooking\n      />\n    </ResourceContextProvider>\n  )\n}\n\nexport const TicketDetailsView = (props: ShowProps) => (\n  <Show {...props}>\n    <>\n      <TicketDetailsHeader />\n      <Divider />\n      <TabbedShowLayout syncWithLocation={false}>\n        <Tab label=\"resources.ticket-details.tabs.booking\">\n          <TicketMainView />\n        </Tab>\n        <Tab label=\"resources.ticket-details.tabs.logs\">\n          <TicketLogsView />\n        </Tab>\n        <Tab label=\"resources.ticket-details.tabs.profile\">\n          <ProfileDetailsView />\n        </Tab>\n        <Tab label=\"resources.ticket-details.tabs.accesses\">\n          <TextField\n            label=\"resources.ticket-details.fields.variantName\"\n            source=\"variantName\"\n          />\n          <AccessDetailsView />\n        </Tab>\n      </TabbedShowLayout>\n    </>\n  </Show>\n)","import * as React from 'react'\nimport { TextField, TextFieldProps, useRecordContext } from 'react-admin'\nimport { maskMiddlePart } from '../../core/common/mask.utils'\n\nexport const MaskField = ({ source, ...rest }: TextFieldProps) => {\n  const record = useRecordContext()\n  const recordWithMappedValue = {\n    ...record,\n    [source as string]: maskMiddlePart(record[source as string], 2),\n  }\n  return <TextField {...rest} record={recordWithMappedValue} source={source} />\n}\n","/**\n * @example\n * maskMiddlePart('importantValue', 3) === 'imp********lue'\n */\nexport const maskMiddlePart = (word: string, threshold: number) => {\n  const firstChars = word.substring(0, threshold)\n  const lastChars = word.slice(-threshold)\n  const restCharsLength = word.length - firstChars.length - lastChars.length\n  return `${firstChars}${'*'.repeat(\n    restCharsLength > 0 ? restCharsLength : 0,\n  )}${lastChars}`\n}\n","import { Box, Card, Divider, Typography } from '@material-ui/core'\nimport * as React from 'react'\nimport {\n  Datagrid,\n  List,\n  ListProps,\n  TextField,\n  useListContext,\n  useTranslate,\n  FunctionField,\n  Record\n} from 'react-admin'\nimport { useLocation } from 'react-router-dom'\nimport { ResourceName } from '../../core/ResourceName'\nimport { FindUserByTicket } from '../common/FindUserByTicket'\nimport { MaskField } from '../common/MaskField'\n\nconst TicketInfoGrid = () => {\n  const {\n    loading,\n    filterValues: { ticketCode },\n  } = useListContext()\n  const t = useTranslate()\n  return (\n    <>\n      <Box m={2}>\n        <Typography variant=\"h5\" paragraph>\n          {t('resources.ticket-info.search-list-title', { ticketCode })}\n        </Typography>\n      </Box>\n      <Divider />\n      <Datagrid\n        loaded={!loading}\n        rowClick={(id) => `${ResourceName.TICKET_DETAILS}/${id}/show`}\n      >\n        <TextField source=\"firstname\" sortable={false} />\n        <TextField source=\"lastname\" sortable={false} />\n        <MaskField source=\"pesel\" sortable={false} />\n        <TextField source=\"ticketCode\" sortable={false} />\n        <FunctionField\n          label='resources.ticket-info.fields.eventName'\n          render={(record: Record | undefined) => `${record?.eventName} ${record?.eventDate.replace(\"T\", \" \")} ${record?.eventId}`} />\n        <TextField source=\"id\" sortable={false} />\n      </Datagrid>\n    </>\n  )\n}\n\nexport const TicketInfoList = (props: ListProps) => {\n  const { search } = useLocation()\n  return (\n    <>\n      <Card style={{ marginTop: '2%' }}>\n        <FindUserByTicket titleCentered />\n      </Card>\n      {!!search && (\n        <List actions={false} pagination={false} {...props}>\n          <TicketInfoGrid />\n        </List>\n      )}\n    </>\n  )\n}\n","import {\n  Button,\n  ButtonGroup,\n  Card,\n  CardContent,\n  createStyles,\n  FormControlLabel,\n  Grid,\n  makeStyles,\n  MenuItem,\n  Paper,\n  Select,\n  Switch,\n  Theme,\n  Typography,\n} from '@material-ui/core'\nimport React, { useEffect, useState } from 'react'\nimport {\n  Title,\n  useGetIdentity,\n  useLocale,\n  UserIdentity,\n  useSetLocale,\n  useTranslate,\n} from 'react-admin'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Event, List, Search } from '@material-ui/icons'\nimport { ThemeState } from '../../core/common/theme.reducer'\nimport { CHANGE_THEME } from '../../core/constants/reducer.actions'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    label: { width: '15vw', display: 'inline-block' },\n    button: { margin: theme.spacing(2) },\n    select: { width: '40vw', margin: theme.spacing(2) },\n    compsContainer: {\n      width: '40vw',\n      display: 'inline-block',\n      margin: theme.spacing(2),\n    },\n  }),\n)\n\nconst DashboardCustomization = () => {\n  const { identity } = useGetIdentity()\n\n  const isItemShown = (item: string, userId?: UserIdentity) => {\n    const show = localStorage.getItem(`${userId?.id}.${item}`)\n    return show !== '0'\n  }\n\n  const [componentsOpen, setComponentsOpen] = useState({\n    ticketfinder: isItemShown('ticketfinder', identity),\n    dashlogs: isItemShown('dashlogs', identity),\n    lastevents: isItemShown('lastevents', identity),\n  })\n  const translate = useTranslate()\n\n  const componentsChange = ({\n    target: { checked, name },\n  }: React.ChangeEvent<HTMLInputElement>) => {\n    setComponentsOpen((open) => ({\n      ...open,\n      [name]: checked,\n    }))\n    const key = `${identity?.id}.${name}`\n    if (checked) {\n      localStorage.removeItem(key)\n    } else {\n      localStorage.setItem(key, '0')\n    }\n  }\n\n  useEffect(() => {\n    setComponentsOpen({\n      ticketfinder: isItemShown('ticketfinder', identity),\n      dashlogs: isItemShown('dashlogs', identity),\n      lastevents: isItemShown('lastevents', identity),\n    })\n  }, [identity])\n\n  return (\n    <Grid container spacing={1}>\n      <Grid item xs={6}>\n        <Paper>\n          <Search />\n          <FormControlLabel\n            control={\n              <Switch\n                checked={componentsOpen.ticketfinder}\n                name=\"ticketfinder\"\n                onChange={componentsChange}\n              />\n            }\n            label={translate('dashboard.settings.ticket-finder-label')}\n            labelPlacement=\"top\"\n            style={{ margin: '5%', textAlign: 'center', width: '90%' }}\n          />\n        </Paper>\n      </Grid>\n      <Grid item xs={6}>\n        <Paper>\n          <List />\n          <FormControlLabel\n            control={\n              <Switch\n                checked={componentsOpen.dashlogs}\n                name=\"dashlogs\"\n                onChange={componentsChange}\n              />\n            }\n            label={translate('dashboard.settings.last-logs-label')}\n            labelPlacement=\"top\"\n            style={{ margin: '5%', textAlign: 'center', width: '90%' }}\n          />\n        </Paper>\n      </Grid>\n      <Grid item xs={6}>\n        <Paper>\n          <Event />\n          <FormControlLabel\n            control={\n              <Switch\n                checked={componentsOpen.lastevents}\n                name=\"lastevents\"\n                onChange={componentsChange}\n              />\n            }\n            label={translate('dashboard.settings.last-events-label')}\n            labelPlacement=\"top\"\n            style={{ margin: '5%', textAlign: 'center', width: '90%' }}\n          />\n        </Paper>\n      </Grid>\n    </Grid>\n  )\n}\n\nexport const Configuration = () => {\n  const dispatch = useDispatch()\n  const theme = useSelector(\n    (state: ThemeState) => state.theme.darkMode === 'dark',\n  )\n  const classes = useStyles()\n  const locale = useLocale()\n  const setLocale = useSetLocale()\n  const translate = useTranslate()\n\n  return (\n    <Card>\n      <Title title={translate('settings.name')} />\n      <CardContent>\n        <Typography className={classes.label}>\n          {translate('settings.darkMode.name')}\n        </Typography>\n        <ButtonGroup className={classes.button}>\n          <Button\n            size=\"large\"\n            variant=\"contained\"\n            color={!theme ? 'primary' : 'default'}\n            onClick={() => theme && dispatch({ type: CHANGE_THEME })}\n          >\n            {translate('settings.darkMode.light')}\n          </Button>\n          <Button\n            size=\"large\"\n            variant=\"contained\"\n            color={theme ? 'primary' : 'default'}\n            onClick={() => !theme && dispatch({ type: CHANGE_THEME })}\n          >\n            {translate('settings.darkMode.dark')}\n          </Button>\n        </ButtonGroup>\n      </CardContent>\n      <CardContent>\n        <Typography className={classes.label}>\n          {translate('settings.language.name')}\n        </Typography>\n        <Select\n          value={locale}\n          onChange={(e) => setLocale(e.target.value as string)}\n          className={classes.select}\n          variant=\"outlined\"\n        >\n          <MenuItem value=\"pl\">{translate('settings.language.pl')}</MenuItem>\n          <MenuItem value=\"en\">{translate('settings.language.en')}</MenuItem>\n        </Select>\n      </CardContent>\n      <CardContent>\n        <Typography className={classes.label}>\n          {translate('dashboard.settings.title')}\n        </Typography>\n        <div className={classes.compsContainer}>\n          <DashboardCustomization />\n        </div>\n      </CardContent>\n    </Card>\n  )\n}\n","import * as React from 'react';\nimport { Route } from 'react-router-dom';\nimport { Configuration } from './Configuration'\n\nexport default [\n    <Route exact path=\"/configuration\" render={() => <Configuration/>} />\n]","import ReceiptIcon from '@material-ui/icons/Receipt'\nimport ViewComfyIcon from '@material-ui/icons/ViewComfy'\nimport PersonIcon from '@material-ui/icons/Person'\nimport React from 'react'\nimport { Admin, Resource } from 'react-admin'\nimport themeReducer from './core/common/theme.reducer'\nimport { providersFactory } from './core/providers.factory'\nimport { ResourceName } from './core/ResourceName'\nimport { AppLayout } from './main/common/AppLayout'\nimport { CustomerDetailsView } from './main/customer-details/CustomerDetailsView'\nimport { CustomerInfoList } from './main/customer-info/CustomerInfoList'\nimport { Dashboard } from './main/Dashboard'\nimport { EventEdit } from './main/events/EventEdit'\nimport { EventList } from './main/events/EventList'\nimport { EventShow } from './main/events/EventShow'\nimport { LogList } from './main/logs/LogList'\nimport { OverallView } from './main/stats/overall-view/OverallView'\nimport { OverallViewList } from './main/stats/overall-view/OverallViewList'\nimport { AccessUsingsList } from './main/ticket-details/accesses/AccessUsingsList'\nimport { TicketDetailsView } from './main/ticket-details/TicketDetailsView'\nimport { TicketInfoList } from './main/ticket-info/TicketInfoList'\nimport routes from './main/common/routes'\n\nconst App = () => {\n  const { authProvider, dataProvider, i18nProvider } = providersFactory(process.env.NODE_ENV)\n  return (\n    <Admin\n      dashboard={Dashboard}\n      authProvider={authProvider}\n      dataProvider={dataProvider}\n      i18nProvider={i18nProvider}\n      customReducers={{ theme: themeReducer }}\n      customRoutes={routes}\n      layout={AppLayout}\n    >\n      <Resource\n        icon={ReceiptIcon}\n        name={ResourceName.TICKET_INFO}\n        list={TicketInfoList}\n      />\n      <Resource\n        name={ResourceName.TICKET_DETAILS}\n        show={TicketDetailsView}\n      />\n      <Resource\n        name={ResourceName.LOGS}\n        list={LogList}\n      />\n      <Resource\n        icon={ViewComfyIcon}\n        name={ResourceName.STATS_OVERALL_VIEW_LIST}\n        list={OverallViewList}\n      />\n      <Resource\n        icon={ViewComfyIcon}\n        name={ResourceName.STATS_OVERALL_VIEW}\n        show={OverallView}\n      />\n      <Resource\n        name={ResourceName.TICKET_LOGS} />\n      <Resource\n        name={ResourceName.ACCESSES} />\n      <Resource\n        name={ResourceName.ACCESS_USINGS}\n        list={AccessUsingsList}\n      />\n      <Resource\n        name={ResourceName.EVENTS}\n        list={EventList}\n        show={EventShow}\n        edit={EventEdit} />\n      <Resource\n        icon={PersonIcon}\n        name={ResourceName.CUSTOMER_INFO}\n        list={CustomerInfoList}\n      />\n      <Resource\n        name={ResourceName.CUSTOMER_DETAILS}\n        show={CustomerDetailsView} />\n      <Resource\n        name={ResourceName.BOOKINGS} />\n      <Resource\n        name={ResourceName.ACCESS_DATES} />\n      <Resource\n        name={ResourceName.COMPANIES} />\n      <Resource\n        name={ResourceName.OBJECTS} />\n      <Resource\n        name={ResourceName.ENGINES} />\n      <Resource\n        name={ResourceName.PALMS} />\n    </Admin>\n  )\n}\n\nexport default App\n","import { AuthProvider, DataProvider, I18nProvider, LegacyDataProvider } from 'react-admin'\nimport fakeDataProvider from './fake/fake-data.provider'\nimport fakeAuthProvider from './fake/providers/fake-auth.provider'\nimport authProvider from './auth/auth.provider'\nimport dataProvider from './data.provider'\nimport i18nProvider from './i18n.provider'\n\ninterface Providers {\n  readonly authProvider: AuthProvider\n  readonly dataProvider: DataProvider | LegacyDataProvider\n  readonly i18nProvider: I18nProvider\n}\n\nexport const providersFactory = (\n  env: 'development' | 'test' | 'production',\n): Providers => {\n  switch (env) {\n    case 'production':\n      return {\n        authProvider,\n        dataProvider,\n        i18nProvider,\n      }\n    case 'development':\n      return {\n        authProvider,\n        dataProvider,\n        i18nProvider,\n      }\n    default:\n      return {\n        authProvider: fakeAuthProvider,\n        dataProvider: fakeDataProvider,\n        i18nProvider,\n      }\n  }\n}\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import { initReactI18next } from 'react-i18next'\nimport i18n from 'i18next'\nimport plTranslation from './locales/pl/translation.json'\nimport enTranslation from './locales/en/translation.json'\n\nconst identity = localStorage.getItem('username')\nconst lng = identity && localStorage.getItem(`${identity}.lng`)\n\ni18n.use(initReactI18next)\n  .init({\n    lng: lng || 'pl',\n    fallbackLng: 'pl',\n    debug: false,\n    interpolation: {\n      escapeValue: false, // not needed for react as it escapes by default\n    },\n    resources: {\n      pl: { translation: plTranslation },\n      en: { translation: enTranslation },\n    },\n  })\n\nexport default i18n\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport './i18n.init'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}