{"version":3,"sources":["core/constants/reducer.actions.ts","core/common/theme.reducer.ts","core/ResourceName.ts","core/enum/TicketType.ts","core/enum/BookingType.ts","core/enum/BookingDisabledOption.ts","core/fake/providers/fake-access-usings.provider.ts","core/fake/providers/fake-bookings.provider.ts","core/fake/providers/fake-logs.provider.ts","core/fake/providers/fake-stats-overall-view-list.provider.ts","core/fake/providers/fake-stats-overall-view.provider.ts","core/fake/providers/fake-ticket-details.provider.ts","core/enum/DeviceDirection.ts","core/fake/providers/fake-ticket-info.provider.ts","core/fake/providers/fake-tickets.provider.ts","core/fake/fake-data.provider.ts","core/fake/providers/fake-auth.provider.ts","core/common/header.parser.ts","core/common/fetch.utils.ts","core/api-urls.ts","core/auth/auth.provider.ts","core/access-usings/access-usings.provider.ts","core/bookings/bookings.provider.ts","core/logs/log-filter.mapper.ts","core/logs/log-sort.mapper.ts","core/logs/extended-logs.provider.ts","core/stats/overall-view/overall-view-list.mapper.ts","core/stats/overall-view/overall-view-list.provider.ts","core/common/filter.values.ts","core/stats/overall-view/overall-view.mapper.ts","core/stats/overall-view/overall-view.provider.ts","core/common/condition.builder.ts","core/common/mapper.utils.ts","core/ticket-details/ticket-details.mapper.ts","core/ticket-details/ticket-details.provider.ts","core/ticket-info/ticket-info.mapper.ts","core/ticket-info/ticket-info.provider.ts","core/tickets/tickets.provider.ts","core/data.provider.ts","core/i18n.provider.ts","app.theme.ts","main/common/AppLayout.tsx","main/common/SearchInput.tsx","main/common/FindUserByTicket.tsx","core/common/visual.utils.ts","main/logs/LastLogList.tsx","main/Dashboard.tsx","main/common/Pagination.tsx","main/logs/DateFilterInput.tsx","main/logs/LogList.tsx","core/ticket-details/toggle-button.ts","main/stats/overall-view/OverallView.tsx","main/stats/overall-view/OverallViewList.tsx","core/ticket-details/ticket-details-values.mapper.ts","main/ticket-details/TicketDetailsHeader.tsx","main/ticket-details/TicketDetailsTicketsField.tsx","core/ticket-details/toggle-access-button.reducer.ts","main/ticket-details/ToggleAccessButton.tsx","core/ticket-details/toggle-ticket-button.reducer.ts","main/ticket-details/ToggleTicketButton.tsx","main/ticket-details/TicketDetailsView.tsx","main/common/MaskField.tsx","core/common/mask.utils.ts","main/ticket-info/TicketInfoList.tsx","App.tsx","core/providers.factory.ts","reportWebVitals.ts","i18n.init.ts","index.tsx"],"names":["CHANGE_THEME","identity","localStorage","getItem","initialState","darkMode","themeReducer","ResourceName","state","action","type","setItem","TicketType","BookingType","BookingDisabledOption","provider","updateMany","resource","params","a","Promise","resolve","data","create","id","update","fakeLogs","date","ticketCode","bookingId","deviceName","text","color","event","getList","total","length","fakeStatsOverallViewList","name","dateStart","dateEnd","eventName","capacity","sold","entered","objects","getOne","found","find","v","reject","Error","DeviceDirection","fakeTicketDetailsList","firstname","lastname","pesel","variantName","accessesIds","bookingType","NORMAL","activeFrom","activeTo","tickets","ticketType","K","accessUsings","createdAt","M","modifiedAt","bookingDisabled","STORNO","fakeTicketInfoList","fakeTickets","active","accessUsingsIds","dataProviders","ACCESS_USINGS","fakeAccessUsingsProvider","BOOKINGS","fakeBookingsProvider","LOGS","fakeLogsProvider","LAST_LOGS","TICKETS","fakeTicketsProvider","TICKET_INFO","fakeTicketInfoProvider","TICKET_DETAILS","fakeTicketDetailsProvider","TICKET_LOGS","STATS_OVERALL_VIEW","fakeStatsOverallViewProvider","STATS_OVERALL_VIEW_LIST","fakeStatsOverallViewListProvider","fetchType","sanitizeFetchType","authProvider","login","logout","checkError","checkAuth","getPermissions","getIdentity","fullName","contentRangeParser","headerValue","split","rangeFrom","summarySecondPartSplit","rangeTo","parseInt","baseHeaders","authHeaders","Authorization","postWithHeaders","url","body","headers","fetchUtils","fetchJson","method","JSON","stringify","Headers","then","json","get","baseUrl","path","getWithPagination","range","getByConditions","pathParam","patch","API_V1","process","AUTH_URL","BOOKINGS_URL","CUSTOMERS_URL","EVENTS_URL","EXTENDED_LOGS_URL","TICKETS_URL","VARIANTS_URL","SEATS_URL","BLOCKS_URL","TRIBUNES_URL","OBJECTS_URL","username","password","token","removeItem","status","ids","pendingUpdates","map","auId","req","all","au","ticketIds","accessIds","request","flatMap","accessId","ticketId","Date","toISOString","direction","IN","verifierDeviceId","booking","mapping","lambdaParameter","value","toString","getFilterParams","filter","Object","keys","entries","key","getFilterMapper","mapper","reduce","p","c","sort","field","order","pagination","page","perPage","filterParams","queryParams","push","pathParams","extendedLogs","device","mapToEventOverallView","events","overallViewList","calculateCapacity","seats","bookings","b","seatId","mapToTribuneOverallView","tribune","blocks","enteredBookingIds","blocksIds","includes","block","filteredSeats","s","blockId","filteredBookingIds","bookingsIds","concat","filteredBookings","book","filteredEnteredBookingIds","enteredBookingId","filteredEnteredBookings","enteredBookings","soldNormal","enteredNormal","soldAbo","ABO","enteredAbo","soldInfix","INFIX","enteredInfix","soldService","SERVICE","enteredService","soldPoints","POINTS","enteredPoints","mapToBlockOverallView","mapToOverallView","selectedEvent","tribunes","o","objectsIds","object","filteredTribunes","t","objectId","filteredBlocks","filteredSeatIds","seatsIds","tribunesIds","tribuneId","mapToObjectOverallView","eventId","pendingSelectedEvent","pendingObjects","pendingTribunes","pendingBlocks","pendingSeats","bookingsCondition","pendingBookings","pendingEnteredBookings","overallViewData","buildFilterByIdsCondition","firstId","prev","curr","toMapById","values","Map","toUniqueValues","Array","from","Set","mapToTicketDetails","disabled","accessUsingById","mapToTicket","fetchTicketsWithAccessUsings","accessUsingIds","customerId","variantId","pendingCustomer","pendingEvent","pendingVariant","pendingTicketsWithAccessUsings","ticketsIds","customer","variant","mapToTicketBaseInfoList","customers","bookingById","customerById","eventById","ticket","mapToTicketBaseInfo","getByUniqueIds","uniqueIds","filterByTicketCodeCondition","bookingIds","customerIds","eventIds","pendingCustomers","pendingEvents","ticketBaseInfoList","accessUsingsProvider","bookingsProvider","logsProvider","ticketsProvider","ticketInfoProvider","ticketDetailsProvider","statsOverallViewProvider","statsOverallViewListProvider","translate","options","i18n","changeLocale","locale","changeLanguage","getLocale","language","LightTheme","defaultTheme","palette","primary","deepPurple","secondary","green","typography","fontFamily","join","body1","fontWeight","body2","h5","DarkTheme","light","main","dark","contrastText","AppTopBar","props","dispatch","useDispatch","theme","useSelector","AppBar","Box","style","display","flexDirection","width","Switch","checkedIcon","Brightness3","fontSize","icon","Brightness5","checked","backgroundColor","onChange","AppLayout","Layout","appBar","RoundInputBox","withStyles","root","borderRadius","marginLeft","border","borderColor","RoundInputBoxBtn","background","borderTopLeftRadius","borderBottomLeftRadius","margin","Button","RoundInputBoxFC","marginTop","FormControl","SearchInput","label","onValue","error","boxStyle","useState","inputError","setInputError","inputValue","setInputValue","handleClick","onClick","Input","disableUnderline","onInput","target","placeholder","onKeyDown","ev","FormHelperText","FindUserByTicket","history","useHistory","notify","useNotify","setError","useMutation","mutate","loading","fetchTickets","useCallback","GET_LIST","payload","returnPromise","onlyTicket","pathname","search","message","undefined","getContrastColor","hexcolor","substr","DashRow","open","setOpen","setColor","textColor","useEffect","TableRow","TableCell","IconButton","size","textAlign","DateField","record","source","showTime","TextField","paddingBottom","paddingTop","colSpan","Collapse","in","Grid","container","item","xs","justifyContent","marginBottom","alignItems","LogGrid","useListContext","TableContainer","component","Paper","Table","padding","TableHead","TableBody","LastLogList","List","exporter","actions","useStyles","makeStyles","createStyles","header","letterSpacing","spacing","subHead","Dashboard","classes","Card","CardHeader","className","title","titleTypographyProps","sm","CardContent","ResourceContextProvider","basePath","MobilePostPagination","setPage","setPerPage","nbPages","Math","ceil","Toolbar","elevation","height","Select","e","MenuItem","ButtonGroup","DateFilterInput","defaultFromDate","now","defaultToDate","React","getTime","dateFrom","setDateFrom","dateTo","setDateTo","useField","input","meta","touched","convertedDate","toJSON","verticalAlign","defaultValue","parse","helperText","alignSelf","DesktopRow","sortable","useListSortContext","currentSort","setSort","handleSortChange","sortBy","HeaderCell","startIcon","MobileRow","LogMobileGrid","ListFilters","Filter","TextInput","alwaysOn","SelectInput","choices","LogList","useTheme","useMediaQuery","breakpoints","down","filters","Pagination","rowsPerPageOptions","Access","noBorderCell","borderBottom","ViewTitle","BlockView","backColor","TribuneView","ObjectView","boxShadow","StatsView","useShowContext","OverallView","Show","OverallViewRow","redirect","hover","OverallViewGrid","OverallViewList","bookingTypeMapping","ticketTypeMapping","Z","N","P","U","R","mapFromTicketType","mapFromBookingType","TicketDetailsHeader","m","Typography","paragraph","ticketBox","ticketField","TicketDetailsTicketsField","fields","useRecordContext","mappedRecord","Labeled","Chip","flexWrap","blockMutation","ticketDetails","CREATE","unblockMutation","activeAccessUsingIds","UPDATE_MANY","blockAccessButtonInitialState","DISABLED","toggleAccessButtonReducer","BLOCK","mutateQuery","UNBLOCK","button","common","white","ToggleAccessButton","useReducer","mutationLoading","refresh","useRefresh","some","query","blockTicketButtonInitialState","toggleTicketButtonReducer","mutateParam","ADMIN","ToggleTicketButton","UPDATE","MappedChipField","mappedValue","TicketDetailsView","ticketLogsBookingFilter","Divider","TabbedShowLayout","syncWithLocation","Tab","emptyText","MaskField","rest","recordWithMappedValue","word","threshold","firstChars","substring","lastChars","slice","restCharsLength","repeat","maskMiddlePart","TicketInfoGrid","filterValues","Datagrid","loaded","rowClick","TicketInfoList","useLocation","App","env","dataProvider","i18nProvider","fakeAuthProvider","fakeDataProvider","providersFactory","Admin","dashboard","customReducers","layout","Resource","ReceiptIcon","list","show","ViewComfyIcon","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","use","initReactI18next","init","fallbackLng","debug","interpolation","escapeValue","resources","pl","translation","plTranslation","en","enTranslation","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.486d36a9.chunk.js","sourcesContent":["export const CHANGE_THEME = 'change-theme'","import { Action } from \"redux\"\nimport { CHANGE_THEME } from \"../constants/reducer.actions\"\n\nconst identity = localStorage.getItem('username')\n\nexport type reducerType = {\n    theme: {\n        darkMode: 'light' | 'dark'\n    }\n}\n\nconst initialState = {\n    darkMode: localStorage.getItem(`${identity}.darkMode`) === 'dark' ? 'dark' : 'light'\n}\n\nfunction themeReducer(state = initialState, action: Action<any>) {\n    if (action.type === CHANGE_THEME) {\n        if (state.darkMode === 'dark') localStorage.setItem(`${identity}.darkMode`, 'light')\n        else localStorage.setItem(`${identity}.darkMode`, 'dark')\n        return {\n            ...state,\n            darkMode: state.darkMode === 'dark' ? 'light' : 'dark'\n        }\n    }\n    return state\n}\n\nexport default themeReducer","export enum ResourceName {\n  ACCESS_USINGS = 'access-usings',\n  BOOKINGS = 'bookings',\n  LAST_LOGS = 'last-logs',\n  LOGS = 'logs',\n  TICKETS = 'tickets',\n  TICKET_DETAILS = 'ticket-details',\n  TICKET_INFO = 'ticket-info',\n  TICKET_LOGS = 'ticket-logs',\n  STATS_OVERALL_VIEW_LIST = \"stats_overall_view_list\",\n  STATS_OVERALL_VIEW = \"stats_overall_view\"\n}\n","export enum TicketType {\n  K = 'K',\n  M = 'M',\n  Z = 'Z',\n  N = 'N',\n  P = 'P',\n  U = 'U',\n  R = 'R',\n}\n","export enum BookingType {\n  NORMAL = 'NORMAL',\n  ABO = 'ABO',\n  INFIX = 'INFIX',\n  SERVICE = 'SERVICE',\n  POINTS = 'POINTS',\n}\n","export enum BookingDisabledOption {\n  ADMIN = 'ADMIN',\n  BAN = 'BAN',\n  STORNO = 'STORNO',\n  MISTAKE = 'MISTAKE',\n}\n","import { CreateResult, DataProvider, UpdateManyResult } from 'react-admin'\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  updateMany: async (resource, params): Promise<UpdateManyResult> =>\n    Promise.resolve({\n      data: [1],\n    }),\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  create: async (resource, params): Promise<CreateResult<unknown>> =>\n    Promise.resolve({\n      data: { id: 1 },\n    }),\n} as DataProvider\n\nexport default provider\n","import { DataProvider, UpdateResult } from 'react-admin'\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  update: async (resource, params): Promise<UpdateResult<unknown>> =>\n    Promise.resolve({\n      data: { id: 1 },\n    }),\n} as DataProvider\n\nexport default provider\n","import { DataProvider } from 'react-admin'\nimport { ExtendedLog } from '../../logs/extended-log'\n\nconst fakeLogs: ExtendedLog[] = [\n  {\n    id: 1,\n    date: '2021-07-15T08:50:27.2054',\n    ticketCode: 'A',\n    bookingId: 52815,\n    deviceName: 'Device name',\n    text: 'MF',\n    color: null,\n    event: null\n  },\n  {\n    id: 2,\n    date: '2021-07-15T08:50:27.2054',\n    ticketCode: 'A',\n    bookingId: 52816,\n    deviceName: 'Device name',\n    text: 'MF',\n    color: null,\n    event: null\n  },\n  {\n    id: 3,\n    date: '2021-07-15T08:50:27.2054',\n    ticketCode: 'A',\n    bookingId: 1111,\n    deviceName: 'Device name',\n    text: 'MF',\n    color: null,\n    event: null\n  },\n  {\n    id: 4,\n    date: '2021-07-15T08:50:27.2054',\n    ticketCode: 'A',\n    bookingId: 11112,\n    deviceName: 'Device name',\n    text: 'MF',\n    color: null,\n    event: null\n  },\n  {\n    id: 5,\n    date: '2021-07-15T08:50:27.2054',\n    ticketCode: 'A',\n    bookingId: 16612,\n    deviceName: 'Device name',\n    text: 'MF',\n    color: null,\n    event: null\n  },\n  {\n    id: 6,\n    date: '2021-07-15T08:50:27.2054',\n    ticketCode: 'A',\n    bookingId: 167782,\n    deviceName: 'Device name',\n    text: 'MF',\n    color: null,\n    event: null\n  },\n  {\n    id: 7,\n    date: '2021-07-15T08:50:27.2054',\n    ticketCode: 'A',\n    bookingId: 122782,\n    deviceName: 'Device name',\n    text: 'MF',\n    color: null,\n    event: null\n  },\n  {\n    id: 8,\n    date: '2021-07-15T08:50:27.2054',\n    ticketCode: 'A',\n    bookingId: 189782,\n    deviceName: 'Device name',\n    text: 'MF',\n    color: null,\n    event: null\n  },\n  {\n    id: 9,\n    date: '2021-07-15T08:50:27.2054',\n    ticketCode: 'A',\n    bookingId: 183332,\n    deviceName: 'Device name',\n    text: 'MF',\n    color: null,\n    event: null\n  },\n  {\n    id: 10,\n    date: '2021-07-15T08:50:27.2054',\n    ticketCode: 'A',\n    bookingId: 656565,\n    deviceName: 'Device name',\n    text: 'MF',\n    color: null,\n    event: null\n  },\n]\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getList: (resource, params) =>\n    Promise.resolve({ data: fakeLogs, total: fakeLogs.length }),\n} as DataProvider\n\nexport default provider\n","import { DataProvider } from 'react-admin'\nimport { EventOverallView } from '../../stats/overall-view/event-overall-view'\n\nconst fakeStatsOverallViewList: EventOverallView[] = [\n  {\n    id: 1,\n    name: \"\",\n    dateStart: '2021-07-13T15:11:06.771267',\n    dateEnd: '2021-07-13T15:11:06.771267'\n  },\n  {\n    id: 2,\n    name: \"\",\n    dateStart: '2021-07-13T15:11:06.771267',\n    dateEnd: '2021-07-13T15:11:06.771267'\n  },\n  {\n    id: 3,\n    name: \"\",\n    dateStart: '2021-07-13T15:11:06.771267',\n    dateEnd: '2021-07-13T15:11:06.771267'\n  },\n  {\n    id: 4,\n    name: \"\",\n    dateStart: '2021-07-13T15:11:06.771267',\n    dateEnd: '2021-07-13T15:11:06.771267'\n  },\n  {\n    id: 5,\n    name: \"\",\n    dateStart: '2021-07-13T15:11:06.771267',\n    dateEnd: '2021-07-13T15:11:06.771267'\n  },\n]\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getList: (resource, params) =>\n    Promise.resolve({ data: fakeStatsOverallViewList, total: fakeStatsOverallViewList.length }),\n} as DataProvider\n\nexport default provider","import { DataProvider } from 'react-admin'\nimport { OverallView } from '../../stats/overall-view/overall-view'\n\nconst fakeStatsOverallViewList: OverallView[] = [\n  {\n    id: 1,\n    eventName: \"\",\n    capacity: 0,\n    sold: 0,\n    entered: 0,\n    objects: []\n  },\n  {\n    id: 2,\n    eventName: \"\",\n    capacity: 0,\n    sold: 0,\n    entered: 0,\n    objects: []\n  },\n  {\n    id: 3,\n    eventName: \"\",\n    capacity: 0,\n    sold: 0,\n    entered: 0,\n    objects: []\n  },\n  {\n    id: 4,\n    eventName: \"\",\n    capacity: 0,\n    sold: 0,\n    entered: 0,\n    objects: []\n  },\n  {\n    id: 5,\n    eventName: \"\",\n    capacity: 0,\n    sold: 0,\n    entered: 0,\n    objects: []\n  },\n]\n\nconst provider = {\n  getOne: (resource, { id }: { id: string }) => {\n    const found = fakeStatsOverallViewList.find((v) => `${v.id}` === id)\n    if (found) {\n      return Promise.resolve({\n        data: found,\n      })\n    }\n    return Promise.reject(new Error())\n  },\n} as DataProvider\n\nexport default provider","import { DataProvider } from 'react-admin'\nimport { TicketType } from '../../enum/TicketType'\nimport { TicketDetails } from '../../ticket-details/ticket-details'\nimport { BookingType } from '../../enum/BookingType'\nimport { BookingDisabledOption } from '../../enum/BookingDisabledOption'\n\nconst fakeTicketDetailsList: TicketDetails[] = [\n  {\n    id: 1,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    accessesIds: [10],\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56424,\n        ticketCode: '060000020917',\n        ticketType: TicketType.K,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n      {\n        id: 56425,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.M,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    bookingDisabled: BookingDisabledOption.STORNO,\n  },\n  {\n    id: 2,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    accessesIds: [10],\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56424,\n        ticketCode: '060000020917',\n        ticketType: TicketType.K,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n      {\n        id: 56425,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.M,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    bookingDisabled: BookingDisabledOption.STORNO,\n  },\n  {\n    id: 3,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    accessesIds: [10],\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56424,\n        ticketCode: '060000020917',\n        ticketType: TicketType.K,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n      {\n        id: 56425,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.M,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    bookingDisabled: null,\n  },\n  {\n    id: 4,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    accessesIds: [10],\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56424,\n        ticketCode: '060000020917',\n        ticketType: TicketType.K,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n      {\n        id: 56425,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.M,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    bookingDisabled: null,\n  },\n  {\n    id: 5,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    accessesIds: [10],\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56424,\n        ticketCode: '060000020917',\n        ticketType: TicketType.K,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n      {\n        id: 56425,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.M,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    bookingDisabled: null,\n  },\n  {\n    id: 6,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    accessesIds: [10],\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56424,\n        ticketCode: '060000020917',\n        ticketType: TicketType.K,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n      {\n        id: 56425,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.M,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    bookingDisabled: null,\n  },\n  {\n    id: 7,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    accessesIds: [10],\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56424,\n        ticketCode: '060000020917',\n        ticketType: TicketType.K,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n      {\n        id: 56425,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.M,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    bookingDisabled: null,\n  },\n  {\n    id: 8,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    accessesIds: [10],\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56424,\n        ticketCode: '060000020917',\n        ticketType: TicketType.K,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n      {\n        id: 56425,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.M,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    bookingDisabled: null,\n  },\n  {\n    id: 9,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    accessesIds: [10],\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56424,\n        ticketCode: '060000020917',\n        ticketType: TicketType.K,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n      {\n        id: 56425,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.M,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    bookingDisabled: null,\n  },\n  {\n    id: 10,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    accessesIds: [10],\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56424,\n        ticketCode: '060000020917',\n        ticketType: TicketType.K,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n      {\n        id: 56425,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.M,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    bookingDisabled: null,\n  },\n]\n\nconst provider = {\n  getOne: (resource, { id }: { id: string }) => {\n    const found = fakeTicketDetailsList.find((v) => `${v.id}` === id)\n    if (found) {\n      return Promise.resolve({\n        data: found,\n      })\n    }\n    return Promise.reject(new Error())\n  },\n} as DataProvider\n\nexport default provider\n","export enum DeviceDirection {\n  IN = 'IN',\n  OUT = 'OUT',\n  INFO = 'INFO',\n}\n","import { DataProvider } from 'react-admin'\nimport { TicketType } from '../../enum/TicketType'\nimport { TicketInfo } from '../../ticket-info/ticket-info'\n\nconst fakeTicketInfoList: TicketInfo[] = [\n  {\n    id: 1,\n    firstname: 'Marek',\n    lastname: 'Pies',\n    pesel: '47120554776',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n  },\n  {\n    id: 2,\n    firstname: 'Janek',\n    lastname: 'Krużganek',\n    pesel: '47120554776',\n    eventName: 'POGOŃ SZCZECIN 20/21',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n  },\n  {\n    id: 3,\n    firstname: 'Wacław',\n    lastname: 'Rymski',\n    pesel: '9988711225',\n    eventName: 'POGOŃ SZCZECIN 20/21',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n  },\n  {\n    id: 4,\n    firstname: 'Mirka',\n    lastname: 'Korzeń',\n    pesel: '56483978659',\n    eventName: 'POGOŃ SZCZECIN 20/21',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n  },\n  {\n    id: 5,\n    firstname: 'Tis',\n    lastname: 'Lomasz',\n    pesel: '47120554776',\n    eventName: 'POGOŃ SZCZECIN 20/21',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n  },\n  {\n    id: 6,\n    firstname: 'Bogdana',\n    lastname: 'Jaruzelska',\n    pesel: '47120554776',\n    eventName: 'POGOŃ SZCZECIN 20/21',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n  },\n  {\n    id: 7,\n    firstname: 'Jeremi',\n    lastname: 'Pomidor',\n    pesel: '12345678900',\n    eventName: 'POGOŃ SZCZECIN 20/21',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n  },\n  {\n    id: 8,\n    firstname: 'Roman',\n    lastname: 'Zoman',\n    pesel: '13243567890',\n    eventName: 'POGOŃ SZCZECIN 20/21',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n  },\n  {\n    id: 9,\n    firstname: 'Bacha',\n    lastname: 'Kaszalot',\n    pesel: '98097612678',\n    eventName: 'POGOŃ SZCZECIN 20/21',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n  },\n  {\n    id: 10,\n    firstname: 'Jadwiga',\n    lastname: 'Ogórek',\n    pesel: '47120554776',\n    eventName: 'POGOŃ SZCZECIN 20/21',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n  },\n]\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getList: (resource, params) =>\n    Promise.resolve({\n      data: fakeTicketInfoList,\n      total: fakeTicketInfoList.length,\n    }),\n} as DataProvider\n\nexport default provider\n","import { DataProvider } from 'react-admin'\nimport { TicketDto } from '../../dto/ticket.dto'\nimport { TicketType } from '../../enum/TicketType'\n\nconst fakeTickets: TicketDto[] = [\n  {\n    id: 1,\n    ticketCode: 'A',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52815,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n  {\n    id: 2,\n    ticketCode: 'A',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52816,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n  {\n    id: 3,\n    ticketCode: '010000011492',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52817,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n  {\n    id: 4,\n    ticketCode: '411000006572',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52818,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n  {\n    id: 5,\n    ticketCode: '871000006824',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52819,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n  {\n    id: 6,\n    ticketCode: '370000011495',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52820,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n  {\n    id: 7,\n    ticketCode: '450000011501',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52821,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n  {\n    id: 8,\n    ticketCode: '630000011502',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52822,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n  {\n    id: 9,\n    ticketCode: '020000011503',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52823,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n  {\n    id: 10,\n    ticketCode: '310000011504',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52824,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n]\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getList: (resource, params) =>\n    Promise.resolve({ data: fakeTickets, total: fakeTickets.length }),\n} as DataProvider\n\nexport default provider\n","import { DataProvider, sanitizeFetchType } from 'react-admin'\nimport { ResourceName } from '../ResourceName'\nimport fakeAccessUsingsProvider from './providers/fake-access-usings.provider'\nimport fakeBookingsProvider from './providers/fake-bookings.provider'\nimport fakeLogsProvider from './providers/fake-logs.provider'\nimport fakeStatsOverallViewListProvider from './providers/fake-stats-overall-view-list.provider'\nimport fakeStatsOverallViewProvider from './providers/fake-stats-overall-view.provider'\nimport fakeTicketDetailsProvider from './providers/fake-ticket-details.provider'\nimport fakeTicketInfoProvider from './providers/fake-ticket-info.provider'\nimport fakeTicketsProvider from './providers/fake-tickets.provider'\n\nconst dataProviders: Record<ResourceName, DataProvider> = {\n  [ResourceName.ACCESS_USINGS]: fakeAccessUsingsProvider,\n  [ResourceName.BOOKINGS]: fakeBookingsProvider,\n  [ResourceName.LOGS]: fakeLogsProvider,\n  [ResourceName.LAST_LOGS]: fakeLogsProvider,\n  [ResourceName.TICKETS]: fakeTicketsProvider,\n  [ResourceName.TICKET_INFO]: fakeTicketInfoProvider,\n  [ResourceName.TICKET_DETAILS]: fakeTicketDetailsProvider,\n  [ResourceName.TICKET_LOGS]: fakeLogsProvider,\n  [ResourceName.STATS_OVERALL_VIEW]: fakeStatsOverallViewProvider,\n  [ResourceName.STATS_OVERALL_VIEW_LIST]: fakeStatsOverallViewListProvider\n}\n\nexport default (\n  fetchType: string,\n  resource: string,\n  params: unknown,\n): Promise<unknown> => {\n  const selectedProvider = dataProviders[resource as ResourceName]\n  const type = sanitizeFetchType(fetchType)\n  return selectedProvider[type](resource, params)\n}\n","import { AuthProvider } from 'react-admin'\n\nconst authProvider: AuthProvider = {\n  login: () => Promise.resolve(),\n  logout: () => Promise.resolve(),\n  checkError: () => Promise.resolve(),\n  checkAuth: () => Promise.resolve(),\n  getPermissions: () => Promise.resolve(),\n  getIdentity: () =>\n    Promise.resolve({\n      id: 'no-auth',\n      fullName: 'no-auth',\n    }),\n}\n\nexport default authProvider\n","export type ContentRangeHeaderValue = `bytes ${number}-${number}/${number}`\n\nexport const contentRangeParser = (headerValue: ContentRangeHeaderValue) => {\n  if (!headerValue) {\n    // 'content-range' header should exist otherwise pagination doesn't work\n    return {\n      total: 0,\n    }\n  }\n  const summary = headerValue.split(' ')[1]\n  const split = summary.split('-')\n  const rangeFrom = split[0]\n  const summarySecondPartSplit = split[1].split('/')\n  const rangeTo = summarySecondPartSplit[0]\n  const total = summarySecondPartSplit[1]\n  return {\n    rangeFrom: parseInt(rangeFrom, 10),\n    rangeTo: parseInt(rangeTo, 10),\n    total: parseInt(total, 10),\n  }\n}\n","import { fetchUtils } from 'react-admin'\nimport { ContentRangeHeaderValue, contentRangeParser } from './header.parser'\n\nconst getToken = () => localStorage.getItem('token') as string\n\nconst baseHeaders: HeadersInit = {\n  'Content-Type': 'application/json',\n}\n\nconst authHeaders = (): HeadersInit => ({\n  ...baseHeaders,\n  Authorization: `Bearer ${getToken()}`,\n})\n\nconst postWithHeaders = <T, K>(url: string, body: T, headers: HeadersInit) =>\n  fetchUtils\n    .fetchJson(url, {\n      method: 'POST',\n      body: JSON.stringify(body),\n      headers: new Headers(headers),\n    })\n    .then(({ json }) => json as Promise<K>)\n\nexport const get = <T>(baseUrl: string, path: string) =>\n  fetchUtils\n    .fetchJson(`${baseUrl}${path}`, {\n      method: 'GET',\n      headers: new Headers(authHeaders()),\n    })\n    .then(({ json }) => json as Promise<T>)\n\nexport const getWithPagination = <T>(baseUrl: string, path: string) =>\n  fetchUtils\n    .fetchJson(`${baseUrl}${path}`, {\n      method: 'GET',\n      headers: new Headers(authHeaders()),\n    })\n    .then(({ json, headers }) =>\n      Promise.resolve({\n        data: json as T,\n        range: contentRangeParser(\n          headers.get('content-range') as ContentRangeHeaderValue,\n        ),\n      }),\n    )\n\nexport const getByConditions = <T>(\n  baseUrl: string,\n  pathParam: string,\n): Promise<T[]> => get<T[]>(baseUrl, `/GetByConditions/${pathParam}`)\n\nexport const authPost = <T, K>(url: string, body: T) =>\n  postWithHeaders<T, K>(url, body, baseHeaders)\n\nexport const post = <T, K>(url: string, body: T) =>\n  postWithHeaders<T, K>(url, body, authHeaders())\n\nexport const patch = <T, K>(baseUrl: string, body: T) =>\n  fetchUtils\n    .fetchJson(baseUrl, {\n      method: 'PATCH',\n      body: JSON.stringify(body),\n      headers: new Headers(authHeaders()),\n    })\n    .then(({ json }) => json as Promise<K>)\n","const API_V1 = `${process.env.REACT_APP_API_BASE_URL}/api/v1`\nexport const ACCESS_USINGS = `${API_V1}/ticketManagement/AccessUsings`\nexport const AUTH_URL = `${API_V1}/Authorization/Authenticate`\nexport const BOOKINGS_URL = `${API_V1}/ticketManagement/Bookings`\nexport const CUSTOMERS_URL = `${API_V1}/ticketManagement/Customers`\nexport const EVENTS_URL = `${API_V1}/ticketManagement/Events`\nexport const EXTENDED_LOGS_URL = `${API_V1}/ticketManagement/Logs/GetExtendedLogByConditions`\nexport const TICKETS_URL = `${API_V1}/ticketManagement/Tickets`\nexport const VARIANTS_URL = `${API_V1}/ticketManagement/Variants`\nexport const SEATS_URL = `${API_V1}/ticketManagement/Seats`\nexport const BLOCKS_URL = `${API_V1}/ticketManagement/Blocks`\nexport const TRIBUNES_URL = `${API_V1}/ticketManagement/Tribunes`\nexport const OBJECTS_URL = `${API_V1}/ticketManagement/Objects`\n","import { AuthProvider } from 'react-admin'\nimport { authPost } from '../common/fetch.utils'\nimport { AuthDto } from '../dto/auth.dto'\nimport { AUTH_URL } from '../api-urls'\nimport { AuthRequest } from './auth.request'\n\nconst authProvider: AuthProvider = {\n  login: ({ username, password }) =>\n    authPost<AuthRequest, AuthDto>(AUTH_URL, {\n      login: username,\n      password,\n    }).then(({ token }) => {\n      localStorage.setItem('username', username)\n      localStorage.setItem('token', token)\n    }),\n  logout: () => {\n    localStorage.removeItem('username')\n    localStorage.removeItem('token')\n    return Promise.resolve()\n  },\n  checkError: ({ status }) => {\n    if (status === 401 || status === 403) {\n      localStorage.removeItem('username')\n      localStorage.removeItem('token')\n      return Promise.reject()\n    }\n    return Promise.resolve()\n  },\n  checkAuth: () =>\n    localStorage.getItem('token') ? Promise.resolve() : Promise.reject(),\n  getPermissions: () => Promise.resolve(),\n  getIdentity: () =>\n    Promise.resolve({\n      id: 'user',\n      fullName: localStorage.getItem('username') as string,\n    }),\n}\n\nexport default authProvider\n","import {\n  CreateParams,\n  CreateResult,\n  DataProvider,\n  UpdateManyParams,\n  UpdateManyResult,\n} from 'react-admin'\nimport { AccessUsingsCreateParams } from './access-usings-create.params'\nimport { AccessUsingDto } from '../dto/access-using.dto'\nimport { DeviceDirection } from '../enum/DeviceDirection'\nimport { DateTime } from '../common/date-time'\nimport { patch, post } from '../common/fetch.utils'\nimport { ACCESS_USINGS } from '../api-urls'\n\ntype CreateAccessUsingRequest = Array<\n  Omit<AccessUsingDto, 'id' | 'verifierDeviceId'> & { verifierDeviceId: null }\n>\ntype UpdateAccessUsingRequest = Pick<AccessUsingDto, 'id'> & { active: false }\n\nconst provider = {\n  updateMany: async (\n    resource,\n    { ids }: UpdateManyParams,\n  ): Promise<UpdateManyResult> => {\n    const pendingUpdates = ids\n      .map((auId) => ({ id: auId, active: false } as UpdateAccessUsingRequest))\n      .map((req) =>\n        patch<UpdateAccessUsingRequest, AccessUsingDto>(ACCESS_USINGS, req),\n      )\n    const accessUsings = await Promise.all(pendingUpdates)\n    return Promise.resolve({\n      data: accessUsings.map((au) => au.id),\n    })\n  },\n  create: async (\n    resource,\n    { data }: CreateParams<AccessUsingsCreateParams>,\n  ): Promise<CreateResult> => {\n    const { ticketIds, accessIds } = data\n    const request: CreateAccessUsingRequest = accessIds.flatMap((accessId) =>\n      ticketIds.map((ticketId) => ({\n        date: new Date().toISOString() as DateTime,\n        direction: DeviceDirection.IN,\n        active: true,\n        accessId,\n        ticketId,\n        verifierDeviceId: null,\n      })),\n    )\n    await post<CreateAccessUsingRequest, AccessUsingDto[]>(\n      ACCESS_USINGS,\n      request,\n    )\n    return Promise.resolve({\n      data: { id: 0 }, // need to return something\n    })\n  },\n} as DataProvider\n\nexport default provider\n","import { DataProvider, UpdateParams, UpdateResult } from 'react-admin'\nimport { patch } from '../common/fetch.utils'\nimport { BOOKINGS_URL } from '../api-urls'\nimport { BookingUpdateRequest } from './booking-update.request'\nimport { BookingDto } from '../dto/booking.dto'\n\nconst provider = {\n  update: async (\n    resource: string,\n    { data }: UpdateParams<BookingUpdateRequest>,\n  ): Promise<UpdateResult<BookingDto>> => {\n    const booking = await patch<BookingUpdateRequest, BookingDto>(\n      BOOKINGS_URL,\n      data,\n    )\n    return Promise.resolve({\n      data: booking,\n    })\n  },\n} as DataProvider\n\nexport default provider\n","import { ExtendedLog } from './extended-log'\n\nconst mapping: Partial<\n  Record<keyof ExtendedLog, (lambdaParameter: string, value: string | number) => string>\n> = {\n  ticketCode: (lambdaParameter, value) => `${(lambdaParameter)}.TicketCode.Contains(\"${value}\")`,\n  bookingId: (lambdaParameter, value) => `${(lambdaParameter)}.BookingId.ToString().Contains(\"${value}\")`,\n  date: (lambdaParameter, value) => `${(lambdaParameter)}.Date > DateTimeOffset.FromUnixTimeMilliseconds(${value.toString().split(';')[0]}).DateTime && l.Date < DateTimeOffset.FromUnixTimeMilliseconds(${value.toString().split(';')[1]}).DateTime`,\n  deviceName: (lambdaParameter, value) => `${(lambdaParameter)}.Device.Name.Contains(\"${value}\")`,\n  text: (lambdaParameter, value) => `${(lambdaParameter)}.Data.Text.Contains(\"${value}\")`,\n  event: (lambdaParameter, value) => `${(lambdaParameter)}.Booking.Event.Name.Contains(\"${value}\")`\n}\n\nexport const getFilterMapper = (key: keyof ExtendedLog) =>\n  mapping[key] as (lambdaParameter: string, value: string | number) => string\n","import { ExtendedLog } from './extended-log'\n\nconst mapping: Partial<Record<keyof ExtendedLog, string>> = {\n  id: 'l=>l.Id',\n  date: 'l=>l.Date',\n  deviceName: 'l=>l.Device.Name',\n  ticketCode: 'l=>l.TicketCode',\n  bookingId: 'l=>l.BookingId',\n}\n\nexport const mapSortLogParam = (key: keyof ExtendedLog) => mapping[key]\n","import { DataProvider, GetListResult } from 'react-admin'\nimport { EXTENDED_LOGS_URL } from '../api-urls'\nimport { getWithPagination } from '../common/fetch.utils'\nimport { ExtendedLogDto } from '../dto/extended-log.dto'\nimport { ExtendedLog } from './extended-log'\nimport { LogListParams } from './log-list.params'\nimport { getFilterMapper } from './log-filter.mapper'\nimport { mapSortLogParam } from './log-sort.mapper'\n\nconst getFilterParams = (filter: Partial<ExtendedLog>) => {\n  if (Object.keys(filter).length) {\n    const filterParams = Object.entries(filter).map(([key, value]) => {\n      const mapper = getFilterMapper(key as keyof ExtendedLog)\n      return mapper(\"l\", value as string)\n    })\n    return filterParams.reduce((p, c) => `${p}&&${c}`)\n  }\n  return \"true\"\n}\n\nconst provider = {\n  getList: async (\n    resource: string,\n    {\n      filter,\n      sort: { field, order },\n      pagination: { page, perPage },\n    }: LogListParams,\n  ): Promise<GetListResult<ExtendedLog>> => {\n    const filterParams = `l=>${getFilterParams(filter).toString()}`\n    const queryParams: string[] = []\n    queryParams.push(`sortBy=${mapSortLogParam(field)}`)\n    queryParams.push(`sortOrder=${order}`)\n    queryParams.push(`rangeFrom=${page * perPage - perPage}`)\n    queryParams.push(`rangeTo=${page * perPage}`)\n\n    const pathParams = queryParams.reduce((p, c) => `${p}&${c}`)\n    const path = `/${filterParams}?${pathParams}`\n    \n    const {\n      data,\n      range: { total },\n    } = await getWithPagination<ExtendedLogDto[]>(EXTENDED_LOGS_URL, path)\n    const extendedLogs = data.map(\n      ({\n        id,\n        date,\n        device: { name: deviceName },\n        ticketCode,\n        data: [{ text, color }],\n        bookingId,\n      }) =>\n        ({\n          id,\n          date,\n          deviceName,\n          ticketCode,\n          text,\n          color,\n          bookingId,\n        } as ExtendedLog),\n    )\n\n    return Promise.resolve({\n      data: extendedLogs,\n      total,\n    })\n  },\n} as DataProvider\n\nexport default provider\n","import { EventDto } from \"../../dto/event.dto\"\nimport { EventOverallView } from \"./event-overall-view\"\n\nexport const mapToEventOverallView = (\n  event: EventDto\n): EventOverallView => ({\n  id: event.id,\n  name: event.name,\n  dateStart: event.dateStart,\n  dateEnd: event.dateEnd\n})","import { DataProvider, GetListResult } from \"react-admin\"\nimport { EVENTS_URL } from '../../api-urls'\nimport { getByConditions } from '../../common/fetch.utils'\nimport { ALL_RESULTS } from \"../../common/filter.values\"\nimport { NameFilter } from \"../../common/name.filter\"\nimport { EventDto } from \"../../dto/event.dto\"\nimport { EventOverallView } from \"./event-overall-view\"\nimport { mapToEventOverallView } from \"./overall-view-list.mapper\"\n\nconst provider = {\n  getList: async (\n    resource: string,\n    { filter }: NameFilter,\n  ): Promise<GetListResult<EventOverallView>> => {\n    const events = await getByConditions<EventDto>(EVENTS_URL, filter.name ? `e=>e.Name.Contains(\"${filter.name}\")` : ALL_RESULTS)\n\n    const overallViewList = events.map((event) => mapToEventOverallView(event))\n\n    return {\n      data: overallViewList,\n      total: overallViewList.length,\n    }\n  },\n} as DataProvider\n\nexport default provider","export const ALL_RESULTS = 'l=>true'\n","import { BlockDto } from \"../../dto/block.dto\"\nimport { BookingDto } from \"../../dto/booking.dto\"\nimport { EventDto } from \"../../dto/event.dto\"\nimport { ObjectDto } from \"../../dto/object.dto\"\nimport { SeatDto } from \"../../dto/seat.dto\"\nimport { TribuneDto } from \"../../dto/tribune.dto\"\nimport { BookingType } from \"../../enum/BookingType\"\nimport { BlockOverallView, ObjectOverallView, OverallView, TribuneOverallView } from \"./overall-view\"\n\nconst calculateCapacity = (seats: SeatDto[], bookings: BookingDto[]) => (\n  seats.length + bookings.filter(b => b.seatId == null).length\n)\n\nconst mapToBlockOverallView = (\n  block: BlockDto,\n  seats: SeatDto[],\n  bookings: BookingDto[],\n  enteredBookings: BookingDto[]\n): BlockOverallView => ({\n  id: block.id,\n  name: block.name,\n  capacity: calculateCapacity(seats, bookings),\n  sold: bookings.length,\n  entered: enteredBookings.length,\n  soldNormal: bookings.filter(b => b.type === BookingType.NORMAL).length,\n  enteredNormal: enteredBookings.filter(b => b.type === BookingType.NORMAL).length,\n  soldAbo: bookings.filter(b => b.type === BookingType.ABO).length,\n  enteredAbo: enteredBookings.filter(b => b.type === BookingType.ABO).length,\n  soldInfix: bookings.filter(b => b.type === BookingType.INFIX).length,\n  enteredInfix: enteredBookings.filter(b => b.type === BookingType.INFIX).length,\n  soldService: bookings.filter(b => b.type === BookingType.SERVICE).length,\n  enteredService: enteredBookings.filter(b => b.type === BookingType.SERVICE).length,\n  soldPoints: bookings.filter(b => b.type === BookingType.POINTS).length,\n  enteredPoints: enteredBookings.filter(b => b.type === BookingType.POINTS).length,\n})\n\nconst mapToTribuneOverallView = (\n  tribune: TribuneDto,\n  blocks: BlockDto[],\n  seats: SeatDto[],\n  bookings: BookingDto[],\n  enteredBookingIds: number[]\n): TribuneOverallView => ({\n  id: tribune.id,\n  name: tribune.name,\n  capacity: calculateCapacity(seats, bookings),\n  sold: bookings.length,\n  entered: enteredBookingIds.length,\n  blocks: blocks.filter(b => tribune.blocksIds.includes(b.id))\n    .map((block) => {\n      const filteredSeats = seats.filter((s) => s.blockId === block.id)\n      const filteredBookingIds = block.bookingsIds.concat(filteredSeats.flatMap((s) => s.bookingsIds))\n      const filteredBookings = bookings.filter((book) => filteredBookingIds.includes(book.id))\n      const filteredEnteredBookingIds = enteredBookingIds.filter((enteredBookingId) => filteredBookingIds.includes(enteredBookingId))\n      const filteredEnteredBookings = bookings.filter((book) => filteredEnteredBookingIds.includes(book.id))\n      return mapToBlockOverallView(\n        block,\n        filteredSeats,\n        filteredBookings,\n        filteredEnteredBookings\n      )\n    })\n})\n\nconst mapToObjectOverallView = (\n  object: ObjectDto,\n  tribunes: TribuneDto[],\n  blocks: BlockDto[],\n  seats: SeatDto[],\n  bookings: BookingDto[],\n  enteredBookingIds: number[]\n): ObjectOverallView => ({\n  id: object.id,\n  name: object.name,\n  capacity: calculateCapacity(seats, bookings),\n  sold: bookings.length,\n  entered: enteredBookingIds.length,\n  tribunes: tribunes.filter(t => object.tribunesIds.includes(t.id))\n    .map((tribune) => {\n      const filteredBlocks = blocks.filter((b) => b.tribuneId === tribune.id)\n      const filteredSeatIds = filteredBlocks.flatMap((b) => b.seatsIds)\n      const filteredSeats = seats.filter((s) => filteredSeatIds.includes(s.id))\n      const filteredBookingIds = filteredBlocks.flatMap((b) => b.bookingsIds).concat(filteredSeats.flatMap((s) => s.bookingsIds))\n      const filteredBookings = bookings.filter((book) => filteredBookingIds.includes(book.id))\n      const filteredEnteredBookingIds = enteredBookingIds.filter((enteredBookingId) => filteredBookingIds.includes(enteredBookingId))\n      return mapToTribuneOverallView(\n        tribune,\n        filteredBlocks,\n        filteredSeats,\n        filteredBookings,\n        filteredEnteredBookingIds\n      )\n    })\n})\n\nexport const mapToOverallView = (\n  selectedEvent: EventDto,\n  objects: ObjectDto[],\n  tribunes: TribuneDto[],\n  blocks: BlockDto[],\n  seats: SeatDto[],\n  bookings: BookingDto[],\n  enteredBookingIds: number[]\n): OverallView => ({\n  id: selectedEvent.id,\n  eventName: selectedEvent.name,\n  capacity: calculateCapacity(seats, bookings),\n  sold: bookings.length,\n  entered: enteredBookingIds.length,\n  objects: objects.filter(o => selectedEvent.objectsIds.includes(o.id))\n    .map((object) => {\n      const filteredTribunes = tribunes.filter((t) => t.objectId === object.id)\n      const filteredBlocks = blocks.filter((b) => filteredTribunes.flatMap((t) => t.blocksIds).includes(b.id))\n      const filteredSeatIds = filteredBlocks.flatMap((b) => b.seatsIds)\n      const filteredSeats = seats.filter((s) => filteredSeatIds.includes(s.id))\n      const filteredBookingIds = filteredBlocks.flatMap((b) => b.bookingsIds).concat(filteredSeats.flatMap((s) => s.bookingsIds))\n      const filteredBookings = bookings.filter((book) => filteredBookingIds.includes(book.id))\n      const filteredEnteredBookingIds = enteredBookingIds.filter((enteredBookingId) => filteredBookingIds.includes(enteredBookingId))\n      return mapToObjectOverallView(\n        object,\n        filteredTribunes,\n        filteredBlocks,\n        filteredSeats,\n        filteredBookings,\n        filteredEnteredBookingIds\n      )\n    })\n})","import { DataProvider, GetOneParams, GetOneResult } from \"react-admin\"\nimport {\n  BLOCKS_URL,\n  BOOKINGS_URL, EVENTS_URL, OBJECTS_URL, SEATS_URL, TRIBUNES_URL\n} from '../../api-urls'\nimport { get, getByConditions } from '../../common/fetch.utils'\nimport { BlockDto } from \"../../dto/block.dto\"\nimport { BookingDto } from \"../../dto/booking.dto\"\nimport { EventDto } from \"../../dto/event.dto\"\nimport { ObjectDto } from \"../../dto/object.dto\"\nimport { SeatDto } from \"../../dto/seat.dto\"\nimport { TribuneDto } from \"../../dto/tribune.dto\"\nimport { OverallView } from \"./overall-view\"\nimport { mapToOverallView } from \"./overall-view.mapper\"\n\nconst provider = {\n  getOne: async (\n    resource: string,\n    { id: eventId }: GetOneParams\n  ): Promise<GetOneResult<OverallView>> => {\n    const pendingSelectedEvent = get<EventDto>(EVENTS_URL, `/${eventId}`)\n    const pendingObjects = getByConditions<ObjectDto>(OBJECTS_URL, `o=>o.Events.Any(e => e.Id.Equals(${eventId}))`)\n    const pendingTribunes = getByConditions<TribuneDto>(TRIBUNES_URL, `t=>t.Object.Events.Any(e => e.Id.Equals(${eventId}))`)\n    const pendingBlocks = getByConditions<BlockDto>(BLOCKS_URL, `b=>b.Tribune.Object.Events.Any(e => e.Id.Equals(${eventId}))`)\n    const pendingSeats = getByConditions<SeatDto>(SEATS_URL, `s=>s.Block.Tribune.Object.Events.Any(e => e.Id.Equals(${eventId}))`)\n    const bookingsCondition = `b=>b.EventId.Equals(${eventId}) && b.Disabled != TicketAPI.Models.Enums.TicketManagement.BookingDisabledOptions.STORNO`\n    const pendingBookings = getByConditions<BookingDto>(BOOKINGS_URL, bookingsCondition)\n    const pendingEnteredBookings = getByConditions<BookingDto>(BOOKINGS_URL,\n      `${bookingsCondition} && b.Tickets.SelectMany(t => t.AccessUsings).Any(au => au.Active == true && au.Direction.Equals(TicketAPI.Models.Enums.DeviceManagement.DeviceDirections.IN))`)\n\n    const [selectedEvent, objects, tribunes, blocks, seats, bookings, enteredBookingIds] =\n      await Promise.all([\n        pendingSelectedEvent,\n        pendingObjects,\n        pendingTribunes,\n        pendingBlocks,\n        pendingSeats,\n        pendingBookings,\n        Promise.all((await Promise.resolve(pendingEnteredBookings)).map(book => book.id))\n      ])\n\n    const overallViewData =\n      Promise.resolve(\n        mapToOverallView(\n          selectedEvent,\n          objects,\n          tribunes,\n          blocks,\n          seats,\n          bookings,\n          enteredBookingIds\n        ))\n\n    return {\n      data: await overallViewData\n    }\n  },\n} as DataProvider\n\nexport default provider","export const buildFilterByIdsCondition = (ids: number[]): string => {\n  const [firstId, ...restIds] = ids\n  return (restIds || []).reduce(\n    (prev, curr) => `${prev as string}||v.Id==${curr}`,\n    `v=>v.Id==${firstId}`,\n  )\n}\n","export const toMapById = <T extends { id: number }>(values: T[]) =>\n  new Map(values.map((v): [number, T] => [v.id, v]))\n\nexport const toUniqueValues = (values: number[]) => Array.from(new Set(values))\n","import { CustomerDto } from '../dto/customer.dto'\nimport { EventDto } from '../dto/event.dto'\nimport { TicketDto } from '../dto/ticket.dto'\nimport { VariantDto } from '../dto/variant.dto'\nimport { TicketDetails } from './ticket-details'\nimport { BookingDto } from '../dto/booking.dto'\nimport { AccessUsingDto } from '../dto/access-using.dto'\nimport { Ticket } from './ticket'\nimport { toMapById } from '../common/mapper.utils'\n\nconst mapToTicket = (\n  { id, ticketCode, ticketType, createdAt, accessUsingsIds }: TicketDto,\n  accessUsingById: Map<number, AccessUsingDto>,\n): Ticket => ({\n  id,\n  ticketCode,\n  ticketType,\n  createdAt,\n  accessUsings: accessUsingsIds.map(\n    (auId) => accessUsingById.get(auId) as AccessUsingDto,\n  ),\n})\n\nexport const mapToTicketDetails = (\n  {\n    id: bookingId,\n    disabled: bookingDisabled,\n    type: bookingType,\n    activeFrom,\n    activeTo,\n    createdAt,\n    modifiedAt,\n  }: BookingDto,\n  { firstname, lastname, pesel }: CustomerDto,\n  { name: eventName }: EventDto,\n  { name: variantName, accessesIds }: VariantDto,\n  tickets: TicketDto[],\n  accessUsings: AccessUsingDto[],\n): TicketDetails => {\n  const accessUsingById = toMapById(accessUsings)\n  return {\n    id: bookingId,\n    firstname,\n    lastname,\n    eventName,\n    pesel,\n    variantName,\n    accessesIds,\n    bookingType,\n    activeFrom,\n    activeTo,\n    tickets: tickets.map((t) => mapToTicket(t, accessUsingById)),\n    createdAt,\n    modifiedAt,\n    bookingDisabled,\n  }\n}\n","import { DataProvider, GetOneParams, GetOneResult } from 'react-admin'\nimport {\n  ACCESS_USINGS,\n  BOOKINGS_URL,\n  CUSTOMERS_URL,\n  EVENTS_URL,\n  TICKETS_URL,\n  VARIANTS_URL,\n} from '../api-urls'\nimport { get, getByConditions } from '../common/fetch.utils'\nimport { BookingDto } from '../dto/booking.dto'\nimport { TicketDto } from '../dto/ticket.dto'\nimport { CustomerDto } from '../dto/customer.dto'\nimport { EventDto } from '../dto/event.dto'\nimport { buildFilterByIdsCondition } from '../common/condition.builder'\nimport { mapToTicketDetails } from './ticket-details.mapper'\nimport { VariantDto } from '../dto/variant.dto'\nimport { TicketDetails } from './ticket-details'\nimport { toUniqueValues } from '../common/mapper.utils'\nimport { AccessUsingDto } from '../dto/access-using.dto'\n\nconst fetchTicketsWithAccessUsings = async (ticketIds: number[]) => {\n  const tickets = await getByConditions<TicketDto>(\n    TICKETS_URL,\n    buildFilterByIdsCondition(ticketIds),\n  )\n  const accessUsingIds = tickets.flatMap((t) => t.accessUsingsIds)\n  const accessUsings = accessUsingIds.length\n    ? await getByConditions<AccessUsingDto>(\n        ACCESS_USINGS,\n        buildFilterByIdsCondition(toUniqueValues(accessUsingIds)),\n      )\n    : []\n  return {\n    tickets,\n    accessUsings,\n  }\n}\n\nconst provider = {\n  getOne: async (\n    resource: string,\n    { id: bookingId }: GetOneParams,\n  ): Promise<GetOneResult<TicketDetails>> => {\n    const booking = await get<BookingDto>(BOOKINGS_URL, `/${bookingId}`)\n    const { customerId, eventId, variantId } = booking\n    const pendingCustomer = get<CustomerDto>(CUSTOMERS_URL, `/${customerId}`)\n    const pendingEvent = get<EventDto>(EVENTS_URL, `/${eventId}`)\n    const pendingVariant = get<VariantDto>(VARIANTS_URL, `/${variantId}`)\n    const pendingTicketsWithAccessUsings = fetchTicketsWithAccessUsings(\n      booking.ticketsIds,\n    )\n\n    const [customer, event, variant, { tickets, accessUsings }] =\n      await Promise.all([\n        pendingCustomer,\n        pendingEvent,\n        pendingVariant,\n        pendingTicketsWithAccessUsings,\n      ])\n\n    return {\n      data: mapToTicketDetails(\n        booking,\n        customer,\n        event,\n        variant,\n        tickets,\n        accessUsings,\n      ),\n    }\n  },\n} as DataProvider\n\nexport default provider\n","import { CustomerDto } from '../dto/customer.dto'\nimport { EventDto } from '../dto/event.dto'\nimport { TicketDto } from '../dto/ticket.dto'\nimport { TicketInfo } from './ticket-info'\nimport { BookingDto } from '../dto/booking.dto'\nimport { toMapById } from '../common/mapper.utils'\n\nexport const mapToTicketBaseInfo = (\n  { firstname, lastname, pesel }: CustomerDto,\n  { name: eventName }: EventDto,\n  { bookingId, ticketCode, ticketType }: TicketDto,\n): TicketInfo => ({\n  id: bookingId,\n  firstname,\n  lastname,\n  pesel,\n  eventName,\n  ticketCode,\n  ticketType,\n})\n\nexport const mapToTicketBaseInfoList = (\n  bookings: BookingDto[],\n  customers: CustomerDto[],\n  events: EventDto[],\n  tickets: TicketDto[],\n): TicketInfo[] => {\n  const bookingById = toMapById(bookings)\n  const customerById = toMapById(customers)\n  const eventById = toMapById(events)\n  return tickets.map((ticket) => {\n    const { customerId, eventId } = bookingById.get(\n      ticket.bookingId,\n    ) as BookingDto\n    const customer = customerById.get(customerId) as CustomerDto\n    const event = eventById.get(eventId) as EventDto\n    return mapToTicketBaseInfo(customer, event, ticket)\n  })\n}\n","import { DataProvider, GetListResult } from 'react-admin'\nimport {\n  BOOKINGS_URL,\n  CUSTOMERS_URL,\n  EVENTS_URL,\n  TICKETS_URL,\n} from '../api-urls'\nimport { getByConditions } from '../common/fetch.utils'\nimport { BookingDto } from '../dto/booking.dto'\nimport { TicketInfo } from './ticket-info'\nimport { TicketDto } from '../dto/ticket.dto'\nimport { CustomerDto } from '../dto/customer.dto'\nimport { EventDto } from '../dto/event.dto'\nimport { mapToTicketBaseInfoList } from './ticket-info.mapper'\nimport { buildFilterByIdsCondition } from '../common/condition.builder'\nimport { TicketCodeFilter } from '../common/ticket-code.filter'\nimport { toUniqueValues } from '../common/mapper.utils'\n\nconst getByUniqueIds = <T>(baseUrl: string, ids: number[]): Promise<T[]> => {\n  const uniqueIds = toUniqueValues(ids)\n  return getByConditions<T>(baseUrl, buildFilterByIdsCondition(uniqueIds))\n}\n\nconst provider = {\n  getList: async (\n    resource: string,\n    { filter }: TicketCodeFilter,\n  ): Promise<GetListResult<TicketInfo>> => {\n    const filterByTicketCodeCondition = `t=>t.TicketCode==\"${filter.ticketCode}\"`\n    const tickets = await getByConditions<TicketDto>(\n      TICKETS_URL,\n      filterByTicketCodeCondition,\n    )\n\n    const bookingIds = tickets.map((v) => v.bookingId)\n    const bookings = await getByUniqueIds<BookingDto>(BOOKINGS_URL, bookingIds)\n\n    const customerIds = bookings.map((v) => v.customerId)\n    const eventIds = bookings.map((v) => v.eventId)\n\n    const pendingCustomers = getByUniqueIds<CustomerDto>(\n      CUSTOMERS_URL,\n      customerIds,\n    )\n    const pendingEvents = getByUniqueIds<EventDto>(EVENTS_URL, eventIds)\n    const [customers, events] = await Promise.all([\n      pendingCustomers,\n      pendingEvents,\n    ])\n\n    const ticketBaseInfoList = mapToTicketBaseInfoList(\n      bookings,\n      customers,\n      events,\n      tickets,\n    )\n    return Promise.resolve({\n      data: ticketBaseInfoList,\n      total: ticketBaseInfoList.length,\n    })\n  },\n} as DataProvider\n\nexport default provider\n","import { DataProvider, GetListResult } from 'react-admin'\nimport { getByConditions } from '../common/fetch.utils'\nimport { TICKETS_URL } from '../api-urls'\nimport { TicketCodeFilter } from '../common/ticket-code.filter'\nimport { TicketDto } from '../dto/ticket.dto'\n\nconst provider = {\n  getList: async (\n    resource: string,\n    { filter }: TicketCodeFilter,\n  ): Promise<GetListResult<TicketDto>> => {\n    const filterByTicketCodeCondition = `t=>t.TicketCode==\"${filter.ticketCode}\"`\n    const tickets = await getByConditions<TicketDto>(\n      TICKETS_URL,\n      filterByTicketCodeCondition,\n    )\n    return Promise.resolve({\n      data: tickets,\n      total: tickets.length,\n    })\n  },\n} as DataProvider\n\nexport default provider\n","import { DataProvider, sanitizeFetchType } from 'react-admin'\nimport accessUsingsProvider from './access-usings/access-usings.provider'\nimport bookingsProvider from './bookings/bookings.provider'\nimport logsProvider from './logs/extended-logs.provider'\nimport { ResourceName } from './ResourceName'\nimport statsOverallViewListProvider from './stats/overall-view/overall-view-list.provider'\nimport statsOverallViewProvider from './stats/overall-view/overall-view.provider'\nimport ticketDetailsProvider from './ticket-details/ticket-details.provider'\nimport ticketInfoProvider from './ticket-info/ticket-info.provider'\nimport ticketsProvider from './tickets/tickets.provider'\n\nconst dataProviders: Record<ResourceName, DataProvider> = {\n  [ResourceName.ACCESS_USINGS]: accessUsingsProvider,\n  [ResourceName.BOOKINGS]: bookingsProvider,\n  [ResourceName.LOGS]: logsProvider,\n  [ResourceName.LAST_LOGS]: logsProvider,\n  [ResourceName.TICKETS]: ticketsProvider,\n  [ResourceName.TICKET_INFO]: ticketInfoProvider,\n  [ResourceName.TICKET_DETAILS]: ticketDetailsProvider,\n  [ResourceName.TICKET_LOGS]: logsProvider,\n  [ResourceName.STATS_OVERALL_VIEW]: statsOverallViewProvider,\n  [ResourceName.STATS_OVERALL_VIEW_LIST]: statsOverallViewListProvider\n}\n\nexport default (\n  fetchType: string,\n  resource: string,\n  params: unknown,\n): Promise<unknown> => {\n  const selectedProvider = dataProviders[resource as ResourceName]\n  const type = sanitizeFetchType(fetchType)\n  return selectedProvider[type](resource, params)\n}\n","import i18n from 'i18next'\n\nconst provider = {\n  translate: (key: string, options: any): string => i18n.t(key, options),\n  changeLocale: async (locale: string): Promise<void> => {\n    await i18n.changeLanguage(locale)\n  },\n  getLocale: (): string => i18n.language,\n}\n\nexport default provider","import { defaultTheme } from 'react-admin'\nimport { deepPurple, green } from '@material-ui/core/colors'\nimport { ThemeOptions } from '@material-ui/core'\n\nexport const LightTheme: ThemeOptions = {\n  ...defaultTheme,\n  palette: {\n    primary: deepPurple,\n    secondary: green,\n    type: 'light'\n  },\n  typography: {\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Arial',\n      'sans-serif',\n    ].join(','),\n    body1: {\n      fontWeight: 300,\n    },\n    body2: {\n      fontWeight: 300,\n    },\n    h5: {\n      fontWeight: 200,\n    },\n  },\n}\n\nexport const DarkTheme: ThemeOptions = {\n  ...defaultTheme,\n  palette: {\n    primary: {\n      light: deepPurple[100],\n      main: deepPurple[200],\n      dark: deepPurple[300],\n      contrastText: '#F1F1F1'\n    },\n    secondary: green,\n    type: 'dark'\n  },\n  typography: {\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Arial',\n      'sans-serif',\n    ].join(','),\n    body1: {\n      fontWeight: 300,\n    },\n    body2: {\n      fontWeight: 300,\n    },\n    h5: {\n      fontWeight: 200,\n    },\n  },\n}","import React from 'react';\nimport { Layout, AppBar } from 'react-admin';\nimport { Box, Switch } from '@material-ui/core';\nimport { Brightness3, Brightness5 } from '@material-ui/icons';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { DarkTheme, LightTheme } from '../../app.theme';\nimport { reducerType } from '../../core/common/theme.reducer';\nimport { CHANGE_THEME } from '../../core/constants/reducer.actions';\n\nconst AppTopBar = (props: any) => {\n  const dispatch = useDispatch()\n  const theme = useSelector((state: reducerType) => state.theme.darkMode === 'dark')\n\n  return (\n    <AppBar {...props}>\n      <Box style={{ display: \"flex\", flexDirection: \"row-reverse\", width: \"100%\" }}>\n        <Switch checkedIcon={<Brightness3 fontSize=\"small\" />} icon={<Brightness5 fontSize=\"small\" />} checked={theme}\n          style={{ color: \"black\", backgroundColor: \"transparent\" }} color=\"primary\" onChange={() => dispatch({ type: CHANGE_THEME })} />\n      </Box>\n    </AppBar>\n  )\n}\n\nexport const AppLayout = (props: any) => {\n  const theme = useSelector((state: reducerType) => state.theme.darkMode === 'dark' ? DarkTheme : LightTheme)\n\n  return (\n    <Layout\n      {...props}\n      appBar={AppTopBar}\n      theme={theme} />)\n}","import React, { ChangeEvent, FC, useState } from 'react'\nimport {\n    Box,\n    Button,\n    FormControl,\n    withStyles,\n    Input,\n    FormHelperText,\n    BoxProps\n} from '@material-ui/core'\nimport SearchIcon from '@material-ui/icons/Search'\n\nconst RoundInputBox = withStyles({\n    root: {\n        borderRadius: 16,\n        width: \"90%\",\n        marginLeft: \"5%\",\n        display: \"flex\",\n        flexDirection: \"row-reverse\",\n        border: \"solid\",\n        borderColor: \"#673ab7\"\n    }\n})(Box)\n\nconst RoundInputBoxBtn = withStyles({\n    root: {\n        background: \"#673ab7\",\n        variant: \"contained\",\n        borderRadius: 11,\n        borderTopLeftRadius: 0,\n        borderBottomLeftRadius: 0,\n        margin: 0,\n        fontWeight: \"bold\",\n        '&:hover': {\n            background: \"#7e57c2\"\n        }\n    },\n})(Button)\n\nconst RoundInputBoxFC = withStyles({\n    root: {\n        width: \"100%\",\n        marginLeft: 13,\n        marginTop: 2\n    }\n})(FormControl)\n\nexport type SearchInputProps = {\n    label: string\n    onValue: (value: string) => void\n    disabled: boolean\n    error: string,\n    boxStyle: BoxProps | undefined\n}\n\nconst SearchInput: FC<Readonly<SearchInputProps>> = ({\n    label,\n    onValue,\n    disabled,\n    error,\n    boxStyle\n}) => {\n    const [inputError, setInputError] = useState(false)\n    const [inputValue, setInputValue] = useState('')\n\n    const handleInput = (event: ChangeEvent<HTMLInputElement>) => {\n        setInputValue(event.target.value)\n    }\n\n    const handleClick = () => {\n        if (inputValue) {\n            setInputError(false)\n            onValue(inputValue)\n        } else {\n            setInputError(true)\n        }\n    }\n\n    return (\n        <RoundInputBox style={boxStyle}>\n            <RoundInputBoxBtn onClick={handleClick} disabled={disabled}>\n                <SearchIcon style={{ color: \"white\" }} />\n            </RoundInputBoxBtn>\n            <RoundInputBoxFC disabled={disabled}>\n                <Input disableUnderline onInput={handleInput} placeholder={label}\n                    onKeyDown={(ev) => ev.key === 'Enter' && handleClick()} error={inputError || !!error} />\n                {inputError && (\n                    <FormHelperText error>Pole jest wymagane</FormHelperText>\n                )}\n                {!!error && <FormHelperText error>{error}</FormHelperText>}\n            </RoundInputBoxFC>\n        </RoundInputBox>\n    )\n}\n\nexport default SearchInput","import { stringify } from 'querystring'\nimport * as React from 'react'\nimport { useCallback, useState } from 'react'\nimport {\n  GetListResult, GET_LIST, sanitizeFetchType,\n  useMutation,\n  useNotify\n} from 'react-admin'\nimport { useHistory } from 'react-router-dom'\nimport { TicketCodeFilter } from '../../core/common/ticket-code.filter'\nimport { TicketDto } from '../../core/dto/ticket.dto'\nimport { ResourceName } from '../../core/ResourceName'\nimport SearchInput from './SearchInput'\n\nexport const FindUserByTicket = () => {\n  const history = useHistory()\n  const notify = useNotify()\n  const [error, setError] = useState('')\n  const [mutate, { loading }] = useMutation()\n\n  const fetchTickets = useCallback(\n    (ticketCode: string) =>\n      mutate(\n        {\n          type: sanitizeFetchType(GET_LIST),\n          resource: ResourceName.TICKETS,\n          payload: { filter: { ticketCode } } as TicketCodeFilter,\n        },\n        { returnPromise: true },\n      ) as Promise<GetListResult<TicketDto>>,\n    [mutate],\n  )\n\n  const onValue = useCallback(\n    async (ticketCode: string) => {\n      setError('')\n      try {\n        const {\n          total,\n          data: [onlyTicket],\n        } = await fetchTickets(ticketCode)\n        if (!total) {\n          setError('Nie ma biletu o takim kodzie')\n        } else if (total === 1) {\n          history.push({\n            pathname: `/${ResourceName.TICKET_DETAILS}/${onlyTicket.bookingId}/show`,\n          })\n        } else {\n          history.push({\n            pathname: `/${ResourceName.TICKET_INFO}`,\n            search: stringify({\n              filter: JSON.stringify({\n                ticketCode,\n              } as TicketCodeFilter['filter']),\n            }),\n          })\n        }\n      } catch (err) {\n        notify((err as Error)?.message, 'error')\n      }\n    },\n    [fetchTickets, history, notify],\n  )\n\n  return (\n    <SearchInput\n      label=\"Kod biletu\"\n      onValue={onValue}\n      disabled={loading}\n      error={error}\n      boxStyle={undefined}\n    />\n  )\n}\n","export const getContrastColor = (hexcolor: string) => {\n    const r = parseInt(hexcolor.substr(1, 2), 16);\n    const g = parseInt(hexcolor.substr(3, 2), 16);\n    const b = parseInt(hexcolor.substr(5, 2), 16);\n    const yiq = ((r * 299) + (g * 587) + (b * 114)) / 1000;\n    return (yiq >= 128) ? 'black' : 'white';\n  }","import React, { useEffect, useState } from 'react'\nimport { Grid, Button, Table, TableContainer, IconButton,\n   TableHead, TableBody, TableRow, TableCell, Paper, Collapse } from '@material-ui/core'\nimport {\n  DateField,\n  List,\n  ListProps,\n  TextField,\n  useListContext\n} from 'react-admin'\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown'\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\nimport { useHistory } from 'react-router-dom'\nimport { useSelector } from 'react-redux';\nimport { ExtendedLog } from '../../core/logs/extended-log'\nimport { ResourceName } from '../../core/ResourceName';\nimport { getContrastColor } from '../../core/common/visual.utils';\nimport { reducerType } from '../../core/common/theme.reducer';\n\nconst DashRow = ({data}:{data: ExtendedLog}) => {\n  const [open, setOpen] = useState(false)\n  const [color, setColor] = useState(\"\")\n  const history = useHistory()\n  const textColor = useSelector((state: reducerType) => state.theme.darkMode === 'light' ? 'black' : 'white') \n\n  useEffect(() => {\n    if (data.color === null) {\n      setColor(\"transparent\")\n    }\n    else {\n      setColor(data.color)\n    }\n    setOpen(false)\n  }, [data])\n\n  return(\n    <>\n      <TableRow style={{backgroundColor: color}}>\n        <TableCell>\n          <IconButton onClick={() => setOpen(!open)} size=\"small\">\n            {open ?\n            <ArrowDropUpIcon style={{color: textColor}}/> :\n            <ArrowDropDownIcon style={{color: textColor}}/>}\n          </IconButton>\n        </TableCell>\n        <TableCell style={{textAlign: \"center\"}}>\n          <DateField label=\"Data\" record={data} source=\"date\" showTime \n            style={{ color: data.color != null ? getContrastColor(data.color) : textColor, fontWeight: data.color !== null && getContrastColor(data.color) === 'white' || data.color === null && textColor === 'white' ? 'bold' : 'normal' }}/>\n        </TableCell>\n        <TableCell style={{textAlign: \"center\"}}>\n          <TextField label=\"Urządzenie\" record={data} source=\"deviceName\" \n            style={{ color: data.color != null ? getContrastColor(data.color) : textColor, fontWeight: data.color !== null && getContrastColor(data.color) === 'white' || data.color === null && textColor === 'white' ? 'bold' : 'normal' }}/>\n        </TableCell>\n        <TableCell style={{textAlign: \"center\"}}>\n          <TextField label=\"Bilet\" record={data} source=\"ticketCode\" \n            style={{ color: data.color != null ? getContrastColor(data.color) : textColor, fontWeight: data.color !== null && getContrastColor(data.color) === 'white' || data.color === null && textColor === 'white' ? 'bold' : 'normal' }}/>\n        </TableCell>\n      </TableRow> \n      <TableRow>\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={4}>\n          <Collapse in={open}>\n            <Grid container style={{marginTop: \"3%\"}}>\n              <Grid item xs={4} style={{display: \"flex\", justifyContent: \"center\", flexDirection: \"column\"}}>\n                <div style={{marginLeft: \"1%\"}}>Rezerwacja: </div>\n              </Grid>\n              <Grid item xs={8} style={{display: \"flex\", justifyContent: \"flex-end\"}}>\n                {data.bookingId == null ?\n                <div /> :\n                <Button variant=\"contained\" style={{width: '50%',backgroundColor: 'rgb(220, 220, 220)'}}\n                onClick={() => history.push({pathname: `/${ResourceName.TICKET_DETAILS}/${data.bookingId}/show`})}>\n                  {data.bookingId}</Button>}\n              </Grid>\n              <hr style={{width: \"90%\", marginTop: \"3%\", marginBottom: \"3%\"}}/>\n              <Grid item xs={4} style={{display: \"flex\", justifyContent: \"center\", flexDirection: \"column\", marginBottom: \"3%\"}}>\n                <div style={{marginLeft: \"1%\"}}>Opis: </div>\n              </Grid>\n              <Grid item xs={8} style={{display: \"flex\", justifyContent: \"center\", flexDirection: \"column\", alignItems: \"center\", marginBottom: \"3%\"}}>\n                {data.text}\n              </Grid>\n            </Grid>\n          </Collapse>\n        </TableCell>\n      </TableRow>\n    </>\n  )\n}\n\nconst LogGrid = () => {\n  const { ids, data } = useListContext()\n\n  return(\n    <TableContainer component={Paper}>\n      <Table aria-label=\"a dense table\" size=\"small\" padding=\"none\" >\n        <TableHead>\n          <TableRow>\n            <TableCell style={{width: \"5%\"}}/>\n            <TableCell style={{width: \"20%\", textAlign: \"center\"}}>Data</TableCell>\n            <TableCell style={{width: \"30%\", textAlign: \"center\"}}>Urządzenie</TableCell>\n            <TableCell style={{width: \"45%\", textAlign: \"center\"}}>Bilet</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {ids.map(id =>\n            <DashRow key={id} data={data[id] as ExtendedLog}/>\n          )}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n\nexport function LastLogList(props: ListProps) {\n\n  return(\n    <>\n      <List\n        {...props}\n        perPage={9}\n        exporter={false}\n        pagination={false}\n        actions={false}\n        sort={{ field: 'date', order: 'DESC' }}>\n          <LogGrid/>\n      </List> \n    </>\n  )\n}\n","import {\n  Card,\n  CardContent,\n  CardHeader,\n  createStyles,\n  Grid,\n  makeStyles,\n  Theme\n} from '@material-ui/core'\nimport * as React from 'react'\nimport { ResourceContextProvider } from 'react-admin'\nimport { ResourceName } from '../core/ResourceName'\nimport { FindUserByTicket } from './common/FindUserByTicket'\nimport { LastLogList } from './logs/LastLogList'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    header: {\n      textAlign: 'center',\n      letterSpacing: theme.spacing(0.2),\n    },\n    subHead: {\n      textAlign: 'center'\n    }\n  }),\n)\n\nexport const Dashboard = () => {\n  const classes = useStyles()\n\n  return (\n    <Grid container spacing={1}>\n      <Grid item xs={12} >\n        <Card>\n          <CardHeader\n            className={classes.header}\n            title=\"Witaj w aplikacji administracyjnej Sport Data\"\n            titleTypographyProps={{ variant: 'h4' }}\n          />\n        </Card>\n      </Grid>\n      <Grid item sm={6} xs={12}>\n        <Card>\n          <CardHeader\n            title=\"Znajdź użytkownika po kodzie biletu\" />\n          <CardContent>\n            <FindUserByTicket />\n          </CardContent>\n        </Card>\n      </Grid>\n      <Grid item sm={6} xs={12}>\n        <Card>\n          <CardHeader\n            title=\"Ostatnie logi\" />\n          <CardContent>\n            <ResourceContextProvider value={ResourceName.LAST_LOGS}>\n              <LastLogList basePath=\"/\" title=\" \" />\n            </ResourceContextProvider>\n          </CardContent>\n        </Card>\n      </Grid>\n    </Grid>\n  )\n}\n","import * as React from 'react'\nimport { useListContext } from 'react-admin';\nimport { Button, Toolbar, Grid, Paper, ButtonGroup, Select, MenuItem } from '@material-ui/core';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\n\nexport const PostPagination = () => {\n    const { perPage, total, setPerPage } = useListContext();\n    const nbPages = Math.ceil(total / perPage) || 1\n    return (\n        nbPages > 1 ?\n          <Toolbar>\n            <Grid container>\n              <Grid item xs={1}>\n                <Grid container style={{height: '100%'}}>\n                  <Grid item xs={1} />\n                  <Grid item xs={10}>\n                    <Paper elevation={1}\n                    style={{height: '100%', display: 'flex', flexDirection: 'column', justifyContent: 'center', textAlign: 'center'}}>\n                      <Select value={perPage} onChange={e => setPerPage(parseInt(e.target.value as string, 10))}>\n                        <MenuItem value={20}> 20 </MenuItem>\n                        <MenuItem value={50}> 50 </MenuItem>\n                        <MenuItem value={100}> 100 </MenuItem>\n                      </Select>\n                    </Paper>\n                  </Grid>\n                  <Grid item xs={1} />\n                </Grid>\n              </Grid>\n              <Grid item xs={8} />\n              <Grid item xs={3}>\n                <Paper elevation={0}\n                style={{height: '100%', display: 'flex', flexDirection: 'row', justifyContent: 'flex-end', alignItems: 'center'}}>\n                  <div />\n                </Paper>\n              </Grid>\n            </Grid>\n          </Toolbar> :\n          <div />\n    );\n  }\n\nexport const MobilePostPagination = () => {\n  const { page, perPage, total, setPage, setPerPage } = useListContext();\n  const nbPages = Math.ceil(total / perPage) || 1;\n  return (\n      nbPages > 1 ?\n        <Toolbar>\n          <Grid container>\n            <Grid item xs={3}>\n            <Paper elevation={0}\n              style={{height: '100%', display: 'flex', flexDirection: 'row', justifyContent: 'flex-end', alignItems: 'center'}}>\n              <Select value={perPage} style={{width: '100%', height: '70%', textAlign: 'center'}} variant='outlined'\n              onChange={e => setPerPage(parseInt(e.target.value as string, 10))}>\n                <MenuItem value={20}> 20 </MenuItem>\n                <MenuItem value={50}> 50 </MenuItem>\n                <MenuItem value={100}> 100 </MenuItem>\n              </Select>\n            </Paper>\n            </Grid>\n            <Grid item xs={4} />\n            <Grid item xs={5}>\n              <Paper elevation={0}\n              style={{height: '100%', display: 'flex', flexDirection: 'row', justifyContent: 'flex-end', alignItems: 'center'}}>\n                <ButtonGroup style={{height: '70%'}}>\n                  {page > 1 ?\n                    <Button variant=\"outlined\" color=\"primary\" key=\"prev\" onClick={() => setPage(page - 1)}>\n                      <ChevronLeft />\n                    </Button> :\n                    <Button variant=\"outlined\" color=\"primary\" disabled>\n                      <ChevronLeft />\n                    </Button> \n                  }\n                  <Button disabled variant=\"contained\"> {page} </Button>\n                  {page !== nbPages ?\n                    <Button variant=\"outlined\" color=\"primary\" key=\"next\" onClick={() => setPage(page + 1)}>\n                      <ChevronRight />\n                    </Button> :\n                    <Button variant=\"outlined\" color=\"primary\" disabled>\n                      <ChevronRight />\n                    </Button>\n                  }\n                </ButtonGroup>\n              </Paper>\n            </Grid>\n          </Grid>\n        </Toolbar> :\n        <div />\n  );\n}","import * as React from 'react'\nimport { TextField } from '@material-ui/core';\nimport { useField } from 'react-final-form';\nimport ArrowRightAltIcon from '@material-ui/icons/ArrowRightAlt';\n\nexport const DateFilterInput = ({ source }: { source: string }) => {\n  const defaultFromDate = new Date(Date.now() - 2678400000)\n  const defaultToDate = new Date(Date.now())\n  const [dateFrom, setDateFrom] = React.useState(defaultFromDate.getTime().toString())\n  const [dateTo, setDateTo] = React.useState(defaultToDate.getTime().toString())\n  const {\n    input: { onChange },\n    meta: { touched, error }\n  } = useField(source);\n\n  onChange([dateFrom, dateTo].join(\";\"))\n\n  const convertedDate = (date: Date) => (\n    date.toJSON().substr(0, 10)\n  )\n\n  return (\n    <span key=\"date\" style={{ display: \"flex\", justifyContent: \"center\", verticalAlign: \"center\", marginBottom: \"5%\" }}>\n      <TextField\n        defaultValue={convertedDate(defaultFromDate)}\n        name={source}\n        type=\"date\"\n        onChange={e => setDateFrom(Date.parse(e.target.value).toString())}\n        error={!!(touched && error)}\n        helperText={touched && error}\n        style={{ alignSelf: \"center\" }}\n      />\n      <ArrowRightAltIcon style={{ marginTop: \"4%\" }} />\n      <TextField\n        defaultValue={convertedDate(defaultToDate)}\n        name={source}\n        type=\"date\"\n        onChange={e => setDateTo(Date.parse(e.target.value).toString())}\n        error={!!(touched && error)}\n        helperText={touched && error}\n      />\n    </span>\n  );\n};","import React, { useEffect, useState } from 'react'\nimport {\n  useMediaQuery, useTheme, Grid, Box, Button, Table, TableContainer,\n  TableHead, TableBody, TableRow, TableCell, Paper, Collapse\n} from '@material-ui/core'\nimport {\n  DateField,\n  Filter,\n  FilterProps,\n  List,\n  ListProps,\n  Pagination,\n  TextField,\n  TextInput,\n  useListContext,\n  useListSortContext,\n  SelectInput\n} from 'react-admin'\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown'\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport { useHistory } from 'react-router-dom'\nimport { useSelector } from 'react-redux';\nimport { MobilePostPagination } from '../common/Pagination'\nimport { DateFilterInput } from './DateFilterInput';\nimport { ExtendedLog } from '../../core/logs/extended-log'\nimport { ResourceName } from '../../core/ResourceName';\nimport { getContrastColor } from '../../core/common/visual.utils';\nimport { reducerType } from '../../core/common/theme.reducer';\n\nconst DesktopRow = ({ data }: { data: ExtendedLog }) => {\n  const [color, setColor] = useState(data.color ? data.color : \"transparent\")\n  const history = useHistory()\n  const textColor = useSelector((state: reducerType) => state.theme.darkMode === 'light' ? 'black' : 'white')\n\n  useEffect(() => {\n    if (data.color === null) {\n      setColor(\"transparent\")\n    }\n    else {\n      setColor(data.color)\n    }\n  }, [data])\n\n  return (\n    <>\n      <TableRow style={{ backgroundColor: color, height: \"100%\" }}>\n        <TableCell>\n          <DateField label=\"Data\" record={data} source=\"date\" showTime\n            style={{ color: data.color != null ? getContrastColor(data.color) : textColor, fontWeight: data.color !== null && getContrastColor(data.color) === 'white' || data.color === null && textColor === 'white' ? 'bold' : 'normal' }} />\n        </TableCell>\n        <TableCell>\n          <TextField label=\"Urządzenie\" record={data} source=\"deviceName\"\n            style={{ color: data.color != null ? getContrastColor(data.color) : textColor, fontWeight: data.color !== null && getContrastColor(data.color) === 'white' || data.color === null && textColor === 'white' ? 'bold' : 'normal' }} />\n        </TableCell>\n        <TableCell>\n          <TextField label=\"Bilet\" record={data} source=\"ticketCode\"\n            style={{ color: data.color != null ? getContrastColor(data.color) : textColor, fontWeight: data.color !== null && getContrastColor(data.color) === 'white' || data.color === null && textColor === 'white' ? 'bold' : 'normal' }} />\n        </TableCell>\n        <TableCell>\n          <TextField label=\"Opis\" record={data} source=\"text\" sortable={false}\n            style={{ color: data.color != null ? getContrastColor(data.color) : textColor, fontWeight: data.color !== null && getContrastColor(data.color) === 'white' || data.color === null && textColor === 'white' ? 'bold' : 'normal' }} />\n        </TableCell>\n        <TableCell>\n          {data.bookingId == null ?\n            <div /> :\n            <Button variant=\"contained\" style={{ width: '100%', backgroundColor: 'rgb(220, 220, 220)' }}\n              onClick={() => history.push({ pathname: `/${ResourceName.TICKET_DETAILS}/${data.bookingId}/show` })}>\n              {data.bookingId}</Button>}\n        </TableCell>\n      </TableRow>\n    </>\n  )\n}\n\nexport const LogGrid = () => {\n  const { ids, data } = useListContext()\n  const { currentSort, setSort } = useListSortContext()\n\n  const inverseOrder = (order: string) => (order === 'ASC' ? 'DESC' : 'ASC')\n\n  const handleSortChange = (sortBy: string) => {\n    setSort(\n      sortBy,\n      sortBy === currentSort.field\n        ? inverseOrder(currentSort.order)\n        : 'DESC'\n    )\n  }\n\n  const HeaderCell = (name: string, display: string) => (\n    <>\n      {currentSort.field === name\n        ? <Button style={{ width: \"100%\", display: \"flex\", justifyContent: \"flex-start\" }}\n          startIcon={currentSort.order === 'ASC' ? <ArrowUpwardIcon /> : <ArrowDownwardIcon />}>{display}</Button>\n        : <Button style={{ width: \"100%\" }}>{display}</Button>}\n    </>\n  )\n\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"a dense table\" size=\"small\" >\n        <TableHead>\n          <TableRow>\n            <TableCell onClick={() => handleSortChange(\"date\")} style={{ width: \"10%\" }}>\n              {HeaderCell(\"date\", \"Data\")}</TableCell>\n            <TableCell onClick={() => handleSortChange(\"deviceName\")} style={{ width: \"15%\" }}>\n              {HeaderCell(\"deviceName\", \"Urządzenie\")}</TableCell>\n            <TableCell onClick={() => handleSortChange(\"ticketCode\")} style={{ width: \"25%\" }}>\n              {HeaderCell(\"ticketCode\", \"Bilet\")}</TableCell>\n            <TableCell style={{ textAlign: \"center\", width: \"25%\" }}>\n              OPIS</TableCell>\n            <TableCell onClick={() => handleSortChange(\"bookingId\")} style={{ width: \"15%\" }}>\n              {HeaderCell(\"bookingId\", \"Rezerwacja\")}</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {ids.map(id =>\n            <DesktopRow key={id} data={data[id] as ExtendedLog} />\n          )}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n\nconst MobileRow = ({ data }: { data: ExtendedLog }) => {\n  const [open, setOpen] = useState(false)\n  const [color, setColor] = useState(\"\")\n  const history = useHistory()\n  const textColor = useSelector((state: reducerType) => state.theme.darkMode === 'light' ? 'black' : 'white')\n\n  useEffect(() => {\n    if (data.color === null) {\n      setColor(\"transparent\")\n    }\n    else {\n      setColor(data.color)\n    }\n    setOpen(false)\n  }, [data])\n\n  return (\n    <>\n      <TableRow style={{ backgroundColor: color }}>\n        <TableCell>\n          <Button onClick={() => setOpen(!open)} style={{ width: \"100%\" }}>\n            {open ?\n              <ArrowDropUpIcon style={{ color: textColor }} /> :\n              <ArrowDropDownIcon style={{ color: textColor }} />}\n          </Button>\n        </TableCell>\n        <TableCell>\n          <DateField label=\"Data\" record={data} source=\"date\" showTime\n            style={{ color: data.color != null ? getContrastColor(data.color) : textColor, fontWeight: data.color !== null && getContrastColor(data.color) === 'white' || data.color === null && textColor === 'white' ? 'bold' : 'normal' }} />\n        </TableCell>\n        <TableCell>\n          <TextField label=\"Urządzenie\" record={data} source=\"deviceName\"\n            style={{ color: data.color != null ? getContrastColor(data.color) : textColor, fontWeight: data.color !== null && getContrastColor(data.color) === 'white' || data.color === null && textColor === 'white' ? 'bold' : 'normal' }} />\n        </TableCell>\n        <TableCell>\n          <TextField label=\"Bilet\" record={data} source=\"ticketCode\"\n            style={{ color: data.color != null ? getContrastColor(data.color) : textColor, fontWeight: data.color !== null && getContrastColor(data.color) === 'white' || data.color === null && textColor === 'white' ? 'bold' : 'normal' }} />\n        </TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={4}>\n          <Collapse in={open}>\n            <Grid container style={{ marginTop: \"3%\" }}>\n              <Grid item xs={6} style={{ display: \"flex\", justifyContent: \"center\", flexDirection: \"column\" }}>\n                <Box>\n                  Rezerwacja: </Box>\n              </Grid>\n              <Grid item xs={6} style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n                {data.bookingId == null ?\n                  <div /> :\n                  <Button variant=\"contained\" style={{ width: '50%', backgroundColor: 'rgb(220, 220, 220)' }}\n                    onClick={() => history.push({ pathname: `/${ResourceName.TICKET_DETAILS}/${data.bookingId}/show` })}>\n                    {data.bookingId}</Button>}\n              </Grid>\n              <hr style={{ width: \"90%\", marginTop: \"3%\", marginBottom: \"3%\" }} />\n              <Grid item xs={6} style={{ display: \"flex\", justifyContent: \"center\", flexDirection: \"column\", marginBottom: \"3%\" }}>\n                <div>Opis: </div>\n              </Grid>\n              <Grid item xs={6} style={{display: \"flex\", justifyContent: \"center\", flexDirection: \"column\", alignItems: \"center\", marginBottom: \"3%\"}}>\n                {data.text}\n              </Grid>\n            </Grid>\n          </Collapse>\n        </TableCell>\n      </TableRow>\n    </>\n  )\n}\n\nexport const LogMobileGrid = () => {\n  const { ids, data } = useListContext()\n  const { currentSort, setSort } = useListSortContext()\n\n  const inverseOrder = (order: string) => (order === 'ASC' ? 'DESC' : 'ASC')\n\n  const handleSortChange = (sortBy: string) => {\n    setSort(\n      sortBy,\n      sortBy === currentSort.field\n        ? inverseOrder(currentSort.order)\n        : 'DESC'\n    )\n  }\n\n  const HeaderCell = (name: string, display: string) => (\n    <>\n      {currentSort.field === name\n        ? <Button style={{ width: \"100%\" }}\n          startIcon={currentSort.order === 'ASC' ? <ArrowUpwardIcon /> : <ArrowDownwardIcon />}>{display}</Button>\n        : <Button style={{ width: \"100%\" }}>{display}</Button>}\n    </>\n  )\n\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"a dense table\" size=\"small\" >\n        <TableHead>\n          <TableRow>\n            <TableCell size=\"small\" style={{ width: \"10%\" }} />\n            <TableCell onClick={() => handleSortChange(\"date\")}>{HeaderCell(\"date\", \"Data\")}</TableCell>\n            <TableCell onClick={() => handleSortChange(\"deviceName\")}>{HeaderCell(\"deviceName\", \"Urządzenie\")}</TableCell>\n            <TableCell onClick={() => handleSortChange(\"ticketCode\")}>{HeaderCell(\"ticketCode\", \"Bilet\")}</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {ids.map(id =>\n            <MobileRow key={id} data={data[id] as ExtendedLog} />\n          )}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n\nconst ListFilters = (props: Omit<FilterProps, 'children'>) => (\n  <Filter {...props}>\n    <TextInput label=\"Kod biletu\" source=\"ticketCode\" alwaysOn />\n    <SelectInput label=\"Urządzenie\" source=\"deviceName\" choices={[\n      { id: 'Czytnik', name: 'Czytnik' },\n      { id: 'Przej\\u015Bcie', name: 'Przej\\u015Bcie' }]} />\n    <DateFilterInput source=\"date\" key=\"date\" />\n    <TextInput label=\"Rezerwacja\" source=\"bookingId\" />\n    <TextInput label=\"Wydarzenie\" source=\"event\" />\n  </Filter>\n)\n\nexport function LogList(props: ListProps) {\n  const theme = useTheme()\n  return (\n    <>\n      {useMediaQuery(theme.breakpoints.down('sm')) ?\n        <List\n          perPage={20}\n          exporter={false}\n          pagination={<MobilePostPagination />}\n          filters={<ListFilters />}\n          sort={{ field: 'date', order: 'DESC' }}\n          {...props}>\n          <LogMobileGrid />\n        </List> :\n        <List\n          perPage={20}\n          exporter={false}\n          pagination={<Pagination rowsPerPageOptions={[20, 50, 100]} />}\n          filters={<ListFilters />}\n          sort={{ field: 'date', order: 'DESC' }}\n          {...props}>\n          <LogGrid />\n        </List>\n      }\n    </>\n  )\n}\n","export enum Access {\n  BLOCK = 'BLOCK',\n  UNBLOCK = 'UNBLOCK',\n  DISABLED = 'DISABLED',\n}\n\nexport type ToggleButtonState = {\n  type: Access\n  text: string\n}\n\nexport type Action = { type: Access }\n","import { Box, Button, Collapse, IconButton, makeStyles, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\nimport { ArrowDropDown, ArrowDropUp } from '@material-ui/icons';\nimport React, { useState } from 'react';\nimport { Show, ShowProps, useShowContext } from 'react-admin';\nimport { useSelector } from 'react-redux';\nimport { BlockOverallView, ObjectOverallView, TribuneOverallView } from '../../../core/stats/overall-view/overall-view';\nimport { reducerType } from '../../../core/common/theme.reducer';\n\nconst useStyles = makeStyles({\n  noBorderCell: {\n    borderBottom: 'none'\n  }\n})\n\nconst ViewTitle = (record: any) => {\n  const { record: { eventName } } = record\n  return (\n    <span>Widok ogólny: {eventName}</span>\n  )\n}\n\nconst BlockView = (block: BlockOverallView) => {\n  const { capacity, entered, enteredAbo, enteredNormal, enteredInfix, enteredPoints, enteredService, name, sold, soldAbo, soldNormal, soldInfix, soldPoints, soldService } = block\n  const [open, setOpen] = useState(false)\n  const classes = useStyles()\n  const backColor = useSelector((state: reducerType) => state.theme.darkMode === 'light' ? '#FAFAFA' : '#7A7A7A') \n\n  return (\n    <>\n      <TableRow style={{ backgroundColor: backColor }}>\n        <TableCell classes={{ root: open ? classes.noBorderCell : undefined }}>\n          <span style={{ marginLeft: \"2px\" }}>{name}</span>\n          {sold > 0 &&\n            <IconButton onClick={() => setOpen(!open)} style={{ height: \"40px\", width: \"40px\" }}>\n              {open ? <ArrowDropUp /> : <ArrowDropDown />}\n            </IconButton>}\n        </TableCell>\n        <TableCell style={{ width: \"22.22%\", textAlign: \"center\" }} classes={{ root: open ? classes.noBorderCell : undefined }}>\n          {entered}\n        </TableCell>\n        <TableCell style={{ width: \"22.22%\", textAlign: \"center\" }} classes={{ root: open ? classes.noBorderCell : undefined }}>\n          {sold}\n        </TableCell>\n        <TableCell style={{ width: \"22.22%\", textAlign: \"center\" }} classes={{ root: open ? classes.noBorderCell : undefined }}>\n          {capacity}\n        </TableCell>\n      </TableRow>\n      {open &&\n        <TableRow style={{ backgroundColor: backColor }}>\n          <TableCell>\n            {soldNormal > 0 ? <div style={{ marginLeft: \"2px\" }}>NORMAL</div> : <div />}\n            {soldAbo > 0 ? <div style={{ marginLeft: \"2px\" }}>ABO</div> : <div />}\n            {soldInfix > 0 ? <div style={{ marginLeft: \"2px\" }}>INFIX</div> : <div />}\n            {soldPoints > 0 ? <div style={{ marginLeft: \"2px\" }}>POINTS</div> : <div />}\n            {soldService > 0 ? <div style={{ marginLeft: \"2px\" }}>SERVICE</div> : <div />}\n          </TableCell>\n          <TableCell>\n            <div style={{ textAlign: \"center\" }}>{soldNormal > 0 ? enteredNormal : \"\"}</div>\n            <div style={{ textAlign: \"center\" }}>{soldAbo > 0 ? enteredAbo : \"\"}</div>\n            <div style={{ textAlign: \"center\" }}>{soldInfix > 0 ? enteredInfix : \"\"}</div>\n            <div style={{ textAlign: \"center\" }}>{soldPoints > 0 ? enteredPoints : \"\"}</div>\n            <div style={{ textAlign: \"center\" }}>{soldService > 0 ? enteredService : \"\"}</div>\n          </TableCell>\n          <TableCell>\n            <div style={{ textAlign: \"center\" }}>{soldNormal > 0 ? soldNormal : \"\"}</div>\n            <div style={{ textAlign: \"center\" }}>{soldAbo > 0 ? soldAbo : \"\"}</div>\n            <div style={{ textAlign: \"center\" }}>{soldInfix > 0 ? soldInfix : \"\"}</div>\n            <div style={{ textAlign: \"center\" }}>{soldPoints > 0 ? soldPoints : \"\"}</div>\n            <div style={{ textAlign: \"center\" }}>{soldService > 0 ? soldService : \"\"}</div>\n          </TableCell>\n          <TableCell />\n        </TableRow>}\n    </>\n  )\n}\n\nconst TribuneView = (tribune: TribuneOverallView) => {\n  const { capacity, entered, name, sold, blocks } = tribune\n  const [open, setOpen] = useState(false)\n  const classes = useStyles()\n\n  return (\n    <>\n      {blocks.length > 0 && capacity > 0 &&\n        <TableRow>\n          <TableCell>\n            <span style={{ marginLeft: \"2px\" }}>{name}</span>\n            <IconButton onClick={() => setOpen(!open)} style={{ height: \"40px\", width: \"40px\" }}>\n              {open ? <ArrowDropUp /> : <ArrowDropDown />}\n            </IconButton>\n          </TableCell>\n          {open ?\n            <TableCell colSpan={4}>\n              <Table padding=\"none\">\n                <TableBody>\n                  {blocks.map((block) => (\n                    <BlockView {...block} key={block.id} />\n                  ))}\n                  <TableRow>\n                    <TableCell classes={{ root: classes.noBorderCell }} />\n                    <TableCell style={{ textAlign: \"center\" }} classes={{ root: classes.noBorderCell }}>{entered}</TableCell>\n                    <TableCell style={{ textAlign: \"center\" }} classes={{ root: classes.noBorderCell }}>{sold}</TableCell>\n                    <TableCell style={{ textAlign: \"center\" }} classes={{ root: classes.noBorderCell }}>{capacity}</TableCell>\n                  </TableRow>\n                </TableBody>\n              </Table>\n              <div style={{ height: \"1px\" }} />\n            </TableCell> :\n            <>\n              <TableCell />\n              <TableCell style={{ textAlign: \"center\" }}>{entered}</TableCell>\n              <TableCell style={{ textAlign: \"center\" }}>{sold}</TableCell>\n              <TableCell style={{ textAlign: \"center\" }}>{capacity}</TableCell>\n            </>}\n        </TableRow>\n      }\n    </>\n  )\n}\n\nconst ObjectView = (object: ObjectOverallView) => {\n  const { capacity, entered, name, sold, tribunes } = object\n  const [open, setOpen] = useState(true)\n\n  return (\n    <Box style={{ margin: \"5px\", borderRadius: \"5px\", boxShadow: \"0px 0px 2px\" }}>\n      <Button style={{ width: \"100%\" }} onClick={() => setOpen(!open)}>{name}</Button>\n      <Collapse in={open}>\n        <TableContainer>\n          <Table padding=\"none\">\n            <TableHead>\n              <TableRow>\n                <TableCell style={{ width: \"25%\" }}>\n                  <div style={{ marginLeft: \"2px\" }}>Trybuna</div>\n                </TableCell>\n                <TableCell style={{ width: \"25%\" }}>\n                  <div style={{ marginLeft: \"2px\" }}>Sektor</div>\n                </TableCell>\n                <TableCell style={{ width: \"16.67%\", textAlign: \"center\" }}>Wejścia</TableCell>\n                <TableCell style={{ width: \"16.67%\", textAlign: \"center\" }}>Sprzedano</TableCell>\n                <TableCell style={{ width: \"16.67%\", textAlign: \"center\" }}>Pojemność</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {tribunes.map((tribune) => <TribuneView {...tribune} key={tribune.id} />)}\n              <TableRow style={{ height: \"40px\" }}>\n                <TableCell>\n                  <div style={{ marginLeft: \"2px\" }}>Suma</div>\n                </TableCell>\n                <TableCell />\n                <TableCell style={{ textAlign: \"center\" }}>{entered}</TableCell>\n                <TableCell style={{ textAlign: \"center\" }}>{sold}</TableCell>\n                <TableCell style={{ textAlign: \"center\" }}>{capacity}</TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Collapse>\n      {!open &&\n        <Table padding=\"none\">\n          <TableHead>\n            <TableRow>\n              <TableCell style={{ width: \"50%\" }} />\n              <TableCell style={{ width: \"16.67%\", textAlign: \"center\" }}>Wejścia</TableCell>\n              <TableCell style={{ width: \"16.67%\", textAlign: \"center\" }}>Sprzedano</TableCell>\n              <TableCell style={{ width: \"16.67%\", textAlign: \"center\" }}>Pojemność</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            <TableRow style={{ height: \"40px\" }}>\n              <TableCell>\n                <div style={{ marginLeft: \"2px\" }}>Suma</div>\n              </TableCell>\n              <TableCell style={{ textAlign: \"center\" }}>{entered}</TableCell>\n              <TableCell style={{ textAlign: \"center\" }}>{sold}</TableCell>\n              <TableCell style={{ textAlign: \"center\" }}>{capacity}</TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>}\n    </Box>\n  )\n}\n\nconst StatsView = () => {\n  const { record } = useShowContext()\n\n  return (\n    <>\n      {record?.objects.map((object: ObjectOverallView) => (\n        <ObjectView {...object} key={record.id} />\n      ))}\n    </>\n  )\n}\n\nexport const OverallView = (props: ShowProps) => (\n  <Show title={<ViewTitle />} {...props}>\n    <StatsView />\n  </Show>\n)\n","import * as React from 'react'\nimport {\n  Filter,\n  FilterProps,\n  List,\n  ListProps,\n  TextInput,\n  useListContext\n} from 'react-admin'\nimport { Table, TableHead, TableBody, TableRow, TableCell, TableContainer } from '@material-ui/core'\nimport { useHistory } from 'react-router'\nimport { ResourceName } from '../../../core/ResourceName'\nimport { EventOverallView } from '../../../core/stats/overall-view/event-overall-view'\n\nconst ListFilters = (props: Omit<FilterProps, 'children'>) => (\n  <Filter {...props}>\n    <TextInput label=\"Nazwa\" source=\"name\" alwaysOn />\n  </Filter>\n)\n\nconst OverallViewRow = ({ record }: { record: EventOverallView }) => {\n  const { id, name, dateStart, dateEnd } = record\n  const history = useHistory()\n  const redirect = () => history.push(`/${ResourceName.STATS_OVERALL_VIEW}/${id}/show`)\n\n  return (\n    <TableRow hover>\n      <TableCell onClick={redirect}>{id}</TableCell>\n      <TableCell onClick={redirect}>{name}</TableCell>\n      <TableCell onClick={redirect}>{dateStart}</TableCell>\n      <TableCell onClick={redirect}>{dateEnd}</TableCell>\n    </TableRow>\n  )\n}\n\nconst OverallViewGrid = () => {\n  const { ids, data } = useListContext()\n  return (\n    <TableContainer>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>Id</TableCell>\n            <TableCell>Nazwa</TableCell>\n            <TableCell>Data rozpoczęcia</TableCell>\n            <TableCell>Data Zakończenia</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {ids.map((id) => <OverallViewRow key={id} record={data[id] as EventOverallView} />)}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n\nexport const OverallViewList = (props: ListProps) => (\n  <List {...props} actions={false} pagination={false} filters={<ListFilters />}>\n    <OverallViewGrid />\n  </List>\n)\n","import { TicketType } from '../enum/TicketType'\nimport { BookingType } from '../enum/BookingType'\n\nconst bookingTypeMapping: Record<BookingType, string> = {\n  [BookingType.NORMAL]: 'Bilet pojedynczy',\n  [BookingType.ABO]: 'Abonament',\n  [BookingType.INFIX]: 'Infix',\n  [BookingType.POINTS]: 'Points',\n  [BookingType.SERVICE]: 'Karta serwisowa',\n}\n\nconst ticketTypeMapping: Record<TicketType, string> = {\n  [TicketType.K]: 'Kod kreskowy',\n  [TicketType.M]: 'Nr mifare',\n  [TicketType.Z]: 'Nr dowodu',\n  [TicketType.N]: 'Nr biletu',\n  [TicketType.P]: 'Pesel',\n  [TicketType.U]: 'Nr unique (125k)',\n  [TicketType.R]: 'Nr rejestracyjny',\n}\n\nexport const mapFromTicketType = (ticketType: TicketType): string =>\n  ticketTypeMapping[ticketType]\n\nexport const mapFromBookingType = (bookingType: BookingType): string =>\n  bookingTypeMapping[bookingType]\n","import * as React from 'react'\nimport { useShowContext } from 'react-admin'\nimport {\n  Box,\n  createStyles,\n  makeStyles,\n  Theme,\n  Typography,\n} from '@material-ui/core'\nimport { TicketDetails } from '../../core/ticket-details/ticket-details'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    header: {\n      letterSpacing: theme.spacing(0.2),\n    },\n  }),\n)\nexport const TicketDetailsHeader = () => {\n  const classes = useStyles()\n  const { record } = useShowContext<TicketDetails>()\n  return (\n    <Box m={2}>\n      <Typography className={classes.header} variant=\"h5\" paragraph>\n        {record?.firstname} {record?.lastname}\n      </Typography>\n    </Box>\n  )\n}\n","import * as React from 'react'\nimport {\n  DateField,\n  Labeled,\n  TextField,\n  TextFieldProps,\n  useRecordContext,\n} from 'react-admin'\nimport {\n  Box,\n  Chip,\n  createStyles,\n  makeStyles,\n  Paper,\n  Theme,\n} from '@material-ui/core'\nimport { mapFromTicketType } from '../../core/ticket-details/ticket-details-values.mapper'\nimport { TicketDetails } from '../../core/ticket-details/ticket-details'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ticketBox: {\n      display: 'flex',\n      flexDirection: 'column',\n      padding: theme.spacing(1),\n      marginLeft: theme.spacing(1),\n    },\n    ticketField: {\n      padding: theme.spacing(0),\n      margin: theme.spacing(0),\n      marginBottom: theme.spacing(0.5),\n    },\n  }),\n)\n\nexport const TicketDetailsTicketsField = ({ label }: TextFieldProps) => {\n  const classes = useStyles()\n  const record = useRecordContext<TicketDetails>()\n  const mappedRecords = (record.tickets || []).map(\n    ({ id, ticketType, createdAt, ticketCode }) => ({\n      id,\n      ticketCode,\n      ticketType: mapFromTicketType(ticketType),\n      createdAt,\n    }),\n  )\n  const fields = mappedRecords.map((mappedRecord) => (\n    <Paper\n      key={mappedRecord.id}\n      variant=\"elevation\"\n      className={classes.ticketBox}\n    >\n      <Labeled className={classes.ticketField} label=\"id\">\n        <TextField\n          className={classes.ticketField}\n          record={mappedRecord}\n          source=\"id\"\n        />\n      </Labeled>\n      <Labeled className={classes.ticketField} label=\"Kod biletu\">\n        <TextField\n          className={classes.ticketField}\n          record={mappedRecord}\n          source=\"ticketCode\"\n        />\n      </Labeled>\n      <Labeled className={classes.ticketField} label=\"Typ wejściówki\">\n        <Chip label={mappedRecord.ticketType} className={classes.ticketField} />\n      </Labeled>\n      <Labeled className={classes.ticketField} label=\"Utworzono\">\n        <DateField\n          className={classes.ticketField}\n          record={mappedRecord}\n          source=\"createdAt\"\n          showTime\n        />\n      </Labeled>\n    </Paper>\n  ))\n  return (\n    <Labeled label={label}>\n      <Box display=\"flex\" flexWrap=\"wrap\" flexDirection=\"row\">\n        {fields}\n      </Box>\n    </Labeled>\n  )\n}\n","import {\n  CREATE,\n  CreateParams,\n  sanitizeFetchType,\n  UPDATE_MANY,\n  UpdateManyParams,\n} from 'react-admin'\nimport { TicketDetails } from './ticket-details'\nimport { ResourceName } from '../ResourceName'\nimport { AccessUsingsCreateParams } from '../access-usings/access-usings-create.params'\nimport { Access, Action, ToggleButtonState } from './toggle-button'\n\ntype Mutation = {\n  type: string\n  resource: string\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  payload?: object\n}\n\nconst blockMutation = (ticketDetails: TicketDetails): Mutation => {\n  const { accessesIds, tickets } = ticketDetails\n  const ticketIds = tickets.map((t) => t.id)\n  return {\n    type: sanitizeFetchType(CREATE),\n    resource: ResourceName.ACCESS_USINGS,\n    payload: {\n      data: { ticketIds, accessIds: accessesIds },\n    } as CreateParams<AccessUsingsCreateParams>,\n  }\n}\n\nconst unblockMutation = ({ tickets }: TicketDetails): Mutation => {\n  const activeAccessUsingIds = tickets\n    .flatMap((t) => t.accessUsings)\n    .filter((au) => au.active)\n    .map((au) => au.id)\n  return {\n    type: sanitizeFetchType(UPDATE_MANY),\n    resource: ResourceName.ACCESS_USINGS,\n    payload: {\n      ids: activeAccessUsingIds,\n    } as UpdateManyParams,\n  }\n}\n\ntype State = {\n  mutateQuery?: (ticketDetails: TicketDetails) => Mutation\n} & ToggleButtonState\n\nexport const blockAccessButtonInitialState = {\n  type: Access.DISABLED,\n  text: 'Oznacz dostęp jako wykorzystany (N/A)',\n}\n\nexport const toggleAccessButtonReducer = (\n  state: State,\n  { type }: Action,\n): State => {\n  switch (type) {\n    case Access.BLOCK: {\n      return {\n        type,\n        text: 'Oznacz dostęp jako wykorzystany',\n        mutateQuery: blockMutation,\n      }\n    }\n    case Access.UNBLOCK: {\n      return {\n        type,\n        text: 'Zwolnij dostęp',\n        mutateQuery: unblockMutation,\n      }\n    }\n    case Access.DISABLED: {\n      return blockAccessButtonInitialState\n    }\n    default:\n      throw new Error()\n  }\n}\n","import * as React from 'react'\nimport { useEffect, useReducer } from 'react'\nimport {\n  useMutation,\n  useNotify,\n  useRecordContext,\n  useRefresh,\n  useShowContext,\n} from 'react-admin'\nimport { Button, createStyles, makeStyles, Theme } from '@material-ui/core'\nimport { Access } from '../../core/ticket-details/toggle-button'\nimport { TicketDetails } from '../../core/ticket-details/ticket-details'\nimport {\n  blockAccessButtonInitialState,\n  toggleAccessButtonReducer,\n} from '../../core/ticket-details/toggle-access-button.reducer'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    button: {\n      color: theme.palette.common.white,\n      marginLeft: theme.spacing(1),\n    },\n  }),\n)\n\nexport const ToggleAccessButton = () => {\n  const classes = useStyles()\n  const notify = useNotify()\n  const { loading } = useShowContext()\n  const [{ type, text, mutateQuery }, dispatch] = useReducer(\n    toggleAccessButtonReducer,\n    blockAccessButtonInitialState,\n  )\n  const ticketDetails = useRecordContext<TicketDetails>()\n  const [mutate, { loading: mutationLoading }] = useMutation()\n  const refresh = useRefresh()\n\n  const isActive = (td: TicketDetails) =>\n    td.tickets.some((t) => t.accessUsings.some((a) => a.active))\n\n  useEffect(() => {\n    if (isActive(ticketDetails)) {\n      dispatch({ type: Access.UNBLOCK })\n    } else {\n      dispatch({ type: Access.BLOCK })\n    }\n  }, [ticketDetails])\n\n  const onClick = async () => {\n    try {\n      const query = mutateQuery?.(ticketDetails)\n      await mutate(query, { returnPromise: true })\n      refresh()\n    } catch (err) {\n      notify((err as Error)?.message, 'error')\n    }\n  }\n\n  return (\n    <Button\n      disabled={type === Access.DISABLED || loading || mutationLoading}\n      className={classes.button}\n      variant=\"contained\"\n      color=\"secondary\"\n      onClick={onClick}\n    >\n      {text}\n    </Button>\n  )\n}\n","import { Access, Action, ToggleButtonState } from './toggle-button'\nimport { BookingUpdateRequest } from '../bookings/booking-update.request'\nimport { BookingDisabledOption } from '../enum/BookingDisabledOption'\n\ntype State = {\n  mutateParam?: BookingUpdateRequest['disabled']\n} & ToggleButtonState\n\nexport const blockTicketButtonInitialState = {\n  type: Access.DISABLED,\n  text: 'Zablokuj bilet (N/A)',\n}\n\nexport const toggleTicketButtonReducer = (\n  state: State,\n  { type }: Action,\n): State => {\n  switch (type) {\n    case Access.BLOCK: {\n      return {\n        type,\n        text: 'Zablokuj bilet',\n        mutateParam: BookingDisabledOption.ADMIN,\n      }\n    }\n    case Access.UNBLOCK: {\n      return {\n        type,\n        text: 'Odblokuj bilet',\n        mutateParam: null,\n      }\n    }\n    case Access.DISABLED: {\n      return blockTicketButtonInitialState\n    }\n    default:\n      throw new Error()\n  }\n}\n","import * as React from 'react'\nimport { useEffect, useReducer } from 'react'\nimport {\n  sanitizeFetchType,\n  UPDATE,\n  UpdateParams,\n  useMutation,\n  useNotify,\n  useRecordContext,\n  useRefresh,\n  useShowContext,\n} from 'react-admin'\nimport { Button, createStyles, makeStyles, Theme } from '@material-ui/core'\nimport { TicketDetails } from '../../core/ticket-details/ticket-details'\nimport { BookingUpdateRequest } from '../../core/bookings/booking-update.request'\nimport { BookingDisabledOption } from '../../core/enum/BookingDisabledOption'\nimport { ResourceName } from '../../core/ResourceName'\nimport {\n  blockTicketButtonInitialState,\n  toggleTicketButtonReducer,\n} from '../../core/ticket-details/toggle-ticket-button.reducer'\nimport { Access } from '../../core/ticket-details/toggle-button'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    button: {\n      color: theme.palette.common.white,\n      marginLeft: theme.spacing(1),\n    },\n  }),\n)\n\nexport const ToggleTicketButton = () => {\n  const classes = useStyles()\n  const notify = useNotify()\n  const { loading } = useShowContext()\n  const [{ type, text, mutateParam }, dispatch] = useReducer(\n    toggleTicketButtonReducer,\n    blockTicketButtonInitialState,\n  )\n  const { id: bookingId, bookingDisabled } = useRecordContext<TicketDetails>()\n  const [mutate, { loading: mutationLoading }] = useMutation()\n  const refresh = useRefresh()\n\n  useEffect(() => {\n    if (bookingDisabled === null) {\n      dispatch({ type: Access.BLOCK })\n    } else if (bookingDisabled === BookingDisabledOption.ADMIN) {\n      dispatch({ type: Access.UNBLOCK })\n    } else {\n      dispatch({ type: Access.DISABLED })\n    }\n  }, [bookingDisabled])\n\n  const onClick = async () => {\n    try {\n      await mutate(\n        {\n          type: sanitizeFetchType(UPDATE),\n          resource: ResourceName.BOOKINGS,\n          payload: {\n            data: { id: bookingId, disabled: mutateParam },\n          } as UpdateParams<BookingUpdateRequest>,\n        },\n        { returnPromise: true },\n      )\n      refresh()\n    } catch (err) {\n      notify((err as Error)?.message, 'error')\n    }\n  }\n\n  return (\n    <Button\n      disabled={type === Access.DISABLED || loading || mutationLoading}\n      className={classes.button}\n      variant=\"contained\"\n      color=\"secondary\"\n      onClick={onClick}\n    >\n      {text}\n    </Button>\n  )\n}\n","import * as React from 'react'\nimport {\n  ChipFieldProps,\n  DateField,\n  Labeled,\n  Show,\n  ShowProps,\n  Tab,\n  TabbedShowLayout,\n  TextField,\n  useRecordContext,\n  ResourceContextProvider,\n} from 'react-admin'\nimport { Box, Chip, Divider } from '@material-ui/core'\nimport { TicketDetails } from '../../core/ticket-details/ticket-details'\nimport { mapFromBookingType } from '../../core/ticket-details/ticket-details-values.mapper'\nimport { TicketDetailsHeader } from './TicketDetailsHeader'\nimport { TicketDetailsTicketsField } from './TicketDetailsTicketsField'\nimport { ToggleAccessButton } from './ToggleAccessButton'\nimport { ToggleTicketButton } from './ToggleTicketButton'\nimport { ResourceName } from '../../core/ResourceName'\nimport { LogList } from '../logs/LogList'\n\nconst MappedChipField = <T extends unknown>({\n  mapper,\n  source,\n}: ChipFieldProps & { mapper: (value: T) => string }) => {\n  const record = useRecordContext<TicketDetails>()\n  const mappedValue = mapper(record[source as string])\n  return <Chip label={mappedValue} />\n}\n\nexport const TicketDetailsView = (props: ShowProps) => {\n  const { id: ticketLogsBookingFilter, basePath } = props\n  return (\n    <Show {...props}>\n      <>\n        <TicketDetailsHeader />\n        <Divider />\n        <TabbedShowLayout syncWithLocation={false}>\n          <Tab label=\"Bilet\">\n            <TextField label=\"Impreza\" source=\"eventName\" />\n            <TextField label=\"Pesel\" source=\"pesel\" />\n            <TextField label=\"Wariant\" source=\"variantName\" />\n            <Labeled label=\"Rodzaj wejściówki\">\n              <MappedChipField\n                source=\"bookingType\"\n                mapper={mapFromBookingType} />\n            </Labeled>\n            <DateField\n              label=\"Aktywny od\"\n              source=\"activeFrom\"\n              emptyText=\"N/A\"\n              showTime />\n            <DateField\n              label=\"Aktywny do\"\n              source=\"activeTo\"\n              emptyText=\"N/A\"\n              showTime />\n            <TicketDetailsTicketsField label=\"Wejściówki:\" />\n            <DateField label=\"Utworzono\" source=\"createdAt\" showTime />\n            <DateField label=\"Zmodyfikowano\" source=\"modifiedAt\" showTime />\n          </Tab>\n          <Tab label=\"Logi\">\n            <ResourceContextProvider value={ResourceName.TICKET_LOGS}>\n              <LogList\n                basePath={basePath}\n                filter={{ bookingId: ticketLogsBookingFilter }}\n                filters={undefined}\n                actions={false} \n                title=\" \"/>\n            </ResourceContextProvider>\n          </Tab>\n        </TabbedShowLayout>\n        <Divider />\n        <Box p={1} display=\"flex\" justifyContent=\"flex-end\">\n          <ToggleAccessButton />\n          <ToggleTicketButton />\n        </Box>\n      </>\n    </Show>\n  )\n}\n","import * as React from 'react'\nimport { TextField, TextFieldProps, useRecordContext } from 'react-admin'\nimport { maskMiddlePart } from '../../core/common/mask.utils'\n\nexport const MaskField = ({ source, ...rest }: TextFieldProps) => {\n  const record = useRecordContext()\n  const recordWithMappedValue = {\n    ...record,\n    [source as string]: maskMiddlePart(record[source as string], 2),\n  }\n  return <TextField {...rest} record={recordWithMappedValue} source={source} />\n}\n","/**\n * @example\n * maskMiddlePart('importantValue', 3) === 'imp********lue'\n */\nexport const maskMiddlePart = (word: string, threshold: number) => {\n  const firstChars = word.substring(0, threshold)\n  const lastChars = word.slice(-threshold)\n  const restCharsLength = word.length - firstChars.length - lastChars.length\n  return `${firstChars}${'*'.repeat(\n    restCharsLength > 0 ? restCharsLength : 0,\n  )}${lastChars}`\n}\n","import { Box, Card, CardContent, CardHeader, Divider, Typography } from '@material-ui/core'\nimport * as React from 'react'\nimport {\n  Datagrid,\n  List,\n  ListProps,\n  TextField,\n  useListContext\n} from 'react-admin'\nimport { useLocation } from 'react-router-dom'\nimport { ResourceName } from '../../core/ResourceName'\nimport { FindUserByTicket } from '../common/FindUserByTicket'\nimport { MaskField } from '../common/MaskField'\n\nconst TicketInfoGrid = () => {\n  const {\n    loading,\n    filterValues: { ticketCode },\n  } = useListContext()\n  return (\n    <>\n      <Box m={2}>\n        <Typography variant=\"h5\" paragraph>\n          Wyszukiwanie biletu po kodzie: {ticketCode}\n        </Typography>\n      </Box>\n      <Divider />\n      <Datagrid\n        loaded={!loading}\n        rowClick={(id) => `${ResourceName.TICKET_DETAILS}/${id}/show`}\n      >\n        <TextField label=\"Imię\" source=\"firstname\" sortable={false} />\n        <TextField label=\"Nazwisko\" source=\"lastname\" sortable={false} />\n        <MaskField label=\"Pesel\" source=\"pesel\" sortable={false} />\n        <TextField label=\"Bilet\" source=\"ticketCode\" sortable={false} />\n        <TextField label=\"Wydarzenie\" source=\"eventName\" sortable={false} />\n      </Datagrid>\n    </>\n  )\n}\n\nexport const TicketInfoList = (props: ListProps) => {\n  const { search } = useLocation()\n  return (\n    <>\n      <Card style={{ marginTop: '2%' }}>\n        <CardHeader style={{ textAlign: 'center' }}\n          title=\"Znajdź użytkownika po kodzie biletu\" />\n        <CardContent>\n          <FindUserByTicket />\n        </CardContent>\n      </Card>\n      {!!search && (\n        <List actions={false} pagination={false} {...props}>\n          <TicketInfoGrid />\n        </List>\n      )}\n    </>\n  )\n}\n","import ReceiptIcon from '@material-ui/icons/Receipt'\nimport ViewComfyIcon from '@material-ui/icons/ViewComfy'\nimport React from 'react'\nimport { Admin, Resource } from 'react-admin'\nimport themeReducer from './core/common/theme.reducer'\nimport { providersFactory } from './core/providers.factory'\nimport { ResourceName } from './core/ResourceName'\nimport { AppLayout } from './main/common/AppLayout'\nimport { Dashboard } from './main/Dashboard'\nimport { LogList } from './main/logs/LogList'\nimport { OverallView } from './main/stats/overall-view/OverallView'\nimport { OverallViewList } from './main/stats/overall-view/OverallViewList'\nimport { TicketDetailsView } from './main/ticket-details/TicketDetailsView'\nimport { TicketInfoList } from './main/ticket-info/TicketInfoList'\n\nconst App = () => {\n  const { authProvider, dataProvider, i18nProvider } = providersFactory(process.env.NODE_ENV)\n  return (\n    <Admin\n      dashboard={Dashboard}\n      authProvider={authProvider}\n      dataProvider={dataProvider}\n      i18nProvider={i18nProvider}\n      customReducers={{theme: themeReducer}}\n      layout={AppLayout}\n    >\n      <Resource\n        icon={ReceiptIcon}\n        name={ResourceName.TICKET_INFO}\n        list={TicketInfoList}\n      />\n      <Resource\n        name={ResourceName.TICKET_DETAILS}\n        show={TicketDetailsView}\n      />\n      <Resource\n        name={ResourceName.LOGS}\n        list={LogList}\n      />\n      <Resource\n        icon={ViewComfyIcon}\n        name={ResourceName.STATS_OVERALL_VIEW_LIST}\n        list={OverallViewList}\n      />\n      <Resource\n        icon={ViewComfyIcon}\n        name={ResourceName.STATS_OVERALL_VIEW}\n        show={OverallView}\n      />\n      <Resource\n        name={ResourceName.LAST_LOGS} />\n      <Resource\n        name={ResourceName.TICKET_LOGS} />\n    </Admin>\n  )\n}\n\nexport default App\n","import { AuthProvider, DataProvider, I18nProvider, LegacyDataProvider } from 'react-admin'\nimport fakeDataProvider from './fake/fake-data.provider'\nimport fakeAuthProvider from './fake/providers/fake-auth.provider'\nimport authProvider from './auth/auth.provider'\nimport dataProvider from './data.provider'\nimport i18nProvider from './i18n.provider'\n\ninterface Providers {\n  readonly authProvider: AuthProvider\n  readonly dataProvider: DataProvider | LegacyDataProvider\n  readonly i18nProvider: I18nProvider\n}\n\nexport const providersFactory = (\n  env: 'development' | 'test' | 'production',\n): Providers => {\n  switch (env) {\n    case 'production':\n      return {\n        authProvider,\n        dataProvider,\n        i18nProvider,\n      }\n    case 'development':\n      return {\n        authProvider,\n        dataProvider,\n        i18nProvider,\n      }\n    default:\n      return {\n        authProvider: fakeAuthProvider,\n        dataProvider: fakeDataProvider,\n        i18nProvider,\n      }\n  }\n}\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import { initReactI18next } from 'react-i18next'\nimport i18n from 'i18next'\nimport plTranslation from './locales/pl/translation.json'\nimport enTranslation from './locales/en/translation.json'\n\ni18n\n  .use(initReactI18next)\n  .init({\n    fallbackLng: 'pl',\n    debug: false,\n    interpolation: {\n      escapeValue: false, // not needed for react as it escapes by default\n    },\n    resources: {\n      pl: { translation: plTranslation },\n      en: { translation: enTranslation },\n    },\n  })\n\nexport default i18n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport './i18n.init'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}