{"version":3,"sources":["core/constants/reducer.actions.ts","core/common/theme.reducer.ts","core/ResourceName.ts","core/enum/TicketType.ts","core/enum/BookingType.ts","core/enum/BookingDisabledOption.ts","core/enum/CustomerDocumentType.ts","core/enum/Gender.ts","core/fake/providers/fake-access-usings.provider.ts","core/fake/providers/fake-bookings.provider.ts","core/fake/providers/fake-logs.provider.ts","core/fake/providers/fake-stats-overall-view-list.provider.ts","core/fake/providers/fake-stats-overall-view.provider.ts","core/fake/providers/fake-ticket-details.provider.ts","core/enum/AccessActivePeriodStartingOptions.ts","core/enum/AccessBonuses.ts","core/enum/DayOfWeek.ts","core/fake/providers/fake-ticket-info.provider.ts","core/fake/providers/fake-tickets.provider.ts","core/fake/providers/fake-accesses.provider.ts","core/enum/EventStatus.ts","core/fake/providers/fake-events.provider.ts","core/enum/DeviceDirection.ts","core/fake/providers/fake-customer-details.provider.ts","core/fake/providers/fake-customer-info.provider.ts","core/fake/providers/fake-access-dates.provider.ts","core/fake/providers/fake-companies.provider.ts","core/fake/providers/fake-objects.provider.ts","core/fake/providers/fake-palms.provider.ts","core/fake/providers/fake-engines.provider.ts","core/fake/providers/fake-entrances.provider.ts","core/fake/fake-data.provider.ts","core/fake/providers/fake-auth.provider.ts","core/common/header.parser.ts","core/common/fetch.utils.ts","core/api-urls.ts","core/auth/auth.provider.ts","core/access-usings/access-usings-sort.mapper.ts","core/ticket-details/toggle-button.ts","core/access-usings/access-usings-filter.mapper.ts","core/access-usings/access-usings.provider.ts","core/bookings/booking-filter.mapper.ts","core/bookings/booking-sort.mapper.ts","core/bookings/bookings.mapper.ts","core/bookings/bookings.provider.ts","core/logs/log-filter.mapper.ts","core/logs/log-sort.mapper.ts","core/logs/extended-logs.mapper.ts","core/logs/extended-logs.provider.ts","core/common/filter.values.ts","core/stats/overall-view/overall-view-list-sort.mapper.ts","core/stats/overall-view/overall-view-list.mapper.ts","core/stats/overall-view/overall-view-list.provider.ts","core/stats/overall-view/overall-view.mapper.ts","core/stats/overall-view/overall-view.provider.ts","core/common/condition.builder.ts","core/common/mapper.utils.ts","core/ticket-details/ticket-details.mapper.ts","core/ticket-details/ticket-details.provider.ts","core/ticket-info/ticket-info.mapper.ts","core/ticket-info/ticket-info-sort.mapper.ts","core/ticket-info/ticket-info-filter.mapper.ts","core/ticket-info/ticket-info.provider.ts","core/tickets/tickets.provider.ts","core/accesses/access-filter.mapper.ts","core/accesses/access-sort.mapper.ts","core/accesses/access.provider.ts","core/events/event-sort.mapper.ts","core/events/event.provider.ts","core/customer-details/customer-details.provider.ts","core/customer-info/customer-info-sort.mapper.ts","core/customer-info/customer-info.provider.ts","core/access-dates/access-dates-filter.mapper.ts","core/access-dates/access-dates-sort.mapper.ts","core/access-dates/access-dates.provider.ts","core/companies/companies.mapper.ts","core/companies/company-filter.mapper.ts","core/companies/company-sort.mapper.ts","core/companies/companies.provider.ts","core/objects/object.mapper.ts","core/objects/object-filter.mapper.ts","core/objects/object-sort.mapper.ts","core/objects/objects.provider.ts","core/devices/palms/palm-filter.mapper.ts","core/devices/palms/palm-sort.mapper.ts","core/devices/palms/palms.provider.ts","core/devices/palms/palm.mapper.ts","core/engines/engine-filter.mapper.ts","core/engines/engine-sort.mapper.ts","core/engines/engines.provider.ts","core/engines/engine.mapper.ts","core/entrances/entrance-sort.mapper.ts","core/entrances/entrance.provider.ts","core/data.provider.ts","core/i18n.provider.ts","app.theme.ts","main/common/AppSubmenu.tsx","main/common/AppMenu.tsx","main/common/AppLayout.tsx","main/common/Pagination.tsx","main/logs/DateFilterInput.tsx","main/logs/LogsComponents.ts","main/logs/LogRow.tsx","core/common/visual.utils.ts","main/logs/LogGrid.tsx","main/logs/LogList.tsx","main/customer-details/CustomerBookingsList.tsx","main/customer-details/CustomerDetailsView.tsx","main/common/common-styles.ts","main/common/SearchInput.tsx","main/common/FindCustomerByInfo.tsx","main/common/MaskField.tsx","core/common/mask.utils.ts","main/customer-info/CustomerInfoList.tsx","main/common/FindUserByTicket.tsx","main/events/EventList.tsx","main/Dashboard.tsx","main/events/EventEdit.tsx","main/events/EventShow.tsx","main/stats/overall-view/OverallView.tsx","main/stats/overall-view/OverallViewList.tsx","main/ticket-details/accesses/AccessUsingsList.tsx","core/ticket-details/ticket-details-values.mapper.ts","main/ticket-details/TicketDetailsHeader.tsx","main/ticket-details/TicketDetailsTicketsField.tsx","core/ticket-details/toggle-access-button.reducer.ts","core/enum/Multiplicities.ts","main/ticket-details/ToggleAccessButton.tsx","core/ticket-details/toggle-ticket-button.reducer.ts","main/ticket-details/ToggleTicketButton.tsx","main/ticket-details/accesses/AccessList.tsx","main/ticket-details/TicketDetailsComponents.tsx","main/ticket-details/accesses/AccessDatesList.tsx","main/ticket-details/accesses/AccessShow.tsx","main/ticket-details/TicketDetailsView.tsx","main/ticket-info/TicketInfoList.tsx","main/common/Configuration.tsx","main/common/routes.tsx","main/devices/palms/PalmList.tsx","main/devices/palms/PalmDialogs.tsx","main/devices/palms/PalmShow.tsx","main/devices/palms/PalmEdit.tsx","App.tsx","core/providers.factory.ts","reportWebVitals.ts","i18n.init.ts","index.tsx"],"names":["CHANGE_THEME","identity","localStorage","getItem","initialState","darkMode","themeReducer","ResourceName","state","action","type","setItem","TicketType","BookingType","BookingDisabledOption","CustomerDocumentType","Gender","provider","updateMany","resource","params","a","Promise","resolve","data","create","id","update","fakeLogs","date","ticketCode","bookingId","deviceName","text","color","getList","total","length","fakeStatsOverallViewList","name","dateStart","dateEnd","eventName","capacity","sold","entered","objects","getOne","found","find","v","reject","Error","AccessActivePeriodStartingOptions","AccessBonuses","DayOfWeek","fakeTicketDetailsList","firstname","lastname","pesel","variantName","accessesIds","bookingType","NORMAL","activeFrom","activeTo","tickets","ticketType","K","accessUsings","createdAt","M","modifiedAt","bookingDisabled","STORNO","company","birthdate","documentType","ID_CARD","documentNumber","nationality","gender","MALE","seatId","blockId","accesses","objectName","tribuneName","blockName","rowNumber","fakeTicketInfoList","eventId","eventDate","fakeTickets","active","accessUsingsIds","EventStatus","fakeAccesses","bonus","N","entranceId","allowReenter","multipleEntry","multiple","usePriority","isTicketUnlockWithNextDay","releaseTime","releaseDayOfWeek","FRIDAY","releaseDayOfMonth","delay","activePeriod","activePeriodStartingFrom","FIRST_USE","variantsIds","accessDatesIds","createdById","modifiedById","createdByName","modifiedByName","DeviceDirection","fakeEvents","status","INACTIVE","externalId","infix","objectsIds","fakeCustomerDetailsList","bookingsIds","c","fakeCustomerInfoList","fakeCompanies","usersIds","eventsIds","fakeObjects","tribunesIds","fakePalms","fakeEngines","fakeEntrances","dataProviders","ACCESS_DATES","fakeAccessDatesProvider","ACCESSES","fakeAccessesProvider","ACCESS_USINGS","fakeAccessUsingsProvider","BOOKINGS","fakeBookingsProvider","COMPANIES","fakeCompaniesProvider","CUSTOMER_DETAILS","fakeCustomerDetailsProvider","CUSTOMER_INFO","fakeCustomerInfoProvider","ENGINES","fakeEnginesProvider","ENTRANCES","fakeEntrancesProvider","EVENTS","fakeEventsProvider","LOGS","fakeLogsProvider","OBJECTS","fakeObjectsProvider","PALMS","fakePalmsProvider","TICKETS","fakeTicketsProvider","TICKET_INFO","fakeTicketInfoProvider","TICKET_DETAILS","fakeTicketDetailsProvider","TICKET_LOGS","STATS_OVERALL_VIEW","fakeStatsOverallViewProvider","STATS_OVERALL_VIEW_LIST","fakeStatsOverallViewListProvider","fetchType","sanitizeFetchType","authProvider","login","logout","checkError","checkAuth","getPermissions","getIdentity","fullName","contentRangeParser","headerValue","split","rangeFrom","summarySecondPartSplit","rangeTo","parseInt","getToken","baseHeaders","authHeaders","token","Authorization","getWithHeaders","url","headers","fetchUtils","fetchJson","method","Headers","then","json","postWithHeaders","body","JSON","stringify","get","baseUrl","path","getWithToken","getByConditions","getWithPagination","range","patch","put","API_V1","process","AUTH_URL","PERMISSIONS_URL","ACCESSES_URL","BOOKINGS_URL","CUSTOMERS_URL","EVENTS_URL","EXTENDED_LOGS_URL","TICKETS_URL","VARIANTS_URL","SEATS_URL","BLOCKS_URL","TRIBUNES_URL","OBJECTS_URL","ENGINES_URL","PALMS_URL","COMPANIES_URL","USERS_URL","ENTRANCES_URL","username","password","permissionDtos","permissions","map","p","join","removeItem","ToggleType","mapping","direction","ticketId","accessId","lambdaParameter","value","getFilterParams","filter","Object","keys","entries","key","getFilterMapper","mapper","reduce","ids","pendingUpdates","auId","req","all","au","ticketIds","accessIds","request","flatMap","Date","toISOString","IN","verifierDeviceId","sort","field","order","pagination","page","perPage","filterParams","toString","queryParams","push","pathParams","tId","ticket","mapToBookings","events","variants","disabled","customerId","variantId","ticketsIds","foundEvent","event","foundVariant","variant","eventDateStart","booking","eventIds","variantIds","mapToExtendedLog","locale","scheme","device","logEntry","language","includes","partialValues","partialFilterValues","extendedLogs","dto","ALL_RESULTS","mapToEventOverallView","overallViewList","calculateCapacity","seats","bookings","b","mapToTribuneOverallView","tribune","blocks","enteredBookingIds","blocksIds","block","filteredSeats","s","filteredBookingIds","concat","filteredBookings","book","filteredEnteredBookingIds","enteredBookingId","filteredEnteredBookings","enteredBookings","soldNormal","enteredNormal","soldAbo","ABO","enteredAbo","soldInfix","INFIX","enteredInfix","soldService","SERVICE","enteredService","soldPoints","POINTS","enteredPoints","mapToBlockOverallView","mapToOverallView","selectedEvent","tribunes","o","object","filteredTribunes","t","objectId","filteredBlocks","filteredSeatIds","seatsIds","tribuneId","mapToObjectOverallView","pendingSelectedEvent","pendingObjects","pendingTribunes","pendingBlocks","pendingSeats","bookingsCondition","pendingBookings","pendingEnteredBookings","overallViewData","buildFilterByIdsCondition","firstId","prev","curr","toMapById","values","Map","toUniqueValues","Array","from","Set","mapToTicketDetails","seat","accessUsingById","mapToTicket","rowAlias","fetchTicketsWithAccessUsings","accessUsingIds","pendingCustomer","pendingEvent","pendingVariant","pendingTicketsWithAccessUsings","customer","mapToTicketBaseInfoList","customers","bookingById","customerById","eventById","mapToTicketBaseInfo","getByUniqueIds","uniqueIds","bookingIds","customerIds","pendingCustomers","pendingEvents","ticketBaseInfoList","filterByTicketCodeCondition","access","modifiedBy","createdBy","userName","palmId","attachedEvents","palm","attached","previousData","eventUpdate","previousName","previousDateStart","previousDateEnd","getTime","getTimezoneOffset","toJSON","activate","undefined","deactivate","getCompaniesList","companies","attachCompanies","eventCompanies","detachCompanies","attachObjects","eventObjects","detachObjects","getDevicesList","devices","attachDevices","eventDevices","detachDevices","filterByCustomerInfoCondition","info","q","mapToCompany","attachedCompanies","pendingCompanies","companiesIds","mapToObject","attachedObjects","categoryId","attachedDevices","pendingDevices","verifierDevicesIds","engine","isWatched","lastRefresh","onlineInfixCeck","multiplicity","lock","lockName","unlock","setMobileDeviceId","mobileDeviceId","resetMobileDeviceId","attachEvents","detachEvents","attachEntrances","entrancesIds","detachEntrances","note","attachedEntrances","entrances","entrance","accessDatesProvider","accessesProvider","accessUsingsProvider","bookingsProvider","companiesProvider","customersDetailsProvider","customersInfoProvider","engineProvider","entrancesProvider","eventsProvider","logsProvider","objectsProvider","palmProvider","ticketsProvider","ticketInfoProvider","ticketDetailsProvider","statsOverallViewProvider","statsOverallViewListProvider","translate","options","i18n","changeLocale","changeLanguage","getLocale","overriddenTheme","defaultTheme","typography","fontFamily","body1","fontWeight","body2","h5","LightTheme","palette","primary","deepPurple","secondary","green","DarkTheme","light","main","dark","contrastText","useStyles","makeStyles","theme","icon","minWidth","spacing","sidebarIsOpen","transition","paddingLeft","sidebarIsClosed","SubMenu","props","handleToggle","isOpen","children","sidebarOpen","useSelector","admin","ui","classes","header","MenuItem","button","onClick","ListItemIcon","className","ExpandMore","Typography","Tooltip","title","placement","Collapse","in","timeout","unmountOnExit","component","disablePadding","open","width","closed","AppMenu","useState","menuStats","menuDevices","setOpen","useTranslate","menu","style","userSelect","DashboardMenuItem","MenuItemLink","to","primaryText","leftIcon","List","Event","Sort","transform","VideoLabel","PhoneAndroid","flex","textOverflow","whiteSpace","overflow","AppUserMenu","UserMenu","Settings","AppTopBar","AppBar","userMenu","AppLayout","Layout","appBar","MobilePostPagination","useListContext","setPage","setPerPage","nbPages","Math","ceil","Toolbar","Grid","container","item","xs","Paper","elevation","height","display","flexDirection","justifyContent","alignItems","Select","textAlign","onChange","e","target","ButtonGroup","Button","createStyles","verticalAlign","marginBottom","DateFilterInput","source","defaultFromDate","React","now","setHours","defaultToDate","dateFrom","setDateFrom","dateTo","setDateTo","useField","input","meta","touched","error","convertedDate","substring","defaultValue","parse","helperText","alignSelf","size","marginTop","BookingButton","withStyles","root","backgroundColor","boxShadow","FullWidthButton","CenterGrid","NoPaddingCell","paddingBottom","paddingTop","TableCell","LogRow","compactMode","noBooking","history","useHistory","isDarkMode","useEffect","defineStyle","hexcolor","substr","TableRow","Hidden","mdUp","IconButton","DateField","record","showTime","TextField","smDown","xlDown","sortable","pathname","colSpan","LogGrid","useListSortContext","currentSort","setSort","handleSortChange","sortBy","HeaderCell","startIcon","TableContainer","Table","padding","TableHead","toUpperCase","TableBody","ListFilters","Filter","TextInput","alwaysOn","SelectInput","label","choices","LogList","listProps","useTheme","smallScreen","useMediaQuery","breakpoints","down","useLocale","exporter","Pagination","rowsPerPageOptions","filters","BookingGrid","cursor","FunctionField","render","replace","BookingList","up","CustomerBookingsView","useShowContext","basePath","Box","paddingY","ResourceContextProvider","actions","CustomerLogsView","CustomerTabs","bookingPresent","useMemo","TabbedShowLayout","Tab","r","CustomerDetailsView","Show","useCommonStyles","textCentered","RoundInputBox","borderRadius","marginLeft","border","borderColor","RoundInputBoxBtn","background","borderTopLeftRadius","borderBottomLeftRadius","margin","RoundInputBoxFC","FormControl","SearchInput","onValue","inputError","setInputError","inputValue","setInputValue","handleClick","Input","disableUnderline","placeholder","onInput","onKeyDown","ev","FormHelperText","FindCustomerByInfo","titleCentered","notify","useNotify","setError","useMutation","mutate","loading","commonClasses","fetchCustomers","useCallback","GET_LIST","payload","returnPromise","onlyCustomer","search","message","CardHeader","clsx","CardContent","MaskField","rest","useRecordContext","properRecord","word","threshold","firstChars","lastChars","slice","restCharsLength","repeat","maskMiddlePart","CustomerInfoGrid","filterValues","m","paragraph","Divider","Datagrid","loaded","rowClick","CustomerInfoList","useLocation","Card","FindUserByTicket","fetchTickets","onlyTicket","EventsBody","toLowerCase","Link","EventsHead","EventGrid","EventList","letterSpacing","TicketFinder","LastLogs","LastEvents","Dashboard","useGetIdentity","isItemShown","userId","titleTypographyProps","sm","EditTitle","EditToolbar","SaveButton","ShowButton","Cancel","EventEdit","Edit","SimpleForm","redirect","toolbar","DateTimeInput","ShowTitle","Attachments","refetch","useQuery","toLocaleLowerCase","allFiltered","refetchAllFiltered","handleAttach","handleDetach","Checkbox","checked","GeneralEditButton","refresh","useRefresh","handleActivation","IN_TRANSITION","ACTIVE","marginRight","EditButton","EventShow","noBottomBorder","borderBottom","quarterWidth","ViewTitle","description","BlockGrid","firstColumnEntries","secondColumnEntries","thirdColumnEntries","TribuneGrid","TribuneHeader","ArrayField","expand","isRowExpandable","ObjectGrid","OverallView","OverallViewGrid","OverallViewList","AccessUsingsGrid","patchAccess","UPDATE_MANY","fontSize","AccessUsingsList","bookingTypeMapping","ticketTypeMapping","Z","P","U","R","mapFromBookingType","mapFromTicketType","TicketDetailsHeader","ticketBox","ticketField","TicketDetailsTicketsField","fields","mappedRecord","Labeled","Chip","flexWrap","Multiplicities","blockMutation","ticketDetails","CREATE","unblockMutation","activeAccessUsingIds","blockAccessButtonInitialState","DISABLED","toggleAccessButtonReducer","BLOCK","mutateQuery","UNBLOCK","common","white","ToggleAccessButton","useReducer","dispatch","mutationLoading","some","query","blockTicketButtonInitialState","toggleTicketButtonReducer","mutateParam","ADMIN","ToggleTicketButton","UPDATE","AccessGrid","setSelected","hover","AccessList","ButtonBase","BackButton","writingMode","textOrientation","BackButtonText","AccessDatesRow","dayOfWeek","timeFrom","timeTo","AccessDatesGrid","AccessDatesList","TabButton","selected","change","AccessDetails","NO_LIMIT","AccessDates","AccessUses","AccessShow","selectedTab","setSelectedTab","handleTabChange","prop","MappedChipField","mappedValue","AccessDetailsView","selectedAccess","setSelectedAccess","ProfileDetailsView","addLabel","StatusButtons","TicketMainView","TicketLogsView","TicketDetailsView","syncWithLocation","TicketInfoGrid","TicketInfoList","select","compsContainer","DashboardCustomization","ticketfinder","dashlogs","lastevents","componentsOpen","setComponentsOpen","componentsChange","FormControlLabel","control","Switch","labelPlacement","Configuration","useDispatch","setLocale","useSetLocale","Title","exact","PalmList","ConfirmDialog","confirm","cancel","Dialog","DialogTitle","DialogActions","DeviceIdModal","close","setValue","errorText","setErrorText","confirmOpen","setConfirmOpen","handleClose","handleSetMobileDeviceId","onClose","DialogContent","fullWidth","LockModal","handleLock","GeneralActions","deviceIdModalOpen","setDeviceIdModalOpen","lockModalOpen","setLockModalOpen","unlockDialogOpen","setUnlockDialogOpen","resetIdDialogOpen","setResetIdDialogOpen","attachedList","PalmTabs","day","month","year","hour","minute","PalmShow","HidingField","useEditContext","PalmEdit","BooleanInput","INFO","OUT","CHECK_ALL","MULTIPLE","SINGLE","App","env","dataProvider","i18nProvider","fakeAuthProvider","fakeDataProvider","providersFactory","Admin","dashboard","customReducers","customRoutes","routes","layout","Resource","ReceiptIcon","list","show","ViewComfyIcon","edit","PersonIcon","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","lng","use","initReactI18next","init","fallbackLng","debug","interpolation","escapeValue","resources","pl","translation","plTranslation","en","enTranslation","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.095c6abd.chunk.js","sourcesContent":["export const CHANGE_THEME = 'change-theme'","import { Action } from 'redux'\nimport { CHANGE_THEME } from '../constants/reducer.actions'\n\nconst identity = localStorage.getItem('username')\n\nexport type ThemeState = {\n  theme: {\n    darkMode: 'light' | 'dark'\n  }\n}\n\nconst initialState = {\n  darkMode: localStorage.getItem(`${identity}.darkMode`) === 'dark' ? 'dark' : 'light',\n}\n\nfunction themeReducer(state = initialState, action: Action<any>) {\n    if (action.type === CHANGE_THEME) {\n        if (state.darkMode === 'dark') localStorage.setItem(`${identity}.darkMode`, 'light')\n        else localStorage.setItem(`${identity}.darkMode`, 'dark')\n        return {\n            ...state,\n            darkMode: state.darkMode === 'dark' ? 'light' : 'dark'\n        }\n    }\n    return state\n}\n\nexport default themeReducer","export enum ResourceName {\n  ACCESS_DATES = 'access-dates',\n  ACCESSES = 'accesses',\n  ACCESS_USINGS = 'access-usings',\n  BOOKINGS = 'bookings',\n  ENGINES = 'engines',\n  EVENTS = 'events',\n  COMPANIES = 'companies',\n  CUSTOMER_DETAILS = 'customer-details',\n  CUSTOMER_INFO = 'customer-info',\n  LOGS = 'logs',\n  OBJECTS = 'objects',\n  PALMS = 'palms',\n  TICKETS = 'tickets',\n  TICKET_DETAILS = 'ticket-details',\n  TICKET_INFO = 'ticket-info',\n  TICKET_LOGS = 'ticket-logs',\n  STATS_OVERALL_VIEW_LIST = \"stats-overall-view-list\",\n  STATS_OVERALL_VIEW = \"stats-overall-view\",\n  ENTRANCES = 'entrances'\n}\n","export enum TicketType {\n  K = 'K',\n  M = 'M',\n  Z = 'Z',\n  N = 'N',\n  P = 'P',\n  U = 'U',\n  R = 'R',\n}\n","export enum BookingType {\n  NORMAL = 'NORMAL',\n  ABO = 'ABO',\n  INFIX = 'INFIX',\n  SERVICE = 'SERVICE',\n  POINTS = 'POINTS',\n}\n","export enum BookingDisabledOption {\n  ADMIN = 'ADMIN',\n  BAN = 'BAN',\n  STORNO = 'STORNO',\n  MISTAKE = 'MISTAKE',\n}\n","export enum CustomerDocumentType {\n  OTHER = 'OTHER',\n  ID_CARD = 'ID_CARD',\n  PASSPORT = 'PASSPORT',\n  STUDENT_CARD = 'STUDENT_CARD',\n  SCHOOL_ID = 'SCHOOL_ID',\n  DRIVING_LICENSE = 'DRIVING_LICENSE',\n}\n","export enum Gender {\n  MALE = 'MALE',\n  FEMALE = 'FEMALE',\n}\n","import { CreateResult, DataProvider, UpdateManyResult } from 'react-admin'\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  updateMany: async (resource, params): Promise<UpdateManyResult> =>\n    Promise.resolve({\n      data: [1],\n    }),\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  create: async (resource, params): Promise<CreateResult<unknown>> =>\n    Promise.resolve({\n      data: { id: 1 },\n    }),\n} as DataProvider\n\nexport default provider\n","import { DataProvider, UpdateResult } from 'react-admin'\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  update: async (resource, params): Promise<UpdateResult<unknown>> =>\n    Promise.resolve({\n      data: { id: 1 },\n    }),\n} as DataProvider\n\nexport default provider\n","import { DataProvider } from 'react-admin'\nimport { ExtendedLog } from '../../logs/extended-log'\n\nconst fakeLogs: ExtendedLog[] = [\n  {\n    id: 1,\n    date: '2021-07-15T08:50:27.2054',\n    ticketCode: 'A',\n    bookingId: 52815,\n    deviceName: 'Device name',\n    text: 'MF',\n    color: 'transparent',\n  },\n  {\n    id: 2,\n    date: '2021-07-15T08:50:27.2054',\n    ticketCode: 'A',\n    bookingId: 52816,\n    deviceName: 'Device name',\n    text: 'MF',\n    color: 'transparent',\n  },\n  {\n    id: 3,\n    date: '2021-07-15T08:50:27.2054',\n    ticketCode: 'A',\n    bookingId: 1111,\n    deviceName: 'Device name',\n    text: 'MF',\n    color: 'transparent',\n  },\n  {\n    id: 4,\n    date: '2021-07-15T08:50:27.2054',\n    ticketCode: 'A',\n    bookingId: 11112,\n    deviceName: 'Device name',\n    text: 'MF',\n    color: 'transparent',\n  },\n  {\n    id: 5,\n    date: '2021-07-15T08:50:27.2054',\n    ticketCode: 'A',\n    bookingId: 16612,\n    deviceName: 'Device name',\n    text: 'MF',\n    color: 'transparent',\n  },\n  {\n    id: 6,\n    date: '2021-07-15T08:50:27.2054',\n    ticketCode: 'A',\n    bookingId: 167782,\n    deviceName: 'Device name',\n    text: 'MF',\n    color: 'transparent',\n  },\n  {\n    id: 7,\n    date: '2021-07-15T08:50:27.2054',\n    ticketCode: 'A',\n    bookingId: 122782,\n    deviceName: 'Device name',\n    text: 'MF',\n    color: 'transparent',\n  },\n  {\n    id: 8,\n    date: '2021-07-15T08:50:27.2054',\n    ticketCode: 'A',\n    bookingId: 189782,\n    deviceName: 'Device name',\n    text: 'MF',\n    color: 'transparent',\n  },\n  {\n    id: 9,\n    date: '2021-07-15T08:50:27.2054',\n    ticketCode: 'A',\n    bookingId: 183332,\n    deviceName: 'Device name',\n    text: 'MF',\n    color: 'transparent',\n  },\n  {\n    id: 10,\n    date: '2021-07-15T08:50:27.2054',\n    ticketCode: 'A',\n    bookingId: 656565,\n    deviceName: 'Device name',\n    text: 'MF',\n    color: 'transparent',\n  },\n]\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getList: (resource, params) =>\n    Promise.resolve({ data: fakeLogs, total: fakeLogs.length }),\n} as DataProvider\n\nexport default provider\n","import { DataProvider } from 'react-admin'\nimport { EventOverallView } from '../../stats/overall-view/event-overall-view'\n\nconst fakeStatsOverallViewList: EventOverallView[] = [\n  {\n    id: 1,\n    name: \"\",\n    dateStart: '2021-07-13T15:11:06.771267',\n    dateEnd: '2021-07-13T15:11:06.771267'\n  },\n  {\n    id: 2,\n    name: \"\",\n    dateStart: '2021-07-13T15:11:06.771267',\n    dateEnd: '2021-07-13T15:11:06.771267'\n  },\n  {\n    id: 3,\n    name: \"\",\n    dateStart: '2021-07-13T15:11:06.771267',\n    dateEnd: '2021-07-13T15:11:06.771267'\n  },\n  {\n    id: 4,\n    name: \"\",\n    dateStart: '2021-07-13T15:11:06.771267',\n    dateEnd: '2021-07-13T15:11:06.771267'\n  },\n  {\n    id: 5,\n    name: \"\",\n    dateStart: '2021-07-13T15:11:06.771267',\n    dateEnd: '2021-07-13T15:11:06.771267'\n  },\n]\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getList: (resource, params) =>\n    Promise.resolve({ data: fakeStatsOverallViewList, total: fakeStatsOverallViewList.length }),\n} as DataProvider\n\nexport default provider","import { DataProvider } from 'react-admin'\nimport { DateTime } from '../../common/date-time'\nimport { OverallView } from '../../stats/overall-view/overall-view'\n\nconst fakeStatsOverallViewList: OverallView[] = [\n  {\n    id: 1,\n    eventName: \"\",\n    capacity: 0,\n    sold: 0,\n    entered: 0,\n    objects: [],\n    date: \"01-01-2021T00:00.00\" as DateTime\n  },\n  {\n    id: 2,\n    eventName: \"\",\n    capacity: 0,\n    sold: 0,\n    entered: 0,\n    objects: [],\n    date: \"01-01-2021T00:00.00\" as DateTime\n  },\n  {\n    id: 3,\n    eventName: \"\",\n    capacity: 0,\n    sold: 0,\n    entered: 0,\n    objects: [],\n    date: \"01-01-2021T00:00.00\" as DateTime\n  },\n  {\n    id: 4,\n    eventName: \"\",\n    capacity: 0,\n    sold: 0,\n    entered: 0,\n    objects: [],\n    date: \"01-01-2021T00:00.00\" as DateTime\n  },\n  {\n    id: 5,\n    eventName: \"\",\n    capacity: 0,\n    sold: 0,\n    entered: 0,\n    objects: [],\n    date: \"01-01-2021T00:00.00\" as DateTime\n  },\n]\n\nconst provider = {\n  getOne: (resource, { id }: { id: string }) => {\n    const found = fakeStatsOverallViewList.find((v) => `${v.id}` === id)\n    if (found) {\n      return Promise.resolve({\n        data: found,\n      })\n    }\n    return Promise.reject(new Error())\n  },\n} as DataProvider\n\nexport default provider","import { DataProvider } from 'react-admin'\nimport { TicketType } from '../../enum/TicketType'\nimport { TicketDetails } from '../../ticket-details/ticket-details'\nimport { BookingType } from '../../enum/BookingType'\nimport { BookingDisabledOption } from '../../enum/BookingDisabledOption'\nimport { CustomerDocumentType } from '../../enum/CustomerDocumentType'\nimport { Gender } from '../../enum/Gender'\n\nconst fakeTicketDetailsList: TicketDetails[] = [\n  {\n    id: 1,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    accessesIds: [10],\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56424,\n        ticketCode: '060000020917',\n        ticketType: TicketType.K,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n      {\n        id: 56425,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.M,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    bookingDisabled: BookingDisabledOption.STORNO,\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    documentNumber: \"12345678901\",\n    nationality: \"Poland\",\n    gender: Gender.MALE,\n    seatId: null,\n    blockId: null,\n    accesses: [],\n    objectName: null,\n    tribuneName: null,\n    blockName: null,\n    rowNumber: null\n  },\n  {\n    id: 2,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    accessesIds: [10],\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56424,\n        ticketCode: '060000020917',\n        ticketType: TicketType.K,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n      {\n        id: 56425,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.M,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    bookingDisabled: BookingDisabledOption.STORNO,\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    documentNumber: \"12345678901\",\n    nationality: \"Poland\",\n    gender: Gender.MALE,\n    seatId: null,\n    blockId: null,\n    accesses: [],\n    objectName: null,\n    tribuneName: null,\n    blockName: null,\n    rowNumber: null\n  },\n  {\n    id: 3,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    accessesIds: [10],\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56424,\n        ticketCode: '060000020917',\n        ticketType: TicketType.K,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n      {\n        id: 56425,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.M,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    bookingDisabled: null,\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    documentNumber: \"12345678901\",\n    nationality: \"Poland\",\n    gender: Gender.MALE,\n    seatId: null,\n    blockId: null,\n    accesses: [],\n    objectName: null,\n    tribuneName: null,\n    blockName: null,\n    rowNumber: null\n  },\n  {\n    id: 4,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    accessesIds: [10],\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56424,\n        ticketCode: '060000020917',\n        ticketType: TicketType.K,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n      {\n        id: 56425,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.M,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    bookingDisabled: null,\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    documentNumber: \"12345678901\",\n    nationality: \"Poland\",\n    gender: Gender.MALE,\n    seatId: null,\n    blockId: null,\n    accesses: [],\n    objectName: null,\n    tribuneName: null,\n    blockName: null,\n    rowNumber: null\n  },\n  {\n    id: 5,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    accessesIds: [10],\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56424,\n        ticketCode: '060000020917',\n        ticketType: TicketType.K,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n      {\n        id: 56425,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.M,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    bookingDisabled: null,\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    documentNumber: \"12345678901\",\n    nationality: \"Poland\",\n    gender: Gender.MALE,\n    seatId: null,\n    blockId: null,\n    accesses: [],\n    objectName: null,\n    tribuneName: null,\n    blockName: null,\n    rowNumber: null\n  },\n  {\n    id: 6,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    accessesIds: [10],\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56424,\n        ticketCode: '060000020917',\n        ticketType: TicketType.K,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n      {\n        id: 56425,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.M,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    bookingDisabled: null,\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    documentNumber: \"12345678901\",\n    nationality: \"Poland\",\n    gender: Gender.MALE,\n    seatId: null,\n    blockId: null,\n    accesses: [],\n    objectName: null,\n    tribuneName: null,\n    blockName: null,\n    rowNumber: null\n  },\n  {\n    id: 7,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    accessesIds: [10],\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56424,\n        ticketCode: '060000020917',\n        ticketType: TicketType.K,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n      {\n        id: 56425,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.M,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    bookingDisabled: null,\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    documentNumber: \"12345678901\",\n    nationality: \"Poland\",\n    gender: Gender.MALE,\n    seatId: null,\n    blockId: null,\n    accesses: [],\n    objectName: null,\n    tribuneName: null,\n    blockName: null,\n    rowNumber: null\n  },\n  {\n    id: 8,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    accessesIds: [10],\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56424,\n        ticketCode: '060000020917',\n        ticketType: TicketType.K,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n      {\n        id: 56425,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.M,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    bookingDisabled: null,\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    documentNumber: \"12345678901\",\n    nationality: \"Poland\",\n    gender: Gender.MALE,\n    seatId: null,\n    blockId: null,\n    accesses: [],\n    objectName: null,\n    tribuneName: null,\n    blockName: null,\n    rowNumber: null\n  },\n  {\n    id: 9,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    accessesIds: [10],\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56424,\n        ticketCode: '060000020917',\n        ticketType: TicketType.K,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n      {\n        id: 56425,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.M,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    bookingDisabled: null,\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    documentNumber: \"12345678901\",\n    nationality: \"Poland\",\n    gender: Gender.MALE,\n    seatId: null,\n    blockId: null,\n    accesses: [],\n    objectName: null,\n    tribuneName: null,\n    blockName: null,\n    rowNumber: null\n  },\n  {\n    id: 10,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    accessesIds: [10],\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56424,\n        ticketCode: '060000020917',\n        ticketType: TicketType.K,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n      {\n        id: 56425,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.M,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    bookingDisabled: null,\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    documentNumber: \"12345678901\",\n    nationality: \"Poland\",\n    gender: Gender.MALE,\n    seatId: null,\n    blockId: null,\n    accesses: [],\n    objectName: null,\n    tribuneName: null,\n    blockName: null,\n    rowNumber: null\n  },\n]\n\nconst provider = {\n  getOne: (resource, { id }: { id: string }) => {\n    const found = fakeTicketDetailsList.find((v) => `${v.id}` === id)\n    if (found) {\n      return Promise.resolve({\n        data: found,\n      })\n    }\n    return Promise.reject(new Error())\n  },\n} as DataProvider\n\nexport default provider\n","export enum AccessActivePeriodStartingOptions {\n  NO_LIMIT = 'NO_LIMIT',\n  PURCHASE_DATE = 'PURCHASE_DATE',\n  FIRST_USE = 'FIRST_USE',\n}\n","export enum AccessBonuses {\n  N = 'N',\n  Y = 'Y',\n  Z = 'Z',\n  D = 'D',\n}\n","export enum DayOfWeek {\n  SUNDAY = 'Sunday',\n  MONDAY = 'Monday',\n  TUESDAY = 'Tuesday',\n  WEDNESDAY = 'Wednesday',\n  THURSDAY = 'Thursday',\n  FRIDAY = 'Friday',\n  SATURDAY = 'Saturday',\n}\n","import { DataProvider } from 'react-admin'\nimport { TicketType } from '../../enum/TicketType'\nimport { TicketInfo } from '../../ticket-info/ticket-info'\n\nconst fakeTicketInfoList: TicketInfo[] = [\n  {\n    id: 1,\n    firstname: 'Marek',\n    lastname: 'Pies',\n    pesel: '47120554776',\n    eventId: 0,\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    eventDate: '2021-07-15T08:50:27.2054',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n    bookingId: 0\n  },\n  {\n    id: 2,\n    firstname: 'Janek',\n    lastname: 'Krużganek',\n    pesel: '47120554776',\n    eventId: 0,\n    eventName: 'POGOŃ SZCZECIN 20/21',\n    eventDate: '2021-07-15T08:50:27.2054',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n    bookingId: 0\n  },\n  {\n    id: 3,\n    firstname: 'Wacław',\n    lastname: 'Rymski',\n    pesel: '9988711225',\n    eventId: 0,\n    eventName: 'POGOŃ SZCZECIN 20/21',\n    eventDate: '2021-07-15T08:50:27.2054',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n    bookingId: 0\n  },\n  {\n    id: 4,\n    firstname: 'Mirka',\n    lastname: 'Korzeń',\n    pesel: '56483978659',\n    eventId: 0,\n    eventName: 'POGOŃ SZCZECIN 20/21',\n    eventDate: '2021-07-15T08:50:27.2054',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n    bookingId: 0\n  },\n  {\n    id: 5,\n    firstname: 'Tis',\n    lastname: 'Lomasz',\n    pesel: '47120554776',\n    eventId: 0,\n    eventName: 'POGOŃ SZCZECIN 20/21',\n    eventDate: '2021-07-15T08:50:27.2054',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n    bookingId: 0\n  },\n  {\n    id: 6,\n    firstname: 'Bogdana',\n    lastname: 'Jaruzelska',\n    pesel: '47120554776',\n    eventId: 0,\n    eventName: 'POGOŃ SZCZECIN 20/21',\n    eventDate: '2021-07-15T08:50:27.2054',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n    bookingId: 0\n  },\n  {\n    id: 7,\n    firstname: 'Jeremi',\n    lastname: 'Pomidor',\n    pesel: '12345678900',\n    eventId: 0,\n    eventName: 'POGOŃ SZCZECIN 20/21',\n    eventDate: '2021-07-15T08:50:27.2054',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n    bookingId: 0\n  },\n  {\n    id: 8,\n    firstname: 'Roman',\n    lastname: 'Zoman',\n    pesel: '13243567890',\n    eventId: 0,\n    eventName: 'POGOŃ SZCZECIN 20/21',\n    eventDate: '2021-07-15T08:50:27.2054',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n    bookingId: 0\n  },\n  {\n    id: 9,\n    firstname: 'Bacha',\n    lastname: 'Kaszalot',\n    pesel: '98097612678',\n    eventId: 0,\n    eventName: 'POGOŃ SZCZECIN 20/21',\n    eventDate: '2021-07-15T08:50:27.2054',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n    bookingId: 0\n  },\n  {\n    id: 10,\n    firstname: 'Jadwiga',\n    lastname: 'Ogórek',\n    pesel: '47120554776',\n    eventId: 0,\n    eventName: 'POGOŃ SZCZECIN 20/21',\n    eventDate: '2021-07-15T08:50:27.2054',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n    bookingId: 0\n  },\n]\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getList: (resource, params) =>\n    Promise.resolve({\n      data: fakeTicketInfoList,\n      total: fakeTicketInfoList.length,\n    }),\n} as DataProvider\n\nexport default provider\n","import { DataProvider } from 'react-admin'\nimport { TicketDto } from '../../dto/ticket.dto'\nimport { TicketType } from '../../enum/TicketType'\n\nconst fakeTickets: TicketDto[] = [\n  {\n    id: 1,\n    ticketCode: 'A',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52815,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n  {\n    id: 2,\n    ticketCode: 'A',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52816,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n  {\n    id: 3,\n    ticketCode: '010000011492',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52817,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n  {\n    id: 4,\n    ticketCode: '411000006572',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52818,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n  {\n    id: 5,\n    ticketCode: '871000006824',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52819,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n  {\n    id: 6,\n    ticketCode: '370000011495',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52820,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n  {\n    id: 7,\n    ticketCode: '450000011501',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52821,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n  {\n    id: 8,\n    ticketCode: '630000011502',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52822,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n  {\n    id: 9,\n    ticketCode: '020000011503',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52823,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n  {\n    id: 10,\n    ticketCode: '310000011504',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52824,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n]\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getList: (resource, params) =>\n    Promise.resolve({ data: fakeTickets, total: fakeTickets.length }),\n} as DataProvider\n\nexport default provider\n","import { DataProvider } from 'react-admin'\nimport { Access } from '../../accesses/access'\nimport { AccessActivePeriodStartingOptions } from '../../enum/AccessActivePeriodStartingOptions'\nimport { AccessBonuses } from '../../enum/AccessBonuses'\nimport { DayOfWeek } from '../../enum/DayOfWeek'\n\nconst fakeAccesses: Access[] = [\n  {\n    id: 1,\n    name: 'access1',\n    bonus: AccessBonuses.N,\n    entranceId: 0,\n    allowReenter: false,\n    multipleEntry: false,\n    multiple: 0,\n    usePriority: 0,\n    isTicketUnlockWithNextDay: false,\n    releaseTime: '2021-07-15T08:50:27.2054',\n    releaseDayOfWeek: DayOfWeek.FRIDAY,\n    releaseDayOfMonth: 1,\n    delay: '',\n    activePeriod: '',\n    activePeriodStartingFrom: AccessActivePeriodStartingOptions.FIRST_USE,\n    variantsIds: [],\n    accessDatesIds: [],\n    createdById: 0,\n    modifiedById: 0,\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    createdByName: \"abc\",\n    modifiedByName: \"abc\"\n  },\n  {\n    id: 2,\n    name: 'access2',\n    bonus: AccessBonuses.N,\n    entranceId: 0,\n    allowReenter: false,\n    multipleEntry: false,\n    multiple: 0,\n    usePriority: 0,\n    isTicketUnlockWithNextDay: false,\n    releaseTime: '2021-07-15T08:50:27.2054',\n    releaseDayOfWeek: DayOfWeek.FRIDAY,\n    releaseDayOfMonth: 1,\n    delay: '',\n    activePeriod: '',\n    activePeriodStartingFrom: AccessActivePeriodStartingOptions.FIRST_USE,\n    variantsIds: [],\n    accessDatesIds: [],\n    createdById: 0,\n    modifiedById: 0,\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    createdByName: \"abc\",\n    modifiedByName: \"abc\"\n  },\n  {\n    id: 3,\n    name: 'access3',\n    bonus: AccessBonuses.N,\n    entranceId: 0,\n    allowReenter: false,\n    multipleEntry: false,\n    multiple: 0,\n    usePriority: 0,\n    isTicketUnlockWithNextDay: false,\n    releaseTime: '2021-07-15T08:50:27.2054',\n    releaseDayOfWeek: DayOfWeek.FRIDAY,\n    releaseDayOfMonth: 1,\n    delay: '',\n    activePeriod: '',\n    activePeriodStartingFrom: AccessActivePeriodStartingOptions.FIRST_USE,\n    variantsIds: [],\n    accessDatesIds: [],\n    createdById: 0,\n    modifiedById: 0,\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    createdByName: \"abc\",\n    modifiedByName: \"abc\"\n  },\n  {\n    id: 4,\n    name: 'access4',\n    bonus: AccessBonuses.N,\n    entranceId: 0,\n    allowReenter: false,\n    multipleEntry: false,\n    multiple: 0,\n    usePriority: 0,\n    isTicketUnlockWithNextDay: false,\n    releaseTime: '2021-07-15T08:50:27.2054',\n    releaseDayOfWeek: DayOfWeek.FRIDAY,\n    releaseDayOfMonth: 1,\n    delay: '',\n    activePeriod: '',\n    activePeriodStartingFrom: AccessActivePeriodStartingOptions.FIRST_USE,\n    variantsIds: [],\n    accessDatesIds: [],\n    createdById: 0,\n    modifiedById: 0,\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    createdByName: \"abc\",\n    modifiedByName: \"abc\"\n  },\n  {\n    id: 5,\n    name: 'access5',\n    bonus: AccessBonuses.N,\n    entranceId: 0,\n    allowReenter: false,\n    multipleEntry: false,\n    multiple: 0,\n    usePriority: 0,\n    isTicketUnlockWithNextDay: false,\n    releaseTime: '2021-07-15T08:50:27.2054',\n    releaseDayOfWeek: DayOfWeek.FRIDAY,\n    releaseDayOfMonth: 1,\n    delay: '',\n    activePeriod: '',\n    activePeriodStartingFrom: AccessActivePeriodStartingOptions.FIRST_USE,\n    variantsIds: [],\n    accessDatesIds: [],\n    createdById: 0,\n    modifiedById: 0,\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    createdByName: \"abc\",\n    modifiedByName: \"abc\"\n  },\n  {\n    id: 6,\n    name: 'access6',\n    bonus: AccessBonuses.N,\n    entranceId: 0,\n    allowReenter: false,\n    multipleEntry: false,\n    multiple: 0,\n    usePriority: 0,\n    isTicketUnlockWithNextDay: false,\n    releaseTime: '2021-07-15T08:50:27.2054',\n    releaseDayOfWeek: DayOfWeek.FRIDAY,\n    releaseDayOfMonth: 1,\n    delay: '',\n    activePeriod: '',\n    activePeriodStartingFrom: AccessActivePeriodStartingOptions.FIRST_USE,\n    variantsIds: [],\n    accessDatesIds: [],\n    createdById: 0,\n    modifiedById: 0,\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    createdByName: \"abc\",\n    modifiedByName: \"abc\"\n  },\n  {\n    id: 7,\n    name: 'access7',\n    bonus: AccessBonuses.N,\n    entranceId: 0,\n    allowReenter: false,\n    multipleEntry: false,\n    multiple: 0,\n    usePriority: 0,\n    isTicketUnlockWithNextDay: false,\n    releaseTime: '2021-07-15T08:50:27.2054',\n    releaseDayOfWeek: DayOfWeek.FRIDAY,\n    releaseDayOfMonth: 1,\n    delay: '',\n    activePeriod: '',\n    activePeriodStartingFrom: AccessActivePeriodStartingOptions.FIRST_USE,\n    variantsIds: [],\n    accessDatesIds: [],\n    createdById: 0,\n    modifiedById: 0,\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    createdByName: \"abc\",\n    modifiedByName: \"abc\"\n  },\n  {\n    id: 8,\n    name: 'access8',\n    bonus: AccessBonuses.N,\n    entranceId: 0,\n    allowReenter: false,\n    multipleEntry: false,\n    multiple: 0,\n    usePriority: 0,\n    isTicketUnlockWithNextDay: false,\n    releaseTime: '2021-07-15T08:50:27.2054',\n    releaseDayOfWeek: DayOfWeek.FRIDAY,\n    releaseDayOfMonth: 1,\n    delay: '',\n    activePeriod: '',\n    activePeriodStartingFrom: AccessActivePeriodStartingOptions.FIRST_USE,\n    variantsIds: [],\n    accessDatesIds: [],\n    createdById: 0,\n    modifiedById: 0,\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    createdByName: \"abc\",\n    modifiedByName: \"abc\"\n  },\n  {\n    id: 9,\n    name: 'access9',\n    bonus: AccessBonuses.N,\n    entranceId: 0,\n    allowReenter: false,\n    multipleEntry: false,\n    multiple: 0,\n    usePriority: 0,\n    isTicketUnlockWithNextDay: false,\n    releaseTime: '2021-07-15T08:50:27.2054',\n    releaseDayOfWeek: DayOfWeek.FRIDAY,\n    releaseDayOfMonth: 1,\n    delay: '',\n    activePeriod: '',\n    activePeriodStartingFrom: AccessActivePeriodStartingOptions.FIRST_USE,\n    variantsIds: [],\n    accessDatesIds: [],\n    createdById: 0,\n    modifiedById: 0,\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    createdByName: \"abc\",\n    modifiedByName: \"abc\"\n  },\n  {\n    id: 10,\n    name: 'access10',\n    bonus: AccessBonuses.N,\n    entranceId: 0,\n    allowReenter: false,\n    multipleEntry: false,\n    multiple: 0,\n    usePriority: 0,\n    isTicketUnlockWithNextDay: false,\n    releaseTime: '2021-07-15T08:50:27.2054',\n    releaseDayOfWeek: DayOfWeek.FRIDAY,\n    releaseDayOfMonth: 1,\n    delay: '',\n    activePeriod: '',\n    activePeriodStartingFrom: AccessActivePeriodStartingOptions.FIRST_USE,\n    variantsIds: [],\n    accessDatesIds: [],\n    createdById: 0,\n    modifiedById: 0,\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    createdByName: \"abc\",\n    modifiedByName: \"abc\"\n  },\n]\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getList: (resource, params) =>\n    Promise.resolve({ data: fakeAccesses, total: fakeAccesses.length }),\n} as DataProvider\n\nexport default provider\n","export enum EventStatus {\n  INACTIVE = 'INACTIVE',\n  ACTIVE = 'ACTIVE',\n  IN_TRANSITION = 'IN_TRANSITION',\n}\n","import { DataProvider } from 'react-admin'\nimport { EventDto } from '../../dto/event/event.dto'\nimport { EventStatus } from '../../enum/EventStatus'\n\nconst fakeEvents: EventDto[] = [\n  {\n    id: 1,\n    name: \"Event1\",\n    dateStart: '2021-07-15T08:50:27.2054',\n    dateEnd: '2021-07-15T08:50:27.2054',\n    status: EventStatus.INACTIVE,\n    externalId: '1',\n    infix: 'abc123',\n    objectsIds: [1, 2, 3]\n  },\n  {\n    id: 2,\n    name: \"Event2\",\n    dateStart: '2021-07-15T08:50:27.2054',\n    dateEnd: '2021-07-15T08:50:27.2054',\n    status: EventStatus.INACTIVE,\n    externalId: '1',\n    infix: 'abc123',\n    objectsIds: [1, 2, 3]\n  },\n  {\n    id: 3,\n    name: \"Event3\",\n    dateStart: '2021-07-15T08:50:27.2054',\n    dateEnd: '2021-07-15T08:50:27.2054',\n    status: EventStatus.INACTIVE,\n    externalId: '1',\n    infix: 'abc123',\n    objectsIds: [1, 2, 3]\n  },\n  {\n    id: 4,\n    name: \"Event4\",\n    dateStart: '2021-07-15T08:50:27.2054',\n    dateEnd: '2021-07-15T08:50:27.2054',\n    status: EventStatus.INACTIVE,\n    externalId: '1',\n    infix: 'abc123',\n    objectsIds: [1, 2, 3]\n  },\n  {\n    id: 5,\n    name: \"Event5\",\n    dateStart: '2021-07-15T08:50:27.2054',\n    dateEnd: '2021-07-15T08:50:27.2054',\n    status: EventStatus.INACTIVE,\n    externalId: '1',\n    infix: 'abc123',\n    objectsIds: [1, 2, 3]\n  },\n  {\n    id: 6,\n    name: \"Event6\",\n    dateStart: '2021-07-15T08:50:27.2054',\n    dateEnd: '2021-07-15T08:50:27.2054',\n    status: EventStatus.INACTIVE,\n    externalId: '1',\n    infix: 'abc123',\n    objectsIds: [1, 2, 3]\n  },\n  {\n    id: 7,\n    name: \"Event7\",\n    dateStart: '2021-07-15T08:50:27.2054',\n    dateEnd: '2021-07-15T08:50:27.2054',\n    status: EventStatus.INACTIVE,\n    externalId: '1',\n    infix: 'abc123',\n    objectsIds: [1, 2, 3]\n  },\n  {\n    id: 8,\n    name: \"Event8\",\n    dateStart: '2021-07-15T08:50:27.2054',\n    dateEnd: '2021-07-15T08:50:27.2054',\n    status: EventStatus.INACTIVE,\n    externalId: '1',\n    infix: 'abc123',\n    objectsIds: [1, 2, 3]\n  },\n  {\n    id: 9,\n    name: \"Event9\",\n    dateStart: '2021-07-15T08:50:27.2054',\n    dateEnd: '2021-07-15T08:50:27.2054',\n    status: EventStatus.INACTIVE,\n    externalId: '1',\n    infix: 'abc123',\n    objectsIds: [1, 2, 3]\n  },\n  {\n    id: 10,\n    name: \"Event10\",\n    dateStart: '2021-07-15T08:50:27.2054',\n    dateEnd: '2021-07-15T08:50:27.2054',\n    status: EventStatus.INACTIVE,\n    externalId: '1',\n    infix: 'abc123',\n    objectsIds: [1, 2, 3]\n  },\n]\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getList: (resource, params) =>\n    Promise.resolve({ data: fakeEvents, total: fakeEvents.length })\n} as DataProvider\n\nexport default provider","export enum DeviceDirection {\n  IN = 'IN',\n  OUT = 'OUT',\n  INFO = 'INFO',\n}\n","import { DataProvider } from 'react-admin'\nimport { CustomerDetails } from \"../../customer-details/customer-details\";\nimport { CustomerDocumentType } from '../../enum/CustomerDocumentType'\nimport { Gender } from '../../enum/Gender'\n\nconst fakeCustomerDetailsList: CustomerDetails[] = [\n  {\n    id: 1,\n    type: \"MANUAL\",\n    firstname: \"Jan\",\n    lastname: \"Kowalski\",\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    pesel: \"12345678901\",\n    documentNumber: null,\n    nationality: \"PL\",\n    gender: Gender.MALE,\n    bookingsIds: []\n  },\n  {\n    id: 2,\n    type: \"MANUAL\",\n    firstname: \"Jan\",\n    lastname: \"Kowalski\",\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    pesel: \"12345678901\",\n    documentNumber: null,\n    nationality: \"PL\",\n    gender: Gender.MALE,\n    bookingsIds: []\n  },\n  {\n    id: 3,\n    type: \"MANUAL\",\n    firstname: \"Jan\",\n    lastname: \"Kowalski\",\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    pesel: \"12345678901\",\n    documentNumber: null,\n    nationality: \"PL\",\n    gender: Gender.MALE,\n    bookingsIds: []\n  },\n  {\n    id: 4,\n    type: \"MANUAL\",\n    firstname: \"Jan\",\n    lastname: \"Kowalski\",\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    pesel: \"12345678901\",\n    documentNumber: null,\n    nationality: \"PL\",\n    gender: Gender.MALE,\n    bookingsIds: []\n  },\n  {\n    id: 5,\n    type: \"MANUAL\",\n    firstname: \"Jan\",\n    lastname: \"Kowalski\",\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    pesel: \"12345678901\",\n    documentNumber: null,\n    nationality: \"PL\",\n    gender: Gender.MALE,\n    bookingsIds: []\n  },\n  {\n    id: 6,\n    type: \"MANUAL\",\n    firstname: \"Jan\",\n    lastname: \"Kowalski\",\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    pesel: \"12345678901\",\n    documentNumber: null,\n    nationality: \"PL\",\n    gender: Gender.MALE,\n    bookingsIds: []\n  },\n  {\n    id: 7,\n    type: \"MANUAL\",\n    firstname: \"Jan\",\n    lastname: \"Kowalski\",\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    pesel: \"12345678901\",\n    documentNumber: null,\n    nationality: \"PL\",\n    gender: Gender.MALE,\n    bookingsIds: []\n  },\n  {\n    id: 8,\n    type: \"MANUAL\",\n    firstname: \"Jan\",\n    lastname: \"Kowalski\",\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    pesel: \"12345678901\",\n    documentNumber: null,\n    nationality: \"PL\",\n    gender: Gender.MALE,\n    bookingsIds: []\n  },\n  {\n    id: 9,\n    type: \"MANUAL\",\n    firstname: \"Jan\",\n    lastname: \"Kowalski\",\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    pesel: \"12345678901\",\n    documentNumber: null,\n    nationality: \"PL\",\n    gender: Gender.MALE,\n    bookingsIds: []\n  },\n  {\n    id: 10,\n    type: \"MANUAL\",\n    firstname: \"Jan\",\n    lastname: \"Kowalski\",\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    pesel: \"12345678901\",\n    documentNumber: null,\n    nationality: \"PL\",\n    gender: Gender.MALE,\n    bookingsIds: []\n  },\n]\n\nconst provider = {\n  getOne: (resource, { id }: { id: string }) => {\n    const found = fakeCustomerDetailsList.find((c) => `${c.id}` === id)\n    if(found) {\n      return Promise.resolve({\n        data: found\n      })\n    }\n    return Promise.reject(new Error())\n  }\n} as DataProvider\n\nexport default provider","import { DataProvider } from 'react-admin'\nimport { CustomerInfo } from '../../customer-info/customer-info'\n\nconst fakeCustomerInfoList: CustomerInfo[] = [\n  {\n    id: 1,\n    firstname: \"jan\",\n    lastname: \"kowalski\",\n    pesel: \"12345678901\",\n    documentNumber: \"12345678901\"\n  },\n  {\n    id: 2,\n    firstname: \"jan\",\n    lastname: \"kowalski\",\n    pesel: \"12345678901\",\n    documentNumber: \"12345678901\"\n  },\n  {\n    id: 3,\n    firstname: \"jan\",\n    lastname: \"kowalski\",\n    pesel: \"12345678901\",\n    documentNumber: \"12345678901\"\n  },\n  {\n    id: 4,\n    firstname: \"jan\",\n    lastname: \"kowalski\",\n    pesel: \"12345678901\",\n    documentNumber: \"12345678901\"\n  },\n  {\n    id: 5,\n    firstname: \"jan\",\n    lastname: \"kowalski\",\n    pesel: \"12345678901\",\n    documentNumber: \"12345678901\"\n  },\n  {\n    id: 6,\n    firstname: \"jan\",\n    lastname: \"kowalski\",\n    pesel: \"12345678901\",\n    documentNumber: \"12345678901\"\n  },\n  {\n    id: 7,\n    firstname: \"jan\",\n    lastname: \"kowalski\",\n    pesel: \"12345678901\",\n    documentNumber: \"12345678901\"\n  },\n  {\n    id: 8,\n    firstname: \"jan\",\n    lastname: \"kowalski\",\n    pesel: \"12345678901\",\n    documentNumber: \"12345678901\"\n  },\n  {\n    id: 9,\n    firstname: \"jan\",\n    lastname: \"kowalski\",\n    pesel: \"12345678901\",\n    documentNumber: \"12345678901\"\n  },\n  {\n    id: 10,\n    firstname: \"jan\",\n    lastname: \"kowalski\",\n    pesel: \"12345678901\",\n    documentNumber: \"12345678901\"\n  },\n]\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getList: (resource, params) =>\n    Promise.resolve({ data: fakeCustomerInfoList, total: fakeCustomerInfoList.length })\n} as DataProvider\n\nexport default provider","import { DataProvider } from 'react-admin'\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getList: (resource, params) =>\n    Promise.resolve({ data: {}, total: 0 }),\n} as DataProvider\n\nexport default provider","import { DataProvider } from \"react-admin\"\nimport { Company } from \"../../companies/company\"\n\nconst fakeCompanies: Company[] = [\n  {\n    id: 0,\n    name: \"0\",\n    usersIds: [],\n    eventsIds: []\n  },\n  {\n    id: 1,\n    name: \"1\",\n    usersIds: [],\n    eventsIds: []\n  },\n  {\n    id: 2,\n    name: \"2\",\n    usersIds: [],\n    eventsIds: []\n  },\n  {\n    id: 3,\n    name: \"3\",\n    usersIds: [],\n    eventsIds: []\n  },\n  {\n    id: 4,\n    name: \"4\",\n    usersIds: [],\n    eventsIds: []\n  },\n  {\n    id: 5,\n    name: \"5\",\n    usersIds: [],\n    eventsIds: []\n  },\n  {\n    id: 6,\n    name: \"6\",\n    usersIds: [],\n    eventsIds: []\n  },\n  {\n    id: 7,\n    name: \"7\",\n    usersIds: [],\n    eventsIds: []\n  },\n  {\n    id: 8,\n    name: \"8\",\n    usersIds: [],\n    eventsIds: []\n  },\n  {\n    id: 9,\n    name: \"9\",\n    usersIds: [],\n    eventsIds: []\n  },\n]\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getList: (resource, params) =>\n    Promise.resolve({ data: fakeCompanies, total: fakeCompanies.length })\n} as DataProvider\n\nexport default provider","import { DataProvider } from 'react-admin'\nimport { ObjectType } from \"../../objects/object\";\n\nconst fakeObjects: ObjectType[] = [\n  {\n    id: 0,\n    name: \"0\",\n    tribunesIds: [],\n    eventsIds: []\n  },\n  {\n    id: 1,\n    name: \"1\",\n    tribunesIds: [],\n    eventsIds: []\n  },\n  {\n    id: 2,\n    name: \"2\",\n    tribunesIds: [],\n    eventsIds: []\n  },\n  {\n    id: 3,\n    name: \"3\",\n    tribunesIds: [],\n    eventsIds: []\n  },\n  {\n    id: 4,\n    name: \"4\",\n    tribunesIds: [],\n    eventsIds: []\n  },\n  {\n    id: 5,\n    name: \"5\",\n    tribunesIds: [],\n    eventsIds: []\n  },\n  {\n    id: 6,\n    name: \"6\",\n    tribunesIds: [],\n    eventsIds: []\n  },\n  {\n    id: 7,\n    name: \"7\",\n    tribunesIds: [],\n    eventsIds: []\n  },\n  {\n    id: 8,\n    name: \"8\",\n    tribunesIds: [],\n    eventsIds: []\n  },\n  {\n    id: 9,\n    name: \"9\",\n    tribunesIds: [],\n    eventsIds: []\n  },\n]\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getList: (resource, params) =>\n    Promise.resolve({ data: fakeObjects, total: fakeObjects.length })\n} as DataProvider\n\nexport default provider","import { DataProvider } from 'react-admin'\nimport { Palm } from \"../../devices/palms/palm\";\n\nconst fakePalms: Palm[] = []\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getList: (resource, params) =>\n    Promise.resolve({ data: fakePalms, total: fakePalms.length })\n} as DataProvider\n\nexport default provider","import { DataProvider } from 'react-admin'\nimport { Engine } from '../../engines/engine'\n\nconst fakeEngines: Engine[] = []\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getList: (resource, params) =>\n    Promise.resolve({ data: fakeEngines, total: fakeEngines.length })\n} as DataProvider\n\nexport default provider","import { DataProvider } from 'react-admin'\nimport { Entrance } from \"../../entrances/entrance\";\n\nconst fakeEntrances: Entrance[] = []\n\nconst provider = {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    getList: (resource, params) =>\n        Promise.resolve({ data: fakeEntrances, total: fakeEntrances.length })\n} as DataProvider\n\nexport default provider","import { DataProvider, sanitizeFetchType } from 'react-admin'\nimport { ResourceName } from '../ResourceName'\nimport fakeAccessUsingsProvider from './providers/fake-access-usings.provider'\nimport fakeBookingsProvider from './providers/fake-bookings.provider'\nimport fakeLogsProvider from './providers/fake-logs.provider'\nimport fakeStatsOverallViewListProvider from './providers/fake-stats-overall-view-list.provider'\nimport fakeStatsOverallViewProvider from './providers/fake-stats-overall-view.provider'\nimport fakeTicketDetailsProvider from './providers/fake-ticket-details.provider'\nimport fakeTicketInfoProvider from './providers/fake-ticket-info.provider'\nimport fakeTicketsProvider from './providers/fake-tickets.provider'\nimport fakeAccessesProvider from './providers/fake-accesses.provider'\nimport fakeEventsProvider from './providers/fake-events.provider'\nimport fakeCustomerDetailsProvider from './providers/fake-customer-details.provider'\nimport fakeCustomerInfoProvider from './providers/fake-customer-info.provider'\nimport fakeAccessDatesProvider from './providers/fake-access-dates.provider'\nimport fakeCompaniesProvider from './providers/fake-companies.provider'\nimport fakeObjectsProvider from './providers/fake-objects.provider'\nimport fakePalmsProvider from './providers/fake-palms.provider'\nimport fakeEnginesProvider from './providers/fake-engines.provider'\nimport fakeEntrancesProvider from './providers/fake-entrances.provider'\n\nconst dataProviders: Record<ResourceName, DataProvider> = {\n  [ResourceName.ACCESS_DATES]: fakeAccessDatesProvider,\n  [ResourceName.ACCESSES]: fakeAccessesProvider,\n  [ResourceName.ACCESS_USINGS]: fakeAccessUsingsProvider,\n  [ResourceName.BOOKINGS]: fakeBookingsProvider,\n  [ResourceName.COMPANIES]: fakeCompaniesProvider,\n  [ResourceName.CUSTOMER_DETAILS]: fakeCustomerDetailsProvider,\n  [ResourceName.CUSTOMER_INFO]: fakeCustomerInfoProvider,\n  [ResourceName.ENGINES]: fakeEnginesProvider,\n  [ResourceName.ENTRANCES]: fakeEntrancesProvider,\n  [ResourceName.EVENTS]: fakeEventsProvider,\n  [ResourceName.LOGS]: fakeLogsProvider,\n  [ResourceName.OBJECTS]: fakeObjectsProvider,\n  [ResourceName.PALMS]: fakePalmsProvider,\n  [ResourceName.TICKETS]: fakeTicketsProvider,\n  [ResourceName.TICKET_INFO]: fakeTicketInfoProvider,\n  [ResourceName.TICKET_DETAILS]: fakeTicketDetailsProvider,\n  [ResourceName.TICKET_LOGS]: fakeLogsProvider,\n  [ResourceName.STATS_OVERALL_VIEW]: fakeStatsOverallViewProvider,\n  [ResourceName.STATS_OVERALL_VIEW_LIST]: fakeStatsOverallViewListProvider,\n}\n\nexport default (\n  fetchType: string,\n  resource: string,\n  params: unknown,\n): Promise<unknown> => {\n  const selectedProvider = dataProviders[resource as ResourceName]\n  const type = sanitizeFetchType(fetchType)\n  return selectedProvider[type](resource, params)\n}\n","import { AuthProvider } from 'react-admin'\n\nconst authProvider: AuthProvider = {\n  login: () => Promise.resolve(),\n  logout: () => Promise.resolve(),\n  checkError: () => Promise.resolve(),\n  checkAuth: () => Promise.resolve(),\n  getPermissions: () => Promise.resolve(),\n  getIdentity: () =>\n    Promise.resolve({\n      id: 'no-auth',\n      fullName: 'no-auth',\n    }),\n}\n\nexport default authProvider\n","export type ContentRangeHeaderValue = `bytes ${number}-${number}/${number}`\n\nexport const contentRangeParser = (headerValue: ContentRangeHeaderValue) => {\n  if (!headerValue) {\n    // 'content-range' header should exist otherwise pagination doesn't work\n    return {\n      total: 0,\n    }\n  }\n  const summary = headerValue.split(' ')[1]\n  const split = summary.split('-')\n  const rangeFrom = split[0]\n  const summarySecondPartSplit = split[1].split('/')\n  const rangeTo = summarySecondPartSplit[0]\n  const total = summarySecondPartSplit[1]\n  return {\n    rangeFrom: parseInt(rangeFrom, 10),\n    rangeTo: parseInt(rangeTo, 10),\n    total: parseInt(total, 10),\n  }\n}\n","import { fetchUtils } from 'react-admin'\nimport { ContentRangeHeaderValue, contentRangeParser } from './header.parser'\n\nconst getToken = () => localStorage.getItem('token') as string\n\nconst baseHeaders: HeadersInit = {\n  'Content-Type': 'application/json',\n}\n\nconst authHeaders = (token = getToken()): HeadersInit => ({\n  ...baseHeaders,\n  Authorization: `Bearer ${token}`,\n})\n\nconst getWithHeaders = <T>(url: string, headers: HeadersInit) =>\n  fetchUtils\n    .fetchJson(url, {\n      method: 'GET',\n      headers: new Headers(headers),\n    })\n    .then(({ json }) => json as Promise<T>)\n\nconst postWithHeaders = <T, K>(url: string, body: T, headers: HeadersInit) =>\n  fetchUtils\n    .fetchJson(url, {\n      method: 'POST',\n      body: JSON.stringify(body),\n      headers: new Headers(headers),\n    })\n    .then(({ json }) => json as Promise<K>)\n\nexport const get = <T>(baseUrl: string, path: string) =>\n  getWithHeaders<T>(`${baseUrl}${path}`, authHeaders())\n\nexport const getWithToken = <T>(url: string, token: string) =>\n  getWithHeaders<T>(url, authHeaders(token))\n\nexport const getByConditions = <T>(\n  baseUrl: string,\n  path: string,\n): Promise<T[]> =>\n  getWithHeaders<T[]>(`${baseUrl}/GetByConditions/${path}`, authHeaders())\n\nexport const getWithPagination = <T>(baseUrl: string, path: string) =>\n  fetchUtils\n    .fetchJson(`${baseUrl}${path}`, {\n      method: 'GET',\n      headers: new Headers(authHeaders()),\n    })\n    .then(({ json, headers }) =>\n      Promise.resolve({\n        data: json as T,\n        range: contentRangeParser(\n          headers.get('content-range') as ContentRangeHeaderValue,\n        ),\n      }),\n    )\n\nexport const authPost = <T, K>(url: string, body: T) =>\n  postWithHeaders<T, K>(url, body, baseHeaders)\n\nexport const post = <T, K>(url: string, body: T) =>\n  postWithHeaders<T, K>(url, body, authHeaders())\n\nexport const patch = <T, K>(baseUrl: string, body: T) =>\n  fetchUtils\n    .fetchJson(baseUrl, {\n      method: 'PATCH',\n      body: JSON.stringify(body),\n      headers: new Headers(authHeaders()),\n    })\n    .then(({ json }) => json as Promise<K>)\n\nexport const put = <T, K>(baseUrl: string, body: T) =>\n  fetchUtils\n    .fetchJson(baseUrl, {\n      method: 'PUT',\n      body: JSON.stringify(body),\n      headers: new Headers(authHeaders()),\n    })\n    .then(({ json }) => json as Promise<K>)\n","const API_V1 = `${process.env.REACT_APP_API_BASE_URL}/api/v1`\nexport const AUTH_URL = `${API_V1}/Authorization/Authenticate`\nexport const PERMISSIONS_URL = `${API_V1}/User/GetPermissions`\nexport const ACCESS_USINGS = `${API_V1}/ticketManagement/AccessUsings`\nexport const ACCESSES_URL = `${API_V1}/ticketManagement/Accesses`\nexport const ACCESS_DATES = `${API_V1}/ticketManagement/AccessDates`\nexport const BOOKINGS_URL = `${API_V1}/ticketManagement/Bookings`\nexport const CUSTOMERS_URL = `${API_V1}/ticketManagement/Customers`\nexport const EVENTS_URL = `${API_V1}/ticketManagement/Events`\nexport const EXTENDED_LOGS_URL = `${API_V1}/ticketManagement/Logs/GetExtendedLogByConditions`\nexport const TICKETS_URL = `${API_V1}/ticketManagement/Tickets`\nexport const VARIANTS_URL = `${API_V1}/ticketManagement/Variants`\nexport const SEATS_URL = `${API_V1}/ticketManagement/Seats`\nexport const BLOCKS_URL = `${API_V1}/ticketManagement/Blocks`\nexport const TRIBUNES_URL = `${API_V1}/ticketManagement/Tribunes`\nexport const OBJECTS_URL = `${API_V1}/ticketManagement/Objects`\nexport const ENGINES_URL = `${API_V1}/deviceManagement/Engines`\nexport const PALMS_URL = `${API_V1}/deviceManagement/Palms`\nexport const COMPANIES_URL = `${API_V1}/Administrator/GetCompaniesByConditions`\nexport const USERS_URL = `${API_V1}/Administrator/GetUserById/`\nexport const ENTRANCES_URL = `${API_V1}/deviceManagement/Entrances`","import { AuthProvider } from 'react-admin'\nimport { authPost, getWithToken } from '../common/fetch.utils'\nimport { AuthDto } from '../dto/auth.dto'\nimport { AUTH_URL, PERMISSIONS_URL } from '../api-urls'\nimport { AuthRequest } from './auth.request'\nimport { PermissionDto } from '../dto/permission.dto'\n\nconst authProvider: AuthProvider = {\n  login: async ({ username, password }) => {\n    const { token } = await authPost<AuthRequest, AuthDto>(AUTH_URL, {\n      login: username,\n      password,\n    })\n    const permissionDtos = await getWithToken<PermissionDto[]>(\n      PERMISSIONS_URL,\n      token,\n    )\n    const permissions = permissionDtos.map((p) => p.name)\n    localStorage.setItem('username', username)\n    localStorage.setItem('token', token)\n    localStorage.setItem('permissions', permissions.join())\n  },\n  logout: () => {\n    localStorage.removeItem('username')\n    localStorage.removeItem('token')\n    localStorage.removeItem('permissions')\n    return Promise.resolve()\n  },\n  checkError: ({ status }) => {\n    if (status === 401 || status === 403) {\n      localStorage.removeItem('username')\n      localStorage.removeItem('token')\n      localStorage.removeItem('permissions')\n      return Promise.reject()\n    }\n    return Promise.resolve()\n  },\n  checkAuth: () =>\n    localStorage.getItem('token') ? Promise.resolve() : Promise.reject(),\n  getPermissions: () => {\n    const permissions = localStorage.getItem('permissions') as string\n    return Promise.resolve(permissions?.split(',') || [])\n  },\n  getIdentity: () =>\n    Promise.resolve({\n      id: localStorage.getItem('username') as string,\n    }),\n}\n\nexport default authProvider\n","import { AccessUsingDto } from \"../dto/access-using.dto\"\n\nconst mapping: Partial<Record<keyof AccessUsingDto, string>> = {\n  id: 'au=>au.Id',\n  date: 'au=>au.Date',\n  direction: 'au=>au.Direction',\n  active: 'au=>au.Active',\n  ticketId: 'au=>au.TicketId',\n  accessId: 'au=>au.AccessId'\n}\n\nexport const mapSortAccessUsingsParam = (key: keyof AccessUsingDto) => mapping[key]","export enum ToggleType {\n  BLOCK = 'BLOCK',\n  UNBLOCK = 'UNBLOCK',\n  DISABLED = 'DISABLED',\n}\n\nexport type ToggleButtonState = {\n  type: ToggleType\n  text: string\n}\n\nexport type Action = { type: ToggleType }\n","import { AccessUsingDto } from \"../dto/access-using.dto\"\n\nconst mapping: Partial<\n  Record<keyof AccessUsingDto, (lambdaParameter: string, value: string | number) => string>\n> = {\n  id: (lambdaParameter, value) => `${(lambdaParameter)}.Id.ToString().Contains(\"${value}\")`,\n  ticketId: (lambdaParameter, value) => `\"${value}\".Contains(${(lambdaParameter)}.TicketId.ToString())`,\n  accessId: (lambdaParameter, value) => `${(lambdaParameter)}.AccessId.ToString().Contains(\"${value}\")`,\n}\n\nexport const getFilterMapper = (key: keyof AccessUsingDto) =>\n  mapping[key] as (lambdaParameter: string, value: string | number) => string\n","import {\n  CreateParams,\n  CreateResult,\n  DataProvider,\n  UpdateManyParams,\n  UpdateManyResult,\n  GetListResult\n} from 'react-admin'\nimport { AccessUsingsCreateParams } from './access-usings-create.params'\nimport { AccessUsingDto } from '../dto/access-using.dto'\nimport { DeviceDirection } from '../enum/DeviceDirection'\nimport { DateTime } from '../common/date-time'\nimport { getByConditions, getWithPagination, patch, post } from '../common/fetch.utils'\nimport { ACCESS_USINGS, TICKETS_URL } from '../api-urls'\nimport { AccessUsingsListParams } from './access-usings-list.params'\nimport { mapSortAccessUsingsParam } from './access-usings-sort.mapper'\nimport { getFilterMapper } from './access-usings-filter.mapper'\nimport { TicketDto } from '../dto/ticket.dto'\nimport { AccessUsing } from './access-using'\n\nconst getFilterParams = (filter: Partial<AccessUsingDto>) => {\n  if (Object.keys(filter).length) {\n    const filterParams = Object.entries(filter).map(([key, value]) => {\n      const mapper = getFilterMapper(key as keyof AccessUsingDto)\n      return mapper(\"au\", value as string)\n    })\n    return filterParams.reduce((p, c) => `${p}&&${c}`)\n  }\n  return \"true\"\n}\n\ntype CreateAccessUsingRequest = Array<\n  Omit<AccessUsingDto, 'id' | 'verifierDeviceId'> & { verifierDeviceId: null }\n>\ntype UpdateAccessUsingRequest = Pick<AccessUsingDto, 'id'> & { active: false }\n\nconst provider = {\n  updateMany: async (\n    resource,\n    { ids, data: { active = false } }: UpdateManyParams,\n  ): Promise<UpdateManyResult> => {\n    const pendingUpdates = ids\n      .map((auId) => ({ id: auId, active } as UpdateAccessUsingRequest))\n      .map((req) =>\n        patch<UpdateAccessUsingRequest, AccessUsingDto>(ACCESS_USINGS, req),\n      )\n    const accessUsings = await Promise.all(pendingUpdates)\n    return Promise.resolve({\n      data: accessUsings.map((au) => au.id),\n    })\n  },\n  create: async (\n    resource,\n    { data }: CreateParams<AccessUsingsCreateParams>,\n  ): Promise<CreateResult> => {\n    const { ticketIds, accessIds } = data\n    const request: CreateAccessUsingRequest = accessIds.flatMap((accessId) =>\n      ticketIds.map((ticketId) => ({\n        date: new Date().toISOString() as DateTime,\n        direction: DeviceDirection.IN,\n        active: true,\n        accessId,\n        ticketId,\n        verifierDeviceId: null,\n      })),\n    )\n    await post<CreateAccessUsingRequest, AccessUsingDto[]>(\n      ACCESS_USINGS,\n      request,\n    )\n    return Promise.resolve({\n      data: { id: 0 }, // need to return something\n    })\n  },\n  getList: async (\n    resource: string,\n    {\n      filter,\n      sort: { field, order },\n      pagination: { page, perPage }\n    }: AccessUsingsListParams\n  ): Promise<GetListResult<AccessUsingDto>> => {\n    const filterParams = `au=>${getFilterParams(filter).toString()}`\n    const queryParams: string[] = []\n    queryParams.push(`sortBy=${mapSortAccessUsingsParam(field)}`)\n    queryParams.push(`sortOrder=${order}`)\n    queryParams.push(`rangeFrom=${page * perPage - perPage}`)\n    queryParams.push(`rangeTo=${page * perPage}`)\n\n    const pathParams = queryParams.reduce((p, c) => `${p}&${c}`)\n    const path = `/${filterParams}?${pathParams}`\n\n    const {\n      data,\n      range: { total }\n    } = await getWithPagination<AccessUsingDto[]>(`${ACCESS_USINGS}/GetByConditions`, path)\n\n    const tickets = await getByConditions<TicketDto>\n      (TICKETS_URL, `t=>${filter?.ticketId?.toString().split(\" \").map((tId) => `t.Id==${tId}`).join(\"||\")}`)\n\n    const accessUsings = data.map(({\n      id, date, direction, active, ticketId, accessId, verifierDeviceId\n    }) => ({\n      id, date, direction, active, ticketId, accessId, verifierDeviceId,\n      ticketCode: tickets.find((ticket) => ticket.id === ticketId)?.ticketCode\n    } as AccessUsing))\n\n    return Promise.resolve({\n      data: accessUsings,\n      total\n    })\n  }\n} as DataProvider\n\nexport default provider\n","import { BookingDto } from '../dto/booking.dto'\n\nconst mapping: Partial<\n  Record<keyof BookingDto, (lambdaParameter: string, value: string | number) => string>\n> = {\n  id: (lambdaParameter, value) => value?.toString().split(\",\").length > 1 ?\n    `\"${value}\".Contains(${(lambdaParameter)}.Id.ToString())` :\n    `${(lambdaParameter)}.Id==${value}`,\n}\n\nexport const getFilterMapper = (key: keyof BookingDto) =>\n  mapping[key] as (lambdaParameters: string, value: string | number) => string","import { BookingDto } from \"../dto/booking.dto\"\n\nconst mapping: Partial<Record<keyof BookingDto, string>> = {\n  id: 'l=>l.Id',\n}\n\nexport const mapSortBookingParam = (key: keyof BookingDto) => mapping[key]\n","import { BookingDto } from \"../dto/booking.dto\";\nimport { EventDto } from \"../dto/event/event.dto\";\nimport { VariantDto } from \"../dto/variant.dto\";\nimport { Booking } from \"./booking\";\n\nexport const mapToBookings = (\n  {\n    id,\n    type,\n    disabled,\n    activeFrom,\n    activeTo,\n    eventId,\n    seatId,\n    blockId,\n    customerId,\n    variantId,\n    ticketsIds,\n    createdAt,\n    modifiedAt\n  }: BookingDto,\n  events: EventDto[],\n  variants: VariantDto[]\n): Booking => {\n  const foundEvent = events.find((event) => event.id === eventId)\n  const foundVariant = variants.find((variant) => variant.id === variantId)\n  return({\n    id,\n    type,\n    disabled,\n    activeFrom,\n    activeTo,\n    eventId,\n    seatId,\n    blockId,\n    customerId,\n    variantId,\n    ticketsIds,\n    createdAt,\n    modifiedAt,\n    eventName: foundEvent?.name,\n    eventDateStart: foundEvent?.dateStart,\n    variantName: foundVariant?.name\n  })\n}","import { DataProvider, UpdateParams, UpdateResult, GetListResult } from 'react-admin'\nimport { getByConditions, getWithPagination, patch } from '../common/fetch.utils'\nimport { BOOKINGS_URL, EVENTS_URL, VARIANTS_URL } from '../api-urls'\nimport { BookingUpdateRequest } from './booking-update.request'\nimport { BookingDto } from '../dto/booking.dto'\nimport { BookingListParams } from './booking-list.params'\nimport { getFilterMapper } from './booking-filter.mapper'\nimport { mapSortBookingParam } from './booking-sort.mapper'\nimport { Booking } from './booking'\nimport { EventDto } from '../dto/event/event.dto'\nimport { mapToBookings } from './bookings.mapper'\nimport { VariantDto } from '../dto/variant.dto'\n\nconst getFilterParams = (filter: Partial<BookingDto>) => {\n  if (Object.keys(filter).length) {\n    const filterParams = Object.entries(filter).map(([key, value]) => {\n      const mapper = getFilterMapper(key as keyof BookingDto)\n      return mapper(\"b\", value as string)\n    })\n    return filterParams.reduce((p, c) => `${p}&&${c}`)\n  }\n  return \"true\"\n}\n\nconst provider = {\n  update: async (\n    resource: string,\n    { data }: UpdateParams<BookingUpdateRequest>,\n  ): Promise<UpdateResult<BookingDto>> => {\n    const booking = await patch<BookingUpdateRequest, BookingDto>(\n      BOOKINGS_URL,\n      data,\n    )\n    return Promise.resolve({\n      data: booking,\n    })\n  },\n  getList: async (\n    resource: string,\n    {\n      filter,\n      sort: { field, order },\n      pagination: { page, perPage },\n    }: BookingListParams\n  ): Promise<GetListResult<Booking>> => {\n    const filterParams = `b=>${getFilterParams(filter).toString()}`\n    const queryParams: string [] = []\n    queryParams.push(`sortBy=${mapSortBookingParam(field)}`)\n    queryParams.push(`sortOrder=${order}`)\n    queryParams.push(`rangeFrom=${page * perPage - perPage}`)\n    queryParams.push(`rangeTo=${page * perPage}`)\n\n    const pathParams = queryParams.reduce((p, c) => `${p}&${c}`)\n    const path = `/${filterParams}?${pathParams}`\n\n    const {\n      data,\n    } = await getWithPagination<BookingDto[]>(`${BOOKINGS_URL}/GetByConditions`, path)\n\n    const eventIds = data.map((booking) => booking.eventId)\n    const events = await getByConditions<EventDto>(EVENTS_URL, `e=>\"${eventIds.join(\",\")}\".Contains(e.Id.ToString())`)\n\n    const variantIds = data.map((booking) => booking.variantId)\n    const variants = await getByConditions<VariantDto>(VARIANTS_URL, `v=>\"${variantIds.join(\",\")}\".Contains(v.Id.ToString())`)\n\n    return {\n      data: data.map((booking) => mapToBookings(booking, events, variants)),\n      total: data.length\n    }\n  }\n} as DataProvider\n\nexport default provider\n","import { ExtendedLogFilterValues } from './extended-log'\n\nconst mapping: Partial<\n  Record<\n    keyof ExtendedLogFilterValues,\n    (lambdaParameter: string, value: string | number) => string\n  >\n> = {\n  ticketCode: (lambdaParameter, value) => `${(lambdaParameter)}.TicketCode.Contains(\"${value}\")`,\n  bookingId: (lambdaParameter, value) => value?.toString().split(\",\").length > 1 ?\n    `\"${value}\".Contains(${(lambdaParameter)}.BookingId.ToString())` :\n    `${(lambdaParameter)}.BookingId.ToString().Contains(\"${value}\")`,\n  date: (lambdaParameter, value) => `${(lambdaParameter)}.Date > DateTimeOffset.FromUnixTimeMilliseconds(${value.toString().split(';')[0]}).DateTime && l.Date < DateTimeOffset.FromUnixTimeMilliseconds(${value.toString().split(';')[1]}).DateTime`,\n  deviceName: (lambdaParameter, value) => `${(lambdaParameter)}.Device.Name.Contains(\"${value}\")`,\n  text: (lambdaParameter, value) => `${(lambdaParameter)}.Data.Text.Contains(\"${value}\")`,\n  event: (lambdaParameter, value) => `${(lambdaParameter)}.Booking.Event.Name.Contains(\"${value}\")`\n}\n\nexport const getFilterMapper = (key: keyof ExtendedLogFilterValues) =>\n  mapping[key] as (lambdaParameter: string, value: string | number) => string\n","import { ExtendedLog } from './extended-log'\n\nconst mapping: Partial<Record<keyof ExtendedLog, string>> = {\n  id: 'l=>l.Id',\n  date: 'l=>l.Date',\n  deviceName: 'l=>l.Device.Name',\n  ticketCode: 'l=>l.TicketCode',\n  bookingId: 'l=>l.BookingId',\n}\n\nexport const mapSortLogParam = (key: keyof ExtendedLog) => mapping[key]\n","import { ExtendedLog } from './extended-log'\nimport { ExtendedLogDto } from '../dto/extended-log.dto'\n\nexport const mapToExtendedLog = (\n  {\n    id,\n    date,\n    ticketCode,\n    bookingId,\n    scheme,\n    device: { name: deviceName },\n    data,\n  }: ExtendedLogDto,\n  locale: string,\n): ExtendedLog => {\n  const logEntry = data.filter(({ language }) => language.includes(locale))[0]\n  return {\n    id,\n    date,\n    deviceName,\n    ticketCode,\n    text: logEntry?.text || scheme,\n    color: data[0].color || 'transparent',\n    bookingId,\n  }\n}\n","import { DataProvider, GetListResult } from 'react-admin'\nimport { EXTENDED_LOGS_URL } from '../api-urls'\nimport { getWithPagination } from '../common/fetch.utils'\nimport { ExtendedLogDto } from '../dto/extended-log.dto'\nimport { ExtendedLog, ExtendedLogFilterValues } from './extended-log'\nimport { LogListParams } from './log-list.params'\nimport { getFilterMapper } from './log-filter.mapper'\nimport { mapSortLogParam } from './log-sort.mapper'\nimport { mapToExtendedLog } from './extended-logs.mapper'\n\nconst getFilterParams = (\n  partialValues: Partial<ExtendedLogFilterValues>,\n): string => {\n  if (Object.keys(partialValues).length) {\n    const filterParams = Object.entries(partialValues).map(([key, value]) => {\n      const mapper = getFilterMapper(key as keyof ExtendedLogFilterValues)\n      return mapper('l', value as string)\n    })\n    return filterParams.reduce((p, c) => `${p}&&${c}`)\n  }\n  return 'true'\n}\n\nconst provider = {\n  getList: async (\n    resource: string,\n    {\n      filter: { locale, ...partialFilterValues },\n      sort: { field, order },\n      pagination: { page, perPage },\n    }: LogListParams,\n  ): Promise<GetListResult<ExtendedLog>> => {\n    const filterParams = `l=>${getFilterParams(partialFilterValues)}`\n    const queryParams: string[] = []\n    queryParams.push(`sortBy=${mapSortLogParam(field)}`)\n    queryParams.push(`sortOrder=${order}`)\n    queryParams.push(`rangeFrom=${page * perPage - perPage}`)\n    queryParams.push(`rangeTo=${page * perPage}`)\n\n    const pathParams = queryParams.reduce((p, c) => `${p}&${c}`)\n    const path = `/${filterParams}?${pathParams}`\n\n    const {\n      data,\n      range: { total },\n    } = await getWithPagination<ExtendedLogDto[]>(EXTENDED_LOGS_URL, path)\n    const extendedLogs = data.map((dto) => mapToExtendedLog(dto, locale))\n\n    return Promise.resolve({\n      data: extendedLogs,\n      total,\n    })\n  },\n} as DataProvider\n\nexport default provider\n","export const ALL_RESULTS = 'l=>true'\n","import { EventOverallView } from \"./event-overall-view\"\n\nconst mapping: Partial<Record<keyof EventOverallView, string>> = {\n  id: 'e=>e.Id',\n  name: 'e=>e.Name',\n  dateStart: 'e=>e.DateStart',\n  dateEnd: 'e=>e.DateEnd'\n}\n\nexport const mapSortOverallViewParam = (key: keyof EventOverallView) => mapping[key]","import { EventDto } from \"../../dto/event/event.dto\"\nimport { EventOverallView } from \"./event-overall-view\"\n\nexport const mapToEventOverallView = (\n  event: EventDto\n): EventOverallView => ({\n  id: event.id,\n  name: event.name,\n  dateStart: event.dateStart,\n  dateEnd: event.dateEnd\n})","import { DataProvider, GetListResult } from \"react-admin\"\nimport { EVENTS_URL } from '../../api-urls'\nimport { getWithPagination } from '../../common/fetch.utils'\nimport { ALL_RESULTS } from \"../../common/filter.values\"\nimport { NameFilter } from \"../../common/name.filter\"\nimport { EventDto } from \"../../dto/event/event.dto\"\nimport { EventOverallView } from \"./event-overall-view\"\nimport { mapSortOverallViewParam } from \"./overall-view-list-sort.mapper\"\nimport { mapToEventOverallView } from \"./overall-view-list.mapper\"\n\nconst provider = {\n  getList: async (\n    resource: string,\n    { filter, sort: { order, field }, pagination: { page, perPage } }: NameFilter,\n  ): Promise<GetListResult<EventOverallView>> => {\n    const queryParams: string[] = []\n    queryParams.push(`sortBy=${mapSortOverallViewParam(field)}`)\n    queryParams.push(`sortOrder=${order}`)\n    queryParams.push(`rangeFrom=${page * perPage - perPage}`)\n    queryParams.push(`rangeTo=${page * perPage}`)\n\n    const pathParams = queryParams.reduce((p, c) => `${p}&${c}`)\n    const path = `${filter.name ? `e=>e.Name.Contains(\"${filter.name}\")` : ALL_RESULTS}?${pathParams}`\n\n    const { data, range: { total } } = await getWithPagination<EventDto[]>(\n      `${EVENTS_URL}/GetByConditions/`, path)\n\n    const overallViewList = data.map((event) => mapToEventOverallView(event))\n\n    return {\n      data: overallViewList,\n      total\n    }\n  },\n} as DataProvider\n\nexport default provider","import { BlockDto } from \"../../dto/block.dto\"\nimport { BookingDto } from \"../../dto/booking.dto\"\nimport { EventDto } from \"../../dto/event/event.dto\"\nimport { ObjectDto } from \"../../dto/object.dto\"\nimport { SeatDto } from \"../../dto/seat.dto\"\nimport { TribuneDto } from \"../../dto/tribune.dto\"\nimport { BookingType } from \"../../enum/BookingType\"\nimport { BlockOverallView, ObjectOverallView, OverallView, TribuneOverallView } from \"./overall-view\"\n\nconst calculateCapacity = (seats: SeatDto[], bookings: BookingDto[]) => (\n  seats.length + bookings.filter(b => b.seatId == null).length\n)\n\nconst mapToBlockOverallView = (\n  block: BlockDto,\n  seats: SeatDto[],\n  bookings: BookingDto[],\n  enteredBookings: BookingDto[]\n): BlockOverallView => ({\n  id: block.id,\n  name: block.name,\n  capacity: calculateCapacity(seats, bookings),\n  sold: bookings.length,\n  entered: enteredBookings.length,\n  soldNormal: bookings.filter(b => b.type === BookingType.NORMAL).length,\n  enteredNormal: enteredBookings.filter(b => b.type === BookingType.NORMAL).length,\n  soldAbo: bookings.filter(b => b.type === BookingType.ABO).length,\n  enteredAbo: enteredBookings.filter(b => b.type === BookingType.ABO).length,\n  soldInfix: bookings.filter(b => b.type === BookingType.INFIX).length,\n  enteredInfix: enteredBookings.filter(b => b.type === BookingType.INFIX).length,\n  soldService: bookings.filter(b => b.type === BookingType.SERVICE).length,\n  enteredService: enteredBookings.filter(b => b.type === BookingType.SERVICE).length,\n  soldPoints: bookings.filter(b => b.type === BookingType.POINTS).length,\n  enteredPoints: enteredBookings.filter(b => b.type === BookingType.POINTS).length,\n})\n\nconst mapToTribuneOverallView = (\n  tribune: TribuneDto,\n  blocks: BlockDto[],\n  seats: SeatDto[],\n  bookings: BookingDto[],\n  enteredBookingIds: number[]\n): TribuneOverallView => ({\n  id: tribune.id,\n  name: tribune.name,\n  capacity: calculateCapacity(seats, bookings),\n  sold: bookings.length,\n  entered: enteredBookingIds.length,\n  blocks: blocks.filter(b => tribune.blocksIds.includes(b.id))\n    .map((block) => {\n      const filteredSeats = seats.filter((s) => s.blockId === block.id)\n      const filteredBookingIds = block.bookingsIds.concat(filteredSeats.flatMap((s) => s.bookingsIds))\n      const filteredBookings = bookings.filter((book) => filteredBookingIds.includes(book.id))\n      const filteredEnteredBookingIds = enteredBookingIds.filter((enteredBookingId) => filteredBookingIds.includes(enteredBookingId))\n      const filteredEnteredBookings = bookings.filter((book) => filteredEnteredBookingIds.includes(book.id))\n      return mapToBlockOverallView(\n        block,\n        filteredSeats,\n        filteredBookings,\n        filteredEnteredBookings\n      )\n    })\n})\n\nconst mapToObjectOverallView = (\n  object: ObjectDto,\n  tribunes: TribuneDto[],\n  blocks: BlockDto[],\n  seats: SeatDto[],\n  bookings: BookingDto[],\n  enteredBookingIds: number[]\n): ObjectOverallView => ({\n  id: object.id,\n  name: object.name,\n  capacity: calculateCapacity(seats, bookings),\n  sold: bookings.length,\n  entered: enteredBookingIds.length,\n  tribunes: tribunes.filter(t => object.tribunesIds.includes(t.id))\n    .map((tribune) => {\n      const filteredBlocks = blocks.filter((b) => b.tribuneId === tribune.id)\n      const filteredSeatIds = filteredBlocks.flatMap((b) => b.seatsIds)\n      const filteredSeats = seats.filter((s) => filteredSeatIds.includes(s.id))\n      const filteredBookingIds = filteredBlocks.flatMap((b) => b.bookingsIds).concat(filteredSeats.flatMap((s) => s.bookingsIds))\n      const filteredBookings = bookings.filter((book) => filteredBookingIds.includes(book.id))\n      const filteredEnteredBookingIds = enteredBookingIds.filter((enteredBookingId) => filteredBookingIds.includes(enteredBookingId))\n      return mapToTribuneOverallView(\n        tribune,\n        filteredBlocks,\n        filteredSeats,\n        filteredBookings,\n        filteredEnteredBookingIds\n      )\n    })\n})\n\nexport const mapToOverallView = (\n  selectedEvent: EventDto,\n  objects: ObjectDto[],\n  tribunes: TribuneDto[],\n  blocks: BlockDto[],\n  seats: SeatDto[],\n  bookings: BookingDto[],\n  enteredBookingIds: number[]\n): OverallView => ({\n  id: selectedEvent.id,\n  eventName: selectedEvent.name,\n  capacity: calculateCapacity(seats, bookings),\n  sold: bookings.length,\n  entered: enteredBookingIds.length,\n  date: selectedEvent.dateStart,\n  objects: objects.filter(o => selectedEvent.objectsIds.includes(o.id))\n    .map((object) => {\n      const filteredTribunes = tribunes.filter((t) => t.objectId === object.id)\n      const filteredBlocks = blocks.filter((b) => filteredTribunes.flatMap((t) => t.blocksIds).includes(b.id))\n      const filteredSeatIds = filteredBlocks.flatMap((b) => b.seatsIds)\n      const filteredSeats = seats.filter((s) => filteredSeatIds.includes(s.id))\n      const filteredBookingIds = filteredBlocks.flatMap((b) => b.bookingsIds).concat(filteredSeats.flatMap((s) => s.bookingsIds))\n      const filteredBookings = bookings.filter((book) => filteredBookingIds.includes(book.id))\n      const filteredEnteredBookingIds = enteredBookingIds.filter((enteredBookingId) => filteredBookingIds.includes(enteredBookingId))\n      return mapToObjectOverallView(\n        object,\n        filteredTribunes,\n        filteredBlocks,\n        filteredSeats,\n        filteredBookings,\n        filteredEnteredBookingIds\n      )\n    })\n})","import { DataProvider, GetOneParams, GetOneResult } from \"react-admin\"\nimport {\n  BLOCKS_URL,\n  BOOKINGS_URL, EVENTS_URL, OBJECTS_URL, SEATS_URL, TRIBUNES_URL\n} from '../../api-urls'\nimport { get, getByConditions } from '../../common/fetch.utils'\nimport { BlockDto } from \"../../dto/block.dto\"\nimport { BookingDto } from \"../../dto/booking.dto\"\nimport { EventDto } from \"../../dto/event/event.dto\"\nimport { ObjectDto } from \"../../dto/object.dto\"\nimport { SeatDto } from \"../../dto/seat.dto\"\nimport { TribuneDto } from \"../../dto/tribune.dto\"\nimport { OverallView } from \"./overall-view\"\nimport { mapToOverallView } from \"./overall-view.mapper\"\n\nconst provider = {\n  getOne: async (\n    resource: string,\n    { id: eventId }: GetOneParams\n  ): Promise<GetOneResult<OverallView>> => {\n    const pendingSelectedEvent = get<EventDto>(EVENTS_URL, `/${eventId}`)\n    const pendingObjects = getByConditions<ObjectDto>(OBJECTS_URL, `o=>o.Events.Any(e => e.Id.Equals(${eventId}))?sortBy=o=>o.Name&sortOrder=ASC`)\n    const pendingTribunes = getByConditions<TribuneDto>(TRIBUNES_URL, `t=>t.Object.Events.Any(e => e.Id.Equals(${eventId}))?sortBy=t=>t.Name&sortOrder=ASC`)\n    const pendingBlocks = getByConditions<BlockDto>(BLOCKS_URL, `b=>b.Tribune.Object.Events.Any(e => e.Id.Equals(${eventId}))?sortBy=b=>b.Name&sortOrder=ASC`)\n    const pendingSeats = getByConditions<SeatDto>(SEATS_URL, `s=>s.Block.Tribune.Object.Events.Any(e => e.Id.Equals(${eventId}))`)\n    const bookingsCondition = `b=>b.EventId.Equals(${eventId}) && b.Disabled != TicketAPI.Models.Enums.TicketManagement.BookingDisabledOptions.STORNO`\n    const pendingBookings = getByConditions<BookingDto>(BOOKINGS_URL, bookingsCondition)\n    const pendingEnteredBookings = getByConditions<BookingDto>(BOOKINGS_URL,\n      `${bookingsCondition} && b.Tickets.SelectMany(t => t.AccessUsings).Any(au => au.Active == true && au.Direction.Equals(TicketAPI.Models.Enums.DeviceManagement.DeviceDirections.IN))`)\n\n    const [selectedEvent, objects, tribunes, blocks, seats, bookings, enteredBookingIds] =\n      await Promise.all([\n        pendingSelectedEvent,\n        pendingObjects,\n        pendingTribunes,\n        pendingBlocks,\n        pendingSeats,\n        pendingBookings,\n        Promise.all((await Promise.resolve(pendingEnteredBookings)).map(book => book.id))\n      ])\n\n    const overallViewData =\n      Promise.resolve(\n        mapToOverallView(\n          selectedEvent,\n          objects,\n          tribunes,\n          blocks,\n          seats,\n          bookings,\n          enteredBookingIds\n        ))\n\n    return {\n      data: await overallViewData\n    }\n  },\n} as DataProvider\n\nexport default provider","export const buildFilterByIdsCondition = (ids: number[]): string => {\n  const [firstId, ...restIds] = ids\n  return (restIds || []).reduce(\n    (prev, curr) => `${prev as string}||v.Id==${curr}`,\n    `v=>v.Id==${firstId}`,\n  )\n}\n","export const toMapById = <T extends { id: number }>(values: T[]) =>\n  new Map(values.map((v): [number, T] => [v.id, v]))\n\nexport const toUniqueValues = (values: number[]) => Array.from(new Set(values))\n","import { CustomerDto } from '../dto/customer.dto'\nimport { EventDto } from '../dto/event/event.dto'\nimport { TicketDto } from '../dto/ticket.dto'\nimport { VariantDto } from '../dto/variant.dto'\nimport { TicketDetails } from './ticket-details'\nimport { BookingDto } from '../dto/booking.dto'\nimport { AccessUsingDto } from '../dto/access-using.dto'\nimport { Ticket } from './ticket'\nimport { toMapById } from '../common/mapper.utils'\nimport { BlockDto } from '../dto/block.dto'\nimport { TribuneDto } from '../dto/tribune.dto'\nimport { SeatDto } from '../dto/seat.dto'\nimport { ObjectDto } from '../dto/object.dto'\n\nconst mapToTicket = (\n  { id, ticketCode, ticketType, createdAt, accessUsingsIds }: TicketDto,\n  accessUsingById: Map<number, AccessUsingDto>,\n): Ticket => ({\n  id,\n  ticketCode,\n  ticketType,\n  createdAt,\n  accessUsings: accessUsingsIds.map(\n    (auId) => accessUsingById.get(auId) as AccessUsingDto,\n  ),\n})\n\nexport const mapToTicketDetails = (\n  {\n    id: bookingId,\n    disabled: bookingDisabled,\n    type: bookingType,\n    activeFrom,\n    activeTo,\n    createdAt,\n    modifiedAt,\n    seatId,\n    blockId\n  }: BookingDto,\n  {\n    firstname,\n    lastname,\n    pesel,\n    company,\n    birthdate,\n    documentType,\n    documentNumber,\n    nationality,\n    gender\n  }: CustomerDto,\n  { name: eventName }: EventDto,\n  { name: variantName, accessesIds }: VariantDto,\n  tickets: TicketDto[],\n  accessUsings: AccessUsingDto[],\n  block: BlockDto,\n  tribune: TribuneDto,\n  object: ObjectDto,\n  seat: SeatDto | null\n): TicketDetails => {\n  const accessUsingById = toMapById(accessUsings)\n  return {\n    id: bookingId,\n    firstname,\n    lastname,\n    eventName,\n    pesel,\n    variantName,\n    accessesIds,\n    bookingType,\n    activeFrom,\n    activeTo,\n    tickets: tickets.map((t) => mapToTicket(t, accessUsingById)),\n    createdAt,\n    modifiedAt,\n    bookingDisabled,\n    company,\n    birthdate,\n    documentType,\n    documentNumber,\n    nationality,\n    gender,\n    seatId,\n    blockId,\n    objectName: object?.name || null,\n    tribuneName: tribune?.name || null,\n    blockName: block?.name || null,\n    rowNumber: seat?.rowAlias || null\n  }\n}\n","import { DataProvider, GetOneParams, GetOneResult } from 'react-admin'\nimport {\n  ACCESS_USINGS,\n  BLOCKS_URL,\n  BOOKINGS_URL,\n  CUSTOMERS_URL,\n  EVENTS_URL,\n  OBJECTS_URL,\n  SEATS_URL,\n  TICKETS_URL,\n  TRIBUNES_URL,\n  VARIANTS_URL,\n} from '../api-urls'\nimport { get, getByConditions } from '../common/fetch.utils'\nimport { BookingDto } from '../dto/booking.dto'\nimport { TicketDto } from '../dto/ticket.dto'\nimport { CustomerDto } from '../dto/customer.dto'\nimport { EventDto } from '../dto/event/event.dto'\nimport { buildFilterByIdsCondition } from '../common/condition.builder'\nimport { mapToTicketDetails } from './ticket-details.mapper'\nimport { VariantDto } from '../dto/variant.dto'\nimport { TicketDetails } from './ticket-details'\nimport { toUniqueValues } from '../common/mapper.utils'\nimport { AccessUsingDto } from '../dto/access-using.dto'\nimport { TribuneDto } from '../dto/tribune.dto'\nimport { BlockDto } from '../dto/block.dto'\nimport { SeatDto } from '../dto/seat.dto'\nimport { ObjectDto } from '../dto/object.dto'\n\nconst fetchTicketsWithAccessUsings = async (ticketIds: number[]) => {\n  const tickets = await getByConditions<TicketDto>(\n    TICKETS_URL,\n    buildFilterByIdsCondition(ticketIds),\n  )\n  const accessUsingIds = tickets.flatMap((t) => t.accessUsingsIds)\n  const accessUsings = accessUsingIds.length\n    ? await getByConditions<AccessUsingDto>(\n        ACCESS_USINGS,\n        buildFilterByIdsCondition(toUniqueValues(accessUsingIds)),\n      )\n    : []\n  return {\n    tickets,\n    accessUsings,\n  }\n}\n\nconst provider = {\n  getOne: async (\n    resource: string,\n    { id: bookingId }: GetOneParams,\n  ): Promise<GetOneResult<TicketDetails>> => {\n    const booking = await get<BookingDto>(BOOKINGS_URL, `/${bookingId}`)\n    const { customerId, eventId, variantId } = booking\n\n    const pendingCustomer = get<CustomerDto>(CUSTOMERS_URL, `/${customerId}`)\n    const pendingEvent = get<EventDto>(EVENTS_URL, `/${eventId}`)\n    const pendingVariant = get<VariantDto>(VARIANTS_URL, `/${variantId}`)\n    const pendingTicketsWithAccessUsings = fetchTicketsWithAccessUsings(\n      booking.ticketsIds,\n    )\n\n    const seat = booking.seatId\n      ? await get<SeatDto>(SEATS_URL, `/${booking.seatId.toString()}`)\n      : null\n    const block = seat\n      ? await get<BlockDto>(BLOCKS_URL, `/${seat.blockId.toString()}`)\n      : await get<BlockDto>(BLOCKS_URL, `/${booking?.blockId?.toString()}`)\n    const tribune = await get<TribuneDto>(\n      TRIBUNES_URL,\n      `/${block.tribuneId.toString()}`,\n    )\n    const object = await get<ObjectDto>(\n      OBJECTS_URL,\n      `/${tribune.objectId.toString()}`,\n    )\n\n    const [customer, event, variant, { tickets, accessUsings }] =\n      await Promise.all([\n        pendingCustomer,\n        pendingEvent,\n        pendingVariant,\n        pendingTicketsWithAccessUsings,\n      ])\n\n    return {\n      data: mapToTicketDetails(\n        booking,\n        customer,\n        event,\n        variant,\n        tickets,\n        accessUsings,\n        block,\n        tribune,\n        object,\n        seat,\n      ),\n    }\n  },\n} as DataProvider\n\nexport default provider\n","import { CustomerDto } from '../dto/customer.dto'\nimport { EventDto } from '../dto/event/event.dto'\nimport { TicketDto } from '../dto/ticket.dto'\nimport { TicketInfo } from './ticket-info'\nimport { BookingDto } from '../dto/booking.dto'\nimport { toMapById } from '../common/mapper.utils'\n\nexport const mapToTicketBaseInfo = (\n  { firstname, lastname, pesel }: CustomerDto,\n  { id: eventId, name: eventName, dateStart: eventDate }: EventDto,\n  { id, bookingId, ticketCode, ticketType }: TicketDto,\n): TicketInfo => ({\n  id,\n  firstname,\n  lastname,\n  pesel,\n  eventId,\n  eventName,\n  eventDate,\n  ticketCode,\n  ticketType,\n  bookingId\n})\n\nexport const mapToTicketBaseInfoList = (\n  bookings: BookingDto[],\n  customers: CustomerDto[],\n  events: EventDto[],\n  tickets: TicketDto[],\n): TicketInfo[] => {\n  const bookingById = toMapById(bookings)\n  const customerById = toMapById(customers)\n  const eventById = toMapById(events)\n  return tickets.map((ticket) => {\n    const { customerId, eventId } = bookingById.get(\n      ticket.bookingId,\n    ) as BookingDto\n    const customer = customerById.get(customerId) as CustomerDto\n    const event = eventById.get(eventId) as EventDto\n    return mapToTicketBaseInfo(customer, event, ticket)\n  })\n}\n","import { TicketInfo } from './ticket-info'\n\nconst mapping: Partial<Record<keyof TicketInfo, string>> = {\n  id: 't=>t.Id',\n  ticketCode: 't=>t.TicketCode',\n  bookingId: 't=>t.BookingId'\n}\n\nexport const mapSortTicketParams = (key: keyof TicketInfo) => mapping[key]","import { TicketInfo } from \"./ticket-info\"\n\nconst mapping: Partial<\n  Record<\n    keyof TicketInfo,\n    (lambdaParameter: string, value: string | number) => string\n  >\n> = {\n  ticketCode: (lambdaParameter, value) => `${(lambdaParameter)}.TicketCode.Contains(\"${value}\")`,\n}\n\nexport const getFilterMapper = (key: keyof TicketInfo) =>\n  mapping[key] as (lambdaParameter: string, value: string | number) => string\n","import { DataProvider, GetListResult } from 'react-admin'\nimport {\n  BOOKINGS_URL,\n  CUSTOMERS_URL,\n  EVENTS_URL,\n  TICKETS_URL,\n} from '../api-urls'\nimport { getByConditions, getWithPagination } from '../common/fetch.utils'\nimport { BookingDto } from '../dto/booking.dto'\nimport { TicketInfo } from './ticket-info'\nimport { TicketDto } from '../dto/ticket.dto'\nimport { CustomerDto } from '../dto/customer.dto'\nimport { EventDto } from '../dto/event/event.dto'\nimport { mapToTicketBaseInfoList } from './ticket-info.mapper'\nimport { buildFilterByIdsCondition } from '../common/condition.builder'\nimport { TicketCodeFilter } from '../common/ticket-code.filter'\nimport { toUniqueValues } from '../common/mapper.utils'\nimport { mapSortTicketParams } from './ticket-info-sort.mapper'\nimport { getFilterMapper } from './ticket-info-filter.mapper'\n\nconst getFilterParams = (\n  partialValues: Partial<TicketInfo>,\n): string => {\n  if (Object.keys(partialValues).length) {\n    const filterParams = Object.entries(partialValues).map(([key, value]) => {\n      const mapper = getFilterMapper(key as keyof TicketInfo)\n      return mapper('t', value as string)\n    })\n    return filterParams.reduce((p, c) => `${p}&&${c}`)\n  }\n  return 'true'\n}\nconst getByUniqueIds = <T>(baseUrl: string, ids: number[]): Promise<T[]> => {\n  const uniqueIds = toUniqueValues(ids)\n  return getByConditions<T>(baseUrl, buildFilterByIdsCondition(uniqueIds))\n}\n\nconst provider = {\n  getList: async (\n    resource: string,\n    {\n      filter,\n      pagination: { page, perPage },\n      sort: { field, order }\n    }: TicketCodeFilter,\n  ): Promise<GetListResult<TicketInfo>> => {\n    const filterParams = `t=>${getFilterParams(filter)}`\n    const queryParams: string[] = []\n    if (!!page && !!field) {\n      queryParams.push(`sortBy=${mapSortTicketParams(field)}`)\n      queryParams.push(`sortOrder=${order}`)\n      queryParams.push(`rangeFrom=${page * perPage - perPage}`)\n      queryParams.push(`rangeTo=${page * perPage}`)\n    }\n    else queryParams.push('')\n\n    const pathParams = queryParams.reduce((p, c) => `${p}&${c}`)\n    const path = `/${filterParams}?${pathParams}`\n    const { data: tickets, range: { total } } = await getWithPagination<TicketDto[]>(\n      `${TICKETS_URL}/GetByConditions/`, path\n    )\n\n    const bookingIds = tickets.map((v) => v.bookingId)\n    const bookings = await getByUniqueIds<BookingDto>(BOOKINGS_URL, bookingIds)\n\n    const customerIds = bookings.map((v) => v.customerId)\n    const eventIds = bookings.map((v) => v.eventId)\n\n    const pendingCustomers = getByUniqueIds<CustomerDto>(\n      CUSTOMERS_URL,\n      customerIds,\n    )\n    const pendingEvents = getByUniqueIds<EventDto>(EVENTS_URL, eventIds)\n    const [customers, events] = await Promise.all([\n      pendingCustomers,\n      pendingEvents,\n    ])\n\n    const ticketBaseInfoList = mapToTicketBaseInfoList(\n      bookings,\n      customers,\n      events,\n      tickets,\n    )\n    return Promise.resolve({\n      data: ticketBaseInfoList,\n      total\n    })\n  },\n} as DataProvider\n\nexport default provider\n","import { DataProvider, GetListResult } from 'react-admin'\nimport { getByConditions } from '../common/fetch.utils'\nimport { TICKETS_URL } from '../api-urls'\nimport { TicketCodeFilter } from '../common/ticket-code.filter'\nimport { TicketDto } from '../dto/ticket.dto'\n\nconst provider = {\n  getList: async (\n    resource: string,\n    { filter }: TicketCodeFilter,\n  ): Promise<GetListResult<TicketDto>> => {\n    const filterByTicketCodeCondition = `t=>t.TicketCode.Contains(\"${filter.ticketCode}\")`\n    const tickets = await getByConditions<TicketDto>(\n      TICKETS_URL,\n      filterByTicketCodeCondition,\n    )\n    return Promise.resolve({\n      data: tickets,\n      total: tickets.length,\n    })\n  },\n} as DataProvider\n\nexport default provider\n","import { Access } from './access'\n\nconst mapping: Partial<\n  Record<\n    keyof Access,\n    (lambdaParameter: string, value: string | number) => string\n  >\n> = {\n  id: (lambdaParameter, value) => value.toString().split(\",\").map((v) => `${v}==${lambdaParameter}.Id`).join(\"&&\"),\n}\n\nexport const getFilterMapper = (key: keyof Access) =>\n  mapping[key] as (lambdaParameter: string, value: string | number) => string\n","import { Access } from './access'\n\nconst mapping: Partial<Record<keyof Access, string>> = {\n  id: 'a=>a.Id',\n}\n\nexport const mapSortAccessParam = (key: keyof Access) => mapping[key]\n","import {\n  DataProvider,\n  GetListResult,\n  GetOneParams,\n  GetOneResult,\n} from 'react-admin'\nimport { ACCESSES_URL, USERS_URL } from '../api-urls'\nimport { getWithPagination, get } from '../common/fetch.utils'\nimport { AccessDto } from '../dto/access.dto'\nimport { UserDto } from '../dto/user.dto'\nimport { Access } from './access'\nimport { getFilterMapper } from './access-filter.mapper'\nimport { mapSortAccessParam } from './access-sort.mapper'\nimport { AccessParams } from './access.params'\n\nconst getFilterParams = (filter: Partial<Access>) => {\n  if (Object.keys(filter).length) {\n    const filterParams = Object.entries(filter).map(([key, value]) => {\n      const mapper = getFilterMapper(key as keyof Access)\n      return mapper('a', value as string)\n    })\n    return filterParams.reduce((p, c) => `${p}&&${c}`)\n  }\n  return 'true'\n}\n\nconst provider = {\n  getList: async (\n    resource: string,\n    {\n      filter,\n      sort: { field, order },\n      pagination: { page, perPage },\n    }: AccessParams,\n  ): Promise<GetListResult<Access>> => {\n    const filterParams = `a=>${getFilterParams(filter).toString()}`\n    const queryParams: string[] = []\n    queryParams.push(`sortBy=${mapSortAccessParam(field)}`)\n    queryParams.push(`sortOrder=${order}`)\n    queryParams.push(`rangeFrom=${page * perPage - perPage}`)\n    queryParams.push(`rangeTo=${page * perPage}`)\n\n    const pathParams = queryParams.reduce((p, c) => `${p}&${c}`)\n    const path = `/${filterParams}?${pathParams}`\n\n    const { data } = await getWithPagination<AccessDto[]>(\n      `${ACCESSES_URL}/GetByConditions`,\n      path,\n    )\n    const accesses = data.map(\n      ({\n        id,\n        name,\n        bonus,\n        entranceId,\n        allowReenter,\n        multipleEntry,\n        multiple,\n        usePriority,\n        isTicketUnlockWithNextDay,\n        releaseTime,\n        releaseDayOfWeek,\n        releaseDayOfMonth,\n        delay,\n        activePeriod,\n        activePeriodStartingFrom,\n        variantsIds,\n        accessDatesIds,\n        createdById,\n        modifiedById,\n        createdAt,\n        modifiedAt,\n      }) =>\n        ({\n          id,\n          name,\n          bonus,\n          entranceId,\n          allowReenter,\n          multipleEntry,\n          multiple,\n          usePriority,\n          isTicketUnlockWithNextDay,\n          releaseTime,\n          releaseDayOfWeek,\n          releaseDayOfMonth,\n          delay,\n          activePeriod,\n          activePeriodStartingFrom,\n          variantsIds,\n          accessDatesIds,\n          createdById,\n          modifiedById,\n          createdAt,\n          modifiedAt,\n        } as Access),\n    )\n\n    return Promise.resolve({\n      data: accesses,\n      total: accesses.length,\n    })\n  },\n  getOne: async (\n    resource: string,\n    { id }: GetOneParams,\n  ): Promise<GetOneResult<Access>> => {\n    const access = await get<AccessDto>(ACCESSES_URL, `/${id}`)\n    const modifiedBy = await get<UserDto>(\n      USERS_URL,\n      access.modifiedById.toString(),\n    )\n    const createdBy =\n      access.modifiedById === access.createdById\n        ? modifiedBy\n        : await get<UserDto>(USERS_URL, access.createdById.toString())\n    return {\n      data: {\n        ...access,\n        modifiedByName: modifiedBy.userName,\n        createdByName: createdBy.userName,\n      },\n    }\n  },\n} as DataProvider\n\nexport default provider\n","import { EventDto } from \"../dto/event/event.dto\"\n\nconst mapping: Partial<Record<keyof EventDto, string>> = {\n  id: 'e=>e.Id',\n  name: 'e=>e.Name',\n  dateStart: 'e=>e.DateStart',\n  dateEnd: 'e=>e.DateEnd',\n  status: 'e=>e.Status'\n}\n\nexport const mapSortEventParam = (key: keyof EventDto) => mapping[key]\n","import { DataProvider, GetListResult, GetOneParams, GetOneResult, UpdateParams, UpdateResult, GetListParams, Identifier } from \"react-admin\"\nimport { EVENTS_URL, PALMS_URL } from \"../api-urls\"\nimport { get, patch, put, getWithPagination } from \"../common/fetch.utils\"\nimport { ALL_RESULTS } from \"../common/filter.values\"\nimport { EventDto } from \"../dto/event/event.dto\"\nimport { Event } from \"./event\"\nimport { DateTime } from \"../common/date-time\"\nimport { EventCompaniesDto } from \"../dto/event/event-companies.dto\"\nimport { EventDevicesDto } from \"../dto/event/event-devices.dto\"\nimport { EventObjectsDto } from \"../dto/event/event-objects.dto\"\nimport { EventStatus } from \"../enum/EventStatus\"\nimport { mapSortEventParam } from './event-sort.mapper'\nimport { CacheableDataProviderExtensionResult, DataProviderExtensionResult } from \"../common/data-provider\"\nimport { PalmDto } from \"../dto/device/palm/palm.dto\"\n\ntype EventUpdateRequest = {\n  id: number,\n  name?: string,\n  dateStart?: DateTime,\n  dateEnd?: DateTime,\n  status?: EventStatus\n}\n\ninterface EventListParams extends GetListParams {\n  readonly sort: {\n    readonly field: keyof EventDto\n    readonly order: 'ASC' | 'DESC'\n  }\n  readonly filter:\n  {\n    readonly name: string\n    readonly palmId: string\n  }\n}\n\nconst provider = {\n  getList: async (\n    resource: string,\n    {\n      filter: { name, palmId },\n      sort: { field, order },\n      pagination: { page, perPage }\n    }: EventListParams,\n  ): Promise<GetListResult<Event>> => {\n    const attachedEvents: number[] = []\n    if (palmId) {\n      const palm = await get<PalmDto>(PALMS_URL, `/${palmId}`)\n      attachedEvents.push(...palm.eventsIds)\n    }\n\n    const queryParams: string[] = []\n    queryParams.push(`sortBy=${mapSortEventParam(field)}`)\n    queryParams.push(`sortOrder=${order}`)\n    queryParams.push(`rangeFrom=${page * perPage - perPage}`)\n    queryParams.push(`rangeTo=${page * perPage}`)\n    const pathParams = queryParams.reduce((p, c) => `${p}&${c}`)\n    const { data, range: { total } } = await getWithPagination<EventDto[]>(`${EVENTS_URL}/GetByConditions/`, `${name ? `e=>e.Name.Contains(\"${name}\")` : ALL_RESULTS}?${pathParams}`)\n\n    const events = data.map((event) => ({ ...event, attached: attachedEvents.includes(event.id) }))\n\n    return Promise.resolve({\n      data: events,\n      total\n    })\n  },\n  getOne: async (\n    resource: string,\n    { id }: GetOneParams\n  ): Promise<GetOneResult<EventDto>> => {\n    const event = await get<EventDto>(EVENTS_URL, `/${id}`)\n\n    return {\n      data: event\n    }\n  },\n  update: async (\n    resource: string,\n    { id, data, previousData }: UpdateParams\n  ): Promise<UpdateResult> => {\n    const { name, dateStart, dateEnd } = data\n\n    let eventUpdate = data\n    if (previousData) {\n      const { name: previousName, dateStart: previousDateStart, dateEnd: previousDateEnd } = previousData\n      eventUpdate = await patch<EventUpdateRequest, EventDto>(EVENTS_URL, {\n        id: parseInt(id as string, 10),\n        name: name ?? previousName,\n        dateStart: dateStart ?\n          new Date(new Date(dateStart).getTime() - (new Date(dateStart).getTimezoneOffset() * 60000)).toJSON() as DateTime :\n          previousDateStart,\n        dateEnd: dateEnd ?\n          new Date(new Date(dateEnd).getTime() - (new Date(dateEnd).getTimezoneOffset() * 60000)).toJSON() as DateTime :\n          previousDateEnd\n      })\n    }\n\n    return Promise.resolve({\n      data: { id, ...data, ...eventUpdate }\n    })\n  },\n  activate: async (\n    resource: string,\n    { eventId }: ChangeStateParams\n  ): Promise<DataProviderExtensionResult<ChangeStateResponse>> => {\n    const activate = await put<undefined, ChangeStateResponse>\n      (`${EVENTS_URL}/ActivateAsyncJob/${eventId}`, undefined)\n    return {\n      data: activate\n    }\n  },\n  deactivate: async (\n    resource: string,\n    { eventId }: ChangeStateParams\n  ): Promise<DataProviderExtensionResult<ChangeStateResponse>> => {\n    const deactivate = await put<undefined, ChangeStateResponse>\n      (`${EVENTS_URL}/DeactivateAsyncJob/${eventId}`, undefined)\n    return {\n      data: deactivate\n    }\n  },\n  getCompaniesList: async (\n    resource: string,\n    { eventId }: GetCompaniesParams\n  ): Promise<CacheableDataProviderExtensionResult<EventCompaniesDto>> => {\n    const companies = await put<undefined, EventCompaniesDto>\n      (`${EVENTS_URL}/GetCompanies/${eventId}`, undefined)\n    return {\n      data: companies\n    }\n  },\n  attachCompanies: async (\n    resource: string,\n    params: EventCompaniesDto\n  ): Promise<CacheableDataProviderExtensionResult<EventCompaniesDto>> => {\n    const eventCompanies = await put<EventCompaniesDto, EventCompaniesDto>\n      (`${EVENTS_URL}/AttachCompanies`, params)\n    return {\n      data: eventCompanies\n    }\n  },\n  detachCompanies: async (\n    resource: string,\n    params: EventCompaniesDto\n  ): Promise<CacheableDataProviderExtensionResult<EventCompaniesDto>> => {\n    const eventCompanies = await put<EventCompaniesDto, EventCompaniesDto>\n      (`${EVENTS_URL}/DetachCompanies`, params)\n    return {\n      data: eventCompanies\n    }\n  },\n  attachObjects: async (\n    resource: string,\n    params: EventObjectsDto\n  ): Promise<CacheableDataProviderExtensionResult<EventObjectsDto>> => {\n    const eventObjects = await put<EventObjectsDto, EventObjectsDto>\n      (`${EVENTS_URL}/AttachObjects`, params)\n    return {\n      data: eventObjects\n    }\n  },\n  detachObjects: async (\n    resource: string,\n    params: EventObjectsDto\n  ): Promise<CacheableDataProviderExtensionResult<EventObjectsDto>> => {\n    const eventObjects = await put<EventObjectsDto, EventObjectsDto>\n      (`${EVENTS_URL}/DetachObjects`, params)\n    return {\n      data: eventObjects\n    }\n  },\n  getDevicesList: async (\n    resource: string,\n    { eventId }: GetDevicesParams\n  ): Promise<CacheableDataProviderExtensionResult<EventDevicesDto>> => {\n    const devices = await put<undefined, EventDevicesDto>\n      (`${EVENTS_URL}/GetDevices/${eventId}`, undefined)\n    return {\n      data: devices\n    }\n  },\n  attachDevices: async (\n    resource: string,\n    params: EventDevicesDto\n  ): Promise<CacheableDataProviderExtensionResult<EventDevicesDto>> => {\n    const eventDevices = await put<EventDevicesDto, EventDevicesDto>\n      (`${EVENTS_URL}/AttachDevices`, params)\n    return {\n      data: eventDevices\n    }\n  },\n  detachDevices: async (\n    resource: string,\n    params: EventDevicesDto\n  ): Promise<CacheableDataProviderExtensionResult<EventDevicesDto>> => {\n    const eventDevices = await put<EventDevicesDto, EventDevicesDto>\n      (`${EVENTS_URL}/DetachDevices`, params)\n    return {\n      data: eventDevices\n    }\n  }\n} as EventDataProvider\n\ninterface EventDataProvider extends DataProvider {\n  activate: (\n    resource: string,\n    params: ChangeStateParams\n  ) => Promise<DataProviderExtensionResult<ChangeStateResponse>>;\n\n  deactivate: (\n    resource: string,\n    params: ChangeStateParams\n  ) => Promise<DataProviderExtensionResult<ChangeStateResponse>>;\n\n  getCompaniesList: (\n    resource: string,\n    params: GetCompaniesParams\n  ) => Promise<CacheableDataProviderExtensionResult<EventCompaniesDto>>;\n\n  attachCompanies: (\n    resource: string,\n    params: EventCompaniesDto\n  ) => Promise<CacheableDataProviderExtensionResult<EventCompaniesDto>>;\n\n  detachCompanies: (\n    resource: string,\n    params: EventCompaniesDto\n  ) => Promise<CacheableDataProviderExtensionResult<EventCompaniesDto>>;\n\n  getObjectsList: (\n    resource: string,\n    params: GetObjectsParams\n  ) => Promise<CacheableDataProviderExtensionResult<EventObjectsDto>>;\n\n  attachObjects: (\n    resource: string,\n    params: EventObjectsDto\n  ) => Promise<CacheableDataProviderExtensionResult<EventObjectsDto>>;\n\n  detachObjects: (\n    resource: string,\n    params: EventObjectsDto\n  ) => Promise<CacheableDataProviderExtensionResult<EventObjectsDto>>;\n\n  getDevicesList: (\n    resource: string,\n    params: GetDevicesParams\n  ) => Promise<CacheableDataProviderExtensionResult<EventDevicesDto>>;\n\n  attachDevices: (\n    resource: string,\n    params: EventDevicesDto\n  ) => Promise<CacheableDataProviderExtensionResult<EventDevicesDto>>;\n\n  detachDevices: (\n    resource: string,\n    params: EventDevicesDto\n  ) => Promise<CacheableDataProviderExtensionResult<EventDevicesDto>>;\n};\n\nexport interface ChangeStateParams {\n  eventId: Identifier;\n}\n\nexport interface ChangeStateResponse {\n  jobId: Identifier;\n}\n\nexport interface GetCompaniesParams {\n  eventId: Identifier;\n}\n\nexport interface GetObjectsParams {\n  eventId: Identifier;\n}\n\nexport interface GetDevicesParams {\n  eventId: Identifier;\n}\n\nexport default provider","import { DataProvider, GetOneParams, GetOneResult } from \"react-admin\"\nimport { CustomerDetails } from \"./customer-details\"\nimport { CustomerDto } from \"../dto/customer.dto\"\nimport { CUSTOMERS_URL } from \"../api-urls\"\nimport { get } from '../common/fetch.utils'\n\nconst provider = {\n  getOne: async (\n    resource: string,\n    { id: customerId }: GetOneParams,\n  ): Promise<GetOneResult<CustomerDetails>> => {\n    const customer = await get<CustomerDto>(CUSTOMERS_URL, `/${customerId}`)\n    return {\n      data: customer as CustomerDetails\n    }\n  }\n} as DataProvider\n\nexport default provider","import { CustomerInfo } from './customer-info'\n\nconst mapping: Partial<Record<keyof CustomerInfo, string>> = {\n  id: 'c=>c.Id',\n  firstname: 'c=>c.Firstname',\n  lastname: 'c=>c.Lastname',\n  pesel: 'c=>c.Pesel',\n  documentNumber: 'c=>c.DocumentNumber'\n}\n\nexport const mapSortCustomerParams = (key: keyof CustomerInfo) => mapping[key]","import { GetListResult, DataProvider } from \"react-admin\";\nimport { CUSTOMERS_URL } from \"../api-urls\";\nimport { getWithPagination } from \"../common/fetch.utils\";\nimport { CustomerDto } from \"../dto/customer.dto\";\nimport { CustomerInfo } from \"./customer-info\";\nimport { mapSortCustomerParams } from \"./customer-info-sort.mapper\";\nimport { CustomerInfoFilter } from \"./customer-info.params\";\n\nconst provider = {\n  getList: async (\n    resource: string,\n    { filter, sort, pagination }: CustomerInfoFilter\n  ): Promise<GetListResult<CustomerInfo>> => {\n    const queryParams: string[] = []\n    if (!!pagination && !!sort) {\n      queryParams.push(`sortBy=${mapSortCustomerParams(sort.field)}`)\n      queryParams.push(`sortOrder=${sort.order}`)\n      queryParams.push(`rangeFrom=${pagination.page * pagination.perPage - pagination.perPage}`)\n      queryParams.push(`rangeTo=${pagination.page * pagination.perPage}`)\n    }\n    else queryParams.push('')\n    const pathParams = queryParams.reduce((p, c) => `${p}&${c}`)\n\n    const filterByCustomerInfoCondition = `c=>${filter.info.split(\" \").map((q) =>\n      `(c.Firstname+c.Lastname+c.Pesel+c.DocumentNumber).Contains(\"${q}\")`).join(\"&&\")}`\n\n    const { data, range: { total } } = await getWithPagination<CustomerDto[]>(\n      `${CUSTOMERS_URL}/GetByConditions/`,\n      `${filterByCustomerInfoCondition}?${pathParams}`\n    )\n\n    return Promise.resolve({\n      data,\n      total\n    })\n  }\n} as DataProvider\n\nexport default provider","import { AccessDateDto } from '../dto/access-date.dto'\n\nconst mapping: Partial<\n  Record<keyof AccessDateDto, (lambdaParameter: string, value: string | number) => string>\n> = {\n  id: (lambdaParameter, value) => value.toString().split(\",\").map((v) => `${v}==${lambdaParameter}.Id`).join(\"&&\"),\n}\n\nexport const getFilterMapper = (key: keyof AccessDateDto) =>\n  mapping[key] as (lambdaParameter: string, value: string | number) => string\n","import { AccessDateDto } from \"../dto/access-date.dto\"\n\nconst mapping: Partial<Record<keyof AccessDateDto, string>> = {\n  id: 'au=>au.Id',\n  activeFrom: 'au=>au.ActiveFrom',\n  activeTo: 'au=>au.ActiveTo',\n  type: 'au=>au.Type'\n}\n\nexport const mapSortAccessDatesParam = (key: keyof AccessDateDto) => mapping[key]","import {\n  DataProvider, GetListResult\n} from 'react-admin'\nimport { AccessDateDto } from '../dto/access-date.dto'\nimport { getFilterMapper } from './access-dates-filter.mapper'\nimport { AccessDatesListParams } from './access-dates-list.params'\nimport { mapSortAccessDatesParam } from './access-dates-sort.mapper'\nimport { getWithPagination } from '../common/fetch.utils'\nimport { ACCESS_DATES } from '../api-urls'\n\nconst getFilterParams = (filter: Partial<AccessDateDto>) => {\n  if (Object.keys(filter).length) {\n    const filterParams = Object.entries(filter).map(([key, value]) => {\n      const mapper = getFilterMapper(key as keyof AccessDateDto)\n      return mapper(\"ad\", value as string)\n    })\n    return filterParams.reduce((p, c) => `${p}&&${c}`)\n  }\n  return \"true\"\n}\n\nconst provider = {\n  getList: async (\n    resource: string,\n    {\n      filter,\n      sort: { field, order },\n      pagination: { page, perPage }\n    }: AccessDatesListParams\n  ): Promise<GetListResult<AccessDateDto>> => {\n    const filterParams = `ad=>${getFilterParams(filter).toString()}`\n    const queryParams: string[] = []\n    queryParams.push(`sortBy=${mapSortAccessDatesParam(field)}`)\n    queryParams.push(`sortOrder=${order}`)\n    queryParams.push(`rangeFrom=${page * perPage - perPage}`)\n    queryParams.push(`rangeTo=${page * perPage}`)\n\n    const pathParams = queryParams.reduce((p, c) => `${p}&${c}`)\n    const path = `/${filterParams}?${pathParams}`\n\n    const {\n      data,\n      range: { total }\n    } = await getWithPagination<AccessDateDto[]>(`${ACCESS_DATES}/GetByConditions`, path)\n\n    return Promise.resolve({\n      data,\n      total\n    })\n  }\n} as DataProvider\n\nexport default provider","import { CompanyDto } from '../dto/company.dto'\nimport { Company } from \"./company\"\n\nexport const mapToCompany = (\n  {\n    id,\n    name,\n    usersIds,\n    eventsIds\n  }: CompanyDto,\n  attached: number[]\n): Company => ({\n  id,\n  name,\n  usersIds,\n  eventsIds,\n  attached: attached.includes(id)\n})","import { Company } from \"./company\"\n\nconst mapping: Partial<\n  Record<\n    keyof Company,\n    (lambdaParameter: string, value: string | number) => string\n  >\n> = {\n  name: (lambdaParameter, value) => `${(lambdaParameter)}.Name.Contains(\"${value}\")`\n}\n\nexport const getFilterMapper = (key: keyof Company) =>\n  mapping[key] as (lambdaParameter: string, value: string | number) => string\n","import { Company } from './company'\n\nconst mapping: Partial<Record<keyof Company, string>> = {\n  id: 'c=>c.Id'\n}\n\nexport const mapSortCompanyParam = (key: keyof Company) => mapping[key]\n","import { DataProvider, GetListResult } from \"react-admin\"\nimport { Company, EventCompany } from \"./company\"\nimport { CompanyListParams } from \"./company-list.params\"\nimport { get, getWithPagination } from \"../common/fetch.utils\"\nimport { COMPANIES_URL, EVENTS_URL } from \"../api-urls\"\nimport { CompanyDto } from \"../dto/company.dto\"\nimport { mapToCompany } from \"./companies.mapper\"\nimport { getFilterMapper } from \"./company-filter.mapper\"\nimport { mapSortCompanyParam } from \"./company-sort.mapper\"\n\nconst getFilterParams = (\n  partialValues: Partial<Company>\n): string => {\n  if (Object.keys(partialValues).length) {\n    const filterParams = Object.entries(partialValues).map(([key, value]) => {\n      const mapper = getFilterMapper(key as keyof Company)\n      return mapper('c', value as string)\n    })\n    return filterParams.reduce((p, c) => `${p}&&${c}`)\n  }\n  return 'true'\n}\n\nconst provider = {\n  getList: async (\n    resource: string,\n    {\n      filter: { event, ...filter },\n      sort: { field, order },\n      pagination: { page, perPage }\n    }: CompanyListParams\n  ): Promise<GetListResult<Company>> => {\n    const attachedCompanies: number[] = []\n    if (event) {\n      const pendingCompanies = await get<EventCompany>(EVENTS_URL, `/GetCompanies/${event}`)\n      attachedCompanies.push(...pendingCompanies.companiesIds)\n    }\n\n    const filterParams = `c=>${getFilterParams(filter)}`\n    const queryParams: string[] = []\n    queryParams.push(`sortBy=${mapSortCompanyParam(field)}`)\n    queryParams.push(`sortOrder=${order}`)\n    queryParams.push(`rangeFrom=${page * perPage - perPage}`)\n    queryParams.push(`rangeTo=${page * perPage}`)\n\n    const pathParams = queryParams.reduce((p, c) => `${p}&${c}`)\n    const path = `/${filterParams}?${pathParams}`\n\n    const {\n      data,\n      range: { total }\n    } = await getWithPagination<CompanyDto[]>(COMPANIES_URL, path)\n    const companies = data.map((dto) => mapToCompany(dto, attachedCompanies))\n\n    return Promise.resolve({\n      data: companies,\n      total\n    })\n  }\n} as DataProvider\n\nexport default provider","import { ObjectDto } from '../dto/object.dto'\nimport { ObjectType } from './object'\n\nexport const mapToObject = (\n  {\n    id,\n    name,\n    tribunesIds,\n    eventsIds\n  }: ObjectDto,\n  attached: number[]\n): ObjectType => ({\n  id,\n  name,\n  tribunesIds,\n  eventsIds,\n  attached: attached.includes(id)\n})","import { ObjectType } from \"./object\"\n\nconst mapping: Partial<\n  Record<\n    keyof ObjectType,\n    (lambdaParameter: string, value: string | number) => string\n  >\n> = {\n  name: (lambdaParameter, value) => `${(lambdaParameter)}.Name.Contains(\"${value}\")`\n}\n\nexport const getFilterMapper = (key: keyof ObjectType) =>\n  mapping[key] as (lambdaParameter: string, value: string | number) => string\n","import { ObjectType } from './object'\n\nconst mapping: Partial<Record<keyof ObjectType, string>> = {\n  id: 'l=>l.Id'\n}\n\nexport const mapSortCompanyParam = (key: keyof ObjectType) => mapping[key]\n","import { DataProvider, GetListResult } from \"react-admin\"\nimport { EventObject, ObjectType } from \"./object\"\nimport { ObjectListParams } from \"./object-list.params\"\nimport { get, getWithPagination } from \"../common/fetch.utils\"\nimport { OBJECTS_URL, EVENTS_URL } from \"../api-urls\"\nimport { ObjectDto } from \"../dto/object.dto\"\nimport { mapToObject } from \"./object.mapper\"\nimport { getFilterMapper } from \"./object-filter.mapper\"\nimport { mapSortCompanyParam } from \"./object-sort.mapper\"\n\nconst getFilterParams = (\n  partialValues: Partial<ObjectType>\n): string => {\n  if (Object.keys(partialValues).length) {\n    const filterParams = Object.entries(partialValues).map(([key, value]) => {\n      const mapper = getFilterMapper(key as keyof ObjectType)\n      return mapper('o', value as string)\n    })\n    return filterParams.reduce((p, c) => `${p}&&${c}`)\n  }\n  return 'true'\n}\n\nconst provider = {\n  getList: async (\n    resource: string,\n    {\n      filter: { event, ...filter },\n      sort: { field, order },\n      pagination: { page, perPage }\n    }: ObjectListParams\n  ): Promise<GetListResult<ObjectType>> => {\n    const attachedObjects: number[] = []\n    if (event) {\n      const pendingEvent = get<EventObject>(EVENTS_URL, `/${event}`)\n      const { objectsIds } = await Promise.resolve(pendingEvent)\n      attachedObjects.push(...objectsIds)\n    }\n\n    const filterParams = `o=>${getFilterParams(filter)}`\n    const queryParams: string[] = []\n    queryParams.push(`sortBy=${mapSortCompanyParam(field)}`)\n    queryParams.push(`sortOrder=${order}`)\n    queryParams.push(`rangeFrom=${page * perPage - perPage}`)\n    queryParams.push(`rangeTo=${page * perPage}`)\n\n    const pathParams = queryParams.reduce((p, c) => `${p}&${c}`)\n    const path = `/${filterParams}?${pathParams}`\n\n    const {\n      data,\n      range: { total }\n    } = await getWithPagination<ObjectDto[]>(`${OBJECTS_URL}/GetByConditions`, path)\n    const companies = data.map((dto) => mapToObject(dto, attachedObjects))\n\n    return Promise.resolve({\n      data: companies,\n      total\n    })\n  }\n} as DataProvider\n\nexport default provider","import { PalmDto } from \"../../dto/device/palm/palm.dto\"\n\nconst mapping: Partial<\n  Record<\n    keyof PalmDto,\n    (lambdaParameter: string, value: string | number) => string\n  >\n> = {\n  name: (lambdaParameter, value) => `${(lambdaParameter)}.Name.Contains(\"${value}\")`,\n  categoryId: (lambdaParameter, value) => `${(lambdaParameter)}.CategoryId==${value}`\n}\n\nexport const getFilterMapper = (key: keyof PalmDto) =>\n  mapping[key] as (lambdaParameter: string, value: string | number) => string","import { Palm } from \"./palm\"\n\nconst mapping: Partial<Record<keyof Palm, string>> = {\n  id: 'p=>p.Id',\n  name: \"p=>p.Name\"\n}\n\nexport const mapSortPalmParam = (key: keyof Palm) => mapping[key]\n","import { DataProvider, GetListResult, GetOneParams, GetOneResult, Identifier, UpdateParams, UpdateResult } from \"react-admin\"\nimport { EVENTS_URL, PALMS_URL } from \"../../api-urls\"\nimport { CacheableDataProviderExtensionResult, DataProviderExtensionResult } from \"../../common/data-provider\"\nimport { DateTime } from \"../../common/date-time\"\nimport { get, getWithPagination, patch, put } from \"../../common/fetch.utils\"\nimport { PalmEntrancesDto } from \"../../dto/device/palm/palm-entrances.dto\"\nimport { PalmEventsDto } from \"../../dto/device/palm/palm-events.dto\"\nimport { PalmDto } from \"../../dto/device/palm/palm.dto\"\nimport { PalmLockResult } from \"../../enum/PalmLockResult\"\nimport { PalmResetMobileDeviceIdResults } from \"../../enum/PalmResetMobileDeviceIdResults\"\nimport { PalmSetMobileDeviceIdResults } from \"../../enum/PalmSetMobileDeviceIdResults\"\nimport { PalmUnlockResult } from \"../../enum/PalmUnlockResult\"\nimport { EventPalm, Palm } from \"./palm\"\nimport { getFilterMapper } from \"./palm-filter.mapper\"\nimport { PalmListParams } from \"./palm-list.params\"\nimport { mapSortPalmParam } from \"./palm-sort.mapper\"\nimport { mapToPalms } from \"./palm.mapper\"\n\nconst getFilterParams = (\n  partialValues: Partial<Palm>\n): string => {\n  if (Object.keys(partialValues).length) {\n    const filterParams = Object.entries(partialValues).map(([key, value]) => {\n      const mapper = getFilterMapper(key as keyof PalmDto)\n      return mapper('o', value as string)\n    })\n    return filterParams.reduce((p, c) => `${p}&&${c}`)\n  }\n  return 'true'\n}\n\nconst provider = {\n  getList: async (\n    resource: string,\n    {\n      filter: { event, ...filter },\n      sort: { field, order },\n      pagination: { page, perPage }\n    }: PalmListParams\n  ): Promise<GetListResult<Palm>> => {\n    const attachedDevices: number[] = []\n    if (event) {\n      const pendingDevices = await get<EventPalm>(EVENTS_URL, `/GetDevices/${event}`)\n      attachedDevices.push(...pendingDevices.verifierDevicesIds)\n    }\n\n    const filterParams = `o=>${getFilterParams(filter)}`\n    const queryParams: string[] = []\n    queryParams.push(`sortBy=${mapSortPalmParam(field)}`)\n    queryParams.push(`sortOrder=${order}`)\n    queryParams.push(`rangeFrom=${page * perPage - perPage}`)\n    queryParams.push(`rangeTo=${page * perPage - 1}`)\n\n    const pathParams = queryParams.reduce((p, c) => `${p}&${c}`)\n    const path = `/${filterParams}?${pathParams}`\n\n    const {\n      data,\n      range: { total }\n    } = await getWithPagination<PalmDto[]>(`${PALMS_URL}/GetByConditions`, path)\n    const companies = data.map((dto) => mapToPalms(dto, attachedDevices))\n\n    return Promise.resolve({\n      data: companies,\n      total\n    })\n  },\n  getOne: async (\n    resource: string,\n    { id }: GetOneParams\n  ): Promise<GetOneResult<PalmDto>> => {\n    const data = await get<PalmDto>(PALMS_URL, `/${id}`)\n    return Promise.resolve({\n      data\n    })\n  },\n  update: async (\n    resource: string,\n    { id, data, previousData }: UpdateParams\n  ): Promise<UpdateResult> => {\n    const update = await patch<{ id: Identifier, [n: string]: any }, PalmDto>(PALMS_URL, {\n      id,\n      name: data.name || previousData.name,\n      isWatched: data.isWatched || previousData.isWatched,\n      lastRefresh: new Date(new Date(data.lastRefresh).getTime() - (new Date(data.lastRefresh).getTimezoneOffset() * 60000)).toJSON() as DateTime || previousData.lastRefresh,\n      direction: data.direction || previousData.direction,\n      categoryId: data.categoryId || previousData.categoryId,\n      onlineInfixCeck: data.onlineInfixCeck || previousData.onlineInfixCeck,\n      multiplicity: data.multiplicity || previousData.multiplicity\n    })\n    return Promise.resolve({ data: update })\n  },\n  lock: async (\n    resource: string,\n    { palmId, lockName }: LockParams\n  ): Promise<DataProviderExtensionResult<LockResponse>> => {\n    const data = await put<LockParams, LockResponse>(`${PALMS_URL}/Lock`, {\n      palmId,\n      lockName\n    })\n    return Promise.resolve({ data })\n  },\n  unlock: async (\n    resource: string,\n    { palmId }: UnlockParams\n  ): Promise<DataProviderExtensionResult<UnlockResponse>> => {\n    const data = await put<UnlockParams, UnlockResponse>(`${PALMS_URL}/Unlock`, {\n      palmId\n    })\n    return Promise.resolve({ data: { ...data, disabled: undefined } })\n  },\n  setMobileDeviceId: async (\n    resource: string,\n    { palmId, mobileDeviceId }: SetMobileDeviceIdParams\n  ): Promise<DataProviderExtensionResult<SetMobileDeviceIdResponse>> => {\n    const data = await put<SetMobileDeviceIdParams, SetMobileDeviceIdResponse>(`${PALMS_URL}/SetMobileDeviceId`, {\n      palmId,\n      mobileDeviceId\n    })\n    return Promise.resolve({ data })\n  },\n  resetMobileDeviceId: async (\n    resource: string,\n    { palmId }: ResetMobileDeviceIdParams\n  ): Promise<DataProviderExtensionResult<ResetMobileDeviceIdResponse>> => {\n    const data = await put<ResetMobileDeviceIdParams, ResetMobileDeviceIdResponse>(`${PALMS_URL}/ResetMobileDeviceId`, {\n      palmId\n    })\n    return Promise.resolve({ data: { ...data, mobileDeviceId: undefined} })\n  },\n  attachEvents: async (\n    resource: string,\n    { palmId, eventsIds }: PalmEventsDto\n  ): Promise<CacheableDataProviderExtensionResult<PalmEventsDto>> => {\n    const data = await put<PalmEventsDto, PalmEventsDto>(`${PALMS_URL}/AttachEvents`, {\n      palmId,\n      eventsIds\n    })\n    return Promise.resolve({ data })\n  },\n  detachEvents: async (\n    resource: string,\n    { palmId, eventsIds }: PalmEventsDto\n  ): Promise<CacheableDataProviderExtensionResult<PalmEventsDto>> => {\n    const data = await put<PalmEventsDto, PalmEventsDto>(`${PALMS_URL}/DetachEvents`, {\n      palmId,\n      eventsIds\n    })\n    return Promise.resolve({ data })\n  },\n  attachEntrances: async (\n    resource: string,\n    { palmId, entrancesIds }: PalmEntrancesDto\n  ): Promise<CacheableDataProviderExtensionResult<PalmEntrancesDto>> => {\n    const data = await put<PalmEntrancesDto, PalmEntrancesDto>(`${PALMS_URL}/AttachEntrances`, {\n      palmId,\n      entrancesIds\n    })\n    return Promise.resolve({ data })\n  },\n  detachEntrances: async (\n    resource: string,\n    { palmId, entrancesIds }: PalmEntrancesDto\n  ): Promise<CacheableDataProviderExtensionResult<PalmEntrancesDto>> => {\n    const data = await put<PalmEntrancesDto, PalmEntrancesDto>(`${PALMS_URL}/DetachEntrances`, {\n      palmId,\n      entrancesIds\n    })\n    return Promise.resolve({ data })\n  }\n} as PalmDataProvider\n\ninterface PalmDataProvider extends DataProvider {\n  lock: (\n    resource: string,\n    params: LockParams\n  ) => Promise<DataProviderExtensionResult<LockResponse>>,\n\n  unlock: (\n    resource: string,\n    params: UnlockParams\n  ) => Promise<DataProviderExtensionResult<UnlockResponse>>,\n\n  setMobileDeviceId: (\n    resource: string,\n    params: SetMobileDeviceIdParams\n  ) => Promise<DataProviderExtensionResult<SetMobileDeviceIdResponse>>,\n\n  resetMobileDeviceId: (\n    resource: string,\n    params: ResetMobileDeviceIdParams\n  ) => Promise<DataProviderExtensionResult<ResetMobileDeviceIdResponse>>,\n\n  attachEvents: (\n    resource: string,\n    params: PalmEventsDto\n  ) => Promise<CacheableDataProviderExtensionResult<PalmEventsDto>>,\n\n  detachEvents: (\n    resource: string,\n    params: PalmEventsDto\n  ) => Promise<CacheableDataProviderExtensionResult<PalmEventsDto>>,\n\n  attachEntrances: (\n    resource: string,\n    params: PalmEntrancesDto\n  ) => Promise<CacheableDataProviderExtensionResult<PalmEntrancesDto>>,\n\n  detachEntrances: (\n    resource: string,\n    params: PalmEntrancesDto\n  ) => Promise<CacheableDataProviderExtensionResult<PalmEntrancesDto>>\n}\n\nexport interface LockParams {\n  palmId: Identifier,\n  lockName: string\n}\n\nexport interface LockResponse {\n  palmId: Identifier,\n  lockName: string,\n  lockResult: PalmLockResult\n}\n\nexport interface UnlockParams {\n  palmId: Identifier\n}\n\nexport interface UnlockResponse {\n  palmId: Identifier,\n  unlockResult: PalmUnlockResult\n}\n\nexport interface SetMobileDeviceIdParams {\n  palmId: Identifier,\n  mobileDeviceId: string\n}\n\nexport interface SetMobileDeviceIdResponse {\n  palmId: Identifier,\n  mobileDeviceId: string,\n  setResult: PalmSetMobileDeviceIdResults\n}\n\nexport interface ResetMobileDeviceIdParams {\n  palmId: Identifier\n}\n\nexport interface ResetMobileDeviceIdResponse {\n  palmId: Identifier,\n  resetResult: PalmResetMobileDeviceIdResults\n}\n\nexport default provider","import { PalmDto } from '../../dto/device/palm/palm.dto'\nimport { Palm } from './palm'\n\nexport const mapToPalms = (\n  engine: PalmDto,\n  attached: number[]\n): Palm => ({\n  ...engine,\n  attached: attached.includes(engine.id)\n})","import { Engine } from \"./engine\"\n\nconst mapping: Partial<\n  Record<\n    keyof Engine,\n    (lambdaParameter: string, value: string | number) => string\n  >\n> = {\n  name: (lambdaParameter, value) => `${(lambdaParameter)}.Name.Contains(\"${value}\")`,\n  categoryId: (lambdaParameter, value) => `${(lambdaParameter)}.CategoryId==${value}`\n}\n\nexport const getFilterMapper = (key: keyof Engine) =>\n  mapping[key] as (lambdaParameter: string, value: string | number) => string\n","import { Engine } from './engine'\n\nconst mapping: Partial<Record<keyof Engine, string>> = {\n  id: 'l=>l.Id'\n}\n\nexport const mapSortEngineParam = (key: keyof Engine) => mapping[key]\n","import { DataProvider, GetListResult } from \"react-admin\"\nimport { EngineDto } from \"../dto/engine.dto\"\nimport { Engine, EventEngine } from \"./engine\"\nimport { EngineListParams } from \"./engine-list.params\"\nimport { get, getWithPagination } from \"../common/fetch.utils\"\nimport { ENGINES_URL, EVENTS_URL } from \"../api-urls\"\nimport { getFilterMapper } from \"./engine-filter.mapper\"\nimport { mapSortEngineParam } from \"./engine-sort.mapper\"\nimport { mapToEvents } from \"./engine.mapper\"\n\nconst getFilterParams = (\n  partialValues: Partial<Engine>\n): string => {\n  if (Object.keys(partialValues).length) {\n    const filterParams = Object.entries(partialValues).map(([key, value]) => {\n      const mapper = getFilterMapper(key as keyof Engine)\n      return mapper('o', value as string)\n    })\n    return filterParams.reduce((p, c) => `${p}&&${c}`)\n  }\n  return 'true'\n}\n\nconst provider = {\n  getList: async (\n    resource: string,\n    {\n      filter: { event, ...filter },\n      sort: { field, order },\n      pagination: { page, perPage }\n    }: EngineListParams\n  ): Promise<GetListResult<Engine>> => {\n    const attachedDevices: number[] = []\n    if (event) {\n      const pendingDevices = await get<EventEngine>(EVENTS_URL, `/GetDevices/${event}`)\n      attachedDevices.push(...pendingDevices.verifierDevicesIds)\n    }\n\n    const filterParams = `o=>${getFilterParams(filter)}`\n    const queryParams: string[] = []\n    queryParams.push(`sortBy=${mapSortEngineParam(field)}`)\n    queryParams.push(`sortOrder=${order}`)\n    queryParams.push(`rangeFrom=${page * perPage - perPage}`)\n    queryParams.push(`rangeTo=${page * perPage - 1}`)\n\n    const pathParams = queryParams.reduce((p, c) => `${p}&${c}`)\n    const path = `/${filterParams}?${pathParams}`\n\n    const {\n      data,\n      range: { total }\n    } = await getWithPagination<EngineDto[]>(`${ENGINES_URL}/GetByConditions`, path)\n    const companies = data.map((dto) => mapToEvents(dto, attachedDevices))\n\n    return Promise.resolve({\n      data: companies,\n      total\n    })\n  }\n} as DataProvider\n\nexport default provider","import { EngineDto } from '../dto/engine.dto'\nimport { Engine } from './engine'\n\nexport const mapToEvents = (\n  engine: EngineDto,\n  attached: number[]\n): Engine => ({\n  ...engine,\n  attached: attached.includes(engine.id)\n})","import { EntranceDto } from '../dto/entrance.dto'\n\nconst mapping: Partial<Record<keyof EntranceDto, string>> = {\n  id: 'e=>e.Id',\n  note: 'e=>e.Note'\n}\n\nexport const mapSortEntranceParam = (key: keyof EntranceDto) => mapping[key]\n","import { DataProvider, GetListParams, GetListResult } from 'react-admin'\nimport { ENTRANCES_URL, PALMS_URL } from '../api-urls'\nimport { get, getWithPagination } from '../common/fetch.utils'\nimport { ALL_RESULTS } from '../common/filter.values'\nimport { EntranceDto } from '../dto/entrance.dto'\nimport { PalmDto } from '../dto/device/palm/palm.dto'\nimport { Entrance } from './entrance'\nimport { mapSortEntranceParam } from './entrance-sort.mapper'\n\ninterface EntranceListParams extends GetListParams {\n  readonly sort: {\n    readonly field: keyof EntranceDto\n    readonly order: 'ASC' | 'DESC'\n  }\n  readonly filter:\n  {\n    readonly note: string\n    readonly palmId: string\n  }\n}\n\nconst provider = {\n  getList: async (\n    resource: string,\n    {\n      filter: { note, palmId },\n      sort: { field, order },\n      pagination: { page, perPage }\n    }: EntranceListParams,\n  ): Promise<GetListResult<Entrance>> => {\n    const attachedEntrances: number[] = []\n    if (palmId) {\n      const palm = await get<PalmDto>(PALMS_URL, `/${palmId}`)\n      attachedEntrances.push(...palm.entrancesIds)\n    }\n\n    const queryParams: string[] = []\n    queryParams.push(`sortBy=${mapSortEntranceParam(field)}`)\n    queryParams.push(`sortOrder=${order}`)\n    queryParams.push(`rangeFrom=${page * perPage - perPage}`)\n    queryParams.push(`rangeTo=${page * perPage}`)\n    const pathParams = queryParams.reduce((p, c) => `${p}&${c}`)\n    const { data, range: { total } } = await getWithPagination<EntranceDto[]>(`${ENTRANCES_URL}/GetByConditions/`, `${note ? `e=>e.Note.Contains(\"${note}\")` : ALL_RESULTS}?${pathParams}`)\n\n    const entrances = data.map((entrance) => ({ ...entrance, attached: attachedEntrances.includes(entrance.id) }))\n\n    return Promise.resolve({\n      data: entrances,\n      total\n    })\n  }\n} as DataProvider\n\nexport default provider","import { DataProvider, sanitizeFetchType } from 'react-admin'\nimport accessUsingsProvider from './access-usings/access-usings.provider'\nimport bookingsProvider from './bookings/bookings.provider'\nimport logsProvider from './logs/extended-logs.provider'\nimport { ResourceName } from './ResourceName'\nimport statsOverallViewListProvider from './stats/overall-view/overall-view-list.provider'\nimport statsOverallViewProvider from './stats/overall-view/overall-view.provider'\nimport ticketDetailsProvider from './ticket-details/ticket-details.provider'\nimport ticketInfoProvider from './ticket-info/ticket-info.provider'\nimport ticketsProvider from './tickets/tickets.provider'\nimport accessesProvider from './accesses/access.provider'\nimport eventsProvider from './events/event.provider'\nimport customersDetailsProvider from './customer-details/customer-details.provider'\nimport customersInfoProvider from './customer-info/customer-info.provider'\nimport accessDatesProvider from './access-dates/access-dates.provider'\nimport companiesProvider from './companies/companies.provider'\nimport objectsProvider from './objects/objects.provider'\nimport palmProvider from './devices/palms/palms.provider'\nimport engineProvider from './engines/engines.provider'\nimport entrancesProvider from './entrances/entrance.provider'\n\nconst dataProviders: Record<ResourceName, DataProvider> = {\n  [ResourceName.ACCESS_DATES]: accessDatesProvider,\n  [ResourceName.ACCESSES]: accessesProvider,\n  [ResourceName.ACCESS_USINGS]: accessUsingsProvider,\n  [ResourceName.BOOKINGS]: bookingsProvider,\n  [ResourceName.COMPANIES]: companiesProvider,\n  [ResourceName.CUSTOMER_DETAILS]: customersDetailsProvider,\n  [ResourceName.CUSTOMER_INFO]: customersInfoProvider,\n  [ResourceName.ENGINES]: engineProvider,\n  [ResourceName.ENTRANCES]: entrancesProvider,\n  [ResourceName.EVENTS]: eventsProvider,\n  [ResourceName.LOGS]: logsProvider,\n  [ResourceName.OBJECTS]: objectsProvider,\n  [ResourceName.PALMS]: palmProvider,\n  [ResourceName.TICKETS]: ticketsProvider,\n  [ResourceName.TICKET_INFO]: ticketInfoProvider,\n  [ResourceName.TICKET_DETAILS]: ticketDetailsProvider,\n  [ResourceName.TICKET_LOGS]: logsProvider,\n  [ResourceName.STATS_OVERALL_VIEW]: statsOverallViewProvider,\n  [ResourceName.STATS_OVERALL_VIEW_LIST]: statsOverallViewListProvider,\n}\n\nexport default (\n  fetchType: string,\n  resource: string,\n  params: unknown,\n): Promise<unknown> => {\n  const selectedProvider = dataProviders[resource as ResourceName]\n  const type = sanitizeFetchType(fetchType)\n  return selectedProvider[type](resource, params)\n}\n","import i18n from 'i18next'\n\nconst provider = {\n  translate: (key: string, options: any): string => i18n.t(key, options),\n  changeLocale: async (locale: string): Promise<void> => {\n    const identity = localStorage.getItem('username') as string\n    localStorage.setItem(`${identity}.lng`, locale)\n    await i18n.changeLanguage(locale)\n  },\n  getLocale: (): string => i18n.language,\n}\n\nexport default provider","import { defaultTheme } from 'react-admin'\nimport { deepPurple, green } from '@material-ui/core/colors'\nimport { ThemeOptions } from '@material-ui/core'\n\nconst overriddenTheme: ThemeOptions = {\n  ...defaultTheme,\n  typography: {\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Arial',\n      'sans-serif',\n    ].join(','),\n    body1: {\n      fontWeight: 300,\n    },\n    body2: {\n      fontWeight: 300,\n    },\n    h5: {\n      fontWeight: 200,\n    },\n  },\n}\n\nexport const LightTheme: ThemeOptions = {\n  ...overriddenTheme,\n  palette: {\n    primary: deepPurple,\n    secondary: green,\n    type: 'light'\n  },\n}\n\nexport const DarkTheme: ThemeOptions = {\n  ...overriddenTheme,\n  palette: {\n    primary: {\n      light: deepPurple[100],\n      main: deepPurple[200],\n      dark: deepPurple[300],\n      contrastText: '#F1F1F1'\n    },\n    secondary: green,\n    type: 'dark'\n  },\n\n}","import { MenuItem, Collapse, Tooltip, ListItemIcon, Typography, List } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ExpandMore } from '@material-ui/icons';\nimport React, { ReactElement, ReactNode } from 'react';\nimport { useSelector } from 'react-redux';\nimport { ReduxState } from 'react-admin';\n\nconst useStyles = makeStyles(theme => ({\n  icon: {\n    minWidth: theme.spacing(5)\n  },\n  sidebarIsOpen: {\n    '& a': {\n      transition: 'padding-left 195ms cubic-bezier(0.4, 0, 0.6, 1) 0ms',\n      paddingLeft: theme.spacing(4),\n    },\n  },\n  sidebarIsClosed: {\n    '& a': {\n      transition: 'padding-left 195ms cubic-bezier(0.4, 0, 0.6, 1) 0ms',\n      paddingLeft: theme.spacing(2),\n    },\n  },\n}));\n\ninterface SubMenuProps {\n  handleToggle: () => void\n  icon: ReactElement\n  isOpen: boolean\n  name: string\n  children: ReactNode\n}\n\nexport const SubMenu = (props: SubMenuProps) => {\n  const { handleToggle, icon, isOpen, name, children } = props\n  const sidebarOpen = useSelector((state: ReduxState) => state?.admin.ui.sidebarOpen)\n  const classes = useStyles()\n\n  const header = (\n    <MenuItem button onClick={handleToggle}>\n      <ListItemIcon className={classes.icon}>\n        {isOpen ? <ExpandMore /> : icon}\n      </ListItemIcon>\n      <Typography variant=\"inherit\" color=\"textSecondary\">\n        {name}\n      </Typography>\n    </MenuItem>\n  )\n\n  return (\n    <>\n      {sidebarOpen || isOpen ? (\n        header\n      ) : (\n        <Tooltip title={name} placement=\"right\">\n          {header}\n        </Tooltip>\n      )}\n      <Collapse in={isOpen} timeout=\"auto\" unmountOnExit>\n        <List\n          component=\"div\"\n          disablePadding\n          className={sidebarOpen ? classes.sidebarIsOpen : classes.sidebarIsClosed}>\n          {children}\n        </List>\n      </Collapse>\n    </>\n  )\n}\n","import { makeStyles } from '@material-ui/core/styles';\nimport { ViewComfy, Receipt, List, Sort, Person, Event, VideoLabel, PhoneAndroid } from '@material-ui/icons';\nimport React, { useState } from 'react';\nimport { DashboardMenuItem, MenuItemLink, useTranslate, ReduxState } from 'react-admin';\nimport { useSelector } from 'react-redux';\nimport { SubMenu } from './AppSubmenu';\n\nconst useStyles = makeStyles({\n  open: {\n    width: \"240px\",\n  },\n  closed: {\n    width: \"55px\"\n  },\n});\n\nexport const AppMenu = () => {\n  const sidebarOpen = useSelector((state: ReduxState) => state.admin.ui.sidebarOpen)\n  const theme = useStyles()\n  const [open, setOpen] = useState({\n    menuStats: true,\n    menuDevices: true\n  })\n  const translate = useTranslate()\n\n  const handleToggle = (menu: \"menuStats\" | \"menuDevices\") => setOpen(state => ({ ...state, [menu]: !state[menu] }))\n\n  return (\n    <div\n      style={{ userSelect: \"none\" }}\n      className={sidebarOpen ? theme.open : theme.closed}>\n      <DashboardMenuItem />\n      <MenuItemLink\n        to=\"/ticket-info\"\n        primaryText={translate('resources.ticket-info.name')}\n        leftIcon={<Receipt />} />\n      <MenuItemLink\n        to=\"/customer-info\"\n        primaryText={translate('resources.customer-info.name')}\n        leftIcon={<Person />} />\n      <MenuItemLink\n        to=\"/logs\"\n        primaryText={translate('resources.logs.name')}\n        leftIcon={<List />} />\n      <MenuItemLink\n        to=\"/events\"\n        primaryText={translate('resources.events.name')}\n        leftIcon={<Event />} />\n      <SubMenu\n        handleToggle={() => handleToggle(\"menuStats\")}\n        isOpen={open.menuStats}\n        name={translate('side-menu.stats.name')}\n        icon={<ViewComfy />}>\n        <MenuItemLink\n          to=\"/stats-overall-view-list\"\n          primaryText={translate('side-menu.stats.overall-view')}\n          leftIcon={<Sort style={{ transform: \"scaleX(-1)\" }} />} />\n      </SubMenu>\n      <SubMenu\n        handleToggle={() => handleToggle(\"menuDevices\")}\n        isOpen={open.menuDevices}\n        name={translate('side-menu.devices.name')}\n        icon={<VideoLabel />}>\n        <MenuItemLink\n          to=\"/palms\"\n          primaryText={translate('resources.palms.name')}\n          leftIcon={<PhoneAndroid />} />\n      </SubMenu>\n    </div>\n  )\n}","import { Typography } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Settings } from '@material-ui/icons'\nimport React from 'react'\nimport { AppBar, AppBarProps, CoreLayoutProps, Layout, UserMenu, UserMenuProps, MenuItemLink, useTranslate } from 'react-admin'\nimport { useSelector } from 'react-redux'\nimport { DarkTheme, LightTheme } from '../../app.theme'\nimport { ThemeState } from '../../core/common/theme.reducer'\nimport { AppMenu } from './AppMenu'\n\nconst useStyles = makeStyles({\n  title: {\n    flex: 1,\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n  },\n})\n\nconst AppUserMenu = (props: UserMenuProps) => {\n  const translate = useTranslate()\n  return (\n    <UserMenu {...props}>\n      <MenuItemLink\n        to=\"/configuration\"\n        primaryText={translate(\"settings.name\")}\n        leftIcon={<Settings />} />\n    </UserMenu>\n  )\n}\n\nconst AppTopBar = (props: AppBarProps) => {\n  const classes = useStyles()\n  return (\n    <AppBar {...props} userMenu={<AppUserMenu />}>\n      <Typography\n        variant=\"h6\"\n        className={classes.title}\n        id=\"react-admin-title\"\n      />\n    </AppBar>\n  )\n}\n\nexport const AppLayout = (props: CoreLayoutProps) => {\n  const theme = useSelector((state: ThemeState) =>\n    state.theme.darkMode === 'dark' ? DarkTheme : LightTheme,\n  )\n\n  return (\n    <Layout\n      {...props}\n      menu={AppMenu}\n      appBar={AppTopBar}\n      theme={theme} />)\n}\n","import * as React from 'react'\nimport { useListContext } from 'react-admin';\nimport { Button, Toolbar, Grid, Paper, ButtonGroup, Select, MenuItem } from '@material-ui/core';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\n\nexport const MobilePostPagination = () => {\n  const { page, perPage, total, setPage, setPerPage } = useListContext();\n  const nbPages = Math.ceil(total / perPage) || 1;\n  return (\n      nbPages > 1 ?\n        <Toolbar>\n          <Grid container>\n            <Grid item xs={3}>\n            <Paper elevation={0}\n              style={{height: '100%', display: 'flex', flexDirection: 'row', justifyContent: 'flex-end', alignItems: 'center'}}>\n              <Select value={perPage} style={{width: '100%', height: '70%', textAlign: 'center'}} variant='outlined'\n              onChange={e => setPerPage(parseInt(e.target.value as string, 10))}>\n                <MenuItem value={20}> 20 </MenuItem>\n                <MenuItem value={50}> 50 </MenuItem>\n                <MenuItem value={100}> 100 </MenuItem>\n              </Select>\n            </Paper>\n            </Grid>\n            <Grid item xs={4} />\n            <Grid item xs={5}>\n              <Paper elevation={0}\n              style={{height: '100%', display: 'flex', flexDirection: 'row', justifyContent: 'flex-end', alignItems: 'center'}}>\n                <ButtonGroup style={{height: '70%'}}>\n                  {page > 1 ?\n                    <Button variant=\"outlined\" color=\"primary\" key=\"prev\" onClick={() => setPage(page - 1)}>\n                      <ChevronLeft />\n                    </Button> :\n                    <Button variant=\"outlined\" color=\"primary\" disabled>\n                      <ChevronLeft />\n                    </Button> \n                  }\n                  <Button disabled variant=\"contained\"> {page} </Button>\n                  {page !== nbPages ?\n                    <Button variant=\"outlined\" color=\"primary\" key=\"next\" onClick={() => setPage(page + 1)}>\n                      <ChevronRight />\n                    </Button> :\n                    <Button variant=\"outlined\" color=\"primary\" disabled>\n                      <ChevronRight />\n                    </Button>\n                  }\n                </ButtonGroup>\n              </Paper>\n            </Grid>\n          </Grid>\n        </Toolbar> :\n        <div />\n  );\n}","import * as React from 'react'\nimport { TextField, makeStyles, Theme, createStyles } from '@material-ui/core'\nimport { useField } from 'react-final-form'\nimport ArrowRightAltIcon from '@material-ui/icons/ArrowRightAlt'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      display: 'flex',\n      justifyContent: 'center',\n      verticalAlign: 'center',\n      marginBottom: theme.spacing(1)\n    }\n  })\n)\n\nexport const DateFilterInput = ({ source }: { source: string }) => {\n  const classes = useStyles()\n  const defaultFromDate = React.useMemo(() => new Date(Date.now() - 2678400000), [])\n  defaultFromDate.setHours(0, 0, 0, 0)\n  const defaultToDate = new Date(Date.now())\n  defaultToDate.setHours(23, 59, 0, 0)\n  const [dateFrom, setDateFrom] = React.useState(\n    defaultFromDate.getTime().toString(),\n  )\n  const [dateTo, setDateTo] = React.useState(defaultToDate.getTime().toString())\n  const {\n    input: { onChange },\n    meta: { touched, error },\n  } = useField(source)\n\n  React.useEffect(() => {\n    onChange([\n      (parseInt(dateFrom, 10) - (defaultFromDate.getTimezoneOffset() * 60000)).toString(),\n      (parseInt(dateTo, 10) - (defaultFromDate.getTimezoneOffset() * 60000)).toString()].join(';'))\n  }, [dateFrom, dateTo, onChange, defaultFromDate])\n\n  const convertedDate = (date: Date) =>\n    new Date(date.getTime() - (defaultFromDate.getTimezoneOffset() * 60000)).toJSON().substring(0, 16)\n\n  return (\n    <span\n      key=\"date\"\n      className={classes.container}\n    >\n      <TextField\n        variant=\"filled\"\n        defaultValue={convertedDate(defaultFromDate)}\n        name={source}\n        type=\"datetime-local\"\n        onChange={(e) => setDateFrom(Date.parse(e.target.value).toString())}\n        error={!!(touched && error)}\n        helperText={touched && error}\n        style={{ alignSelf: 'center' }}\n        size=\"small\"\n      />\n      <ArrowRightAltIcon style={{ marginTop: '4%' }} />\n      <TextField\n        variant=\"filled\"\n        defaultValue={convertedDate(defaultToDate)}\n        name={source}\n        type=\"datetime-local\"\n        onChange={(e) => setDateTo(Date.parse(e.target.value).toString())}\n        error={!!(touched && error)}\n        helperText={touched && error}\n        size=\"small\"\n      />\n    </span>\n  )\n}\n","import { Button, Grid, TableCell, withStyles } from '@material-ui/core'\n\nexport const BookingButton = withStyles({\n  root: {\n    width: '100%',\n    backgroundColor: 'rgb(220, 220, 220)',\n    boxShadow: '0px 0px 3px',\n    '&:hover': {\n      backgroundColor: 'rgb(220, 230, 230)',\n    },\n  },\n})(Button)\n\nexport const FullWidthButton = withStyles({\n  root: {\n    width: '100%',\n  },\n})(Button)\n\nexport const CenterGrid = withStyles({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'column',\n  },\n})(Grid)\n\nexport const NoPaddingCell = withStyles({\n  root: {\n    paddingBottom: 0,\n    paddingTop: 0,\n  },\n})(TableCell)\n","import React, { CSSProperties, useEffect, useState } from 'react'\nimport {\n  Collapse,\n  Grid,\n  Hidden,\n  IconButton,\n  TableCell,\n  TableRow,\n} from '@material-ui/core'\nimport { DateField, TextField, useTranslate } from 'react-admin'\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown'\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp'\nimport { useHistory } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport { ResourceName } from '../../core/ResourceName'\nimport { BookingButton, CenterGrid, NoPaddingCell } from './LogsComponents'\nimport { ExtendedLog } from '../../core/logs/extended-log'\nimport { ThemeState } from '../../core/common/theme.reducer'\nimport { getContrastColor } from '../../core/common/visual.utils'\n\ninterface LogRowProps {\n  readonly compactMode: boolean\n  readonly noBooking: boolean\n  readonly data: ExtendedLog\n}\n\nexport const LogRow = (props: LogRowProps) => {\n  const { data, compactMode, noBooking } = props\n  const [open, setOpen] = useState(false)\n  const history = useHistory()\n  const isDarkMode = useSelector(\n    (state: ThemeState) => state.theme.darkMode === 'dark',\n  )\n  const t = useTranslate()\n\n  useEffect(() => {\n    setOpen(false)\n  }, [data])\n\n  const defineStyle = () => {\n    if (\n      (!isDarkMode && data.color === 'transparent') ||\n      getContrastColor(data.color) === 'black'\n    ) {\n      return { color: 'black', fontWeight: 'normal' } as CSSProperties\n    }\n    return { color: 'white', fontWeight: 'bold' } as CSSProperties\n  }\n\n  return (\n    <>\n      <TableRow style={{ backgroundColor: data.color }}>\n        <Hidden mdUp={!compactMode}>\n          <TableCell>\n            <IconButton onClick={() => setOpen((v) => !v)}>\n              {open ? (\n                <ArrowDropUpIcon style={defineStyle()} />\n              ) : (\n                <ArrowDropDownIcon style={defineStyle()} />\n              )}\n            </IconButton>\n          </TableCell>\n        </Hidden>\n        <TableCell>\n          <DateField\n            record={data}\n            source=\"date\"\n            showTime\n            style={defineStyle()}\n          />\n        </TableCell>\n        <TableCell>\n          <TextField record={data} source=\"deviceName\" style={defineStyle()} />\n        </TableCell>\n        <TableCell>\n          <TextField record={data} source=\"ticketCode\" style={defineStyle()} />\n        </TableCell>\n        <Hidden smDown xlDown={compactMode}>\n          <TableCell>\n            <TextField\n              record={data}\n              source=\"text\"\n              sortable={false}\n              style={defineStyle()}\n            />\n          </TableCell>\n        </Hidden>\n        <Hidden smDown xlDown={compactMode || noBooking}>\n          <TableCell>\n            {data.bookingId == null ? (\n              <div />\n            ) : (\n              <BookingButton\n                onClick={() =>\n                  history.push({\n                    pathname: `/${ResourceName.TICKET_DETAILS}/${data.bookingId}/show`,\n                  })\n                }\n              >\n                {data.bookingId}\n              </BookingButton>\n            )}\n          </TableCell>\n        </Hidden>\n      </TableRow>\n      <Hidden mdUp={!compactMode}>\n        <TableRow>\n          <NoPaddingCell colSpan={4}>\n            <Collapse in={open}>\n              <Grid\n                container\n                style={{ marginTop: '1%', marginBottom: '1%' }}\n                item\n              >\n                <Hidden xlDown={noBooking}>\n                  <CenterGrid item xs={5}>\n                    {`${t('resources.logs.fields.bookingId')}:`}\n                  </CenterGrid>\n                  <CenterGrid item xs={7}>\n                    {data.bookingId == null ? (\n                      <div />\n                    ) : (\n                      <BookingButton\n                        onClick={() =>\n                          history.push({\n                            pathname: `/${ResourceName.TICKET_DETAILS}/${data.bookingId}/show`,\n                          })\n                        }\n                      >\n                        {data.bookingId}\n                      </BookingButton>\n                    )}\n                  </CenterGrid>\n                  <hr\n                    style={{\n                      width: '90%',\n                      marginTop: '1%',\n                      marginBottom: '1%',\n                    }}\n                  />\n                </Hidden>\n                <CenterGrid item xs={5}>\n                  {`${t('resources.logs.fields.description')}:`}\n                </CenterGrid>\n                <CenterGrid item xs={7}>\n                  {data.text}\n                </CenterGrid>\n              </Grid>\n            </Collapse>\n          </NoPaddingCell>\n        </TableRow>\n      </Hidden>\n    </>\n  )\n}\n","export const getContrastColor = (hexcolor: string) => {\n    const r = parseInt(hexcolor.substr(1, 2), 16);\n    const g = parseInt(hexcolor.substr(3, 2), 16);\n    const b = parseInt(hexcolor.substr(5, 2), 16);\n    const yiq = ((r * 299) + (g * 587) + (b * 114)) / 1000;\n    return (yiq >= 128) ? 'black' : 'white';\n  }","import React from 'react'\nimport {\n  Hidden,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from '@material-ui/core'\nimport { useListContext, useListSortContext, useTranslate } from 'react-admin'\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward'\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward'\nimport { ExtendedLog } from '../../core/logs/extended-log'\nimport { FullWidthButton } from './LogsComponents'\nimport { LogRow } from './LogRow'\n\ninterface LogGridProps {\n  readonly compactMode: boolean\n  readonly noBooking: boolean\n}\n\nexport const LogGrid = (props: LogGridProps) => {\n  const { compactMode, noBooking } = props\n  const { ids, data } = useListContext()\n  const { currentSort, setSort } = useListSortContext()\n  const t = useTranslate()\n\n  const inverseOrder = (order: string) => (order === 'ASC' ? 'DESC' : 'ASC')\n\n  const handleSortChange = (sortBy: string) => {\n    setSort(\n      sortBy,\n      sortBy === currentSort.field ? inverseOrder(currentSort.order) : 'DESC',\n    )\n  }\n\n  const HeaderCell = (name: string, display: string) => (\n    <>\n      {currentSort.field === name ? (\n        <FullWidthButton\n          startIcon={\n            currentSort.order === 'ASC' ? (\n              <ArrowUpwardIcon />\n            ) : (\n              <ArrowDownwardIcon />\n            )\n          }\n        >\n          {t(display)}\n        </FullWidthButton>\n      ) : (\n        <FullWidthButton>{t(display)}</FullWidthButton>\n      )}\n    </>\n  )\n\n  return (\n    <TableContainer component={Paper}>\n      <Table\n        aria-label=\"a dense table\"\n        size=\"small\"\n        padding={compactMode ? 'none' : 'default'}\n      >\n        <TableHead>\n          <TableRow>\n            <Hidden mdUp={!compactMode}>\n              <TableCell style={{ width: '3%' }} />\n            </Hidden>\n            <TableCell\n              onClick={() => handleSortChange('date')}\n              style={{ width: '10%' }}\n            >\n              {HeaderCell('date', 'resources.logs.fields.date')}\n            </TableCell>\n            <TableCell\n              onClick={() => handleSortChange('deviceName')}\n              style={{ width: '15%' }}\n            >\n              {HeaderCell('deviceName', 'resources.logs.fields.deviceName')}\n            </TableCell>\n            <TableCell\n              onClick={() => handleSortChange('ticketCode')}\n              style={{ width: '25%' }}\n            >\n              {HeaderCell('ticketCode', 'resources.logs.fields.ticketCode')}\n            </TableCell>\n            <Hidden smDown xlDown={compactMode}>\n              <TableCell style={{ textAlign: 'center', width: '25%' }}>\n                {t('resources.logs.fields.description').toUpperCase()}\n              </TableCell>\n            </Hidden>\n            <Hidden smDown xlDown={compactMode || noBooking}>\n              <TableCell\n                onClick={() => handleSortChange('bookingId')}\n                style={{ width: '15%' }}\n              >\n                {HeaderCell('bookingId', 'resources.logs.fields.bookingId')}\n              </TableCell>\n            </Hidden>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {ids.map((id) => (\n            <LogRow\n              key={id}\n              data={data[id] as ExtendedLog}\n              compactMode={compactMode}\n              noBooking={noBooking}\n            />\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n","import { useMediaQuery, useTheme } from '@material-ui/core'\nimport React from 'react'\nimport {\n  Filter,\n  FilterProps,\n  List,\n  ListProps,\n  Pagination,\n  SelectInput,\n  TextInput,\n  useLocale,\n  useTranslate,\n} from 'react-admin'\nimport { MobilePostPagination } from '../common/Pagination'\nimport { DateFilterInput } from './DateFilterInput'\nimport { LogGrid } from './LogGrid'\n\ninterface LogListProps extends ListProps {\n  readonly compactMode?: boolean\n  readonly noBooking?: boolean\n}\n\nconst ListFilters = (props: Omit<FilterProps, 'children'>) => {\n  const t = useTranslate()\n  return (\n    <Filter {...props}>\n      <TextInput source=\"ticketCode\" alwaysOn />\n      <SelectInput\n        label={t('resources.logs.filters.deviceName')}\n        source=\"deviceName\"\n        choices={[\n          {\n            id: 'Czytnik',\n            name: t('resources.logs.fields.deviceNameChoices.reader'),\n          },\n          {\n            id: 'Przej\\u015Bcie',\n            name: t('resources.logs.fields.deviceNameChoices.gateway'),\n          },\n        ]}\n      />\n      <DateFilterInput source=\"date\" key=\"date\" />\n      <TextInput source=\"bookingId\" />\n      <TextInput source=\"event\" />\n    </Filter>\n  )\n}\n\nexport const LogList = ({\n  compactMode = false,\n  noBooking = false,\n  ...props\n}: LogListProps) => {\n  const { filter, ...listProps } = props\n  const theme = useTheme()\n  const smallScreen = useMediaQuery(theme.breakpoints.down('sm'))\n  const locale = useLocale()\n  return (\n    <List\n      perPage={20}\n      exporter={false}\n      pagination={\n        smallScreen ? (\n          <MobilePostPagination />\n        ) : (\n          <Pagination rowsPerPageOptions={[20, 50, 100]} />\n        )\n      }\n      filters={<ListFilters />}\n      filter={{ ...filter, locale }}\n      sort={{ field: 'date', order: 'DESC' }}\n      {...listProps}\n    >\n      <LogGrid compactMode={compactMode} noBooking={noBooking} />\n    </List>\n  )\n}","import React from \"react\"\nimport { ListProps, List, useListContext, Pagination, useTranslate, FunctionField, Record, TextField } from \"react-admin\"\nimport { TableContainer, Table, TableHead, TableBody, TableRow, TableCell, useMediaQuery, useTheme } from \"@material-ui/core\"\nimport { useHistory } from \"react-router\"\nimport { MobilePostPagination } from '../common/Pagination'\nimport { ResourceName } from \"../../core/ResourceName\"\n\nconst BookingGrid = () => {\n  const { data, ids } = useListContext()\n  const history = useHistory()\n  const translate = useTranslate()\n  return (\n    <TableContainer>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>{translate(`resources.bookings.fields.eventId`)}</TableCell>\n            <TableCell>{translate(`resources.bookings.fields.id`)}</TableCell>\n            <TableCell>{translate(`resources.bookings.fields.variantName`)}</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {ids.map(id =>\n            <TableRow key={id} style={{ cursor: \"pointer\" }}>\n              <TableCell onClick={() =>\n                history.push({ pathname: `/${ResourceName.TICKET_DETAILS}/${id}/show`, })\n              }>\n                <FunctionField record={data[id]} render={(record: Record | undefined) => (\n                  `${record?.eventId}. ${record?.eventName} ${record?.eventDateStart.replace(\"T\", \" \").substring(0, 19)}`\n                )} />\n              </TableCell>\n              <TableCell onClick={() =>\n                history.push({ pathname: `/${ResourceName.TICKET_DETAILS}/${id}/show`, })\n              }>\n                <TextField record={data[id]} source=\"id\" />\n              </TableCell>\n              <TableCell onClick={() =>\n                history.push({ pathname: `/${ResourceName.TICKET_DETAILS}/${id}/show`, })\n              }>\n                <TextField record={data[id]} source=\"variantName\" />\n              </TableCell>\n            </TableRow>\n          )}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n\nexport const BookingList = (props: ListProps) => {\n  const theme = useTheme()\n  return (\n    <List\n      perPage={20}\n      exporter={false}\n      pagination={\n        useMediaQuery(theme.breakpoints.up('md')) ? (\n          <Pagination rowsPerPageOptions={[20, 50, 100]} />\n        ) : (\n          <MobilePostPagination />\n        )\n      }\n      sort={{ field: 'id', order: 'DESC' }}\n      {...props}\n    >\n      <BookingGrid />\n    </List>\n  )\n}","import {\n  ResourceContextProvider, ShowProps, Show, TabbedShowLayout, Tab, TextField, useShowContext, DateField,\n  FunctionField, Record, useTranslate\n} from \"react-admin\"\nimport React, { useMemo } from \"react\"\nimport { Box } from \"@material-ui/core\"\nimport { LogList } from '../logs/LogList'\nimport { ResourceName } from \"../../core/ResourceName\"\nimport { BookingList } from \"./CustomerBookingsList\"\n\nconst CustomerBookingsView = () => {\n  const { record, basePath } = useShowContext()\n  return (\n    <Box paddingY={2}>\n      <ResourceContextProvider value={ResourceName.BOOKINGS}>\n        <BookingList\n          basePath={basePath}\n          filter={{ id: record?.bookingsIds.join(\",\") }}\n          filters={undefined}\n          actions={false}\n          title=\" \"\n        />\n      </ResourceContextProvider>\n    </Box>\n  )\n}\n\nconst CustomerLogsView = () => {\n  const { record, basePath } = useShowContext()\n  return (\n    <Box paddingY={2}>\n      <ResourceContextProvider value={ResourceName.TICKET_LOGS}>\n        <LogList\n          basePath={basePath}\n          filter={{ bookingId: record?.bookingsIds.join(\",\") }}\n          filters={undefined}\n          actions={false}\n          title=\" \"\n        />\n      </ResourceContextProvider>\n    </Box>\n  )\n}\n\nconst CustomerTabs = () => {\n  const { record } = useShowContext()\n  const translate = useTranslate()\n  const bookingPresent = useMemo(() => record?.bookingsIds.length > 0, [record])\n  return (\n    <TabbedShowLayout>\n      <Tab label={translate('resources.customer-details.tabs.profile')}>\n        <TextField source=\"firstname\" label=\"resources.customer-details.fields.firstname\" />\n        <TextField source=\"lastname\" label=\"resources.customer-details.fields.lastname\" />\n        {record?.company &&\n          <TextField source=\"company\" label=\"resources.customer-details.fields.company\" />}\n        {record?.birthdate &&\n          <>\n            {record.birthdate.split(\".\")[0].length === 1 && 0}\n            <DateField source=\"birthdate\" label=\"resources.customer-details.fields.birthdate\" />\n          </>}\n        {record?.documentType &&\n          <TextField source=\"documentType\" label=\"resources.customer-details.fields.documentType\" />}\n        {record?.pesel ?\n          <TextField source=\"pesel\" label=\"resources.customer-details.fields.pesel\" /> :\n          <TextField source=\"documentNumber\" label=\"resources.customer-details.fields.documentNumber\" />\n        }\n        {record?.nationality &&\n          <TextField source=\"nationality\" label=\"resources.customer-details.fields.nationality\" />}\n        {record?.gender &&\n          <FunctionField label=\"resources.customer-details.fields.gender\"\n            render={(r: Record | undefined) =>\n              r && translate(`resources.enums.gender.${r.gender}`)} />}\n      </Tab>\n      {bookingPresent &&\n        <Tab label={translate('resources.customer-details.tabs.bookings')}>\n          <CustomerBookingsView />\n        </Tab>\n      }\n      {bookingPresent &&\n        <Tab label={translate('resources.customer-details.tabs.logs')}>\n          <CustomerLogsView />\n        </Tab>\n      }\n    </TabbedShowLayout>\n  )\n}\n\nexport const CustomerDetailsView = (props: ShowProps) => (\n  <Show {...props}>\n    <CustomerTabs />\n  </Show>\n)","import { createStyles, makeStyles } from '@material-ui/core'\n\nexport const useCommonStyles = makeStyles(() =>\n  createStyles({\n    textCentered: {\n      textAlign: 'center',\n    },\n  }),\n)\n","import React, { ChangeEvent, FC, useState } from 'react'\nimport {\n  Box,\n  Button,\n  FormControl,\n  FormHelperText,\n  Input,\n  withStyles,\n} from '@material-ui/core'\nimport SearchIcon from '@material-ui/icons/Search'\nimport { useTranslate } from 'react-admin'\n\nconst RoundInputBox = withStyles({\n  root: {\n    borderRadius: 16,\n    width: '90%',\n    marginLeft: '5%',\n    display: 'flex',\n    flexDirection: 'row-reverse',\n    border: 'solid',\n    borderColor: '#673ab7',\n  },\n})(Box)\n\nconst RoundInputBoxBtn = withStyles({\n  root: {\n    background: '#673ab7',\n    variant: 'contained',\n    borderRadius: 11,\n    borderTopLeftRadius: 0,\n    borderBottomLeftRadius: 0,\n    margin: 0,\n    fontWeight: 'bold',\n    '&:hover': {\n      background: '#7e57c2',\n    },\n  },\n})(Button)\n\nconst RoundInputBoxFC = withStyles({\n  root: {\n    width: '100%',\n    marginLeft: 13,\n    marginTop: 2,\n  },\n})(FormControl)\n\nexport type SearchInputProps = {\n  label: string\n  onValue: (value: string) => void\n  disabled: boolean\n  error: string\n}\n\nconst SearchInput: FC<Readonly<SearchInputProps>> = ({\n  label,\n  onValue,\n  disabled,\n  error,\n}) => {\n  const [inputError, setInputError] = useState(false)\n  const [inputValue, setInputValue] = useState('')\n  const t = useTranslate()\n\n  const handleInput = (event: ChangeEvent<HTMLInputElement>) => {\n    setInputValue(event.target.value)\n  }\n\n  const handleClick = () => {\n    if (inputValue) {\n      setInputError(false)\n      onValue(inputValue)\n    } else {\n      setInputError(true)\n    }\n  }\n\n  return (\n    <RoundInputBox>\n      <RoundInputBoxBtn onClick={handleClick} disabled={disabled}>\n        <SearchIcon style={{ color: 'white' }} />\n      </RoundInputBoxBtn>\n      <RoundInputBoxFC disabled={disabled}>\n        <Input\n          disableUnderline\n          placeholder={t(label)}\n          onInput={handleInput}\n          onKeyDown={(ev) => ev.key === 'Enter' && handleClick()}\n          error={inputError || !!error}\n        />\n        {inputError && (\n          <FormHelperText error>{t('ra.validation.required')}</FormHelperText>\n        )}\n        {!!error && <FormHelperText error>{t(error)}</FormHelperText>}\n      </RoundInputBoxFC>\n    </RoundInputBox>\n  )\n}\n\nexport default SearchInput\n","import React, { useCallback, useState } from \"react\"\nimport { useNotify, useMutation, useTranslate, sanitizeFetchType, GetListResult, GET_LIST } from \"react-admin\"\nimport { useHistory } from \"react-router\"\nimport { stringify } from \"querystring\"\nimport { CardContent, CardHeader } from \"@material-ui/core\"\nimport clsx from \"clsx\"\nimport { ResourceName } from \"../../core/ResourceName\"\nimport { useCommonStyles } from \"./common-styles\"\nimport { CustomerInfoFilter } from '../../core/customer-info/customer-info.params'\nimport { CustomerInfo } from \"../../core/customer-info/customer-info\"\nimport SearchInput from './SearchInput'\n\ntype FindCustomerByInfoProps = Readonly<{ titleCentered?: boolean }>\n\nexport const FindCustomerByInfo = ({\n  titleCentered = false\n}: FindCustomerByInfoProps) => {\n  const history = useHistory()\n  const notify = useNotify()\n  const [error, setError] = useState(\"\")\n  const [mutate, { loading }] = useMutation()\n  const commonClasses = useCommonStyles()\n  const t = useTranslate()\n\n  const fetchCustomers = useCallback(\n    (info: string) =>\n      mutate({\n        type: sanitizeFetchType(GET_LIST),\n        resource: ResourceName.CUSTOMER_INFO,\n        payload: { filter: { info } } as CustomerInfoFilter\n      },\n        { returnPromise: true },\n      ) as Promise<GetListResult<CustomerInfo>>,\n    [mutate]\n  )\n\n  const onValue = useCallback(\n    async (info: string) => {\n      if (info.replace(/\\s/g, \"\").length === 0) {\n        setError('common.find-customer-by-info.invalidQuery')\n      }\n      else if (info.length < 2) {\n        setError('common.find-customer-by-info.tooShort')\n      }\n      else {\n        setError('')\n        try {\n          const {\n            total,\n            data: [onlyCustomer],\n          } = await fetchCustomers(info)\n          if (!total) {\n            setError('common.find-customer-by-info.error')\n          } else if (total === 1) {\n            history.push({\n              pathname: `/${ResourceName.CUSTOMER_DETAILS}/${onlyCustomer.id}/show`\n            })\n          } else {\n            history.push({\n              pathname: `/${ResourceName.CUSTOMER_INFO}`,\n              search: stringify({\n                filter: JSON.stringify({\n                  info\n                } as CustomerInfoFilter['filter'])\n              })\n            })\n          }\n        } catch (err) {\n          notify((err as Error)?.message, 'error')\n        }\n      }\n    },\n    [fetchCustomers, history, notify]\n  )\n\n  return (\n    <>\n      <CardHeader\n        className={clsx({ [commonClasses.textCentered]: titleCentered })}\n        title={t('common.find-customer-by-info.title')} />\n      <CardContent>\n        <SearchInput\n          label=\"common.find-customer-by-info.input-label\"\n          onValue={onValue}\n          disabled={loading}\n          error={error}\n        />\n      </CardContent>\n    </>\n  )\n}","import * as React from 'react'\nimport { TextField, TextFieldProps, useRecordContext } from 'react-admin'\nimport { maskMiddlePart } from '../../core/common/mask.utils'\n\nexport const MaskField = ({ source, ...rest }: TextFieldProps) => {\n  const record = useRecordContext()\n  const properRecord = record[source as string]\n    ? {\n      ...record,\n      [source as string]: maskMiddlePart(record[source as string], 2),\n    }\n    : record\n  return <TextField {...rest} record={properRecord} source={source} />\n}\n","/**\n * @example\n * maskMiddlePart('importantValue', 3) === 'imp********lue'\n */\nexport const maskMiddlePart = (word: string, threshold: number) => {\n  const firstChars = word.substring(0, threshold)\n  const lastChars = word.slice(-threshold)\n  const restCharsLength = word.length - firstChars.length - lastChars.length\n  return `${firstChars}${'*'.repeat(\n    restCharsLength > 0 ? restCharsLength : 0,\n  )}${lastChars}`\n}\n","import { Card, Box, Typography, Divider } from '@material-ui/core'\nimport React from 'react'\nimport { useLocation } from 'react-router'\nimport {\n  List,\n  ListProps,\n  useListContext,\n  useTranslate,\n  Datagrid,\n  TextField,\n} from 'react-admin'\nimport { FindCustomerByInfo } from '../common/FindCustomerByInfo'\nimport { ResourceName } from '../../core/ResourceName'\nimport { MaskField } from '../common/MaskField'\n\nconst CustomerInfoGrid = () => {\n  const {\n    loading,\n    filterValues: { info },\n  } = useListContext()\n  const t = useTranslate()\n  return (\n    <>\n      <Box m={2}>\n        <Typography variant=\"h5\" paragraph>\n          {t('resources.customer-info.search-list-title', { info })}\n        </Typography>\n      </Box>\n      <Divider />\n      <Datagrid\n        loaded={!loading}\n        rowClick={(id) => `${ResourceName.CUSTOMER_DETAILS}/${id}/show`}\n      >\n        <TextField source=\"firstname\" />\n        <TextField source=\"lastname\" />\n        <TextField source=\"pesel\" />\n        <MaskField source=\"pesel\" sortable={false} />\n      </Datagrid>\n    </>\n  )\n}\n\nexport const CustomerInfoList = (props: ListProps) => {\n  const { search } = useLocation()\n  return (\n    <>\n      <Card>\n        <FindCustomerByInfo titleCentered />\n      </Card>\n      {!!search && (\n        <List\n          actions={false}\n          {...props}\n          sort={{ field: 'lastname', order: 'ASC' }}\n        >\n          <CustomerInfoGrid />\n        </List>\n      )}\n    </>\n  )\n}\n","import { stringify } from 'querystring'\nimport * as React from 'react'\nimport { useCallback, useState } from 'react'\nimport clsx from 'clsx'\nimport {\n  GET_LIST,\n  GetListResult,\n  sanitizeFetchType,\n  useMutation,\n  useNotify,\n  useTranslate,\n} from 'react-admin'\nimport { CardContent, CardHeader } from '@material-ui/core'\nimport { useHistory } from 'react-router-dom'\nimport { TicketCodeFilter } from '../../core/common/ticket-code.filter'\nimport { TicketDto } from '../../core/dto/ticket.dto'\nimport { ResourceName } from '../../core/ResourceName'\nimport SearchInput from './SearchInput'\nimport { useCommonStyles } from './common-styles'\n\ntype FindUserByTicketProps = Readonly<{ titleCentered?: boolean }>\n\nexport const FindUserByTicket = ({\n  titleCentered = false,\n}: FindUserByTicketProps) => {\n  const history = useHistory()\n  const notify = useNotify()\n  const [error, setError] = useState('')\n  const [mutate, { loading }] = useMutation()\n  const commonClasses = useCommonStyles()\n  const t = useTranslate()\n\n  const fetchTickets = useCallback(\n    (ticketCode: string) =>\n      mutate(\n        {\n          type: sanitizeFetchType(GET_LIST),\n          resource: ResourceName.TICKETS,\n          payload: { filter: { ticketCode } } as TicketCodeFilter,\n        },\n        { returnPromise: true },\n      ) as Promise<GetListResult<TicketDto>>,\n    [mutate],\n  )\n\n  const onValue = useCallback(\n    async (ticketCode: string) => {\n      setError('')\n      try {\n        const {\n          total,\n          data: [onlyTicket],\n        } = await fetchTickets(ticketCode)\n        if (!total) {\n          setError('common.find-user-by-ticket.error')\n        } else if (total === 1) {\n          history.push({\n            pathname: `/${ResourceName.TICKET_DETAILS}/${onlyTicket.bookingId}/show`,\n          })\n        } else {\n          history.push({\n            pathname: `/${ResourceName.TICKET_INFO}`,\n            search: stringify({\n              filter: JSON.stringify({\n                ticketCode,\n              } as TicketCodeFilter['filter']),\n            }),\n          })\n        }\n      } catch (err) {\n        notify((err as Error)?.message, 'error')\n      }\n    },\n    [fetchTickets, history, notify],\n  )\n\n  return (\n    <>\n      <CardHeader\n        className={clsx({ [commonClasses.textCentered]: titleCentered })}\n        title={t('common.find-user-by-ticket.title')}\n      />\n      <CardContent>\n        <SearchInput\n          label=\"common.find-user-by-ticket.input-label\"\n          onValue={onValue}\n          disabled={loading}\n          error={error}\n        />\n      </CardContent>\n    </>\n  )\n}\n","import { IconButton, TableBody, TableCell, TableHead, TableRow } from \"@material-ui/core\"\nimport { Event, Sort } from '@material-ui/icons'\nimport React from \"react\"\nimport { Datagrid, DateField, Filter, FilterProps, FunctionField, Link, List, ListProps, Pagination, Record, TextField, TextInput, useListContext, useTranslate } from \"react-admin\"\nimport { EventDto } from \"../../core/dto/event/event.dto\"\nimport { ResourceName } from \"../../core/ResourceName\"\n\nconst ListFilters = (props: Omit<FilterProps, 'children'>) => (\n  <Filter {...props}>\n    <TextInput source=\"name\" alwaysOn />\n  </Filter>\n)\n\n\nconst EventsBody = () => {\n  const translate = useTranslate()\n  const { ids, data } = useListContext()\n  return (\n    <TableBody>\n      {ids.map((id) => (\n        <TableRow key={id}>\n          <TableCell>\n            <FunctionField record={data[id] as EventDto} render={(record: Record | undefined) =>\n              `${record?.id}. ${record?.name}`} />\n          </TableCell>\n          <TableCell>\n            <FunctionField resource=\"events\" label={translate(\"resources.events.fields.status\")}\n              record={data[id] as EventDto} render={(r: Record | undefined) =>\n                (translate(`resources.enums.eventStatus.${r?.status.toLowerCase()}`))} />\n          </TableCell>\n          <TableCell padding=\"none\">\n            <Link to={`/events/${id}/show`}>\n              <IconButton>\n                <Event />\n              </IconButton>\n            </Link>\n          </TableCell>\n          <TableCell padding=\"none\">\n            <Link to={`/stats-overall-view/${id}/show`}>\n              <IconButton>\n                <Sort style={{ transform: \"scaleX(-1)\" }} />\n              </IconButton>\n            </Link>\n          </TableCell>\n        </TableRow>\n      ))}\n    </TableBody>\n  )\n}\n\nconst EventsHead = () => {\n  const translate = useTranslate()\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell>\n          {translate('resources.events.fields.name')}\n        </TableCell>\n        <TableCell>\n          {translate('resources.events.fields.status')}\n        </TableCell>\n        <TableCell />\n        <TableCell />\n      </TableRow>\n    </TableHead>\n  )\n}\n\nconst EventGrid = ({ compactMode }: { compactMode?: boolean }) => {\n  const { loading } = useListContext()\n  const translate = useTranslate()\n  return (\n    <>\n      {compactMode ? (\n        <Datagrid body={EventsBody} header={EventsHead}>\n          <div />\n        </Datagrid>\n      ) : (\n        <Datagrid size=\"small\" loaded={!loading} rowClick={(id) => `${ResourceName.EVENTS}/${id}/show`}>\n          <TextField source=\"id\" label=\"ID\" />\n          <TextField source=\"name\" />\n          <DateField source=\"dateStart\" showTime />\n          <DateField source=\"dateEnd\" showTime />\n          <FunctionField resource=\"events\" label={translate(\"resources.events.fields.status\")}\n            render={(r: Record | undefined) =>\n              (translate(`resources.enums.eventStatus.${r?.status.toLowerCase()}`))} />\n        </Datagrid>\n      )}\n    </>\n  )\n}\n\ninterface EventListProps extends ListProps {\n  compactMode?: boolean\n}\n\nexport const EventList = ({\n  compactMode = false,\n  ...props\n}: EventListProps) => compactMode ?\n    <List {...props} actions={false} filters={undefined} perPage={10}\n      pagination={false}>\n      <EventGrid compactMode />\n    </List> :\n    <List {...props} actions={false} filters={<ListFilters />} perPage={20}\n      pagination={<Pagination rowsPerPageOptions={[10, 20, 50]} />}>\n      <EventGrid />\n    </List>","import {\n  Card,\n  CardContent,\n  CardHeader,\n  createStyles,\n  Grid,\n  makeStyles,\n  Theme,\n} from '@material-ui/core'\nimport React from 'react'\nimport {\n  ResourceContextProvider,\n  useGetIdentity,\n  UserIdentity,\n  useTranslate,\n} from 'react-admin'\nimport { ResourceName } from '../core/ResourceName'\nimport { FindUserByTicket } from './common/FindUserByTicket'\nimport { EventList } from './events/EventList'\nimport { LogList } from './logs/LogList'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    header: {\n      textAlign: 'center',\n      letterSpacing: theme.spacing(0.2),\n    },\n  }),\n)\n\nconst TicketFinder = () => (\n  <Card style={{ width: '100%', marginBottom: '5px' }}>\n    <FindUserByTicket />\n  </Card>\n)\n\nconst LastLogs = () => {\n  const t = useTranslate()\n  return (\n    <Card style={{ width: '100%', marginBottom: '5px' }}>\n      <CardHeader title={t('dashboard.cards.last-logs.title')} />\n      <CardContent>\n        <ResourceContextProvider value={ResourceName.LOGS}>\n          <LogList\n            basePath=\"/\"\n            title=\" \"\n            compactMode\n            pagination={false}\n            perPage={10}\n            actions={false}\n            filters={undefined}\n          />\n        </ResourceContextProvider>\n      </CardContent>\n    </Card>\n  )\n}\n\nconst LastEvents = () => {\n  const t = useTranslate()\n  return (\n    <Card style={{ width: '100%', marginBottom: '5px' }}>\n      <CardHeader title={t('dashboard.cards.last-events.title')} />\n      <CardContent>\n        <ResourceContextProvider value={ResourceName.EVENTS}>\n          <EventList\n            sort={{ field: 'status', order: 'DESC' }}\n            compactMode\n            basePath=\"/\"\n            title=\" \"\n          />\n        </ResourceContextProvider>\n      </CardContent>\n    </Card>\n  )\n}\n\nexport const Dashboard = () => {\n  const { identity } = useGetIdentity()\n  const classes = useStyles()\n  const t = useTranslate()\n\n  const isItemShown = (item: string, userId?: UserIdentity) => {\n    const show = localStorage.getItem(`${userId?.id}.${item}`)\n    return show !== '0'\n  }\n\n  return (\n    <Grid container spacing={1}>\n      <Grid item xs={12}>\n        <Card>\n          <CardHeader\n            className={classes.header}\n            title={t('dashboard.welcome')}\n            titleTypographyProps={{ variant: 'h4' }}\n          />\n        </Card>\n      </Grid>\n      <Grid item sm={6} xs={12}>\n        {isItemShown('ticketfinder', identity) && <TicketFinder />}\n        {isItemShown('lastevents', identity) && <LastEvents />}\n      </Grid>\n      <Grid\n        item\n        sm={6}\n        xs={12}\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'flex-end',\n          width: '10%',\n        }}\n      >\n        {isItemShown('dashlogs', identity) && <LastLogs />}\n      </Grid>\n    </Grid>\n  )\n}\n","import {\n  Edit, EditProps, TextField, TextInput, FunctionField, SaveButton, ShowButton,\n  DateTimeInput, useTranslate, SimpleForm, Record, Toolbar, ToolbarProps\n} from \"react-admin\"\nimport React, { useMemo } from \"react\"\nimport { Cancel } from \"@material-ui/icons\"\n\nconst EditTitle = (record: any) => {\n  const { record: { name, dateStart, id } } = record\n  const translate = useTranslate()\n  const date = useMemo(() => !(dateStart instanceof Date) ? dateStart.replace('T', ' ') : '', [dateStart])\n  return (\n    <span>{translate('resources.events.titles.edit')}: {name} {date} {id}</span>\n  )\n}\n\nconst EditToolbar = (props: ToolbarProps) => (\n  <Toolbar {...props}>\n    <SaveButton />\n    <ShowButton label='const.cancel' icon={<Cancel />} />\n  </Toolbar>\n)\n\nexport const EventEdit = (props: EditProps) => {\n  const translate = useTranslate()\n  return (\n    <Edit {...props} title={<EditTitle />} actions={false}>\n      <SimpleForm redirect=\"show\" toolbar={<EditToolbar />}>\n        <TextField source=\"id\" label=\"ID\" />\n        <TextInput source=\"name\" />\n        <DateTimeInput source=\"dateStart\" />\n        <DateTimeInput source=\"dateEnd\" />\n        <FunctionField resource=\"events\" label={translate(\"resources.events.fields.status\")}\n          render={(r: Record | undefined) =>\n            (translate(`resources.enums.eventStatus.${r?.status.toLowerCase()}`))} />\n      </SimpleForm>\n    </Edit>\n  )\n}","import React from \"react\"\nimport {\n  Show, ShowProps, TabbedShowLayout, Tab, TextField, DateField, useListContext, GET_LIST,\n  useShowContext, useTranslate, FunctionField, Record, ResourceContextProvider, Pagination,\n  List, useMutation, useRefresh, sanitizeFetchType, EditButton, TextInput, useNotify, useQuery\n} from \"react-admin\"\nimport {\n  Checkbox, TableContainer, Table, TableHead, TableBody, TableRow, TableCell, Divider, Box, Button, ButtonGroup\n} from '@material-ui/core'\nimport { ResourceName } from \"../../core/ResourceName\"\nimport { EventStatus } from \"../../core/enum/EventStatus\"\nimport { Company } from \"../../core/companies/company\"\nimport { Engine } from \"../../core/engines/engine\"\nimport { Palm } from \"../../core/devices/palms/palm\"\nimport { ObjectType } from \"../../core/objects/object\"\n\nconst ShowTitle = (record: any) => {\n  const { record: { name, dateStart, id } } = record\n  const translate = useTranslate()\n  return (\n    <span>{translate('resources.events.titles.show')}: {!!name && name} {dateStart.replace(\"T\", \" \")} {!!id && id}</span>\n  )\n}\n\nconst Attachments = ({ source }: { source: 'COMPANIES' | 'OBJECTS' | 'ENGINES' | 'PALMS' }) => {\n  const { data, ids, refetch, filterValues, currentSort, total } = useListContext()\n  const { record: event } = useShowContext()\n  const { data: allFiltered, refetch: refetchAllFiltered } = useQuery({\n    type: sanitizeFetchType(GET_LIST),\n    resource: source.toLocaleLowerCase(),\n    payload: {\n      filter: {\n        event: event?.id,\n        ...filterValues\n      },\n      sort: currentSort || {\n        field: \"id\",\n        order: \"DESC\"\n      },\n      pagination: {\n        page: 1,\n        perPage: total || 1\n      }\n    }\n  })\n  const translate = useTranslate()\n  const [mutate] = useMutation()\n  const notify = useNotify()\n\n  const handleAttach = async (id: number[]) => {\n    switch (source) {\n      case 'COMPANIES':\n        await mutate({\n          type: sanitizeFetchType(\"attachCompanies\"),\n          resource: ResourceName.EVENTS,\n          payload: {\n            eventId: event && event.id,\n            companiesIds: id\n          }\n        }, { returnPromise: true })\n        break;\n      case 'OBJECTS':\n        await mutate({\n          type: sanitizeFetchType(\"attachObjects\"),\n          resource: ResourceName.EVENTS,\n          payload: {\n            eventId: event && event.id,\n            objectsIds: id\n          }\n        }, { returnPromise: true })\n        break;\n      case 'ENGINES':\n      case 'PALMS':\n        await mutate({\n          type: sanitizeFetchType(\"attachDevices\"),\n          resource: ResourceName.EVENTS,\n          payload: {\n            eventId: event && event.id,\n            verifierDevicesIds: id\n          }\n        }, { returnPromise: true })\n        break;\n      default:\n        notify(`Source '${source}' is not implemented yet.`);\n    }\n    refetch()\n  }\n\n  const handleDetach = async (id: number[]) => {\n    switch (source) {\n      case 'COMPANIES':\n        await mutate({\n          type: sanitizeFetchType(\"detachCompanies\"),\n          resource: ResourceName.EVENTS,\n          payload: {\n            eventId: event && event.id,\n            companiesIds: id\n          }\n        }, { returnPromise: true })\n        break;\n      case 'OBJECTS':\n        await mutate({\n          type: sanitizeFetchType(\"detachObjects\"),\n          resource: ResourceName.EVENTS,\n          payload: {\n            eventId: event && event.id,\n            objectsIds: id\n          }\n        }, { returnPromise: true })\n        break;\n      case 'ENGINES':\n      case 'PALMS':\n        await mutate({\n          type: sanitizeFetchType(\"detachDevices\"),\n          resource: ResourceName.EVENTS,\n          payload: {\n            eventId: event && event.id,\n            verifierDevicesIds: id\n          }\n        }, { returnPromise: true })\n        break;\n      default:\n        notify(`Source '${source}' is not implemented yet.`);\n    }\n    refetch()\n  }\n\n  const handleAttachAll = () => {\n    refetchAllFiltered()\n    handleAttach(allFiltered.map((record: Company | Engine | Palm | ObjectType) => record?.id))\n  }\n\n  const handleDetachAll = () => {\n    refetchAllFiltered()\n    handleDetach(allFiltered.map((record: Company | Engine | Palm | ObjectType) => record?.id))\n  }\n\n  return (\n    <TableContainer>\n      <ButtonGroup>\n        <Button variant=\"contained\" onClick={() => handleAttachAll()}>\n          {translate('resources.events.actions.attachAll')}</Button>\n        <Button variant=\"contained\" onClick={() => handleDetachAll()}>\n          {translate('resources.events.actions.detachAll')}</Button>\n      </ButtonGroup>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>\n              {translate(`resources.events.fields.attachment.name`)}\n            </TableCell>\n            <TableCell style={{ width: \"10%\" }}>\n              {translate(`resources.events.fields.attachment.attached`)}\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {ids.map((id) => (\n            <TableRow key={id}>\n              <TableCell>\n                <TextField source=\"name\" record={data[id]} />\n              </TableCell>\n              <TableCell>\n                <Checkbox checked={data[id]?.attached} onClick={data[id]?.attached ? () => handleDetach([id as number]) : () => handleAttach([id as number])} />\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n\nconst GeneralEditButton = () => {\n  const { record } = useShowContext()\n  const [mutate] = useMutation()\n  const refresh = useRefresh()\n  const translate = useTranslate()\n\n  const handleActivation = async () => {\n    if (record?.status !== EventStatus.IN_TRANSITION) {\n      if (record?.status === EventStatus.ACTIVE) {\n        await mutate({\n          type: sanitizeFetchType(\"deactivate\"),\n          resource: ResourceName.EVENTS,\n          payload: {\n            eventId: record?.id\n          }\n        }, { returnPromise: false })\n      }\n      else {\n        await mutate({\n          type: sanitizeFetchType(\"activate\"),\n          resource: ResourceName.EVENTS,\n          payload: {\n            eventId: record?.id\n          }\n        }, { returnPromise: false })\n      }\n      refresh()\n    }\n  }\n\n  return (\n    <>\n      <Divider />\n      <Box p={1} display=\"flex\" justifyContent=\"flex-end\">\n        <Button variant=\"contained\" onClick={handleActivation}\n          color=\"primary\" style={{ marginRight: \"5px\" }}\n          disabled={record?.status === EventStatus.IN_TRANSITION}>\n          {record?.status === EventStatus.INACTIVE ?\n            translate('resources.events.actions.activate') :\n            translate('resources.events.actions.deactivate')}\n        </Button>\n        <EditButton basePath=\"/events\" record={record} variant=\"contained\" />\n      </Box>\n    </>\n  )\n}\n\nexport const EventShow = (props: ShowProps) => {\n  const translate = useTranslate()\n  const { id, basePath } = props\n  return (\n    <Show {...props} title={<ShowTitle />} actions={false}>\n      <TabbedShowLayout>\n        <Tab label={translate(\"resources.events.tabs.general\")}>\n          <TextField source=\"id\" label=\"ID\" />\n          <TextField source=\"name\" />\n          <DateField source=\"dateStart\" showTime />\n          <DateField source=\"dateEnd\" showTime />\n          <FunctionField resource=\"events\" label={translate(\"resources.events.fields.status\")}\n            render={(r: Record | undefined) =>\n              (translate(`resources.enums.eventStatus.${r?.status.toLowerCase()}`))} />\n          <GeneralEditButton />\n        </Tab>\n        <Tab label={translate(\"resources.events.tabs.palms\")}>\n          <>\n            <Box paddingY={2}>\n              <ResourceContextProvider value={ResourceName.PALMS} >\n                <List basePath={basePath} filter={{ event: id }} exporter={false} title=\" \"\n                  perPage={20} pagination={<Pagination rowsPerPageOptions={[10, 20, 50]} />}\n                  filters={[\n                    <TextInput source=\"name\" alwaysOn />,\n                    <TextInput source=\"categoryId\" />\n                  ]}>\n                  <Attachments source=\"PALMS\" />\n                </List>\n              </ResourceContextProvider>\n            </Box>\n          </>\n        </Tab>\n        <Tab label={translate(\"resources.events.tabs.engines\")}>\n          <>\n            <Box paddingY={2}>\n              <ResourceContextProvider value={ResourceName.ENGINES}>\n                <List basePath={basePath} filter={{ event: id }} exporter={false} title=\" \"\n                  perPage={20} pagination={<Pagination rowsPerPageOptions={[10, 20, 50]} />}\n                  filters={[\n                    <TextInput source=\"name\" alwaysOn />,\n                    <TextInput source=\"categoryId\" />\n                  ]}>\n                  <Attachments source=\"ENGINES\" />\n                </List>\n              </ResourceContextProvider>\n            </Box>\n          </>\n        </Tab>\n        <Tab label={translate(\"resources.events.tabs.objects\")}>\n          <>\n            <Box paddingY={2}>\n              <ResourceContextProvider value={ResourceName.OBJECTS}>\n                <List basePath={basePath} filter={{ event: id }} exporter={false} title=\" \"\n                  perPage={20} pagination={<Pagination rowsPerPageOptions={[10, 20, 50, 100]} />}\n                  filters={[\n                    <TextInput source=\"name\" alwaysOn />\n                  ]}>\n                  <Attachments source=\"OBJECTS\" />\n                </List>\n              </ResourceContextProvider>\n            </Box>\n          </>\n        </Tab>\n        <Tab label={translate(\"resources.events.tabs.companies\")}>\n          <>\n            <Box paddingY={2}>\n              <ResourceContextProvider value={ResourceName.COMPANIES}>\n                <List basePath={basePath} filter={{ event: id }} exporter={false} title=\" \"\n                  perPage={20} pagination={<Pagination rowsPerPageOptions={[10, 20, 50, 100]} />}\n                  filters={[\n                    <TextInput source=\"name\" alwaysOn />\n                  ]}>\n                  <Attachments source=\"COMPANIES\" />\n                </List>\n              </ResourceContextProvider>\n            </Box>\n          </>\n        </Tab>\n      </TabbedShowLayout>\n    </Show>\n  )\n}","import React from 'react'\nimport {\n  makeStyles,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from '@material-ui/core'\nimport { Show, ShowProps, useTranslate, ArrayField, Datagrid, TextField } from 'react-admin'\n\nconst useStyles = makeStyles({\n  noBottomBorder: {\n    borderBottom: 'none',\n  },\n  quarterWidth: {\n    width: '25%',\n  },\n})\n\nconst ViewTitle = (record: any) => {\n  const {\n    record: { eventName, date, id },\n  } = record\n  const t = useTranslate()\n  const description = `${eventName} ${date.replace('T', ' ')} ${id}`\n  return (\n    <span>{`${t('resources.stats-overall-view.name')}: ${description}`}</span>\n  )\n}\n\nconst BlockGrid = (props: any) => {\n  const {\n    record: {\n      soldAbo, soldInfix, soldNormal, soldPoints, soldService\n    }\n  } = props\n  const classes = useStyles()\n  const translate = useTranslate()\n\n  const firstColumnEntries = [\n    { label: \"abo\", value: soldAbo },\n    { label: \"infix\", value: soldInfix },\n    { label: \"normal\", value: soldNormal },\n    { label: \"points\", value: soldPoints },\n    { label: \"service\", value: soldService },\n  ].map(({ label, value }) => (\n    !!value && (\n      <div key={label}>{translate(`resources.stats-overall-view.fields.${label}`)}</div>\n    )\n  ))\n\n  const secondColumnEntries = [\n    { label: \"enteredAbo\", value: soldAbo },\n    { label: \"enteredInfix\", value: soldInfix },\n    { label: \"enteredNormal\", value: soldNormal },\n    { label: \"enteredPoints\", value: soldPoints },\n    { label: \"enteredService\", value: soldService },\n  ].map(({ label, value }) =>\n    !!value && (\n      <TextField key={label} source={label} label=\" \" />\n    ))\n\n  const thirdColumnEntries = [\n    { label: \"soldAbo\", value: soldAbo },\n    { label: \"soldInfix\", value: soldInfix },\n    { label: \"soldNormal\", value: soldNormal },\n    { label: \"soldPoints\", value: soldPoints },\n    { label: \"soldService\", value: soldService },\n  ].map(({ label, value }) => (\n    !!value && (\n      <TextField key={label} source={label} label=\" \" />\n    )\n  ))\n\n  return (\n    <TableContainer style={{ paddingTop: \"10px\", marginBottom: \"10px\" }}>\n      <Table padding=\"none\">\n        <TableBody>\n          <TableRow>\n            <TableCell style={{ width: \"15%\" }} className={classes.noBottomBorder} />\n            <TableCell style={{ width: \"40%\" }} className={classes.noBottomBorder}>{firstColumnEntries}</TableCell>\n            <TableCell style={{ width: \"15%\" }} className={classes.noBottomBorder}>{secondColumnEntries}</TableCell>\n            <TableCell style={{ width: \"15%\" }} className={classes.noBottomBorder}>{thirdColumnEntries}</TableCell>\n            <TableCell style={{ width: \"15%\" }} className={classes.noBottomBorder} />\n          </TableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n\nconst TribuneGrid = () => {\n  const translate = useTranslate()\n\n  const TribuneHeader = () => (\n    <TableHead>\n      <TableRow>\n        <TableCell style={{ width: \"15%\" }} />\n        <TableCell style={{ width: \"40%\" }}>{translate('resources.stats-overall-view.fields.block')}</TableCell>\n        <TableCell style={{ width: \"15%\" }} />\n        <TableCell style={{ width: \"15%\" }} />\n        <TableCell style={{ width: \"15%\" }} />\n      </TableRow>\n    </TableHead>\n  )\n\n  return (\n    <ArrayField source=\"blocks\">\n      <Datagrid expand={<BlockGrid />} padding=\"none\" header={<TribuneHeader />} isRowExpandable={record => !!record.sold}>\n        <TextField source=\"name\" label=\"Sektor\" />\n        <TextField source=\"entered\" label=\" \" />\n        <TextField source=\"sold\" label=\" \" />\n        <TextField source=\"capacity\" label=\" \" />\n      </Datagrid>\n    </ArrayField>\n  )\n}\n\nconst ObjectGrid = () => {\n  const translate = useTranslate()\n\n  const objectHeader = () => (\n    <TableHead>\n      <TableRow>\n        <TableCell style={{ width: \"10%\" }} />\n        <TableCell style={{ width: \"45%\" }}>{translate('resources.stats-overall-view.fields.tribune')}</TableCell>\n        <TableCell style={{ width: \"15%\" }} />\n        <TableCell style={{ width: \"15%\" }} />\n        <TableCell style={{ width: \"15%\" }} />\n      </TableRow>\n    </TableHead>\n  )\n\n  return (\n    <ArrayField source=\"tribunes\">\n      <Datagrid expand={<TribuneGrid />} padding=\"none\" header={objectHeader}>\n        <TextField source=\"name\" label=\"Trybuna\" />\n        <TextField source=\"entered\" label=\" \" />\n        <TextField source=\"sold\" label=\" \" />\n        <TextField source=\"capacity\" label=\" \" />\n      </Datagrid>\n    </ArrayField>\n  )\n}\n\nexport const OverallView = (props: ShowProps) => {\n  const translate = useTranslate()\n\n  const overallHeader = () => (\n    <TableHead>\n      <TableRow>\n        <TableCell style={{ width: \"5%\" }} />\n        <TableCell style={{ width: \"50%\" }}>{translate('resources.stats-overall-view.fields.name')}</TableCell>\n        <TableCell style={{ width: \"15%\" }}>{translate('resources.stats-overall-view.fields.entered')}</TableCell>\n        <TableCell style={{ width: \"15%\" }}>{translate('resources.stats-overall-view.fields.sold')}</TableCell>\n        <TableCell style={{ width: \"15%\" }}>{translate('resources.stats-overall-view.fields.capacity')}</TableCell>\n      </TableRow>\n    </TableHead>\n  )\n\n  return (\n    <Show title={<ViewTitle />} {...props}>\n      <ArrayField source=\"objects\">\n        <Datagrid expand={<ObjectGrid />} padding=\"none\" header={overallHeader}>\n          <TextField source=\"name\" label=\"Obiekt\" />\n          <TextField source=\"entered\" />\n          <TextField source=\"sold\" />\n          <TextField source=\"capacity\" />\n        </Datagrid>\n      </ArrayField>\n    </Show>\n  )\n}","import * as React from 'react'\nimport {\n  Datagrid,\n  DateField,\n  Filter,\n  FilterProps,\n  List,\n  ListProps,\n  TextField,\n  TextInput,\n  useListContext,\n} from 'react-admin'\nimport { ResourceName } from '../../../core/ResourceName'\n\nconst ListFilters = (props: Omit<FilterProps, 'children'>) => (\n  <Filter {...props}>\n    <TextInput source=\"name\" alwaysOn />\n  </Filter>\n)\n\nconst OverallViewGrid = () => {\n  const { loading } = useListContext()\n  // TODO: header doesn't change color when theme value is switched\n  //  the reason is the need to change the theme at <Admin> level - not at <Layout> level\n  //  the solution is here - https://stackoverflow.com/a/63967145 -> after that customReducer needs to be removed\n  return (\n    <Datagrid\n      loaded={!loading}\n      rowClick={(id) => `${ResourceName.STATS_OVERALL_VIEW}/${id}/show`}\n    >\n      <TextField source=\"id\" />\n      <TextField source=\"name\" />\n      <DateField source=\"dateStart\" showTime />\n      <DateField source=\"dateEnd\" showTime />\n    </Datagrid>\n  )\n}\n\nexport const OverallViewList = (props: ListProps) => (\n  <List {...props} actions={false} filters={<ListFilters />} sort={{ field: 'id', order: 'DESC'}} >\n    <OverallViewGrid />\n  </List>\n)\n","import {\n  List,\n  ListProps,\n  useListContext,\n  useTranslate,\n  useMutation,\n  sanitizeFetchType,\n  Record,\n  useRefresh,\n  UPDATE_MANY,\n  useListSortContext,\n  TextField,\n  DateField,\n  FunctionField,\n} from 'react-admin'\nimport React from 'react'\nimport {\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from '@material-ui/core'\nimport { ArrowDownward, ArrowUpward } from '@material-ui/icons'\nimport { AccessUsingDto } from '../../../core/dto/access-using.dto'\nimport { ResourceName } from '../../../core/ResourceName'\n\nconst AccessUsingsGrid = () => {\n  const translate = useTranslate()\n  const { data, ids } = useListContext()\n  const [mutate] = useMutation()\n  const refresh = useRefresh()\n  const { currentSort, setSort } = useListSortContext()\n\n  const patchAccess = async (access: AccessUsingDto) => {\n    await mutate(\n      {\n        type: sanitizeFetchType(UPDATE_MANY),\n        resource: ResourceName.ACCESS_USINGS,\n        payload: {\n          ids: [access.id],\n          data: {\n            active: !access.active,\n          },\n        },\n      },\n      { returnPromise: true },\n    )\n    refresh()\n  }\n\n  const inverseOrder = () => (currentSort.order === 'ASC' ? 'DESC' : 'ASC')\n\n  const handleSortChange = (field: string) => {\n    setSort(field, currentSort.field === field ? inverseOrder() : 'DESC')\n  }\n\n  const HeaderCell = (name: string, display: string) => (\n    <div style={{ display: 'flex', cursor: 'pointer', textAlign: 'center' }}>\n      {currentSort.field === name && (\n        <>{currentSort.order === 'ASC' ? <ArrowUpward /> : <ArrowDownward />}</>\n      )}\n      <div> {translate(display)} </div>\n    </div>\n  )\n\n  return (\n    <TableContainer>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell onClick={() => handleSortChange('date')}>\n              {HeaderCell('date', 'resources.access-usings.fields.date')}\n            </TableCell>\n            <TableCell onClick={() => handleSortChange('direction')}>\n              {HeaderCell('direction', 'resources.access-usings.fields.direction')}\n            </TableCell>\n            <TableCell onClick={() => handleSortChange('active')}>\n              {HeaderCell('active', 'resources.access-usings.fields.active')}\n            </TableCell>\n            <TableCell>\n              {translate('resources.access-usings.fields.ticketId')}\n            </TableCell>\n            <TableCell style={{ width: '20%' }} />\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {ids.map((id) => (\n            <TableRow key={id}>\n              <TableCell>\n                <DateField\n                  source=\"date\"\n                  record={data[id] as AccessUsingDto}\n                  showTime\n                />\n              </TableCell>\n              <TableCell>\n                <TextField\n                  source=\"direction\"\n                  record={data[id] as AccessUsingDto}\n                />\n              </TableCell>\n              <TableCell>\n                <FunctionField\n                  record={data[id]}\n                  render={(record: Record | undefined) =>\n                    record?.active\n                      ? translate('const.yes')\n                      : translate('const.no')\n                  }\n                />\n              </TableCell>\n              <TableCell>\n                <TextField\n                  source=\"ticketCode\"\n                  record={data[id] as AccessUsingDto}\n                />\n              </TableCell>\n              <TableCell>\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  style={{ width: '100%', fontSize: '13px' }}\n                  onClick={() => patchAccess(data[id] as AccessUsingDto)}\n                >\n                  {translate(\n                    `resources.access-usings.actions.${data[id].active ? `deactivate` : `activate`\n                    }`,\n                  )}\n                </Button>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n\nexport const AccessUsingsList = (props: ListProps) => (\n  <List\n    {...props}\n    exporter={false}\n    perPage={20}\n    sort={{ field: 'date', order: 'DESC' }}\n  >\n    <AccessUsingsGrid />\n  </List>\n)\n","import { TicketType } from '../enum/TicketType'\nimport { BookingType } from '../enum/BookingType'\n\nconst bookingTypeMapping: Record<BookingType, string> = {\n  [BookingType.NORMAL]: 'resources.enums.bookingType.normal',\n  [BookingType.ABO]: 'resources.enums.bookingType.abo',\n  [BookingType.INFIX]: 'resources.enums.bookingType.infix',\n  [BookingType.POINTS]: 'resources.enums.bookingType.points',\n  [BookingType.SERVICE]: 'resources.enums.bookingType.service',\n}\n\nconst ticketTypeMapping: Record<TicketType, string> = {\n  [TicketType.K]: 'resources.enums.ticketType.k',\n  [TicketType.M]: 'resources.enums.ticketType.m',\n  [TicketType.Z]: 'resources.enums.ticketType.z',\n  [TicketType.N]: 'resources.enums.ticketType.n',\n  [TicketType.P]: 'resources.enums.ticketType.p',\n  [TicketType.U]: 'resources.enums.ticketType.u',\n  [TicketType.R]: 'resources.enums.ticketType.r',\n}\n\nexport const mapFromBookingType = (bookingType: BookingType): string =>\n  bookingTypeMapping[bookingType]\n\nexport const mapFromTicketType = (ticketType: TicketType): string =>\n  ticketTypeMapping[ticketType]\n","import * as React from 'react'\nimport { useShowContext } from 'react-admin'\nimport {\n  Box,\n  createStyles,\n  makeStyles,\n  Theme,\n  Typography,\n} from '@material-ui/core'\nimport { TicketDetails } from '../../core/ticket-details/ticket-details'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    header: {\n      letterSpacing: theme.spacing(0.2),\n    },\n  }),\n)\nexport const TicketDetailsHeader = () => {\n  const classes = useStyles()\n  const { record } = useShowContext<TicketDetails>()\n  return (\n    <Box m={2}>\n      <Typography className={classes.header} variant=\"h5\" paragraph>\n        {record?.firstname} {record?.lastname}\n      </Typography>\n    </Box>\n  )\n}\n","import * as React from 'react'\nimport {\n  DateField,\n  Labeled,\n  TextField,\n  TextFieldProps,\n  useRecordContext,\n  useTranslate,\n} from 'react-admin'\nimport {\n  Box,\n  Chip,\n  createStyles,\n  makeStyles,\n  Paper,\n  Theme,\n} from '@material-ui/core'\nimport { mapFromTicketType } from '../../core/ticket-details/ticket-details-values.mapper'\nimport { TicketDetails } from '../../core/ticket-details/ticket-details'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ticketBox: {\n      display: 'flex',\n      flexDirection: 'column',\n      padding: theme.spacing(1),\n      marginLeft: theme.spacing(1),\n    },\n    ticketField: {\n      padding: theme.spacing(0),\n      margin: theme.spacing(0),\n      marginBottom: theme.spacing(0.5),\n    },\n  }),\n)\n\nexport const TicketDetailsTicketsField = ({ label }: TextFieldProps) => {\n  const classes = useStyles()\n  const t = useTranslate()\n  const record = useRecordContext<TicketDetails>()\n  const mappedRecords = (record.tickets || []).map(\n    ({ id, ticketType, createdAt, ticketCode }) => ({\n      id,\n      ticketCode,\n      ticketType: mapFromTicketType(ticketType),\n      createdAt,\n    }),\n  )\n  const fields = mappedRecords.map((mappedRecord) => (\n    <Paper\n      key={mappedRecord.id}\n      variant=\"elevation\"\n      className={classes.ticketBox}\n    >\n      <Labeled\n        className={classes.ticketField}\n        label=\"resources.ticket-details.fields.tickets.fields.id\"\n      >\n        <TextField\n          className={classes.ticketField}\n          record={mappedRecord}\n          source=\"id\"\n        />\n      </Labeled>\n      <Labeled\n        className={classes.ticketField}\n        label=\"resources.ticket-details.fields.tickets.fields.ticketCode\"\n      >\n        <TextField\n          className={classes.ticketField}\n          record={mappedRecord}\n          source=\"ticketCode\"\n        />\n      </Labeled>\n      <Labeled\n        className={classes.ticketField}\n        label=\"resources.ticket-details.fields.tickets.fields.ticketType\"\n      >\n        <Chip\n          label={t(mappedRecord.ticketType)}\n          className={classes.ticketField}\n        />\n      </Labeled>\n      <Labeled\n        className={classes.ticketField}\n        label=\"resources.ticket-details.fields.tickets.fields.createdAt\"\n      >\n        <DateField\n          className={classes.ticketField}\n          record={mappedRecord}\n          source=\"createdAt\"\n          showTime\n        />\n      </Labeled>\n    </Paper>\n  ))\n  return (\n    <Labeled label={label}>\n      <Box display=\"flex\" flexWrap=\"wrap\" flexDirection=\"row\">\n        {fields}\n      </Box>\n    </Labeled>\n  )\n}\n","import {\n  CREATE,\n  CreateParams,\n  sanitizeFetchType,\n  UPDATE_MANY,\n  UpdateManyParams,\n} from 'react-admin'\nimport { TicketDetails } from './ticket-details'\nimport { ResourceName } from '../ResourceName'\nimport { AccessUsingsCreateParams } from '../access-usings/access-usings-create.params'\nimport { ToggleType, Action, ToggleButtonState } from './toggle-button'\n\ntype Mutation = {\n  type: string\n  resource: string\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  payload?: object\n}\n\nconst blockMutation = (ticketDetails: TicketDetails): Mutation => {\n  const { accessesIds, tickets } = ticketDetails\n  const ticketIds = tickets.map((t) => t.id)\n  return {\n    type: sanitizeFetchType(CREATE),\n    resource: ResourceName.ACCESS_USINGS,\n    payload: {\n      data: { ticketIds, accessIds: accessesIds },\n    } as CreateParams<AccessUsingsCreateParams>,\n  }\n}\n\nconst unblockMutation = ({ tickets }: TicketDetails): Mutation => {\n  const activeAccessUsingIds = tickets\n    .flatMap((t) => t.accessUsings)\n    .filter((au) => au.active)\n    .map((au) => au.id)\n  return {\n    type: sanitizeFetchType(UPDATE_MANY),\n    resource: ResourceName.ACCESS_USINGS,\n    payload: {\n      ids: activeAccessUsingIds,\n      data: {\n        active: false\n      }\n    } as UpdateManyParams,\n  }\n}\n\ntype State = {\n  mutateQuery?: (ticketDetails: TicketDetails) => Mutation\n} & ToggleButtonState\n\nexport const blockAccessButtonInitialState = {\n  type: ToggleType.DISABLED,\n  text: 'resources.ticket-details.actions.blockAccessNA',\n}\n\nexport const toggleAccessButtonReducer = (\n  state: State,\n  { type }: Action,\n): State => {\n  switch (type) {\n    case ToggleType.BLOCK: {\n      return {\n        type,\n        text: 'resources.ticket-details.actions.blockAccess',\n        mutateQuery: blockMutation,\n      }\n    }\n    case ToggleType.UNBLOCK: {\n      return {\n        type,\n        text: 'resources.ticket-details.actions.unblockAccess',\n        mutateQuery: unblockMutation,\n      }\n    }\n    case ToggleType.DISABLED: {\n      return blockAccessButtonInitialState\n    }\n    default:\n      throw new Error()\n  }\n}\n","export enum Multiplicities {\n  SINGLE = 'SINGLE',\n  MULTIPLE = 'MULTIPLE',\n  CHECK_ALL = 'CHECK_ALL'\n}","import * as React from 'react'\nimport { useEffect, useReducer } from 'react'\nimport {\n  useMutation,\n  useNotify,\n  useRecordContext,\n  useRefresh,\n  useShowContext,\n  useTranslate,\n} from 'react-admin'\nimport { Button, createStyles, makeStyles, Theme } from '@material-ui/core'\nimport { ToggleType } from '../../core/ticket-details/toggle-button'\nimport { TicketDetails } from '../../core/ticket-details/ticket-details'\nimport {\n  blockAccessButtonInitialState,\n  toggleAccessButtonReducer,\n} from '../../core/ticket-details/toggle-access-button.reducer'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    button: {\n      color: theme.palette.common.white,\n      marginLeft: theme.spacing(1),\n    },\n  }),\n)\n\nexport const ToggleAccessButton = () => {\n  const classes = useStyles()\n  const t = useTranslate()\n  const notify = useNotify()\n  const { loading } = useShowContext()\n  const [{ type, text, mutateQuery }, dispatch] = useReducer(\n    toggleAccessButtonReducer,\n    blockAccessButtonInitialState,\n  )\n  const ticketDetails = useRecordContext<TicketDetails>()\n  const [mutate, { loading: mutationLoading }] = useMutation()\n  const refresh = useRefresh()\n\n  const isActive = (td: TicketDetails) =>\n    td.tickets.some((ticket) => ticket.accessUsings.some((a) => a.active))\n\n  useEffect(() => {\n    if (isActive(ticketDetails)) {\n      dispatch({ type: ToggleType.UNBLOCK })\n    } else {\n      dispatch({ type: ToggleType.BLOCK })\n    }\n  }, [ticketDetails])\n\n  const onClick = async () => {\n    try {\n      const query = mutateQuery?.(ticketDetails)\n      await mutate(query, { returnPromise: true })\n      refresh()\n    } catch (err) {\n      notify((err as Error)?.message, 'error')\n    }\n  }\n\n  return (\n    <Button\n      disabled={type === ToggleType.DISABLED || loading || mutationLoading}\n      className={classes.button}\n      variant=\"contained\"\n      color=\"secondary\"\n      onClick={onClick}\n    >\n      {t(text)}\n    </Button>\n  )\n}\n","import { ToggleType, Action, ToggleButtonState } from './toggle-button'\nimport { BookingUpdateRequest } from '../bookings/booking-update.request'\nimport { BookingDisabledOption } from '../enum/BookingDisabledOption'\n\ntype State = {\n  mutateParam?: BookingUpdateRequest['disabled']\n} & ToggleButtonState\n\nexport const blockTicketButtonInitialState = {\n  type: ToggleType.DISABLED,\n  text: 'resources.ticket-details.actions.blockTicketNA',\n}\n\nexport const toggleTicketButtonReducer = (\n  state: State,\n  { type }: Action,\n): State => {\n  switch (type) {\n    case ToggleType.BLOCK: {\n      return {\n        type,\n        text: 'resources.ticket-details.actions.blockTicket',\n        mutateParam: BookingDisabledOption.ADMIN,\n      }\n    }\n    case ToggleType.UNBLOCK: {\n      return {\n        type,\n        text: 'resources.ticket-details.actions.unblockTicket',\n        mutateParam: null,\n      }\n    }\n    case ToggleType.DISABLED: {\n      return blockTicketButtonInitialState\n    }\n    default:\n      throw new Error()\n  }\n}\n","import * as React from 'react'\nimport { useEffect, useReducer } from 'react'\nimport {\n  sanitizeFetchType,\n  UPDATE,\n  UpdateParams,\n  useMutation,\n  useNotify,\n  useRecordContext,\n  useRefresh,\n  useShowContext,\n  useTranslate,\n} from 'react-admin'\nimport { Button, createStyles, makeStyles, Theme } from '@material-ui/core'\nimport { TicketDetails } from '../../core/ticket-details/ticket-details'\nimport { BookingUpdateRequest } from '../../core/bookings/booking-update.request'\nimport { BookingDisabledOption } from '../../core/enum/BookingDisabledOption'\nimport { ResourceName } from '../../core/ResourceName'\nimport {\n  blockTicketButtonInitialState,\n  toggleTicketButtonReducer,\n} from '../../core/ticket-details/toggle-ticket-button.reducer'\nimport { ToggleType } from '../../core/ticket-details/toggle-button'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    button: {\n      color: theme.palette.common.white,\n      marginLeft: theme.spacing(1),\n    },\n  }),\n)\n\nexport const ToggleTicketButton = () => {\n  const classes = useStyles()\n  const t = useTranslate()\n  const notify = useNotify()\n  const { loading } = useShowContext()\n  const [{ type, text, mutateParam }, dispatch] = useReducer(\n    toggleTicketButtonReducer,\n    blockTicketButtonInitialState,\n  )\n  const { id: bookingId, bookingDisabled } = useRecordContext<TicketDetails>()\n  const [mutate, { loading: mutationLoading }] = useMutation()\n  const refresh = useRefresh()\n\n  useEffect(() => {\n    if (bookingDisabled === null) {\n      dispatch({ type: ToggleType.BLOCK })\n    } else if (bookingDisabled === BookingDisabledOption.ADMIN) {\n      dispatch({ type: ToggleType.UNBLOCK })\n    } else {\n      dispatch({ type: ToggleType.DISABLED })\n    }\n  }, [bookingDisabled])\n\n  const onClick = async () => {\n    try {\n      await mutate(\n        {\n          type: sanitizeFetchType(UPDATE),\n          resource: ResourceName.BOOKINGS,\n          payload: {\n            data: { id: bookingId, disabled: mutateParam },\n          } as UpdateParams<BookingUpdateRequest>,\n        },\n        { returnPromise: true },\n      )\n      refresh()\n    } catch (err) {\n      notify((err as Error)?.message, 'error')\n    }\n  }\n\n  return (\n    <Button\n      disabled={type === ToggleType.DISABLED || loading || mutationLoading}\n      className={classes.button}\n      variant=\"contained\"\n      color=\"secondary\"\n      onClick={onClick}\n    >\n      {t(text)}\n    </Button>\n  )\n}\n","import React from 'react'\nimport {\n  useMediaQuery,\n  useTheme,\n  TableContainer,\n  Table,\n  TableHead,\n  TableBody,\n  TableRow,\n  TableCell,\n} from '@material-ui/core'\nimport { ListProps, List, Pagination, useListContext, useTranslate } from 'react-admin'\nimport { MobilePostPagination } from '../../common/Pagination'\n\ninterface AccessListProps extends ListProps {\n  setSelected: (prop: number | undefined) => void\n}\n\nconst AccessGrid = ({\n  setSelected,\n}: {\n  setSelected: (prop: number | undefined) => void\n}) => {\n  const translate = useTranslate()\n  const { data, ids } = useListContext()\n\n  return (\n    <>\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>ID</TableCell>\n              <TableCell>{translate('resources.access.fields.name')}</TableCell>\n              <TableCell>{translate('resources.access.fields.entranceId')}</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {ids.map((id) => (\n              <TableRow key={id} style={{ cursor: 'pointer' }} hover>\n                <TableCell onClick={() => setSelected(id as number)}>\n                  {data[id]?.id}\n                </TableCell>\n                <TableCell onClick={() => setSelected(id as number)}>\n                  {data[id]?.name}\n                </TableCell>\n                <TableCell onClick={() => setSelected(id as number)}>\n                  {data[id]?.entranceId}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  )\n}\n\nexport const AccessList = ({setSelected, ...props}: AccessListProps) => {\n  const theme = useTheme()\n\n  return (\n    <List\n      perPage={20}\n      exporter={false}\n      pagination={\n        useMediaQuery(theme.breakpoints.up('md')) ? (\n          <Pagination rowsPerPageOptions={[20, 50, 100]} />\n        ) : (\n          <MobilePostPagination />\n        )\n      }\n      {...props}\n    >\n      <AccessGrid setSelected={setSelected} />\n    </List>\n  )\n}\n","import { ButtonBase, Typography, withStyles } from '@material-ui/core'\n\nexport const FullWidthButton = withStyles({\n  root: {\n    width: '100%',\n    height: '52px',\n    fontSize: '17px',\n    marginBottom: '1px',\n    '&:hover': {\n      color: 'lightgrey',\n    }\n  },\n})(ButtonBase)\n\nexport const BackButton = withStyles({\n  root: {\n    height: '100%',\n    writingMode: 'vertical-lr',\n    textOrientation: 'mixed',\n    width: '100%',\n    '&:hover': {\n      color: 'lightgrey'\n    }\n  }\n})(ButtonBase)\n\nexport const BackButtonText = withStyles({\n  root: {\n    writingMode: 'vertical-lr',\n    textOrientation: 'mixed',\n  }\n})(Typography)","import {\n  List,\n  ListProps,\n  useListContext,\n  useTranslate,\n  TextField,\n  DateField,\n  useListSortContext\n} from 'react-admin'\nimport React, { useState } from 'react'\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  IconButton,\n  Collapse,\n} from '@material-ui/core'\nimport { ArrowDropUp, ArrowDropDown, ArrowUpward, ArrowDownward } from '@material-ui/icons'\nimport { AccessDateDto } from '../../../core/dto/access-date.dto'\n\nconst AccessDatesRow = ({ record }: { record: AccessDateDto }) => {\n  const [open, setOpen] = useState(false)\n  const translate = useTranslate()\n  return (\n    <>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <IconButton\n            onClick={() => setOpen((state) => !state)}\n            style={{ width: 40, height: 40 }}\n          >\n            {open ? <ArrowDropUp /> : <ArrowDropDown />}\n          </IconButton>\n        </TableCell>\n        <TableCell>\n          <DateField record={record} source=\"activeFrom\" />\n        </TableCell>\n        <TableCell>\n          <DateField record={record} source=\"activeTo\" />\n        </TableCell>\n        <TableCell>\n          <TextField record={record} source=\"type\" />\n        </TableCell>\n        <TableCell>\n          <TextField record={record} source=\"priority\" />\n        </TableCell>\n      </TableRow>\n      {(record.dayOfWeek || record.timeFrom || record.timeTo) && (\n        <TableRow>\n          <TableCell colSpan={5} style={{ paddingBottom: 0, paddingTop: 0 }}>\n            <Collapse in={open}>\n              <TableContainer>\n                <Table>\n                  <TableBody>\n                    {record.dayOfWeek && (\n                      <TableRow>\n                        <TableCell>\n                          {translate('resources.access-dates.fields.dayOfWeek')}\n                        </TableCell>\n                        <TableCell style={{ textAlign: 'end' }}>\n                          <TextField\n                            record={record}\n                            source=\"dayOfWeek\"\n                            label=\" \"\n                          />\n                        </TableCell>\n                      </TableRow>\n                    )}\n                    {record.timeFrom && (\n                      <TableRow>\n                        <TableCell>\n                          {translate('resources.access-dates.fields.timeFrom')}\n                        </TableCell>\n                        <TableCell style={{ textAlign: 'end' }}>\n                          <DateField\n                            record={record}\n                            source=\"timeFrom\"\n                            label=\" \"\n                            showTime\n                          />\n                        </TableCell>\n                      </TableRow>\n                    )}\n                    {record.timeTo && (\n                      <TableRow>\n                        <TableCell>\n                          {translate('resources.access-dates.fields.timeTo')}\n                        </TableCell>\n                        <TableCell style={{ textAlign: 'end' }}>\n                          <DateField\n                            record={record}\n                            source=\"timeTo\"\n                            label=\" \"\n                            showTime\n                          />\n                        </TableCell>\n                      </TableRow>\n                    )}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n            </Collapse>\n          </TableCell>\n        </TableRow>\n      )}\n    </>\n  )\n}\n\nconst AccessDatesGrid = () => {\n  const translate = useTranslate()\n  const { data, ids } = useListContext()\n  const { currentSort, setSort } = useListSortContext()\n\n  const inverseOrder = () => (currentSort.order === 'ASC' ? 'DESC' : 'ASC')\n\n  const handleSortChange = (field: string) => {\n    setSort(field, currentSort.field === field ? inverseOrder() : 'DESC')\n  }\n\n  const HeaderCell = (name: string, display: string) => (\n    <div style={{ display: 'flex', cursor: 'pointer', textAlign: 'center' }}>\n      {currentSort.field === name && (\n        <>{currentSort.order === 'ASC' ? <ArrowUpward /> : <ArrowDownward />}</>\n      )}\n      <div> {translate(display)} </div>\n    </div>\n  )\n\n  return (\n    <TableContainer>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell style={{ width: '5%' }} />\n            <TableCell onClick={() => handleSortChange('activeFrom')}>\n              {HeaderCell('activeFrom', 'resources.access-dates.fields.activeFrom')}\n            </TableCell>\n            <TableCell onClick={() => handleSortChange('activeTo')}>\n              {HeaderCell('activeTo', 'resources.access-dates.fields.activeTo')}\n            </TableCell>\n            <TableCell onClick={() => handleSortChange('type')}>\n              {HeaderCell('type', 'resources.access-dates.fields.type')}\n            </TableCell>\n            <TableCell>\n              {translate('resources.access-dates.fields.priority')}\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {ids.map((id) => (\n            <AccessDatesRow key={id} record={data[id] as AccessDateDto} />\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n\nexport const AccessDatesList = (props: ListProps) => (\n  <List\n    {...props}\n    exporter={false}\n    perPage={20}\n    sort={{ field: 'id', order: 'DESC' }}\n  >\n    <AccessDatesGrid />\n  </List>\n)\n","import React, { useState } from 'react'\nimport {\n  ShowProps,\n  Show,\n  useShowContext,\n  ResourceContextProvider,\n  useTranslate,\n  TextField,\n  DateField,\n  FunctionField,\n  Record,\n  Pagination\n} from 'react-admin'\nimport {\n  TableContainer,\n  Table,\n  TableBody,\n  TableRow,\n  TableCell,\n  Grid,\n  Paper,\n  Box,\n} from '@material-ui/core'\nimport { Access } from '../../../core/accesses/access'\nimport { FullWidthButton } from '../TicketDetailsComponents'\nimport { ResourceName } from '../../../core/ResourceName'\nimport { AccessUsingsList } from './AccessUsingsList'\nimport { AccessDatesList } from './AccessDatesList'\nimport { AccessActivePeriodStartingOptions } from '../../../core/enum/AccessActivePeriodStartingOptions'\n\nconst TabButton = ({\n  value,\n  selected,\n  change,\n  children,\n}: {\n  value: number\n  selected: number\n  change: (prop: number) => void\n  children: any\n}) => (\n  <FullWidthButton\n    style={{\n      background: selected === value ? 'rgba(0,0,0,0.2)' : 'inherit',\n    }}\n    onClick={() => change(value)}\n  >\n    {children}\n  </FullWidthButton>\n)\n\nconst AccessDetails = () => {\n  const translate = useTranslate()\n  const { record: access } = useShowContext<Access>()\n  return (\n    <TableContainer>\n      <Table>\n        <TableBody>\n          <TableRow>\n            <TableCell style={{ width: '50%' }}>ID</TableCell>\n            <TableCell style={{ width: '50%' }}>\n              <TextField source=\"id\" />\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>{translate('resources.access.fields.name')}</TableCell>\n            <TableCell>\n              <TextField source=\"name\" />\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>{translate('resources.access.fields.bonus')}</TableCell>\n            <TableCell>\n              <FunctionField\n                render={(record: Record | undefined) =>\n                  translate(`resources.enums.bonus.${record?.bonus}`)\n                }\n              />\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              {translate('resources.access.fields.entranceId')}\n            </TableCell>\n            <TableCell>\n              <TextField source=\"entranceId\" />\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              {translate('resources.access.fields.modifiedById')}\n            </TableCell>\n            <TableCell>\n              <TextField source=\"modifiedByName\" />\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              {translate('resources.access.fields.createdById')}\n            </TableCell>\n            <TableCell>\n              <TextField source=\"createdByName\" />\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              {translate('resources.access.fields.allowReenter')}\n            </TableCell>\n            <TableCell>\n              <FunctionField\n                render={(record: Record | undefined) =>\n                  record?.allowReenter\n                    ? translate('const.yes')\n                    : translate('const.no')\n                }\n              />\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              {translate('resources.access.fields.multipleEntry')}\n            </TableCell>\n            <TableCell>\n              <FunctionField\n                render={(record: Record | undefined) =>\n                  record?.multipleEntry\n                    ? translate('const.yes')\n                    : translate('const.no')\n                }\n              />\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              {translate('resources.access.fields.multiple')}\n            </TableCell>\n            <TableCell>\n              <TextField source=\"multiple\" />\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              {translate('resources.access.fields.usePriority')}\n            </TableCell>\n            <TableCell>\n              <TextField source=\"usePriority\" />\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>{translate('resources.access.fields.delay')}</TableCell>\n            <TableCell>\n              <TextField source=\"delay\" />\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              {translate('resources.access.fields.releaseTime')}\n            </TableCell>\n            <TableCell>\n              <DateField source=\"releaseTime\" />\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              {translate('resources.access.fields.releaseDayOfMonth')}\n            </TableCell>\n            <TableCell>\n              <TextField source=\"releaseDayOfMonth\" />\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              {translate('resources.access.fields.releaseDayOfWeek')}\n            </TableCell>\n            <TableCell>\n              <TextField source=\"releaseDayOfWeek\" />\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              {translate('resources.access.fields.createdAt')}\n            </TableCell>\n            <TableCell>\n              <DateField source=\"createdAt\" />\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              {translate('resources.access.fields.modifiedAt')}\n            </TableCell>\n            <TableCell>\n              <DateField source=\"modifiedAt\" />\n            </TableCell>\n          </TableRow>\n          {access?.activePeriodStartingFrom !==\n            AccessActivePeriodStartingOptions.NO_LIMIT && (\n              <TableRow>\n                <TableCell>\n                  {translate('resources.access.fields.activePeriod')}\n                </TableCell>\n                <TableCell>\n                  <TextField source=\"activePeriod\" />\n                </TableCell>\n              </TableRow>\n            )}\n          <TableRow>\n            <TableCell>\n              {translate('resources.access.fields.activePeriodStartingFrom')}\n            </TableCell>\n            <TableCell>\n              <FunctionField\n                render={(record: Record | undefined) =>\n                  translate(\n                    `resources.enums.activePeriodStartingFrom.${record?.activePeriodStartingFrom}`,\n                  )\n                }\n              />\n            </TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n\nconst AccessDates = () => {\n  const { basePath, record } = useShowContext<Access>()\n  return (\n    <Box>\n      <ResourceContextProvider value={ResourceName.ACCESS_DATES}>\n        <AccessDatesList\n          title=\" \"\n          basePath={basePath}\n          filter={{\n            id: record?.accessDatesIds.join(','),\n          }}\n          actions={false}\n          perPage={20}\n          pagination={<Pagination rowsPerPageOptions={[20, 50, 100]} />}\n        />\n      </ResourceContextProvider>\n    </Box>\n  )\n}\n\nconst AccessUses = ({ id, tickets }: { id: string; tickets: number[] }) => {\n  const { basePath } = useShowContext<Access>()\n  return (\n    <Box>\n      <ResourceContextProvider value={ResourceName.ACCESS_USINGS}>\n        <AccessUsingsList\n          title=\" \"\n          basePath={basePath}\n          filter={{\n            ticketId: tickets.join(' '),\n            accessId: id,\n          }}\n          actions={false}\n          perPage={20}\n          pagination={<Pagination rowsPerPageOptions={[20, 50, 100]} />}\n        />\n      </ResourceContextProvider>\n    </Box>\n  )\n}\n\nexport const AccessShow = (props: ShowProps) => {\n  const translate = useTranslate()\n  const [selectedTab, setSelectedTab] = useState(0)\n  const { record } = useShowContext()\n  const { id } = props\n\n  const handleTabChange = (prop: number) => setSelectedTab(prop)\n\n  return (\n    <Show {...props}>\n      <>\n        <Grid container>\n          <Grid item xs={4}>\n            <Paper style={{ height: '100%' }}>\n              <TabButton\n                value={0}\n                selected={selectedTab}\n                change={handleTabChange}\n              >\n                {translate('resources.access.tabs.details')}\n              </TabButton>\n              <TabButton\n                value={1}\n                selected={selectedTab}\n                change={handleTabChange}\n              >\n                {translate('resources.access.tabs.dates')}\n              </TabButton>\n              <TabButton\n                value={2}\n                selected={selectedTab}\n                change={handleTabChange}\n              >\n                {translate('resources.access.tabs.uses')}\n              </TabButton>\n            </Paper>\n          </Grid>\n          <Grid item xs={8}>\n            <Paper style={{ height: '100%' }}>\n              {selectedTab === 0 && <AccessDetails />}\n              {selectedTab === 1 && <AccessDates />}\n              {selectedTab === 2 && (\n                <AccessUses\n                  id={id as string}\n                  tickets={\n                    record?.tickets.map((ticket: any) => ticket.id) as number[]\n                  }\n                />\n              )}\n            </Paper>\n          </Grid>\n        </Grid>\n      </>\n    </Show>\n  )\n}\n","import React, { useEffect } from 'react'\nimport {\n  ChipFieldProps,\n  DateField,\n  Labeled,\n  ResourceContextProvider,\n  Show,\n  ShowProps,\n  Tab,\n  TabbedShowLayout,\n  TextField,\n  useRecordContext,\n  useTranslate,\n  useShowContext,\n} from 'react-admin'\nimport { Box, Chip, Divider, Hidden, Grid, Typography } from '@material-ui/core'\nimport { TicketDetails } from '../../core/ticket-details/ticket-details'\nimport { mapFromBookingType } from '../../core/ticket-details/ticket-details-values.mapper'\nimport { TicketDetailsHeader } from './TicketDetailsHeader'\nimport { TicketDetailsTicketsField } from './TicketDetailsTicketsField'\nimport { ToggleAccessButton } from './ToggleAccessButton'\nimport { ToggleTicketButton } from './ToggleTicketButton'\nimport { ResourceName } from '../../core/ResourceName'\nimport { LogList } from '../logs/LogList'\nimport { AccessList } from './accesses/AccessList'\nimport { AccessShow } from './accesses/AccessShow'\nimport { BackButton, BackButtonText } from './TicketDetailsComponents'\n\nconst MappedChipField = <T extends unknown>({\n  mapper,\n  source,\n}: ChipFieldProps & { mapper: (value: T) => string }) => {\n  const record = useRecordContext<TicketDetails>()\n  const t = useTranslate()\n  const mappedValue = mapper(record[source as string])\n  return <Chip label={t(mappedValue)} />\n}\n\nconst AccessDetailsView = () => {\n  const { record, basePath } = useShowContext()\n  const translate = useTranslate()\n  const [selectedAccess, setSelectedAccess] = React.useState<\n    number | undefined\n  >(undefined)\n\n  const handleAccessChange = (prop: number | undefined) => {\n    setSelectedAccess(prop)\n  }\n\n  useEffect(() => {\n    if (record?.accessesIds && record.accessesIds.length === 1)\n      setSelectedAccess(record?.accessesIds.toString())\n  }, [record, setSelectedAccess])\n\n  return (\n    <>\n      <Divider />\n      <Hidden xlDown={!!selectedAccess && record?.accessesIds.length === 1}>\n        <Typography variant=\"h5\">\n          {translate('resources.access.actions.choose')}\n        </Typography>\n        <ResourceContextProvider value={ResourceName.ACCESSES}>\n          <AccessList\n            basePath={basePath}\n            actions={false}\n            filters={undefined}\n            filter={{ id: record?.accessesIds.toString() }}\n            title=\" \"\n            setSelected={handleAccessChange}\n          />\n        </ResourceContextProvider>\n      </Hidden>\n      {selectedAccess && (\n        <Box paddingY={2}>\n          <Grid container>\n            <Hidden xlDown={record?.accessesIds.length === 1}>\n              <Grid item xs={1}>\n                <BackButton onClick={() => setSelectedAccess(undefined)}>\n                  <BackButtonText>\n                    {translate('resources.access.actions.back')}\n                  </BackButtonText>\n                </BackButton>\n              </Grid>\n            </Hidden>\n            <Grid item xs={record?.accessesIds.length === 1 ? 12 : 11}>\n              <AccessShow\n                basePath={basePath}\n                actions={false}\n                id={selectedAccess.toString()}\n                resource={ResourceName.ACCESSES}\n                title=\" \"\n              />\n            </Grid>\n          </Grid>\n        </Box>\n      )}\n    </>\n  )\n}\n\nconst ProfileDetailsView = () => {\n  const { record } = useShowContext()\n  return (\n    <Tab label=\"resources.ticket-details.tabs.profile\">\n      {record?.documentType && (\n        <TextField\n          addLabel\n          label=\"resources.ticket-details.fields.documentType\"\n          source=\"documentType\"\n        />\n      )}\n      {record?.pesel && (\n        <TextField\n          label=\"resources.ticket-details.fields.pesel\"\n          source=\"pesel\"\n        />\n      )}\n      {record?.documentNumber && (\n        <TextField\n          label=\"resources.ticket-details.fields.documentNumber\"\n          source=\"documentNumber\"\n        />\n      )}\n      <TextField\n        label=\"resources.ticket-details.fields.firstname\"\n        source=\"firstname\"\n      />\n      <TextField\n        label=\"resources.ticket-details.fields.lastname\"\n        source=\"lastname\"\n      />\n      {record?.gender && (\n        <TextField\n          label=\"resources.ticket-details.fields.gender\"\n          source=\"gender\"\n        />\n      )}\n      {record?.birthdate && (\n        <DateField\n          label=\"resources.ticket-details.fields.birthdate\"\n          source=\"birthdate\"\n        />\n      )}\n      {record?.company && (\n        <TextField\n          label=\"resources.ticket-details.fields.company\"\n          source=\"company\"\n        />\n      )}\n      {record?.nationality && (\n        <TextField\n          label=\"resources.ticket-details.fields.nationality\"\n          source=\"nationality\"\n        />\n      )}\n    </Tab>\n  )\n}\n\nconst StatusButtons = () => (\n  <>\n    <Divider />\n    <Box p={1} display=\"flex\" justifyContent=\"flex-end\">\n      <ToggleAccessButton />\n      <ToggleTicketButton />\n    </Box>\n  </>\n)\n\nconst TicketMainView = () => {\n  const { record: ticketDetails } = useShowContext<TicketDetails>()\n  return (\n    <Tab label=\"resources.ticket-details.tabs.booking\">\n      <TextField\n        label=\"resources.ticket-details.fields.eventName\"\n        source=\"eventName\"\n      />\n      {ticketDetails?.seatId ? (\n        <TextField\n          label=\"resources.ticket-details.fields.seatId\"\n          source=\"seatId\"\n        />\n      ) : (\n        <TextField\n          label=\"resources.ticket-details.fields.bookingId\"\n          source=\"bookingId\"\n        />\n      )}\n      {ticketDetails?.objectName && (\n        <TextField\n          label=\"resources.ticket-details.fields.blockId\"\n          source=\"objectName\"\n        />\n      )}\n      {ticketDetails?.tribuneName && (\n        <TextField\n          label=\"resources.ticket-details.fields.tribuneName\"\n          source=\"tribuneName\"\n        />\n      )}\n      {ticketDetails?.blockName && (\n        <TextField\n          label=\"resources.ticket-details.fields.blockName\"\n          source=\"blockName\"\n        />\n      )}\n      {ticketDetails?.rowNumber && (\n        <TextField\n          label=\"resources.ticket-details.fields.rowNumber\"\n          source=\"rowNumber\"\n        />\n      )}\n      <Labeled label=\"resources.ticket-details.fields.bookingType\">\n        <MappedChipField source=\"bookingType\" mapper={mapFromBookingType} />\n      </Labeled>\n      {ticketDetails?.activeFrom && (\n        <DateField\n          label=\"resources.ticket-details.fields.activeFrom\"\n          source=\"activeFrom\"\n          showTime\n        />\n      )}\n      {ticketDetails?.activeTo && (\n        <DateField\n          label=\"resources.ticket-details.fields.activeTo\"\n          source=\"activeTo\"\n          showTime\n        />\n      )}\n      <TicketDetailsTicketsField label=\"resources.ticket-details.fields.tickets.name\" />\n      <DateField\n        label=\"resources.ticket-details.fields.createdAt\"\n        source=\"createdAt\"\n        showTime\n      />\n      <DateField\n        label=\"resources.ticket-details.fields.modifiedAt\"\n        source=\"modifiedAt\"\n        showTime\n      />\n      <StatusButtons />\n    </Tab>\n  )\n}\n\nconst TicketLogsView = () => {\n  const { record, basePath } = useShowContext()\n  return (\n    <ResourceContextProvider value={ResourceName.TICKET_LOGS}>\n      <LogList\n        basePath={basePath}\n        filter={{ bookingId: record?.id }}\n        filters={undefined}\n        actions={false}\n        title=\" \"\n        noBooking\n      />\n    </ResourceContextProvider>\n  )\n}\n\nexport const TicketDetailsView = (props: ShowProps) => (\n  <Show {...props}>\n    <>\n      <TicketDetailsHeader />\n      <Divider />\n      <TabbedShowLayout syncWithLocation={false}>\n        <Tab label=\"resources.ticket-details.tabs.booking\">\n          <TicketMainView />\n        </Tab>\n        <Tab label=\"resources.ticket-details.tabs.logs\">\n          <TicketLogsView />\n        </Tab>\n        <Tab label=\"resources.ticket-details.tabs.profile\">\n          <ProfileDetailsView />\n        </Tab>\n        <Tab label=\"resources.ticket-details.tabs.accesses\">\n          <TextField\n            label=\"resources.ticket-details.fields.variantName\"\n            source=\"variantName\"\n          />\n          <AccessDetailsView />\n        </Tab>\n      </TabbedShowLayout>\n    </>\n  </Show>\n)","import { Box, Divider, Typography } from '@material-ui/core'\nimport * as React from 'react'\nimport {\n  Datagrid,\n  List,\n  ListProps,\n  TextField,\n  useListContext,\n  useTranslate,\n  FunctionField,\n  Record,\n  Pagination,\n  TextInput\n} from 'react-admin'\nimport { ResourceName } from '../../core/ResourceName'\nimport { MaskField } from '../common/MaskField'\n\nconst TicketInfoGrid = () => {\n  const {\n    loading,\n    filterValues: { ticketCode },\n    data\n  } = useListContext()\n  const t = useTranslate()\n  return (\n    <>\n      {ticketCode &&\n        <Box m={2} display=\"inline-flex\" height=\"40px\">\n          <Typography variant=\"h5\" paragraph>\n            {t('resources.ticket-info.search-list-title', { ticketCode })}\n          </Typography>\n        </Box>\n      }\n      <Divider />\n      <Datagrid\n        loaded={!loading}\n        rowClick={(id) => `${ResourceName.TICKET_DETAILS}/${data[id]?.bookingId}/show`}\n      >\n        <TextField source=\"firstname\" sortable={false} />\n        <TextField source=\"lastname\" sortable={false} />\n        <MaskField source=\"pesel\" sortable={false} />\n        <TextField source=\"ticketCode\" sortable />\n        <FunctionField\n          label='resources.ticket-info.fields.eventName'\n          render={(record: Record | undefined) => `${record?.eventName} ${record?.eventDate.replace(\"T\", \" \")} ${record?.eventId}`} />\n        <TextField source=\"bookingId\" sortable />\n      </Datagrid>\n    </>\n  )\n}\n\nexport const TicketInfoList = (props: ListProps) => (\n  <List exporter={false} perPage={20} sort={{ field: \"id\", order: \"DESC\" }}\n    pagination={<Pagination rowsPerPageOptions={[10, 20, 50]} />} {...props}\n    filters={[\n      <TextInput source=\"ticketCode\" alwaysOn />\n    ]}>\n    <TicketInfoGrid />\n  </List>\n)\n","import {\n  Button,\n  ButtonGroup,\n  Card,\n  CardContent,\n  createStyles,\n  FormControlLabel,\n  Grid,\n  makeStyles,\n  MenuItem,\n  Paper,\n  Select,\n  Switch,\n  Theme,\n  Typography,\n} from '@material-ui/core'\nimport React, { useEffect, useState } from 'react'\nimport {\n  Title,\n  useGetIdentity,\n  useLocale,\n  UserIdentity,\n  useSetLocale,\n  useTranslate,\n} from 'react-admin'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Event, List, Search } from '@material-ui/icons'\nimport { ThemeState } from '../../core/common/theme.reducer'\nimport { CHANGE_THEME } from '../../core/constants/reducer.actions'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    label: { width: '15vw', display: 'inline-block' },\n    button: { margin: theme.spacing(2) },\n    select: { width: '40vw', margin: theme.spacing(2) },\n    compsContainer: {\n      width: '40vw',\n      display: 'inline-block',\n      margin: theme.spacing(2),\n    },\n  }),\n)\n\nconst DashboardCustomization = () => {\n  const { identity } = useGetIdentity()\n\n  const isItemShown = (item: string, userId?: UserIdentity) => {\n    const show = localStorage.getItem(`${userId?.id}.${item}`)\n    return show !== '0'\n  }\n\n  const [componentsOpen, setComponentsOpen] = useState({\n    ticketfinder: isItemShown('ticketfinder', identity),\n    dashlogs: isItemShown('dashlogs', identity),\n    lastevents: isItemShown('lastevents', identity),\n  })\n  const translate = useTranslate()\n\n  const componentsChange = ({\n    target: { checked, name },\n  }: React.ChangeEvent<HTMLInputElement>) => {\n    setComponentsOpen((open) => ({\n      ...open,\n      [name]: checked,\n    }))\n    const key = `${identity?.id}.${name}`\n    if (checked) {\n      localStorage.removeItem(key)\n    } else {\n      localStorage.setItem(key, '0')\n    }\n  }\n\n  useEffect(() => {\n    setComponentsOpen({\n      ticketfinder: isItemShown('ticketfinder', identity),\n      dashlogs: isItemShown('dashlogs', identity),\n      lastevents: isItemShown('lastevents', identity),\n    })\n  }, [identity])\n\n  return (\n    <Grid container spacing={1}>\n      <Grid item xs={6}>\n        <Paper>\n          <Search />\n          <FormControlLabel\n            control={\n              <Switch\n                checked={componentsOpen.ticketfinder}\n                name=\"ticketfinder\"\n                onChange={componentsChange}\n              />\n            }\n            label={translate('dashboard.settings.ticket-finder-label')}\n            labelPlacement=\"top\"\n            style={{ margin: '5%', textAlign: 'center', width: '90%' }}\n          />\n        </Paper>\n      </Grid>\n      <Grid item xs={6}>\n        <Paper>\n          <List />\n          <FormControlLabel\n            control={\n              <Switch\n                checked={componentsOpen.dashlogs}\n                name=\"dashlogs\"\n                onChange={componentsChange}\n              />\n            }\n            label={translate('dashboard.settings.last-logs-label')}\n            labelPlacement=\"top\"\n            style={{ margin: '5%', textAlign: 'center', width: '90%' }}\n          />\n        </Paper>\n      </Grid>\n      <Grid item xs={6}>\n        <Paper>\n          <Event />\n          <FormControlLabel\n            control={\n              <Switch\n                checked={componentsOpen.lastevents}\n                name=\"lastevents\"\n                onChange={componentsChange}\n              />\n            }\n            label={translate('dashboard.settings.last-events-label')}\n            labelPlacement=\"top\"\n            style={{ margin: '5%', textAlign: 'center', width: '90%' }}\n          />\n        </Paper>\n      </Grid>\n    </Grid>\n  )\n}\n\nexport const Configuration = () => {\n  const dispatch = useDispatch()\n  const theme = useSelector(\n    (state: ThemeState) => state.theme.darkMode === 'dark',\n  )\n  const classes = useStyles()\n  const locale = useLocale()\n  const setLocale = useSetLocale()\n  const translate = useTranslate()\n\n  return (\n    <Card>\n      <Title title={translate('settings.name')} />\n      <CardContent>\n        <Typography className={classes.label}>\n          {translate('settings.darkMode.name')}\n        </Typography>\n        <ButtonGroup className={classes.button}>\n          <Button\n            size=\"large\"\n            variant=\"contained\"\n            color={!theme ? 'primary' : 'default'}\n            onClick={() => theme && dispatch({ type: CHANGE_THEME })}\n          >\n            {translate('settings.darkMode.light')}\n          </Button>\n          <Button\n            size=\"large\"\n            variant=\"contained\"\n            color={theme ? 'primary' : 'default'}\n            onClick={() => !theme && dispatch({ type: CHANGE_THEME })}\n          >\n            {translate('settings.darkMode.dark')}\n          </Button>\n        </ButtonGroup>\n      </CardContent>\n      <CardContent>\n        <Typography className={classes.label}>\n          {translate('settings.language.name')}\n        </Typography>\n        <Select\n          value={locale}\n          onChange={(e) => setLocale(e.target.value as string)}\n          className={classes.select}\n          variant=\"outlined\"\n        >\n          <MenuItem value=\"pl\">{translate('settings.language.pl')}</MenuItem>\n          <MenuItem value=\"en\">{translate('settings.language.en')}</MenuItem>\n        </Select>\n      </CardContent>\n      <CardContent>\n        <Typography className={classes.label}>\n          {translate('dashboard.settings.title')}\n        </Typography>\n        <div className={classes.compsContainer}>\n          <DashboardCustomization />\n        </div>\n      </CardContent>\n    </Card>\n  )\n}\n","import * as React from 'react';\nimport { Route } from 'react-router-dom';\nimport { Configuration } from './Configuration'\n\nexport default [\n    <Route exact path=\"/configuration\" render={() => <Configuration/>} />\n]","import React from 'react'\nimport { List, Datagrid, TextField, ListProps, Pagination, TextInput } from 'react-admin'\nimport { ResourceName } from '../../../core/ResourceName'\n\nexport const PalmList = (props: ListProps) => (\n  <List\n    {...props}\n    perPage={20}\n    pagination={<Pagination rowsPerPageOptions={[10, 20, 50]} />}\n    exporter={false}\n    filters={[\n      <TextInput source=\"name\" alwaysOn />,\n      <TextInput source=\"categoryId\" />\n    ]}\n  >\n    <>\n      <Datagrid\n        size=\"small\"\n        rowClick={(id) => `${ResourceName.PALMS}/${id}/show`}\n      >\n        <TextField source=\"id\" label=\"ID\" />\n        <TextField source=\"name\" />\n        <TextField source=\"categoryId\" sortable={false} />\n        <TextField source=\"disabled\" sortable={false} />\n        <TextField source=\"mobileDeviceId\" sortable={false} />\n      </Datagrid>\n    </>\n  </List>\n)\n","import React, { useState } from 'react'\nimport {\n  useTranslate,\n  useShowContext,\n  useMutation,\n  useRefresh,\n  sanitizeFetchType,\n} from 'react-admin'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  TextField,\n  ButtonGroup,\n} from '@material-ui/core'\nimport { ResourceName } from '../../../core/ResourceName'\nimport { PalmDto } from '../../../core/dto/device/palm/palm.dto'\n\nexport const ConfirmDialog = ({\n  confirm,\n  cancel,\n  source,\n  open,\n  action,\n}: {\n  confirm: () => void\n  cancel: () => void\n  source: 'deviceId' | 'lock'\n  open: boolean\n  action: 'set' | 'remove'\n}) => {\n  const translate = useTranslate()\n  return (\n    <Dialog open={open}>\n      <DialogTitle>\n        {translate(`resources.palms.dialogs.confirm.${source}.${action}`)}\n      </DialogTitle>\n      <DialogActions>\n        <Button variant=\"contained\" onClick={confirm}>\n          {translate('ra.action.save')}\n        </Button>\n        <Button variant=\"contained\" onClick={cancel}>\n          {translate('const.cancel')}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nexport const DeviceIdModal = ({\n  open,\n  close,\n}: {\n  open: boolean\n  close: () => void\n}) => {\n  const [value, setValue] = useState('')\n  const [error, setError] = useState(false)\n  const [errorText, setErrorText] = useState('')\n  const [confirmOpen, setConfirmOpen] = useState(false)\n  const { record: palm } = useShowContext<PalmDto>()\n  const [mutate] = useMutation()\n  const refresh = useRefresh()\n  const translate = useTranslate()\n\n  const handleClose = () => {\n    setValue('')\n    setError(false)\n    setErrorText('')\n    close()\n  }\n\n  const handleSetMobileDeviceId = async () => {\n    setConfirmOpen(false)\n    if (value.replace(/\\s/g, '').length === 0) {\n      setError(true)\n      setErrorText(\n        translate('resources.palms.dialogs.deviceId.error-bad-string'),\n      )\n    } else if (value.replace(/\\s/g, '').length !== value.length) {\n      setError(true)\n      setErrorText(\n        translate('resources.palms.dialogs.deviceId.error-no-spaces'),\n      )\n    } else {\n      await mutate(\n        {\n          type: sanitizeFetchType('setMobileDeviceId'),\n          resource: ResourceName.PALMS,\n          payload: {\n            palmId: palm?.id,\n            mobileDeviceId: value,\n          },\n        },\n        { returnPromise: true },\n      )\n      setValue('')\n      setError(false)\n      setErrorText('')\n      refresh()\n      close()\n    }\n  }\n\n  return (\n    <Dialog open={open} onClose={handleClose}>\n      <ConfirmDialog\n        open={confirmOpen}\n        cancel={() => setConfirmOpen(false)}\n        confirm={handleSetMobileDeviceId}\n        source=\"deviceId\"\n        action=\"set\"\n      />\n      <DialogTitle>\n        {translate('resources.palms.dialogs.deviceId.title')}\n      </DialogTitle>\n      <DialogContent>\n        <TextField\n          variant=\"outlined\"\n          value={value}\n          onChange={(e) => setValue(e.target.value)}\n          fullWidth\n          error={error}\n          helperText={errorText}\n        />\n      </DialogContent>\n      <DialogActions>\n        <ButtonGroup>\n          <Button variant=\"contained\" onClick={() => setConfirmOpen(true)}>\n            {translate('ra.action.save')}\n          </Button>\n          <Button variant=\"contained\" onClick={handleClose}>\n            {translate('const.cancel')}\n          </Button>\n        </ButtonGroup>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nexport const LockModal = ({\n  open,\n  close,\n}: {\n  open: boolean\n  close: () => void\n}) => {\n  const [value, setValue] = useState('')\n  const [error, setError] = useState(false)\n  const [errorText, setErrorText] = useState('')\n  const [confirmOpen, setConfirmOpen] = useState(false)\n  const { record: palm } = useShowContext<PalmDto>()\n  const [mutate] = useMutation()\n  const refresh = useRefresh()\n  const translate = useTranslate()\n\n  const handleClose = () => {\n    setValue('')\n    setError(false)\n    setErrorText('')\n    close()\n  }\n\n  const handleLock = async () => {\n    setConfirmOpen(false)\n    if (value.replace(/\\s/g, '').length === 0) {\n      setError(true)\n      setErrorText(translate('resources.palms.dialogs.lock.error-bad-string'))\n    } else if (value.replace(/\\s/g, '').length !== value.length) {\n      setError(true)\n      setErrorText(translate('resources.palms.dialogs.lock.error-no-spaces'))\n    } else {\n      await mutate(\n        {\n          type: sanitizeFetchType('lock'),\n          resource: ResourceName.PALMS,\n          payload: {\n            palmId: palm?.id,\n            lockName: value,\n          },\n        },\n        { returnPromise: true },\n      )\n      handleClose()\n      refresh()\n    }\n  }\n\n  return (\n    <Dialog open={open} onClose={handleClose}>\n      <ConfirmDialog\n        open={confirmOpen}\n        cancel={() => setConfirmOpen(false)}\n        confirm={handleLock}\n        source=\"lock\"\n        action=\"set\"\n      />\n      <DialogTitle>\n        {translate('resources.palms.dialogs.lock.title')}\n      </DialogTitle>\n      <DialogContent>\n        <TextField\n          variant=\"outlined\"\n          value={value}\n          onChange={(e) => setValue(e.target.value)}\n          fullWidth\n          error={error}\n          helperText={errorText}\n        />\n      </DialogContent>\n      <DialogActions>\n        <ButtonGroup>\n          <Button variant=\"contained\" onClick={() => setConfirmOpen(true)}>\n            {translate('ra.action.save')}\n          </Button>\n          <Button variant=\"contained\" onClick={handleClose}>\n            {translate('const.cancel')}\n          </Button>\n        </ButtonGroup>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","import React, { useState } from 'react'\nimport {\n  Show,\n  ShowProps,\n  TabbedShowLayout,\n  Tab,\n  TextField,\n  DateField,\n  FunctionField,\n  Record,\n  useTranslate,\n  useShowContext,\n  useMutation,\n  useRefresh,\n  EditButton,\n  sanitizeFetchType,\n  useListContext,\n  useNotify,\n  ResourceContextProvider,\n  List,\n  TextInput,\n  TitleProps,\n  GET_LIST,\n  useQuery,\n  Pagination\n} from 'react-admin'\nimport {\n  Divider,\n  Box,\n  Button,\n  TableContainer,\n  ButtonGroup,\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n  Checkbox,\n} from '@material-ui/core'\nimport { ResourceName } from '../../../core/ResourceName'\nimport { ConfirmDialog, DeviceIdModal, LockModal } from './PalmDialogs'\nimport { PalmDto } from '../../../core/dto/device/palm/palm.dto'\nimport Event from '../../../core/events/event'\nimport { Entrance } from '../../../core/entrances/entrance'\n\ninterface PalmTitleProps extends TitleProps {\n  record?: PalmDto\n}\n\nconst ShowTitle = (data: PalmTitleProps) => {\n  const {\n    record: palm,\n  } = data\n  const translate = useTranslate()\n  return (\n    <span>\n      {translate('resources.palms.titles.show')}: {palm?.id}. {palm?.name}\n    </span>\n  )\n}\n\nconst GeneralActions = () => {\n  const { record: palm } = useShowContext<PalmDto>()\n  const [deviceIdModalOpen, setDeviceIdModalOpen] = useState(false)\n  const [lockModalOpen, setLockModalOpen] = useState(false)\n  const [unlockDialogOpen, setUnlockDialogOpen] = useState(false)\n  const [resetIdDialogOpen, setResetIdDialogOpen] = useState(false)\n  const [mutate] = useMutation()\n  const refresh = useRefresh()\n  const translate = useTranslate()\n\n  const handleSetMobileDeviceId = async () => {\n    setResetIdDialogOpen(false)\n    await mutate(\n      {\n        type: sanitizeFetchType('resetMobileDeviceId'),\n        resource: ResourceName.PALMS,\n        payload: {\n          palmId: palm?.id,\n        },\n      },\n      { returnPromise: true },\n    )\n    refresh()\n  }\n\n  const handleSetMobileDeviceIdDialog = () => {\n    if (palm?.mobileDeviceId) setResetIdDialogOpen(true)\n    else setDeviceIdModalOpen(true)\n  }\n\n  const handleLock = async () => {\n    setUnlockDialogOpen(false)\n    await mutate(\n      {\n        type: sanitizeFetchType('unlock'),\n        resource: ResourceName.PALMS,\n        payload: {\n          palmId: palm?.id,\n        },\n      },\n      { returnPromise: true },\n    )\n    refresh()\n  }\n\n  const handleLockDialog = () => {\n    if (palm?.disabled) setUnlockDialogOpen(true)\n    else setLockModalOpen(true)\n  }\n\n  return (\n    <>\n      <Divider />\n      <DeviceIdModal\n        open={deviceIdModalOpen}\n        close={() => setDeviceIdModalOpen(false)}\n      />\n      <LockModal open={lockModalOpen} close={() => setLockModalOpen(false)} />\n      <ConfirmDialog\n        open={unlockDialogOpen}\n        confirm={handleLock}\n        source=\"lock\"\n        cancel={() => setUnlockDialogOpen(false)}\n        action=\"remove\"\n      />\n      <ConfirmDialog\n        open={resetIdDialogOpen}\n        confirm={handleSetMobileDeviceId}\n        source=\"deviceId\"\n        cancel={() => setResetIdDialogOpen(false)}\n        action=\"remove\"\n      />\n      <Box p={1} display=\"flex\" justifyContent=\"flex-end\">\n        <Button\n          variant=\"contained\"\n          onClick={handleSetMobileDeviceIdDialog}\n          color=\"primary\"\n          style={{ marginRight: '5px' }}\n        >\n          {palm?.mobileDeviceId\n            ? translate('resources.palms.actions.resetMobileDeviceId')\n            : translate('resources.palms.actions.setMobileDeviceId')}\n        </Button>\n        <Button\n          variant=\"contained\"\n          onClick={handleLockDialog}\n          color=\"primary\"\n          style={{ marginRight: '5px' }}\n        >\n          {palm?.disabled\n            ? translate('resources.palms.actions.unlock')\n            : translate('resources.palms.actions.lock')}\n        </Button>\n        <EditButton basePath=\"/palms\" record={palm} variant=\"contained\" />\n      </Box>\n    </>\n  )\n}\n\nconst Attachments = ({ source }: { source: 'EVENTS' | 'ENTRANCES' }) => {\n  const { data: attachedList, ids, filterValues, currentSort, total, refetch } = useListContext<Event | Entrance>()\n  const { record: palm } = useShowContext<PalmDto>()\n  const { data: allFiltered, refetch: refetchAllFiltered } = useQuery({\n    type: sanitizeFetchType(GET_LIST),\n    resource: source.toLocaleLowerCase(),\n    payload: {\n      filter: {\n        palmId: palm?.id,\n        ...filterValues\n      },\n      sort: currentSort || {\n        field: \"id\",\n        order: \"DESC\"\n      },\n      pagination: {\n        page: 1,\n        perPage: total || 1\n      }\n    }\n  })\n  const translate = useTranslate()\n  const [mutate] = useMutation()\n  const notify = useNotify()\n\n  const handleAttach = async (id: number[]) => {\n    switch (source) {\n      case 'EVENTS':\n        await mutate(\n          {\n            type: sanitizeFetchType('attachEvents'),\n            resource: ResourceName.PALMS,\n            payload: {\n              palmId: palm?.id,\n              eventsIds: id,\n            },\n          },\n          { returnPromise: true },\n        )\n        break\n      case 'ENTRANCES':\n        await mutate(\n          {\n            type: sanitizeFetchType('attachEntrances'),\n            resource: ResourceName.PALMS,\n            payload: {\n              palmId: palm?.id,\n              entrancesIds: id,\n            },\n          },\n          { returnPromise: true },\n        )\n        break\n      default:\n        notify(`Source '${source}' is not implemented yet.`)\n    }\n    refetch()\n  }\n\n  const handleDetach = async (id: number[]) => {\n    switch (source) {\n      case 'EVENTS':\n        await mutate(\n          {\n            type: sanitizeFetchType('detachEvents'),\n            resource: ResourceName.PALMS,\n            payload: {\n              palmId: palm?.id,\n              eventsIds: id,\n            },\n          },\n          { returnPromise: true },\n        )\n        break\n      case 'ENTRANCES':\n        await mutate(\n          {\n            type: sanitizeFetchType('detachEntrances'),\n            resource: ResourceName.PALMS,\n            payload: {\n              palmId: palm?.id,\n              entrancesIds: id,\n            },\n          },\n          { returnPromise: true },\n        )\n        break\n      default:\n        notify(`Source '${source}' is not implemented yet.`)\n    }\n    refetch()\n  }\n\n  const handleAttachAll = () => {\n    refetchAllFiltered()\n    handleAttach(allFiltered.map((record: Event | Entrance) => record?.id))\n  }\n\n  const handleDetachAll = () => {\n    refetchAllFiltered()\n    handleDetach(allFiltered.map((record: Event | Entrance) => record?.id))\n  }\n\n  return (\n    <TableContainer>\n      <ButtonGroup>\n        <Button\n          variant=\"contained\"\n          onClick={() => handleAttachAll()}\n        >\n          {translate('resources.palms.actions.attachAll')}\n        </Button>\n        <Button\n          variant=\"contained\"\n          onClick={() => handleDetachAll()}\n        >\n          {translate('resources.palms.actions.detachAll')}\n        </Button>\n      </ButtonGroup>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>\n              {source === 'ENTRANCES'\n                ? translate('resources.palms.fields.attachment.note')\n                : translate(`resources.palms.fields.attachment.name`)}\n            </TableCell>\n            <TableCell style={{ width: '10%' }}>\n              {translate(`resources.palms.fields.attachment.attached`)}\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {ids.map((id) => (\n            <TableRow key={id}>\n              <TableCell>\n                {source === 'ENTRANCES' && (\n                  <TextField source=\"note\" record={attachedList[id]} />\n                )}\n                {source === 'EVENTS' && (\n                  <TextField source=\"name\" record={attachedList[id]} />\n                )}\n              </TableCell>\n              <TableCell>\n                <Checkbox\n                  checked={attachedList[id]?.attached}\n                  onClick={\n                    attachedList[id]?.attached\n                      ? () => handleDetach([id as number])\n                      : () => handleAttach([id as number])\n                  }\n                />\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n\nconst PalmTabs = () => {\n  const translate = useTranslate()\n  const { record: palm, basePath } = useShowContext<PalmDto>()\n  return (\n    <TabbedShowLayout>\n      <Tab label={translate('resources.palms.tabs.general')}>\n        <TextField label=\"ID\" source=\"id\" />\n        <TextField label=\"resources.palms.fields.name\" source=\"name\" />\n        <FunctionField\n          label=\"resources.palms.fields.isWatched\"\n          source=\"isWatched\"\n          render={(record: Record | undefined) =>\n            record?.isWatched ? translate('const.yes') : translate('const.no')\n          }\n        />\n        <DateField\n          label=\"resources.palms.fields.lastRefresh\"\n          source=\"lastRefresh\"\n          showTime\n          options={{ day: \"2-digit\", month: \"2-digit\", year: \"numeric\", hour: \"2-digit\", minute: \"2-digit\" }}\n        />\n        <TextField\n          label=\"resources.palms.fields.direction\"\n          source=\"direction\"\n        />\n        <TextField\n          label=\"resources.palms.fields.categoryId\"\n          source=\"categoryId\"\n        />\n        {palm?.disabled && (\n          <TextField\n            label=\"resources.palms.fields.disabled\"\n            source=\"disabled\"\n          />\n        )}\n        <FunctionField\n          label=\"resources.palms.fields.onlineInfixCeck\"\n          source=\"onlineInfixCeck\"\n          render={(record: Record | undefined) =>\n            record?.onlineInfixCeck\n              ? translate('const.yes')\n              : translate('const.no')\n          }\n        />\n        <TextField\n          label=\"resources.palms.fields.multiplicity\"\n          source=\"multiplicity\"\n        />\n        {palm?.mobileDeviceId && (\n          <TextField\n            label=\"resources.palms.fields.mobileDeviceId\"\n            source=\"mobileDeviceId\"\n          />\n        )}\n        <GeneralActions />\n      </Tab>\n      <Tab label={translate('resources.palms.tabs.events')}>\n        <ResourceContextProvider value={ResourceName.EVENTS}>\n          <List\n            basePath={basePath}\n            filter={{ palmId: palm?.id }}\n            exporter={false}\n            title=\" \"\n            filters={[<TextInput source=\"name\" alwaysOn />]}\n            pagination={<Pagination rowsPerPageOptions={[10, 20, 50, 100]} />}\n            perPage={20}\n          >\n            <Attachments source=\"EVENTS\" />\n          </List>\n        </ResourceContextProvider>\n      </Tab>\n      <Tab label={translate('resources.palms.tabs.entrances')}>\n        <ResourceContextProvider value={ResourceName.ENTRANCES}>\n          <List\n            basePath={basePath}\n            filter={{ palmId: palm?.id }}\n            exporter={false}\n            title=\" \"\n            filters={[<TextInput source=\"note\" alwaysOn />]}\n            pagination={<Pagination rowsPerPageOptions={[10, 20, 50, 100]} />}\n            perPage={20}\n          >\n            <Attachments source=\"ENTRANCES\" />\n          </List>\n        </ResourceContextProvider>\n      </Tab>\n    </TabbedShowLayout>\n  )\n}\n\nexport const PalmShow = (props: ShowProps) => (\n  <Show {...props} actions={false} title={<ShowTitle />}>\n    <PalmTabs />\n  </Show>\n)\n","import {\n  Edit,\n  EditProps,\n  SimpleForm,\n  TextField,\n  TextInput,\n  BooleanInput,\n  DateTimeInput,\n  SelectInput,\n  useTranslate,\n  Labeled,\n  useEditContext,\n  TitleProps,\n  Toolbar,\n  ToolbarProps,\n  SaveButton,\n  ShowButton\n} from 'react-admin'\nimport React from 'react'\nimport { Typography } from '@material-ui/core'\nimport { Cancel } from '@material-ui/icons'\nimport { DeviceDirection } from '../../../core/enum/DeviceDirection'\nimport { Multiplicities } from '../../../core/enum/Multiplicities'\nimport { PalmDto } from '../../../core/dto/device/palm/palm.dto'\n\ninterface PalmTitleProps extends TitleProps {\n  record?: PalmDto\n}\n\nconst EditTitle = (data: PalmTitleProps) => {\n  const {\n    record,\n  } = data\n  const translate = useTranslate()\n  return (\n    <span>\n      {translate('resources.palms.titles.edit')}: {record?.id}. {record?.name}{' '}\n    </span>\n  )\n}\n\nconst HidingField = ({ source }: { source: keyof PalmDto }) => {\n  const { record } = useEditContext<PalmDto>()\n  return (\n    <>\n      {record && record[source] && (\n        <Labeled label=\"resources.palms.fields.disabled\">\n          <Typography component=\"span\" color=\"textPrimary\">\n            {record[source]}\n          </Typography>\n        </Labeled>\n      )}\n    </>\n  )\n}\n\nconst EditToolbar = (props: ToolbarProps) => (\n  <Toolbar {...props}>\n    <SaveButton />\n    <ShowButton icon={<Cancel />} label=\"const.cancel\" />\n  </Toolbar>\n)\n\nexport const PalmEdit = (props: EditProps) => (\n  <Edit {...props} title={<EditTitle />}>\n    <SimpleForm redirect=\"show\" toolbar={<EditToolbar />}>\n      <TextField source=\"id\" />\n      <TextInput source=\"name\" />\n      <BooleanInput source=\"isWatched\" />\n      <DateTimeInput source=\"lastRefresh\" />\n      <SelectInput\n        source=\"direction\"\n        choices={[\n          { id: DeviceDirection.IN, name: 'IN' },\n          { id: DeviceDirection.INFO, name: 'INFO' },\n          { id: DeviceDirection.OUT, name: 'OUT' },\n        ]}\n      />\n      <TextInput source=\"categoryId\" />\n      <HidingField source=\"disabled\" />\n      <BooleanInput source=\"onlineInfixCeck\" />\n      <SelectInput\n        source=\"multiplicity\"\n        choices={[\n          { id: Multiplicities.CHECK_ALL, name: 'CHECK_ALL' },\n          { id: Multiplicities.MULTIPLE, name: 'MULTIPLE' },\n          { id: Multiplicities.SINGLE, name: 'SINGLE' },\n        ]}\n      />\n      <HidingField source=\"mobileDeviceId\" />\n    </SimpleForm>\n  </Edit>\n)\n","import ReceiptIcon from '@material-ui/icons/Receipt'\nimport ViewComfyIcon from '@material-ui/icons/ViewComfy'\nimport PersonIcon from '@material-ui/icons/Person'\nimport React from 'react'\nimport { Admin, Resource } from 'react-admin'\nimport themeReducer from './core/common/theme.reducer'\nimport { providersFactory } from './core/providers.factory'\nimport { ResourceName } from './core/ResourceName'\nimport { AppLayout } from './main/common/AppLayout'\nimport { CustomerDetailsView } from './main/customer-details/CustomerDetailsView'\nimport { CustomerInfoList } from './main/customer-info/CustomerInfoList'\nimport { Dashboard } from './main/Dashboard'\nimport { EventEdit } from './main/events/EventEdit'\nimport { EventList } from './main/events/EventList'\nimport { EventShow } from './main/events/EventShow'\nimport { LogList } from './main/logs/LogList'\nimport { OverallView } from './main/stats/overall-view/OverallView'\nimport { OverallViewList } from './main/stats/overall-view/OverallViewList'\nimport { AccessUsingsList } from './main/ticket-details/accesses/AccessUsingsList'\nimport { TicketDetailsView } from './main/ticket-details/TicketDetailsView'\nimport { TicketInfoList } from './main/ticket-info/TicketInfoList'\nimport routes from './main/common/routes'\nimport { PalmList } from './main/devices/palms/PalmList'\nimport { PalmShow } from './main/devices/palms/PalmShow'\nimport { PalmEdit } from './main/devices/palms/PalmEdit'\n\nconst App = () => {\n  const { authProvider, dataProvider, i18nProvider } = providersFactory(process.env.NODE_ENV)\n  return (\n    <Admin\n      dashboard={Dashboard}\n      authProvider={authProvider}\n      dataProvider={dataProvider}\n      i18nProvider={i18nProvider}\n      customReducers={{ theme: themeReducer }}\n      customRoutes={routes}\n      layout={AppLayout}\n    >\n      <Resource\n        icon={ReceiptIcon}\n        name={ResourceName.TICKET_INFO}\n        list={TicketInfoList}\n      />\n      <Resource\n        name={ResourceName.TICKET_DETAILS}\n        show={TicketDetailsView}\n      />\n      <Resource\n        name={ResourceName.LOGS}\n        list={LogList}\n      />\n      <Resource\n        icon={ViewComfyIcon}\n        name={ResourceName.STATS_OVERALL_VIEW_LIST}\n        list={OverallViewList}\n      />\n      <Resource\n        icon={ViewComfyIcon}\n        name={ResourceName.STATS_OVERALL_VIEW}\n        show={OverallView}\n      />\n      <Resource\n        name={ResourceName.TICKET_LOGS} />\n      <Resource\n        name={ResourceName.ACCESSES} />\n      <Resource\n        name={ResourceName.ACCESS_USINGS}\n        list={AccessUsingsList}\n      />\n      <Resource\n        name={ResourceName.EVENTS}\n        list={EventList}\n        show={EventShow}\n        edit={EventEdit} />\n      <Resource\n        icon={PersonIcon}\n        name={ResourceName.CUSTOMER_INFO}\n        list={CustomerInfoList}\n      />\n      <Resource\n        name={ResourceName.CUSTOMER_DETAILS}\n        show={CustomerDetailsView} />\n      <Resource\n        name={ResourceName.BOOKINGS} />\n      <Resource\n        name={ResourceName.ACCESS_DATES} />\n      <Resource\n        name={ResourceName.COMPANIES} />\n      <Resource\n        name={ResourceName.OBJECTS} />\n      <Resource\n        name={ResourceName.ENGINES} />\n      <Resource\n        name={ResourceName.PALMS}\n        list={PalmList}\n        show={PalmShow}\n        edit={PalmEdit} />\n      <Resource\n        name={ResourceName.ENTRANCES} />\n    </Admin>\n  )\n}\n\nexport default App\n","import { AuthProvider, DataProvider, I18nProvider, LegacyDataProvider } from 'react-admin'\nimport fakeDataProvider from './fake/fake-data.provider'\nimport fakeAuthProvider from './fake/providers/fake-auth.provider'\nimport authProvider from './auth/auth.provider'\nimport dataProvider from './data.provider'\nimport i18nProvider from './i18n.provider'\n\ninterface Providers {\n  readonly authProvider: AuthProvider\n  readonly dataProvider: DataProvider | LegacyDataProvider\n  readonly i18nProvider: I18nProvider\n}\n\nexport const providersFactory = (\n  env: 'development' | 'test' | 'production',\n): Providers => {\n  switch (env) {\n    case 'production':\n      return {\n        authProvider,\n        dataProvider,\n        i18nProvider,\n      }\n    case 'development':\n      return {\n        authProvider,\n        dataProvider,\n        i18nProvider,\n      }\n    default:\n      return {\n        authProvider: fakeAuthProvider,\n        dataProvider: fakeDataProvider,\n        i18nProvider,\n      }\n  }\n}\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import { initReactI18next } from 'react-i18next'\nimport i18n from 'i18next'\nimport plTranslation from './locales/pl/translation.json'\nimport enTranslation from './locales/en/translation.json'\n\nconst identity = localStorage.getItem('username')\nconst lng = identity && localStorage.getItem(`${identity}.lng`)\n\ni18n.use(initReactI18next)\n  .init({\n    lng: lng || 'pl',\n    fallbackLng: 'pl',\n    debug: false,\n    interpolation: {\n      escapeValue: false, // not needed for react as it escapes by default\n    },\n    resources: {\n      pl: { translation: plTranslation },\n      en: { translation: enTranslation },\n    },\n  })\n\nexport default i18n\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport './i18n.init'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}