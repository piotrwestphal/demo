{"version":3,"sources":["core/constants/reducer.actions.ts","core/common/theme.reducer.ts","core/ResourceName.ts","core/enum/TicketType.ts","core/enum/BookingType.ts","core/enum/BookingDisabledOption.ts","core/fake/providers/fake-access-usings.provider.ts","core/fake/providers/fake-bookings.provider.ts","core/fake/providers/fake-logs.provider.ts","core/fake/providers/fake-stats-overall-view-list.provider.ts","core/fake/providers/fake-stats-overall-view.provider.ts","core/fake/providers/fake-ticket-details.provider.ts","core/enum/DeviceDirection.ts","core/fake/providers/fake-ticket-info.provider.ts","core/fake/providers/fake-tickets.provider.ts","core/fake/fake-data.provider.ts","core/fake/providers/fake-auth.provider.ts","core/common/header.parser.ts","core/common/fetch.utils.ts","core/api-urls.ts","core/auth/auth.provider.ts","core/access-usings/access-usings.provider.ts","core/ticket-details/toggle-button.ts","core/bookings/bookings.provider.ts","core/logs/log-filter.mapper.ts","core/logs/log-sort.mapper.ts","core/logs/extended-logs.mapper.ts","core/logs/extended-logs.provider.ts","core/stats/overall-view/overall-view-list.mapper.ts","core/stats/overall-view/overall-view-list.provider.ts","core/common/filter.values.ts","core/stats/overall-view/overall-view.mapper.ts","core/stats/overall-view/overall-view.provider.ts","core/common/condition.builder.ts","core/common/mapper.utils.ts","core/ticket-details/ticket-details.mapper.ts","core/ticket-details/ticket-details.provider.ts","core/ticket-info/ticket-info.mapper.ts","core/ticket-info/ticket-info.provider.ts","core/tickets/tickets.provider.ts","core/data.provider.ts","core/i18n.provider.ts","main/common/AppSubmenu.tsx","main/common/AppMenu.tsx","app.theme.ts","main/common/AppLayout.tsx","main/common/SearchInput.tsx","main/common/common-styles.ts","main/common/FindUserByTicket.tsx","main/common/Pagination.tsx","main/logs/DateFilterInput.tsx","main/logs/LogsComponents.ts","main/logs/LogRow.tsx","core/common/visual.utils.ts","main/logs/LogGrid.tsx","main/logs/LogList.tsx","main/Dashboard.tsx","main/common/theme-styles.ts","main/stats/overall-view/OverallView.tsx","main/stats/overall-view/OverallViewList.tsx","core/ticket-details/ticket-details-values.mapper.ts","main/ticket-details/TicketDetailsHeader.tsx","main/ticket-details/TicketDetailsTicketsField.tsx","core/ticket-details/toggle-access-button.reducer.ts","main/ticket-details/ToggleAccessButton.tsx","core/ticket-details/toggle-ticket-button.reducer.ts","main/ticket-details/ToggleTicketButton.tsx","main/ticket-details/TicketDetailsView.tsx","main/common/MaskField.tsx","core/common/mask.utils.ts","main/ticket-info/TicketInfoList.tsx","App.tsx","core/providers.factory.ts","reportWebVitals.ts","i18n.init.ts","index.tsx"],"names":["CHANGE_THEME","identity","localStorage","getItem","initialState","darkMode","themeReducer","ResourceName","state","action","type","setItem","TicketType","BookingType","BookingDisabledOption","provider","updateMany","resource","params","a","Promise","resolve","data","create","id","update","fakeLogs","date","ticketCode","bookingId","deviceName","text","color","getList","total","length","fakeStatsOverallViewList","name","dateStart","dateEnd","eventName","capacity","sold","entered","objects","getOne","found","find","v","reject","Error","DeviceDirection","fakeTicketDetailsList","firstname","lastname","pesel","variantName","accessesIds","bookingType","NORMAL","activeFrom","activeTo","tickets","ticketType","K","accessUsings","createdAt","M","modifiedAt","bookingDisabled","STORNO","fakeTicketInfoList","fakeTickets","active","accessUsingsIds","dataProviders","ACCESS_USINGS","fakeAccessUsingsProvider","BOOKINGS","fakeBookingsProvider","LOGS","fakeLogsProvider","TICKETS","fakeTicketsProvider","TICKET_INFO","fakeTicketInfoProvider","TICKET_DETAILS","fakeTicketDetailsProvider","TICKET_LOGS","STATS_OVERALL_VIEW","fakeStatsOverallViewProvider","STATS_OVERALL_VIEW_LIST","fakeStatsOverallViewListProvider","fetchType","sanitizeFetchType","authProvider","login","logout","checkError","checkAuth","getPermissions","getIdentity","fullName","contentRangeParser","headerValue","split","rangeFrom","summarySecondPartSplit","rangeTo","parseInt","baseHeaders","authHeaders","Authorization","postWithHeaders","url","body","headers","fetchUtils","fetchJson","method","JSON","stringify","Headers","then","json","get","baseUrl","path","getWithPagination","range","getByConditions","pathParam","patch","API_V1","process","AUTH_URL","BOOKINGS_URL","CUSTOMERS_URL","EVENTS_URL","EXTENDED_LOGS_URL","TICKETS_URL","VARIANTS_URL","SEATS_URL","BLOCKS_URL","TRIBUNES_URL","OBJECTS_URL","username","password","token","removeItem","status","Access","ids","pendingUpdates","map","auId","req","all","au","ticketIds","accessIds","request","flatMap","accessId","ticketId","Date","toISOString","direction","IN","verifierDeviceId","booking","mapping","lambdaParameter","value","toString","event","mapToExtendedLog","locale","scheme","device","logEntry","filter","language","includes","getFilterParams","partialValues","Object","keys","entries","key","getFilterMapper","mapper","reduce","p","c","partialFilterValues","sort","field","order","pagination","page","perPage","filterParams","queryParams","push","pathParams","extendedLogs","dto","mapToEventOverallView","events","overallViewList","calculateCapacity","seats","bookings","b","seatId","mapToTribuneOverallView","tribune","blocks","enteredBookingIds","blocksIds","block","filteredSeats","s","blockId","filteredBookingIds","bookingsIds","concat","filteredBookings","book","filteredEnteredBookingIds","enteredBookingId","filteredEnteredBookings","enteredBookings","soldNormal","enteredNormal","soldAbo","ABO","enteredAbo","soldInfix","INFIX","enteredInfix","soldService","SERVICE","enteredService","soldPoints","POINTS","enteredPoints","mapToBlockOverallView","mapToOverallView","selectedEvent","tribunes","o","objectsIds","object","filteredTribunes","t","objectId","filteredBlocks","filteredSeatIds","seatsIds","tribunesIds","tribuneId","mapToObjectOverallView","eventId","pendingSelectedEvent","pendingObjects","pendingTribunes","pendingBlocks","pendingSeats","bookingsCondition","pendingBookings","pendingEnteredBookings","overallViewData","buildFilterByIdsCondition","firstId","prev","curr","toMapById","values","Map","toUniqueValues","Array","from","Set","mapToTicketDetails","disabled","accessUsingById","mapToTicket","fetchTicketsWithAccessUsings","accessUsingIds","customerId","variantId","pendingCustomer","pendingEvent","pendingVariant","pendingTicketsWithAccessUsings","ticketsIds","customer","variant","mapToTicketBaseInfoList","customers","bookingById","customerById","eventById","ticket","mapToTicketBaseInfo","getByUniqueIds","uniqueIds","filterByTicketCodeCondition","bookingIds","customerIds","eventIds","pendingCustomers","pendingEvents","ticketBaseInfoList","accessUsingsProvider","bookingsProvider","logsProvider","ticketsProvider","ticketInfoProvider","ticketDetailsProvider","statsOverallViewProvider","statsOverallViewListProvider","translate","options","i18n","changeLocale","changeLanguage","getLocale","useStyles","makeStyles","theme","icon","minWidth","spacing","sidebarIsOpen","transition","paddingLeft","sidebarIsClosed","SubMenu","props","handleToggle","isOpen","children","sidebarOpen","useSelector","admin","ui","classes","header","MenuItem","button","onClick","ListItemIcon","className","ExpandMore","Typography","Tooltip","title","placement","Collapse","in","timeout","unmountOnExit","component","disablePadding","open","width","closed","AppMenu","useState","menuStats","setOpen","useTranslate","style","userSelect","DashboardMenuItem","MenuItemLink","to","primaryText","leftIcon","List","menu","Sort","transform","overriddenTheme","defaultTheme","typography","fontFamily","join","body1","fontWeight","body2","h5","LightTheme","palette","primary","deepPurple","secondary","green","DarkTheme","light","main","dark","contrastText","breakpoints","down","flex","localeContainer","marginRight","AppTopBar","dispatch","useDispatch","useLocale","setLocale","useSetLocale","AppBar","Box","Switch","checked","onChange","checkedIcon","Brightness3","fontSize","Brightness5","AppLayout","Layout","appBar","RoundInputBox","withStyles","root","borderRadius","marginLeft","display","flexDirection","border","borderColor","RoundInputBoxBtn","background","borderTopLeftRadius","borderBottomLeftRadius","margin","Button","RoundInputBoxFC","marginTop","FormControl","SearchInput","label","onValue","error","inputError","setInputError","inputValue","setInputValue","handleClick","Input","disableUnderline","placeholder","onInput","target","onKeyDown","ev","FormHelperText","useCommonStyles","createStyles","textCentered","textAlign","FindUserByTicket","titleCentered","history","useHistory","notify","useNotify","setError","useMutation","mutate","loading","commonClasses","fetchTickets","useCallback","GET_LIST","payload","returnPromise","onlyTicket","pathname","search","message","CardHeader","clsx","CardContent","MobilePostPagination","useListContext","setPage","setPerPage","nbPages","Math","ceil","Toolbar","Grid","container","item","xs","Paper","elevation","height","justifyContent","alignItems","Select","e","ButtonGroup","DateFilterInput","source","defaultFromDate","now","defaultToDate","React","getTime","dateFrom","setDateFrom","dateTo","setDateTo","useField","input","meta","touched","convertedDate","toJSON","substr","verticalAlign","marginBottom","TextField","defaultValue","parse","helperText","alignSelf","BookingButton","backgroundColor","boxShadow","FullWidthButton","CenterGrid","NoPaddingCell","paddingBottom","paddingTop","TableCell","LogRow","compactMode","noBooking","isDarkMode","useEffect","defineStyle","hexcolor","TableRow","Hidden","mdUp","IconButton","DateField","record","showTime","smDown","xlDown","sortable","colSpan","LogGrid","useListSortContext","currentSort","setSort","handleSortChange","sortBy","HeaderCell","startIcon","TableContainer","Table","size","padding","TableHead","toUpperCase","TableBody","ListFilters","Filter","TextInput","alwaysOn","SelectInput","choices","LogList","useTheme","smallScreen","useMediaQuery","exporter","Pagination","rowsPerPageOptions","filters","letterSpacing","OpenDashboardSettingsModalButton","Transition","forwardRef","ref","Zoom","TicketFinder","Card","LastLogs","ResourceContextProvider","basePath","actions","undefined","ComponentsModal","components","useGetIdentity","ticketfinder","dashlogs","componentsOpen","setComponentsOpen","componentsChange","Dialog","onClose","TransitionComponent","DialogTitle","DialogContent","FormControlLabel","control","labelPlacement","DialogActions","DashboardSettingsModalButton","setModalOpen","Badge","overlap","Dashboard","dashboardSettingsModalOpen","setDashboardSettingsModalOpen","titleTypographyProps","sm","useThemeStyles","ThemedTableRow","themeClasses","noBottomBorder","borderBottom","quarterWidth","ViewTitle","description","replace","BlockView","commonStyles","firstColumnEntries","ml","secondColumnEntries","idx","thirdColumnEntries","TribuneView","ObjectView","objectOverallView","quantityColumnLabels","summaryRow","StatsView","useShowContext","OverallView","Show","OverallViewGrid","Datagrid","loaded","rowClick","OverallViewList","bookingTypeMapping","ticketTypeMapping","Z","N","P","U","R","mapFromBookingType","mapFromTicketType","TicketDetailsHeader","m","paragraph","ticketBox","ticketField","TicketDetailsTicketsField","fields","useRecordContext","mappedRecord","Labeled","Chip","flexWrap","blockMutation","ticketDetails","CREATE","unblockMutation","activeAccessUsingIds","UPDATE_MANY","blockAccessButtonInitialState","DISABLED","toggleAccessButtonReducer","BLOCK","mutateQuery","UNBLOCK","common","white","ToggleAccessButton","useReducer","mutationLoading","refresh","useRefresh","some","query","blockTicketButtonInitialState","toggleTicketButtonReducer","mutateParam","ADMIN","ToggleTicketButton","UPDATE","MappedChipField","mappedValue","TicketDetailsView","ticketLogsBookingFilter","Divider","TabbedShowLayout","syncWithLocation","Tab","emptyText","MaskField","rest","recordWithMappedValue","word","threshold","firstChars","substring","lastChars","slice","restCharsLength","repeat","maskMiddlePart","TicketInfoGrid","filterValues","TicketInfoList","useLocation","App","env","dataProvider","i18nProvider","fakeAuthProvider","fakeDataProvider","providersFactory","Admin","dashboard","customReducers","layout","Resource","ReceiptIcon","list","show","ViewComfyIcon","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","lng","use","initReactI18next","init","fallbackLng","debug","interpolation","escapeValue","resources","pl","translation","plTranslation","en","enTranslation","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.38967b7b.chunk.js","sourcesContent":["export const CHANGE_THEME = 'change-theme'","import { Action } from 'redux'\nimport { CHANGE_THEME } from '../constants/reducer.actions'\n\nconst identity = localStorage.getItem('username')\n\nexport type ThemeState = {\n  theme: {\n    darkMode: 'light' | 'dark'\n  }\n}\n\nconst initialState = {\n  darkMode: localStorage.getItem(`${identity}.darkMode`) === 'dark' ? 'dark' : 'light',\n}\n\nfunction themeReducer(state = initialState, action: Action<any>) {\n    if (action.type === CHANGE_THEME) {\n        if (state.darkMode === 'dark') localStorage.setItem(`${identity}.darkMode`, 'light')\n        else localStorage.setItem(`${identity}.darkMode`, 'dark')\n        return {\n            ...state,\n            darkMode: state.darkMode === 'dark' ? 'light' : 'dark'\n        }\n    }\n    return state\n}\n\nexport default themeReducer","export enum ResourceName {\n  ACCESS_USINGS = 'access-usings',\n  BOOKINGS = 'bookings',\n  LOGS = 'logs',\n  TICKETS = 'tickets',\n  TICKET_DETAILS = 'ticket-details',\n  TICKET_INFO = 'ticket-info',\n  TICKET_LOGS = 'ticket-logs',\n  STATS_OVERALL_VIEW_LIST = \"stats-overall-view-list\",\n  STATS_OVERALL_VIEW = \"stats-overall-view\"\n}\n","export enum TicketType {\n  K = 'K',\n  M = 'M',\n  Z = 'Z',\n  N = 'N',\n  P = 'P',\n  U = 'U',\n  R = 'R',\n}\n","export enum BookingType {\n  NORMAL = 'NORMAL',\n  ABO = 'ABO',\n  INFIX = 'INFIX',\n  SERVICE = 'SERVICE',\n  POINTS = 'POINTS',\n}\n","export enum BookingDisabledOption {\n  ADMIN = 'ADMIN',\n  BAN = 'BAN',\n  STORNO = 'STORNO',\n  MISTAKE = 'MISTAKE',\n}\n","import { CreateResult, DataProvider, UpdateManyResult } from 'react-admin'\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  updateMany: async (resource, params): Promise<UpdateManyResult> =>\n    Promise.resolve({\n      data: [1],\n    }),\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  create: async (resource, params): Promise<CreateResult<unknown>> =>\n    Promise.resolve({\n      data: { id: 1 },\n    }),\n} as DataProvider\n\nexport default provider\n","import { DataProvider, UpdateResult } from 'react-admin'\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  update: async (resource, params): Promise<UpdateResult<unknown>> =>\n    Promise.resolve({\n      data: { id: 1 },\n    }),\n} as DataProvider\n\nexport default provider\n","import { DataProvider } from 'react-admin'\nimport { ExtendedLog } from '../../logs/extended-log'\n\nconst fakeLogs: ExtendedLog[] = [\n  {\n    id: 1,\n    date: '2021-07-15T08:50:27.2054',\n    ticketCode: 'A',\n    bookingId: 52815,\n    deviceName: 'Device name',\n    text: 'MF',\n    color: 'transparent',\n  },\n  {\n    id: 2,\n    date: '2021-07-15T08:50:27.2054',\n    ticketCode: 'A',\n    bookingId: 52816,\n    deviceName: 'Device name',\n    text: 'MF',\n    color: 'transparent',\n  },\n  {\n    id: 3,\n    date: '2021-07-15T08:50:27.2054',\n    ticketCode: 'A',\n    bookingId: 1111,\n    deviceName: 'Device name',\n    text: 'MF',\n    color: 'transparent',\n  },\n  {\n    id: 4,\n    date: '2021-07-15T08:50:27.2054',\n    ticketCode: 'A',\n    bookingId: 11112,\n    deviceName: 'Device name',\n    text: 'MF',\n    color: 'transparent',\n  },\n  {\n    id: 5,\n    date: '2021-07-15T08:50:27.2054',\n    ticketCode: 'A',\n    bookingId: 16612,\n    deviceName: 'Device name',\n    text: 'MF',\n    color: 'transparent',\n  },\n  {\n    id: 6,\n    date: '2021-07-15T08:50:27.2054',\n    ticketCode: 'A',\n    bookingId: 167782,\n    deviceName: 'Device name',\n    text: 'MF',\n    color: 'transparent',\n  },\n  {\n    id: 7,\n    date: '2021-07-15T08:50:27.2054',\n    ticketCode: 'A',\n    bookingId: 122782,\n    deviceName: 'Device name',\n    text: 'MF',\n    color: 'transparent',\n  },\n  {\n    id: 8,\n    date: '2021-07-15T08:50:27.2054',\n    ticketCode: 'A',\n    bookingId: 189782,\n    deviceName: 'Device name',\n    text: 'MF',\n    color: 'transparent',\n  },\n  {\n    id: 9,\n    date: '2021-07-15T08:50:27.2054',\n    ticketCode: 'A',\n    bookingId: 183332,\n    deviceName: 'Device name',\n    text: 'MF',\n    color: 'transparent',\n  },\n  {\n    id: 10,\n    date: '2021-07-15T08:50:27.2054',\n    ticketCode: 'A',\n    bookingId: 656565,\n    deviceName: 'Device name',\n    text: 'MF',\n    color: 'transparent',\n  },\n]\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getList: (resource, params) =>\n    Promise.resolve({ data: fakeLogs, total: fakeLogs.length }),\n} as DataProvider\n\nexport default provider\n","import { DataProvider } from 'react-admin'\nimport { EventOverallView } from '../../stats/overall-view/event-overall-view'\n\nconst fakeStatsOverallViewList: EventOverallView[] = [\n  {\n    id: 1,\n    name: \"\",\n    dateStart: '2021-07-13T15:11:06.771267',\n    dateEnd: '2021-07-13T15:11:06.771267'\n  },\n  {\n    id: 2,\n    name: \"\",\n    dateStart: '2021-07-13T15:11:06.771267',\n    dateEnd: '2021-07-13T15:11:06.771267'\n  },\n  {\n    id: 3,\n    name: \"\",\n    dateStart: '2021-07-13T15:11:06.771267',\n    dateEnd: '2021-07-13T15:11:06.771267'\n  },\n  {\n    id: 4,\n    name: \"\",\n    dateStart: '2021-07-13T15:11:06.771267',\n    dateEnd: '2021-07-13T15:11:06.771267'\n  },\n  {\n    id: 5,\n    name: \"\",\n    dateStart: '2021-07-13T15:11:06.771267',\n    dateEnd: '2021-07-13T15:11:06.771267'\n  },\n]\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getList: (resource, params) =>\n    Promise.resolve({ data: fakeStatsOverallViewList, total: fakeStatsOverallViewList.length }),\n} as DataProvider\n\nexport default provider","import { DataProvider } from 'react-admin'\nimport { DateTime } from '../../common/date-time'\nimport { OverallView } from '../../stats/overall-view/overall-view'\n\nconst fakeStatsOverallViewList: OverallView[] = [\n  {\n    id: 1,\n    eventName: \"\",\n    capacity: 0,\n    sold: 0,\n    entered: 0,\n    objects: [],\n    date: \"01-01-2021T00:00.00\" as DateTime\n  },\n  {\n    id: 2,\n    eventName: \"\",\n    capacity: 0,\n    sold: 0,\n    entered: 0,\n    objects: [],\n    date: \"01-01-2021T00:00.00\" as DateTime\n  },\n  {\n    id: 3,\n    eventName: \"\",\n    capacity: 0,\n    sold: 0,\n    entered: 0,\n    objects: [],\n    date: \"01-01-2021T00:00.00\" as DateTime\n  },\n  {\n    id: 4,\n    eventName: \"\",\n    capacity: 0,\n    sold: 0,\n    entered: 0,\n    objects: [],\n    date: \"01-01-2021T00:00.00\" as DateTime\n  },\n  {\n    id: 5,\n    eventName: \"\",\n    capacity: 0,\n    sold: 0,\n    entered: 0,\n    objects: [],\n    date: \"01-01-2021T00:00.00\" as DateTime\n  },\n]\n\nconst provider = {\n  getOne: (resource, { id }: { id: string }) => {\n    const found = fakeStatsOverallViewList.find((v) => `${v.id}` === id)\n    if (found) {\n      return Promise.resolve({\n        data: found,\n      })\n    }\n    return Promise.reject(new Error())\n  },\n} as DataProvider\n\nexport default provider","import { DataProvider } from 'react-admin'\nimport { TicketType } from '../../enum/TicketType'\nimport { TicketDetails } from '../../ticket-details/ticket-details'\nimport { BookingType } from '../../enum/BookingType'\nimport { BookingDisabledOption } from '../../enum/BookingDisabledOption'\n\nconst fakeTicketDetailsList: TicketDetails[] = [\n  {\n    id: 1,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    accessesIds: [10],\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56424,\n        ticketCode: '060000020917',\n        ticketType: TicketType.K,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n      {\n        id: 56425,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.M,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    bookingDisabled: BookingDisabledOption.STORNO,\n  },\n  {\n    id: 2,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    accessesIds: [10],\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56424,\n        ticketCode: '060000020917',\n        ticketType: TicketType.K,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n      {\n        id: 56425,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.M,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    bookingDisabled: BookingDisabledOption.STORNO,\n  },\n  {\n    id: 3,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    accessesIds: [10],\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56424,\n        ticketCode: '060000020917',\n        ticketType: TicketType.K,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n      {\n        id: 56425,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.M,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    bookingDisabled: null,\n  },\n  {\n    id: 4,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    accessesIds: [10],\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56424,\n        ticketCode: '060000020917',\n        ticketType: TicketType.K,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n      {\n        id: 56425,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.M,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    bookingDisabled: null,\n  },\n  {\n    id: 5,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    accessesIds: [10],\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56424,\n        ticketCode: '060000020917',\n        ticketType: TicketType.K,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n      {\n        id: 56425,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.M,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    bookingDisabled: null,\n  },\n  {\n    id: 6,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    accessesIds: [10],\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56424,\n        ticketCode: '060000020917',\n        ticketType: TicketType.K,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n      {\n        id: 56425,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.M,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    bookingDisabled: null,\n  },\n  {\n    id: 7,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    accessesIds: [10],\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56424,\n        ticketCode: '060000020917',\n        ticketType: TicketType.K,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n      {\n        id: 56425,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.M,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    bookingDisabled: null,\n  },\n  {\n    id: 8,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    accessesIds: [10],\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56424,\n        ticketCode: '060000020917',\n        ticketType: TicketType.K,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n      {\n        id: 56425,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.M,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    bookingDisabled: null,\n  },\n  {\n    id: 9,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    accessesIds: [10],\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56424,\n        ticketCode: '060000020917',\n        ticketType: TicketType.K,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n      {\n        id: 56425,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.M,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    bookingDisabled: null,\n  },\n  {\n    id: 10,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    accessesIds: [10],\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56424,\n        ticketCode: '060000020917',\n        ticketType: TicketType.K,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n      {\n        id: 56425,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.M,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    bookingDisabled: null,\n  },\n]\n\nconst provider = {\n  getOne: (resource, { id }: { id: string }) => {\n    const found = fakeTicketDetailsList.find((v) => `${v.id}` === id)\n    if (found) {\n      return Promise.resolve({\n        data: found,\n      })\n    }\n    return Promise.reject(new Error())\n  },\n} as DataProvider\n\nexport default provider\n","export enum DeviceDirection {\n  IN = 'IN',\n  OUT = 'OUT',\n  INFO = 'INFO',\n}\n","import { DataProvider } from 'react-admin'\nimport { TicketType } from '../../enum/TicketType'\nimport { TicketInfo } from '../../ticket-info/ticket-info'\n\nconst fakeTicketInfoList: TicketInfo[] = [\n  {\n    id: 1,\n    firstname: 'Marek',\n    lastname: 'Pies',\n    pesel: '47120554776',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n  },\n  {\n    id: 2,\n    firstname: 'Janek',\n    lastname: 'Krużganek',\n    pesel: '47120554776',\n    eventName: 'POGOŃ SZCZECIN 20/21',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n  },\n  {\n    id: 3,\n    firstname: 'Wacław',\n    lastname: 'Rymski',\n    pesel: '9988711225',\n    eventName: 'POGOŃ SZCZECIN 20/21',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n  },\n  {\n    id: 4,\n    firstname: 'Mirka',\n    lastname: 'Korzeń',\n    pesel: '56483978659',\n    eventName: 'POGOŃ SZCZECIN 20/21',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n  },\n  {\n    id: 5,\n    firstname: 'Tis',\n    lastname: 'Lomasz',\n    pesel: '47120554776',\n    eventName: 'POGOŃ SZCZECIN 20/21',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n  },\n  {\n    id: 6,\n    firstname: 'Bogdana',\n    lastname: 'Jaruzelska',\n    pesel: '47120554776',\n    eventName: 'POGOŃ SZCZECIN 20/21',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n  },\n  {\n    id: 7,\n    firstname: 'Jeremi',\n    lastname: 'Pomidor',\n    pesel: '12345678900',\n    eventName: 'POGOŃ SZCZECIN 20/21',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n  },\n  {\n    id: 8,\n    firstname: 'Roman',\n    lastname: 'Zoman',\n    pesel: '13243567890',\n    eventName: 'POGOŃ SZCZECIN 20/21',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n  },\n  {\n    id: 9,\n    firstname: 'Bacha',\n    lastname: 'Kaszalot',\n    pesel: '98097612678',\n    eventName: 'POGOŃ SZCZECIN 20/21',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n  },\n  {\n    id: 10,\n    firstname: 'Jadwiga',\n    lastname: 'Ogórek',\n    pesel: '47120554776',\n    eventName: 'POGOŃ SZCZECIN 20/21',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n  },\n]\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getList: (resource, params) =>\n    Promise.resolve({\n      data: fakeTicketInfoList,\n      total: fakeTicketInfoList.length,\n    }),\n} as DataProvider\n\nexport default provider\n","import { DataProvider } from 'react-admin'\nimport { TicketDto } from '../../dto/ticket.dto'\nimport { TicketType } from '../../enum/TicketType'\n\nconst fakeTickets: TicketDto[] = [\n  {\n    id: 1,\n    ticketCode: 'A',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52815,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n  {\n    id: 2,\n    ticketCode: 'A',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52816,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n  {\n    id: 3,\n    ticketCode: '010000011492',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52817,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n  {\n    id: 4,\n    ticketCode: '411000006572',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52818,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n  {\n    id: 5,\n    ticketCode: '871000006824',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52819,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n  {\n    id: 6,\n    ticketCode: '370000011495',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52820,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n  {\n    id: 7,\n    ticketCode: '450000011501',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52821,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n  {\n    id: 8,\n    ticketCode: '630000011502',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52822,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n  {\n    id: 9,\n    ticketCode: '020000011503',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52823,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n  {\n    id: 10,\n    ticketCode: '310000011504',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52824,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n]\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getList: (resource, params) =>\n    Promise.resolve({ data: fakeTickets, total: fakeTickets.length }),\n} as DataProvider\n\nexport default provider\n","import { DataProvider, sanitizeFetchType } from 'react-admin'\nimport { ResourceName } from '../ResourceName'\nimport fakeAccessUsingsProvider from './providers/fake-access-usings.provider'\nimport fakeBookingsProvider from './providers/fake-bookings.provider'\nimport fakeLogsProvider from './providers/fake-logs.provider'\nimport fakeStatsOverallViewListProvider from './providers/fake-stats-overall-view-list.provider'\nimport fakeStatsOverallViewProvider from './providers/fake-stats-overall-view.provider'\nimport fakeTicketDetailsProvider from './providers/fake-ticket-details.provider'\nimport fakeTicketInfoProvider from './providers/fake-ticket-info.provider'\nimport fakeTicketsProvider from './providers/fake-tickets.provider'\n\nconst dataProviders: Record<ResourceName, DataProvider> = {\n  [ResourceName.ACCESS_USINGS]: fakeAccessUsingsProvider,\n  [ResourceName.BOOKINGS]: fakeBookingsProvider,\n  [ResourceName.LOGS]: fakeLogsProvider,\n  [ResourceName.TICKETS]: fakeTicketsProvider,\n  [ResourceName.TICKET_INFO]: fakeTicketInfoProvider,\n  [ResourceName.TICKET_DETAILS]: fakeTicketDetailsProvider,\n  [ResourceName.TICKET_LOGS]: fakeLogsProvider,\n  [ResourceName.STATS_OVERALL_VIEW]: fakeStatsOverallViewProvider,\n  [ResourceName.STATS_OVERALL_VIEW_LIST]: fakeStatsOverallViewListProvider\n}\n\nexport default (\n  fetchType: string,\n  resource: string,\n  params: unknown,\n): Promise<unknown> => {\n  const selectedProvider = dataProviders[resource as ResourceName]\n  const type = sanitizeFetchType(fetchType)\n  return selectedProvider[type](resource, params)\n}\n","import { AuthProvider } from 'react-admin'\n\nconst authProvider: AuthProvider = {\n  login: () => Promise.resolve(),\n  logout: () => Promise.resolve(),\n  checkError: () => Promise.resolve(),\n  checkAuth: () => Promise.resolve(),\n  getPermissions: () => Promise.resolve(),\n  getIdentity: () =>\n    Promise.resolve({\n      id: 'no-auth',\n      fullName: 'no-auth',\n    }),\n}\n\nexport default authProvider\n","export type ContentRangeHeaderValue = `bytes ${number}-${number}/${number}`\n\nexport const contentRangeParser = (headerValue: ContentRangeHeaderValue) => {\n  if (!headerValue) {\n    // 'content-range' header should exist otherwise pagination doesn't work\n    return {\n      total: 0,\n    }\n  }\n  const summary = headerValue.split(' ')[1]\n  const split = summary.split('-')\n  const rangeFrom = split[0]\n  const summarySecondPartSplit = split[1].split('/')\n  const rangeTo = summarySecondPartSplit[0]\n  const total = summarySecondPartSplit[1]\n  return {\n    rangeFrom: parseInt(rangeFrom, 10),\n    rangeTo: parseInt(rangeTo, 10),\n    total: parseInt(total, 10),\n  }\n}\n","import { fetchUtils } from 'react-admin'\nimport { ContentRangeHeaderValue, contentRangeParser } from './header.parser'\n\nconst getToken = () => localStorage.getItem('token') as string\n\nconst baseHeaders: HeadersInit = {\n  'Content-Type': 'application/json',\n}\n\nconst authHeaders = (): HeadersInit => ({\n  ...baseHeaders,\n  Authorization: `Bearer ${getToken()}`,\n})\n\nconst postWithHeaders = <T, K>(url: string, body: T, headers: HeadersInit) =>\n  fetchUtils\n    .fetchJson(url, {\n      method: 'POST',\n      body: JSON.stringify(body),\n      headers: new Headers(headers),\n    })\n    .then(({ json }) => json as Promise<K>)\n\nexport const get = <T>(baseUrl: string, path: string) =>\n  fetchUtils\n    .fetchJson(`${baseUrl}${path}`, {\n      method: 'GET',\n      headers: new Headers(authHeaders()),\n    })\n    .then(({ json }) => json as Promise<T>)\n\nexport const getWithPagination = <T>(baseUrl: string, path: string) =>\n  fetchUtils\n    .fetchJson(`${baseUrl}${path}`, {\n      method: 'GET',\n      headers: new Headers(authHeaders()),\n    })\n    .then(({ json, headers }) =>\n      Promise.resolve({\n        data: json as T,\n        range: contentRangeParser(\n          headers.get('content-range') as ContentRangeHeaderValue,\n        ),\n      }),\n    )\n\nexport const getByConditions = <T>(\n  baseUrl: string,\n  pathParam: string,\n): Promise<T[]> => get<T[]>(baseUrl, `/GetByConditions/${pathParam}`)\n\nexport const authPost = <T, K>(url: string, body: T) =>\n  postWithHeaders<T, K>(url, body, baseHeaders)\n\nexport const post = <T, K>(url: string, body: T) =>\n  postWithHeaders<T, K>(url, body, authHeaders())\n\nexport const patch = <T, K>(baseUrl: string, body: T) =>\n  fetchUtils\n    .fetchJson(baseUrl, {\n      method: 'PATCH',\n      body: JSON.stringify(body),\n      headers: new Headers(authHeaders()),\n    })\n    .then(({ json }) => json as Promise<K>)\n","const API_V1 = `${process.env.REACT_APP_API_BASE_URL}/api/v1`\nexport const ACCESS_USINGS = `${API_V1}/ticketManagement/AccessUsings`\nexport const AUTH_URL = `${API_V1}/Authorization/Authenticate`\nexport const BOOKINGS_URL = `${API_V1}/ticketManagement/Bookings`\nexport const CUSTOMERS_URL = `${API_V1}/ticketManagement/Customers`\nexport const EVENTS_URL = `${API_V1}/ticketManagement/Events`\nexport const EXTENDED_LOGS_URL = `${API_V1}/ticketManagement/Logs/GetExtendedLogByConditions`\nexport const TICKETS_URL = `${API_V1}/ticketManagement/Tickets`\nexport const VARIANTS_URL = `${API_V1}/ticketManagement/Variants`\nexport const SEATS_URL = `${API_V1}/ticketManagement/Seats`\nexport const BLOCKS_URL = `${API_V1}/ticketManagement/Blocks`\nexport const TRIBUNES_URL = `${API_V1}/ticketManagement/Tribunes`\nexport const OBJECTS_URL = `${API_V1}/ticketManagement/Objects`\n","import { AuthProvider } from 'react-admin'\nimport { authPost } from '../common/fetch.utils'\nimport { AuthDto } from '../dto/auth.dto'\nimport { AUTH_URL } from '../api-urls'\nimport { AuthRequest } from './auth.request'\n\nconst authProvider: AuthProvider = {\n  login: ({ username, password }) =>\n    authPost<AuthRequest, AuthDto>(AUTH_URL, {\n      login: username,\n      password,\n    }).then(({ token }) => {\n      localStorage.setItem('username', username)\n      localStorage.setItem('token', token)\n    }),\n  logout: () => {\n    localStorage.removeItem('username')\n    localStorage.removeItem('token')\n    return Promise.resolve()\n  },\n  checkError: ({ status }) => {\n    if (status === 401 || status === 403) {\n      localStorage.removeItem('username')\n      localStorage.removeItem('token')\n      return Promise.reject()\n    }\n    return Promise.resolve()\n  },\n  checkAuth: () =>\n    localStorage.getItem('token') ? Promise.resolve() : Promise.reject(),\n  getPermissions: () => Promise.resolve(),\n  getIdentity: () =>\n    Promise.resolve({\n      id: 'user',\n      fullName: localStorage.getItem('username') as string,\n    }),\n}\n\nexport default authProvider\n","import {\n  CreateParams,\n  CreateResult,\n  DataProvider,\n  UpdateManyParams,\n  UpdateManyResult,\n} from 'react-admin'\nimport { AccessUsingsCreateParams } from './access-usings-create.params'\nimport { AccessUsingDto } from '../dto/access-using.dto'\nimport { DeviceDirection } from '../enum/DeviceDirection'\nimport { DateTime } from '../common/date-time'\nimport { patch, post } from '../common/fetch.utils'\nimport { ACCESS_USINGS } from '../api-urls'\n\ntype CreateAccessUsingRequest = Array<\n  Omit<AccessUsingDto, 'id' | 'verifierDeviceId'> & { verifierDeviceId: null }\n>\ntype UpdateAccessUsingRequest = Pick<AccessUsingDto, 'id'> & { active: false }\n\nconst provider = {\n  updateMany: async (\n    resource,\n    { ids }: UpdateManyParams,\n  ): Promise<UpdateManyResult> => {\n    const pendingUpdates = ids\n      .map((auId) => ({ id: auId, active: false } as UpdateAccessUsingRequest))\n      .map((req) =>\n        patch<UpdateAccessUsingRequest, AccessUsingDto>(ACCESS_USINGS, req),\n      )\n    const accessUsings = await Promise.all(pendingUpdates)\n    return Promise.resolve({\n      data: accessUsings.map((au) => au.id),\n    })\n  },\n  create: async (\n    resource,\n    { data }: CreateParams<AccessUsingsCreateParams>,\n  ): Promise<CreateResult> => {\n    const { ticketIds, accessIds } = data\n    const request: CreateAccessUsingRequest = accessIds.flatMap((accessId) =>\n      ticketIds.map((ticketId) => ({\n        date: new Date().toISOString() as DateTime,\n        direction: DeviceDirection.IN,\n        active: true,\n        accessId,\n        ticketId,\n        verifierDeviceId: null,\n      })),\n    )\n    await post<CreateAccessUsingRequest, AccessUsingDto[]>(\n      ACCESS_USINGS,\n      request,\n    )\n    return Promise.resolve({\n      data: { id: 0 }, // need to return something\n    })\n  },\n} as DataProvider\n\nexport default provider\n","export enum Access {\n  BLOCK = 'BLOCK',\n  UNBLOCK = 'UNBLOCK',\n  DISABLED = 'DISABLED',\n}\n\nexport type ToggleButtonState = {\n  type: Access\n  text: string\n}\n\nexport type Action = { type: Access }\n","import { DataProvider, UpdateParams, UpdateResult } from 'react-admin'\nimport { patch } from '../common/fetch.utils'\nimport { BOOKINGS_URL } from '../api-urls'\nimport { BookingUpdateRequest } from './booking-update.request'\nimport { BookingDto } from '../dto/booking.dto'\n\nconst provider = {\n  update: async (\n    resource: string,\n    { data }: UpdateParams<BookingUpdateRequest>,\n  ): Promise<UpdateResult<BookingDto>> => {\n    const booking = await patch<BookingUpdateRequest, BookingDto>(\n      BOOKINGS_URL,\n      data,\n    )\n    return Promise.resolve({\n      data: booking,\n    })\n  },\n} as DataProvider\n\nexport default provider\n","import { ExtendedLogFilterValues } from './extended-log'\n\nconst mapping: Partial<\n  Record<\n    keyof ExtendedLogFilterValues,\n    (lambdaParameter: string, value: string | number) => string\n  >\n> = {\n  ticketCode: (lambdaParameter, value) =>\n    `${lambdaParameter}.TicketCode.Contains(\"${value}\")`,\n  bookingId: (lambdaParameter, value) =>\n    `${lambdaParameter}.BookingId.ToString().Contains(\"${value}\")`,\n  date: (lambdaParameter, value) =>\n    `${lambdaParameter}.Date > DateTimeOffset.FromUnixTimeMilliseconds(${\n      value.toString().split(';')[0]\n    }).DateTime && l.Date < DateTimeOffset.FromUnixTimeMilliseconds(${\n      value.toString().split(';')[1]\n    }).DateTime`,\n  deviceName: (lambdaParameter, value) =>\n    `${lambdaParameter}.Device.Name.Contains(\"${value}\")`,\n  text: (lambdaParameter, value) =>\n    `${lambdaParameter}.Data.Text.Contains(\"${value}\")`,\n  event: (lambdaParameter, value) =>\n    `${lambdaParameter}.Booking.Event.Name.Contains(\"${value}\")`,\n}\n\nexport const getFilterMapper = (key: keyof ExtendedLogFilterValues) =>\n  mapping[key] as (lambdaParameter: string, value: string | number) => string\n","import { ExtendedLog } from './extended-log'\n\nconst mapping: Partial<Record<keyof ExtendedLog, string>> = {\n  id: 'l=>l.Id',\n  date: 'l=>l.Date',\n  deviceName: 'l=>l.Device.Name',\n  ticketCode: 'l=>l.TicketCode',\n  bookingId: 'l=>l.BookingId',\n}\n\nexport const mapSortLogParam = (key: keyof ExtendedLog) => mapping[key]\n","import { ExtendedLog } from './extended-log'\nimport { ExtendedLogDto } from '../dto/extended-log.dto'\n\nexport const mapToExtendedLog = (\n  {\n    id,\n    date,\n    ticketCode,\n    bookingId,\n    scheme,\n    device: { name: deviceName },\n    data,\n  }: ExtendedLogDto,\n  locale: string,\n): ExtendedLog => {\n  const logEntry = data.filter(({ language }) => language.includes(locale))[0]\n  return {\n    id,\n    date,\n    deviceName,\n    ticketCode,\n    text: logEntry?.text || scheme,\n    color: data[0].color || 'transparent',\n    bookingId,\n  }\n}\n","import { DataProvider, GetListResult } from 'react-admin'\nimport { EXTENDED_LOGS_URL } from '../api-urls'\nimport { getWithPagination } from '../common/fetch.utils'\nimport { ExtendedLogDto } from '../dto/extended-log.dto'\nimport { ExtendedLog, ExtendedLogFilterValues } from './extended-log'\nimport { LogListParams } from './log-list.params'\nimport { getFilterMapper } from './log-filter.mapper'\nimport { mapSortLogParam } from './log-sort.mapper'\nimport { mapToExtendedLog } from './extended-logs.mapper'\n\nconst getFilterParams = (\n  partialValues: Partial<ExtendedLogFilterValues>,\n): string => {\n  if (Object.keys(partialValues).length) {\n    const filterParams = Object.entries(partialValues).map(([key, value]) => {\n      const mapper = getFilterMapper(key as keyof ExtendedLogFilterValues)\n      return mapper('l', value as string)\n    })\n    return filterParams.reduce((p, c) => `${p}&&${c}`)\n  }\n  return 'true'\n}\n\nconst provider = {\n  getList: async (\n    resource: string,\n    {\n      filter: { locale, ...partialFilterValues },\n      sort: { field, order },\n      pagination: { page, perPage },\n    }: LogListParams,\n  ): Promise<GetListResult<ExtendedLog>> => {\n    const filterParams = `l=>${getFilterParams(partialFilterValues)}`\n    const queryParams: string[] = []\n    queryParams.push(`sortBy=${mapSortLogParam(field)}`)\n    queryParams.push(`sortOrder=${order}`)\n    queryParams.push(`rangeFrom=${page * perPage - perPage}`)\n    queryParams.push(`rangeTo=${page * perPage}`)\n\n    const pathParams = queryParams.reduce((p, c) => `${p}&${c}`)\n    const path = `/${filterParams}?${pathParams}`\n\n    const {\n      data,\n      range: { total },\n    } = await getWithPagination<ExtendedLogDto[]>(EXTENDED_LOGS_URL, path)\n    const extendedLogs = data.map((dto) => mapToExtendedLog(dto, locale))\n\n    return Promise.resolve({\n      data: extendedLogs,\n      total,\n    })\n  },\n} as DataProvider\n\nexport default provider\n","import { EventDto } from \"../../dto/event.dto\"\nimport { EventOverallView } from \"./event-overall-view\"\n\nexport const mapToEventOverallView = (\n  event: EventDto\n): EventOverallView => ({\n  id: event.id,\n  name: event.name,\n  dateStart: event.dateStart,\n  dateEnd: event.dateEnd\n})","import { DataProvider, GetListResult } from \"react-admin\"\nimport { EVENTS_URL } from '../../api-urls'\nimport { getByConditions } from '../../common/fetch.utils'\nimport { ALL_RESULTS } from \"../../common/filter.values\"\nimport { NameFilter } from \"../../common/name.filter\"\nimport { EventDto } from \"../../dto/event.dto\"\nimport { EventOverallView } from \"./event-overall-view\"\nimport { mapToEventOverallView } from \"./overall-view-list.mapper\"\n\nconst provider = {\n  getList: async (\n    resource: string,\n    { filter }: NameFilter,\n  ): Promise<GetListResult<EventOverallView>> => {\n    const events = await getByConditions<EventDto>(EVENTS_URL, filter.name ? `e=>e.Name.Contains(\"${filter.name}\")` : ALL_RESULTS)\n\n    const overallViewList = events.map((event) => mapToEventOverallView(event))\n\n    return {\n      data: overallViewList,\n      total: overallViewList.length,\n    }\n  },\n} as DataProvider\n\nexport default provider","export const ALL_RESULTS = 'l=>true'\n","import { BlockDto } from \"../../dto/block.dto\"\nimport { BookingDto } from \"../../dto/booking.dto\"\nimport { EventDto } from \"../../dto/event.dto\"\nimport { ObjectDto } from \"../../dto/object.dto\"\nimport { SeatDto } from \"../../dto/seat.dto\"\nimport { TribuneDto } from \"../../dto/tribune.dto\"\nimport { BookingType } from \"../../enum/BookingType\"\nimport { BlockOverallView, ObjectOverallView, OverallView, TribuneOverallView } from \"./overall-view\"\n\nconst calculateCapacity = (seats: SeatDto[], bookings: BookingDto[]) => (\n  seats.length + bookings.filter(b => b.seatId == null).length\n)\n\nconst mapToBlockOverallView = (\n  block: BlockDto,\n  seats: SeatDto[],\n  bookings: BookingDto[],\n  enteredBookings: BookingDto[]\n): BlockOverallView => ({\n  id: block.id,\n  name: block.name,\n  capacity: calculateCapacity(seats, bookings),\n  sold: bookings.length,\n  entered: enteredBookings.length,\n  soldNormal: bookings.filter(b => b.type === BookingType.NORMAL).length,\n  enteredNormal: enteredBookings.filter(b => b.type === BookingType.NORMAL).length,\n  soldAbo: bookings.filter(b => b.type === BookingType.ABO).length,\n  enteredAbo: enteredBookings.filter(b => b.type === BookingType.ABO).length,\n  soldInfix: bookings.filter(b => b.type === BookingType.INFIX).length,\n  enteredInfix: enteredBookings.filter(b => b.type === BookingType.INFIX).length,\n  soldService: bookings.filter(b => b.type === BookingType.SERVICE).length,\n  enteredService: enteredBookings.filter(b => b.type === BookingType.SERVICE).length,\n  soldPoints: bookings.filter(b => b.type === BookingType.POINTS).length,\n  enteredPoints: enteredBookings.filter(b => b.type === BookingType.POINTS).length,\n})\n\nconst mapToTribuneOverallView = (\n  tribune: TribuneDto,\n  blocks: BlockDto[],\n  seats: SeatDto[],\n  bookings: BookingDto[],\n  enteredBookingIds: number[]\n): TribuneOverallView => ({\n  id: tribune.id,\n  name: tribune.name,\n  capacity: calculateCapacity(seats, bookings),\n  sold: bookings.length,\n  entered: enteredBookingIds.length,\n  blocks: blocks.filter(b => tribune.blocksIds.includes(b.id))\n    .map((block) => {\n      const filteredSeats = seats.filter((s) => s.blockId === block.id)\n      const filteredBookingIds = block.bookingsIds.concat(filteredSeats.flatMap((s) => s.bookingsIds))\n      const filteredBookings = bookings.filter((book) => filteredBookingIds.includes(book.id))\n      const filteredEnteredBookingIds = enteredBookingIds.filter((enteredBookingId) => filteredBookingIds.includes(enteredBookingId))\n      const filteredEnteredBookings = bookings.filter((book) => filteredEnteredBookingIds.includes(book.id))\n      return mapToBlockOverallView(\n        block,\n        filteredSeats,\n        filteredBookings,\n        filteredEnteredBookings\n      )\n    }).sort((a, b) => {\n      if(a.name < b.name) return -1\n      if(a.name > b.name) return 1\n      return 0\n    })\n})\n\nconst mapToObjectOverallView = (\n  object: ObjectDto,\n  tribunes: TribuneDto[],\n  blocks: BlockDto[],\n  seats: SeatDto[],\n  bookings: BookingDto[],\n  enteredBookingIds: number[]\n): ObjectOverallView => ({\n  id: object.id,\n  name: object.name,\n  capacity: calculateCapacity(seats, bookings),\n  sold: bookings.length,\n  entered: enteredBookingIds.length,\n  tribunes: tribunes.filter(t => object.tribunesIds.includes(t.id))\n    .map((tribune) => {\n      const filteredBlocks = blocks.filter((b) => b.tribuneId === tribune.id)\n      const filteredSeatIds = filteredBlocks.flatMap((b) => b.seatsIds)\n      const filteredSeats = seats.filter((s) => filteredSeatIds.includes(s.id))\n      const filteredBookingIds = filteredBlocks.flatMap((b) => b.bookingsIds).concat(filteredSeats.flatMap((s) => s.bookingsIds))\n      const filteredBookings = bookings.filter((book) => filteredBookingIds.includes(book.id))\n      const filteredEnteredBookingIds = enteredBookingIds.filter((enteredBookingId) => filteredBookingIds.includes(enteredBookingId))\n      return mapToTribuneOverallView(\n        tribune,\n        filteredBlocks,\n        filteredSeats,\n        filteredBookings,\n        filteredEnteredBookingIds\n      )\n    }).sort((a, b) => {\n      if(a.name < b.name) return -1\n      if(a.name > b.name) return 1\n      return 0\n    })\n})\n\nexport const mapToOverallView = (\n  selectedEvent: EventDto,\n  objects: ObjectDto[],\n  tribunes: TribuneDto[],\n  blocks: BlockDto[],\n  seats: SeatDto[],\n  bookings: BookingDto[],\n  enteredBookingIds: number[]\n): OverallView => ({\n  id: selectedEvent.id,\n  eventName: selectedEvent.name,\n  capacity: calculateCapacity(seats, bookings),\n  sold: bookings.length,\n  entered: enteredBookingIds.length,\n  date: selectedEvent.dateStart,\n  objects: objects.filter(o => selectedEvent.objectsIds.includes(o.id))\n    .map((object) => {\n      const filteredTribunes = tribunes.filter((t) => t.objectId === object.id)\n      const filteredBlocks = blocks.filter((b) => filteredTribunes.flatMap((t) => t.blocksIds).includes(b.id))\n      const filteredSeatIds = filteredBlocks.flatMap((b) => b.seatsIds)\n      const filteredSeats = seats.filter((s) => filteredSeatIds.includes(s.id))\n      const filteredBookingIds = filteredBlocks.flatMap((b) => b.bookingsIds).concat(filteredSeats.flatMap((s) => s.bookingsIds))\n      const filteredBookings = bookings.filter((book) => filteredBookingIds.includes(book.id))\n      const filteredEnteredBookingIds = enteredBookingIds.filter((enteredBookingId) => filteredBookingIds.includes(enteredBookingId))\n      return mapToObjectOverallView(\n        object,\n        filteredTribunes,\n        filteredBlocks,\n        filteredSeats,\n        filteredBookings,\n        filteredEnteredBookingIds\n      )\n    }).sort((a, b) => {\n      if(a.name < b.name) return -1\n      if(a.name > b.name) return 1\n      return 0\n    })\n})","import { DataProvider, GetOneParams, GetOneResult } from \"react-admin\"\nimport {\n  BLOCKS_URL,\n  BOOKINGS_URL, EVENTS_URL, OBJECTS_URL, SEATS_URL, TRIBUNES_URL\n} from '../../api-urls'\nimport { get, getByConditions } from '../../common/fetch.utils'\nimport { BlockDto } from \"../../dto/block.dto\"\nimport { BookingDto } from \"../../dto/booking.dto\"\nimport { EventDto } from \"../../dto/event.dto\"\nimport { ObjectDto } from \"../../dto/object.dto\"\nimport { SeatDto } from \"../../dto/seat.dto\"\nimport { TribuneDto } from \"../../dto/tribune.dto\"\nimport { OverallView } from \"./overall-view\"\nimport { mapToOverallView } from \"./overall-view.mapper\"\n\nconst provider = {\n  getOne: async (\n    resource: string,\n    { id: eventId }: GetOneParams\n  ): Promise<GetOneResult<OverallView>> => {\n    const pendingSelectedEvent = get<EventDto>(EVENTS_URL, `/${eventId}`)\n    const pendingObjects = getByConditions<ObjectDto>(OBJECTS_URL, `o=>o.Events.Any(e => e.Id.Equals(${eventId}))`)\n    const pendingTribunes = getByConditions<TribuneDto>(TRIBUNES_URL, `t=>t.Object.Events.Any(e => e.Id.Equals(${eventId}))`)\n    const pendingBlocks = getByConditions<BlockDto>(BLOCKS_URL, `b=>b.Tribune.Object.Events.Any(e => e.Id.Equals(${eventId}))`)\n    const pendingSeats = getByConditions<SeatDto>(SEATS_URL, `s=>s.Block.Tribune.Object.Events.Any(e => e.Id.Equals(${eventId}))`)\n    const bookingsCondition = `b=>b.EventId.Equals(${eventId}) && b.Disabled != TicketAPI.Models.Enums.TicketManagement.BookingDisabledOptions.STORNO`\n    const pendingBookings = getByConditions<BookingDto>(BOOKINGS_URL, bookingsCondition)\n    const pendingEnteredBookings = getByConditions<BookingDto>(BOOKINGS_URL,\n      `${bookingsCondition} && b.Tickets.SelectMany(t => t.AccessUsings).Any(au => au.Active == true && au.Direction.Equals(TicketAPI.Models.Enums.DeviceManagement.DeviceDirections.IN))`)\n\n    const [selectedEvent, objects, tribunes, blocks, seats, bookings, enteredBookingIds] =\n      await Promise.all([\n        pendingSelectedEvent,\n        pendingObjects,\n        pendingTribunes,\n        pendingBlocks,\n        pendingSeats,\n        pendingBookings,\n        Promise.all((await Promise.resolve(pendingEnteredBookings)).map(book => book.id))\n      ])\n\n    const overallViewData =\n      Promise.resolve(\n        mapToOverallView(\n          selectedEvent,\n          objects,\n          tribunes,\n          blocks,\n          seats,\n          bookings,\n          enteredBookingIds\n        ))\n\n    return {\n      data: await overallViewData\n    }\n  },\n} as DataProvider\n\nexport default provider","export const buildFilterByIdsCondition = (ids: number[]): string => {\n  const [firstId, ...restIds] = ids\n  return (restIds || []).reduce(\n    (prev, curr) => `${prev as string}||v.Id==${curr}`,\n    `v=>v.Id==${firstId}`,\n  )\n}\n","export const toMapById = <T extends { id: number }>(values: T[]) =>\n  new Map(values.map((v): [number, T] => [v.id, v]))\n\nexport const toUniqueValues = (values: number[]) => Array.from(new Set(values))\n","import { CustomerDto } from '../dto/customer.dto'\nimport { EventDto } from '../dto/event.dto'\nimport { TicketDto } from '../dto/ticket.dto'\nimport { VariantDto } from '../dto/variant.dto'\nimport { TicketDetails } from './ticket-details'\nimport { BookingDto } from '../dto/booking.dto'\nimport { AccessUsingDto } from '../dto/access-using.dto'\nimport { Ticket } from './ticket'\nimport { toMapById } from '../common/mapper.utils'\n\nconst mapToTicket = (\n  { id, ticketCode, ticketType, createdAt, accessUsingsIds }: TicketDto,\n  accessUsingById: Map<number, AccessUsingDto>,\n): Ticket => ({\n  id,\n  ticketCode,\n  ticketType,\n  createdAt,\n  accessUsings: accessUsingsIds.map(\n    (auId) => accessUsingById.get(auId) as AccessUsingDto,\n  ),\n})\n\nexport const mapToTicketDetails = (\n  {\n    id: bookingId,\n    disabled: bookingDisabled,\n    type: bookingType,\n    activeFrom,\n    activeTo,\n    createdAt,\n    modifiedAt,\n  }: BookingDto,\n  { firstname, lastname, pesel }: CustomerDto,\n  { name: eventName }: EventDto,\n  { name: variantName, accessesIds }: VariantDto,\n  tickets: TicketDto[],\n  accessUsings: AccessUsingDto[],\n): TicketDetails => {\n  const accessUsingById = toMapById(accessUsings)\n  return {\n    id: bookingId,\n    firstname,\n    lastname,\n    eventName,\n    pesel,\n    variantName,\n    accessesIds,\n    bookingType,\n    activeFrom,\n    activeTo,\n    tickets: tickets.map((t) => mapToTicket(t, accessUsingById)),\n    createdAt,\n    modifiedAt,\n    bookingDisabled,\n  }\n}\n","import { DataProvider, GetOneParams, GetOneResult } from 'react-admin'\nimport {\n  ACCESS_USINGS,\n  BOOKINGS_URL,\n  CUSTOMERS_URL,\n  EVENTS_URL,\n  TICKETS_URL,\n  VARIANTS_URL,\n} from '../api-urls'\nimport { get, getByConditions } from '../common/fetch.utils'\nimport { BookingDto } from '../dto/booking.dto'\nimport { TicketDto } from '../dto/ticket.dto'\nimport { CustomerDto } from '../dto/customer.dto'\nimport { EventDto } from '../dto/event.dto'\nimport { buildFilterByIdsCondition } from '../common/condition.builder'\nimport { mapToTicketDetails } from './ticket-details.mapper'\nimport { VariantDto } from '../dto/variant.dto'\nimport { TicketDetails } from './ticket-details'\nimport { toUniqueValues } from '../common/mapper.utils'\nimport { AccessUsingDto } from '../dto/access-using.dto'\n\nconst fetchTicketsWithAccessUsings = async (ticketIds: number[]) => {\n  const tickets = await getByConditions<TicketDto>(\n    TICKETS_URL,\n    buildFilterByIdsCondition(ticketIds),\n  )\n  const accessUsingIds = tickets.flatMap((t) => t.accessUsingsIds)\n  const accessUsings = accessUsingIds.length\n    ? await getByConditions<AccessUsingDto>(\n        ACCESS_USINGS,\n        buildFilterByIdsCondition(toUniqueValues(accessUsingIds)),\n      )\n    : []\n  return {\n    tickets,\n    accessUsings,\n  }\n}\n\nconst provider = {\n  getOne: async (\n    resource: string,\n    { id: bookingId }: GetOneParams,\n  ): Promise<GetOneResult<TicketDetails>> => {\n    const booking = await get<BookingDto>(BOOKINGS_URL, `/${bookingId}`)\n    const { customerId, eventId, variantId } = booking\n    const pendingCustomer = get<CustomerDto>(CUSTOMERS_URL, `/${customerId}`)\n    const pendingEvent = get<EventDto>(EVENTS_URL, `/${eventId}`)\n    const pendingVariant = get<VariantDto>(VARIANTS_URL, `/${variantId}`)\n    const pendingTicketsWithAccessUsings = fetchTicketsWithAccessUsings(\n      booking.ticketsIds,\n    )\n\n    const [customer, event, variant, { tickets, accessUsings }] =\n      await Promise.all([\n        pendingCustomer,\n        pendingEvent,\n        pendingVariant,\n        pendingTicketsWithAccessUsings,\n      ])\n\n    return {\n      data: mapToTicketDetails(\n        booking,\n        customer,\n        event,\n        variant,\n        tickets,\n        accessUsings,\n      ),\n    }\n  },\n} as DataProvider\n\nexport default provider\n","import { CustomerDto } from '../dto/customer.dto'\nimport { EventDto } from '../dto/event.dto'\nimport { TicketDto } from '../dto/ticket.dto'\nimport { TicketInfo } from './ticket-info'\nimport { BookingDto } from '../dto/booking.dto'\nimport { toMapById } from '../common/mapper.utils'\n\nexport const mapToTicketBaseInfo = (\n  { firstname, lastname, pesel }: CustomerDto,\n  { name: eventName }: EventDto,\n  { bookingId, ticketCode, ticketType }: TicketDto,\n): TicketInfo => ({\n  id: bookingId,\n  firstname,\n  lastname,\n  pesel,\n  eventName,\n  ticketCode,\n  ticketType,\n})\n\nexport const mapToTicketBaseInfoList = (\n  bookings: BookingDto[],\n  customers: CustomerDto[],\n  events: EventDto[],\n  tickets: TicketDto[],\n): TicketInfo[] => {\n  const bookingById = toMapById(bookings)\n  const customerById = toMapById(customers)\n  const eventById = toMapById(events)\n  return tickets.map((ticket) => {\n    const { customerId, eventId } = bookingById.get(\n      ticket.bookingId,\n    ) as BookingDto\n    const customer = customerById.get(customerId) as CustomerDto\n    const event = eventById.get(eventId) as EventDto\n    return mapToTicketBaseInfo(customer, event, ticket)\n  })\n}\n","import { DataProvider, GetListResult } from 'react-admin'\nimport {\n  BOOKINGS_URL,\n  CUSTOMERS_URL,\n  EVENTS_URL,\n  TICKETS_URL,\n} from '../api-urls'\nimport { getByConditions } from '../common/fetch.utils'\nimport { BookingDto } from '../dto/booking.dto'\nimport { TicketInfo } from './ticket-info'\nimport { TicketDto } from '../dto/ticket.dto'\nimport { CustomerDto } from '../dto/customer.dto'\nimport { EventDto } from '../dto/event.dto'\nimport { mapToTicketBaseInfoList } from './ticket-info.mapper'\nimport { buildFilterByIdsCondition } from '../common/condition.builder'\nimport { TicketCodeFilter } from '../common/ticket-code.filter'\nimport { toUniqueValues } from '../common/mapper.utils'\n\nconst getByUniqueIds = <T>(baseUrl: string, ids: number[]): Promise<T[]> => {\n  const uniqueIds = toUniqueValues(ids)\n  return getByConditions<T>(baseUrl, buildFilterByIdsCondition(uniqueIds))\n}\n\nconst provider = {\n  getList: async (\n    resource: string,\n    { filter }: TicketCodeFilter,\n  ): Promise<GetListResult<TicketInfo>> => {\n    const filterByTicketCodeCondition = `t=>t.TicketCode==\"${filter.ticketCode}\"`\n    const tickets = await getByConditions<TicketDto>(\n      TICKETS_URL,\n      filterByTicketCodeCondition,\n    )\n\n    const bookingIds = tickets.map((v) => v.bookingId)\n    const bookings = await getByUniqueIds<BookingDto>(BOOKINGS_URL, bookingIds)\n\n    const customerIds = bookings.map((v) => v.customerId)\n    const eventIds = bookings.map((v) => v.eventId)\n\n    const pendingCustomers = getByUniqueIds<CustomerDto>(\n      CUSTOMERS_URL,\n      customerIds,\n    )\n    const pendingEvents = getByUniqueIds<EventDto>(EVENTS_URL, eventIds)\n    const [customers, events] = await Promise.all([\n      pendingCustomers,\n      pendingEvents,\n    ])\n\n    const ticketBaseInfoList = mapToTicketBaseInfoList(\n      bookings,\n      customers,\n      events,\n      tickets,\n    )\n    return Promise.resolve({\n      data: ticketBaseInfoList,\n      total: ticketBaseInfoList.length,\n    })\n  },\n} as DataProvider\n\nexport default provider\n","import { DataProvider, GetListResult } from 'react-admin'\nimport { getByConditions } from '../common/fetch.utils'\nimport { TICKETS_URL } from '../api-urls'\nimport { TicketCodeFilter } from '../common/ticket-code.filter'\nimport { TicketDto } from '../dto/ticket.dto'\n\nconst provider = {\n  getList: async (\n    resource: string,\n    { filter }: TicketCodeFilter,\n  ): Promise<GetListResult<TicketDto>> => {\n    const filterByTicketCodeCondition = `t=>t.TicketCode==\"${filter.ticketCode}\"`\n    const tickets = await getByConditions<TicketDto>(\n      TICKETS_URL,\n      filterByTicketCodeCondition,\n    )\n    return Promise.resolve({\n      data: tickets,\n      total: tickets.length,\n    })\n  },\n} as DataProvider\n\nexport default provider\n","import { DataProvider, sanitizeFetchType } from 'react-admin'\nimport accessUsingsProvider from './access-usings/access-usings.provider'\nimport bookingsProvider from './bookings/bookings.provider'\nimport logsProvider from './logs/extended-logs.provider'\nimport { ResourceName } from './ResourceName'\nimport statsOverallViewListProvider from './stats/overall-view/overall-view-list.provider'\nimport statsOverallViewProvider from './stats/overall-view/overall-view.provider'\nimport ticketDetailsProvider from './ticket-details/ticket-details.provider'\nimport ticketInfoProvider from './ticket-info/ticket-info.provider'\nimport ticketsProvider from './tickets/tickets.provider'\n\nconst dataProviders: Record<ResourceName, DataProvider> = {\n  [ResourceName.ACCESS_USINGS]: accessUsingsProvider,\n  [ResourceName.BOOKINGS]: bookingsProvider,\n  [ResourceName.LOGS]: logsProvider,\n  [ResourceName.TICKETS]: ticketsProvider,\n  [ResourceName.TICKET_INFO]: ticketInfoProvider,\n  [ResourceName.TICKET_DETAILS]: ticketDetailsProvider,\n  [ResourceName.TICKET_LOGS]: logsProvider,\n  [ResourceName.STATS_OVERALL_VIEW]: statsOverallViewProvider,\n  [ResourceName.STATS_OVERALL_VIEW_LIST]: statsOverallViewListProvider\n}\n\nexport default (\n  fetchType: string,\n  resource: string,\n  params: unknown,\n): Promise<unknown> => {\n  const selectedProvider = dataProviders[resource as ResourceName]\n  const type = sanitizeFetchType(fetchType)\n  return selectedProvider[type](resource, params)\n}\n","import i18n from 'i18next'\n\nconst provider = {\n  translate: (key: string, options: any): string => i18n.t(key, options),\n  changeLocale: async (locale: string): Promise<void> => {\n    const identity = localStorage.getItem('username') as string\n    localStorage.setItem(`${identity}.lng`, locale)\n    await i18n.changeLanguage(locale)\n  },\n  getLocale: (): string => i18n.language,\n}\n\nexport default provider","import { MenuItem, Collapse, Tooltip, ListItemIcon, Typography, List } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ExpandMore } from '@material-ui/icons';\nimport React, { ReactElement, ReactNode } from 'react';\nimport { useSelector } from 'react-redux';\nimport { ReduxState } from 'react-admin';\n\nconst useStyles = makeStyles(theme => ({\n  icon: {\n    minWidth: theme.spacing(5)\n  },\n  sidebarIsOpen: {\n    '& a': {\n      transition: 'padding-left 195ms cubic-bezier(0.4, 0, 0.6, 1) 0ms',\n      paddingLeft: theme.spacing(4),\n    },\n  },\n  sidebarIsClosed: {\n    '& a': {\n      transition: 'padding-left 195ms cubic-bezier(0.4, 0, 0.6, 1) 0ms',\n      paddingLeft: theme.spacing(2),\n    },\n  },\n}));\n\ninterface SubMenuProps {\n  handleToggle: () => void\n  icon: ReactElement\n  isOpen: boolean\n  name: string\n  children: ReactNode\n}\n\nexport const SubMenu = (props: SubMenuProps) => {\n  const { handleToggle, icon, isOpen, name, children } = props\n  const sidebarOpen = useSelector((state: ReduxState) => state?.admin.ui.sidebarOpen)\n  const classes = useStyles()\n\n  const header = (\n    <MenuItem button onClick={handleToggle}>\n      <ListItemIcon className={classes.icon}>\n        {isOpen ? <ExpandMore /> : icon}\n      </ListItemIcon>\n      <Typography variant=\"inherit\" color=\"textSecondary\">\n        {name}\n      </Typography>\n    </MenuItem>\n  )\n\n  return (\n    <>\n      {sidebarOpen || isOpen ? (\n        header\n      ) : (\n        <Tooltip title={name} placement=\"right\">\n          {header}\n        </Tooltip>\n      )}\n      <Collapse in={isOpen} timeout=\"auto\" unmountOnExit>\n        <List\n          component=\"div\"\n          disablePadding\n          className={sidebarOpen ? classes.sidebarIsOpen : classes.sidebarIsClosed}>\n          {children}\n        </List>\n      </Collapse>\n    </>\n  )\n}\n","import { makeStyles } from '@material-ui/core/styles';\nimport { ViewComfy, Receipt, List, Sort } from '@material-ui/icons';\nimport React, { useState } from 'react';\nimport { DashboardMenuItem, MenuItemLink, useTranslate, ReduxState } from 'react-admin';\nimport { useSelector } from 'react-redux';\nimport { SubMenu } from './AppSubmenu';\n\nconst useStyles = makeStyles({\n  open: {\n    width: \"240px\",\n  },\n  closed: {\n    width: \"55px\"\n  },\n});\n\nexport const AppMenu = () => {\n  const sidebarOpen = useSelector((state: ReduxState) => state.admin.ui.sidebarOpen)\n  const theme = useStyles()\n  const [open, setOpen] = useState({\n    menuStats: true\n  })\n  const translate = useTranslate()\n\n  const handleToggle = (menu: \"menuStats\") => setOpen(state => ({ ...state, [menu]: !state[menu] }))\n\n  return (\n    <div\n      style={{ userSelect: \"none\" }}\n      className={sidebarOpen ? theme.open : theme.closed}>\n      <DashboardMenuItem />\n      <MenuItemLink\n        to=\"/ticket-info\"\n        primaryText={translate('resources.ticket-info.name')}\n        leftIcon={<Receipt />} />\n      <MenuItemLink\n        to=\"/logs\"\n        primaryText={translate('resources.logs.name')}\n        leftIcon={<List />} />\n      <SubMenu\n        handleToggle={() => handleToggle(\"menuStats\")}\n        isOpen={open.menuStats}\n        name={translate('side-menu.stats.name')}\n        icon={<ViewComfy />}>\n        <MenuItemLink\n          to=\"/stats-overall-view-list\"\n          primaryText={translate('side-menu.stats.overall-view')}\n          leftIcon={<Sort style={{ transform: \"scaleX(-1)\" }} />} />\n      </SubMenu>\n    </div>\n  )\n}","import { defaultTheme } from 'react-admin'\nimport { deepPurple, green } from '@material-ui/core/colors'\nimport { ThemeOptions } from '@material-ui/core'\n\nconst overriddenTheme: ThemeOptions = {\n  ...defaultTheme,\n  typography: {\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Arial',\n      'sans-serif',\n    ].join(','),\n    body1: {\n      fontWeight: 300,\n    },\n    body2: {\n      fontWeight: 300,\n    },\n    h5: {\n      fontWeight: 200,\n    },\n  },\n}\n\nexport const LightTheme: ThemeOptions = {\n  ...overriddenTheme,\n  palette: {\n    primary: deepPurple,\n    secondary: green,\n    type: 'light'\n  },\n}\n\nexport const DarkTheme: ThemeOptions = {\n  ...overriddenTheme,\n  palette: {\n    primary: {\n      light: deepPurple[100],\n      main: deepPurple[200],\n      dark: deepPurple[300],\n      contrastText: '#F1F1F1'\n    },\n    secondary: green,\n    type: 'dark'\n  },\n\n}","import { Box, Switch, Typography } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Brightness3, Brightness5 } from '@material-ui/icons'\nimport React from 'react'\nimport {\n  AppBar,\n  AppBarProps,\n  CoreLayoutProps,\n  Layout,\n  useLocale,\n  useSetLocale,\n  useTranslate,\n} from 'react-admin'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { AppMenu } from './AppMenu';\nimport { DarkTheme, LightTheme } from '../../app.theme'\nimport { ThemeState } from '../../core/common/theme.reducer'\nimport { CHANGE_THEME } from '../../core/constants/reducer.actions'\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    [theme.breakpoints.down('xs')]: {\n      flex: 0,\n    },\n    flex: 1,\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n  },\n  localeContainer: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.down('xs')]: {\n      marginRight: 0,\n    },\n  },\n}))\n\nconst AppTopBar = (props: AppBarProps) => {\n  const classes = useStyles()\n  const dispatch = useDispatch()\n  const theme = useSelector(\n    (state: ThemeState) => state.theme.darkMode === 'dark',\n  )\n  const t = useTranslate()\n  const locale = useLocale()\n  const setLocale = useSetLocale()\n\n  return (\n    <AppBar {...props}>\n      <Typography\n        variant=\"h6\"\n        className={classes.title}\n        id=\"react-admin-title\"\n      />\n      <Box className={classes.localeContainer}>\n        <Switch\n          checked={locale === 'en'}\n          style={{ color: 'black' }}\n          color=\"primary\"\n          onChange={() => setLocale(locale === 'pl' ? 'en' : 'pl')}\n        />\n        <Typography style={{ fontWeight: 600 }} component=\"span\">\n          {t('app-bar.switch-language')}\n        </Typography>\n      </Box>\n      <Switch\n        checkedIcon={<Brightness3 fontSize=\"small\" />}\n        icon={<Brightness5 fontSize=\"small\" />}\n        checked={theme}\n        style={{ color: 'black' }}\n        color=\"primary\"\n        onChange={() => dispatch({ type: CHANGE_THEME })}\n      />\n    </AppBar>\n  )\n}\n\nexport const AppLayout = (props: CoreLayoutProps) => {\n  const theme = useSelector((state: ThemeState) =>\n    state.theme.darkMode === 'dark' ? DarkTheme : LightTheme,\n  )\n\n  return (\n    <Layout\n      {...props}\n      menu={AppMenu}\n      appBar={AppTopBar}\n      theme={theme} />)\n}\n","import React, { ChangeEvent, FC, useState } from 'react'\nimport {\n  Box,\n  Button,\n  FormControl,\n  FormHelperText,\n  Input,\n  withStyles,\n} from '@material-ui/core'\nimport SearchIcon from '@material-ui/icons/Search'\nimport { useTranslate } from 'react-admin'\n\nconst RoundInputBox = withStyles({\n  root: {\n    borderRadius: 16,\n    width: '90%',\n    marginLeft: '5%',\n    display: 'flex',\n    flexDirection: 'row-reverse',\n    border: 'solid',\n    borderColor: '#673ab7',\n  },\n})(Box)\n\nconst RoundInputBoxBtn = withStyles({\n  root: {\n    background: '#673ab7',\n    variant: 'contained',\n    borderRadius: 11,\n    borderTopLeftRadius: 0,\n    borderBottomLeftRadius: 0,\n    margin: 0,\n    fontWeight: 'bold',\n    '&:hover': {\n      background: '#7e57c2',\n    },\n  },\n})(Button)\n\nconst RoundInputBoxFC = withStyles({\n  root: {\n    width: '100%',\n    marginLeft: 13,\n    marginTop: 2,\n  },\n})(FormControl)\n\nexport type SearchInputProps = {\n  label: string\n  onValue: (value: string) => void\n  disabled: boolean\n  error: string\n}\n\nconst SearchInput: FC<Readonly<SearchInputProps>> = ({\n  label,\n  onValue,\n  disabled,\n  error,\n}) => {\n  const [inputError, setInputError] = useState(false)\n  const [inputValue, setInputValue] = useState('')\n  const t = useTranslate()\n\n  const handleInput = (event: ChangeEvent<HTMLInputElement>) => {\n    setInputValue(event.target.value)\n  }\n\n  const handleClick = () => {\n    if (inputValue) {\n      setInputError(false)\n      onValue(inputValue)\n    } else {\n      setInputError(true)\n    }\n  }\n\n  return (\n    <RoundInputBox>\n      <RoundInputBoxBtn onClick={handleClick} disabled={disabled}>\n        <SearchIcon style={{ color: 'white' }} />\n      </RoundInputBoxBtn>\n      <RoundInputBoxFC disabled={disabled}>\n        <Input\n          disableUnderline\n          placeholder={t(label)}\n          onInput={handleInput}\n          onKeyDown={(ev) => ev.key === 'Enter' && handleClick()}\n          error={inputError || !!error}\n        />\n        {inputError && (\n          <FormHelperText error>{t('ra.validation.required')}</FormHelperText>\n        )}\n        {!!error && <FormHelperText error>{t(error)}</FormHelperText>}\n      </RoundInputBoxFC>\n    </RoundInputBox>\n  )\n}\n\nexport default SearchInput\n","import { createStyles, makeStyles } from '@material-ui/core'\n\nexport const useCommonStyles = makeStyles(() =>\n  createStyles({\n    textCentered: {\n      textAlign: 'center',\n    },\n  }),\n)\n","import { stringify } from 'querystring'\nimport * as React from 'react'\nimport { useCallback, useState } from 'react'\nimport clsx from 'clsx'\nimport {\n  GET_LIST,\n  GetListResult,\n  sanitizeFetchType,\n  useMutation,\n  useNotify,\n  useTranslate,\n} from 'react-admin'\nimport { CardContent, CardHeader } from '@material-ui/core'\nimport { useHistory } from 'react-router-dom'\nimport { TicketCodeFilter } from '../../core/common/ticket-code.filter'\nimport { TicketDto } from '../../core/dto/ticket.dto'\nimport { ResourceName } from '../../core/ResourceName'\nimport SearchInput from './SearchInput'\nimport { useCommonStyles } from './common-styles'\n\ntype FindUserByTicketProps = Readonly<{ titleCentered?: boolean }>\n\nexport const FindUserByTicket = ({\n  titleCentered = false,\n}: FindUserByTicketProps) => {\n  const history = useHistory()\n  const notify = useNotify()\n  const [error, setError] = useState('')\n  const [mutate, { loading }] = useMutation()\n  const commonClasses = useCommonStyles()\n  const t = useTranslate()\n\n  const fetchTickets = useCallback(\n    (ticketCode: string) =>\n      mutate(\n        {\n          type: sanitizeFetchType(GET_LIST),\n          resource: ResourceName.TICKETS,\n          payload: { filter: { ticketCode } } as TicketCodeFilter,\n        },\n        { returnPromise: true },\n      ) as Promise<GetListResult<TicketDto>>,\n    [mutate],\n  )\n\n  const onValue = useCallback(\n    async (ticketCode: string) => {\n      setError('')\n      try {\n        const {\n          total,\n          data: [onlyTicket],\n        } = await fetchTickets(ticketCode)\n        if (!total) {\n          setError('common.find-user-by-ticket.error')\n        } else if (total === 1) {\n          history.push({\n            pathname: `/${ResourceName.TICKET_DETAILS}/${onlyTicket.bookingId}/show`,\n          })\n        } else {\n          history.push({\n            pathname: `/${ResourceName.TICKET_INFO}`,\n            search: stringify({\n              filter: JSON.stringify({\n                ticketCode,\n              } as TicketCodeFilter['filter']),\n            }),\n          })\n        }\n      } catch (err) {\n        notify((err as Error)?.message, 'error')\n      }\n    },\n    [fetchTickets, history, notify],\n  )\n\n  return (\n    <>\n      <CardHeader\n        className={clsx({ [commonClasses.textCentered]: titleCentered })}\n        title={t('common.find-user-by-ticket.title')}\n      />\n      <CardContent>\n        <SearchInput\n          label=\"common.find-user-by-ticket.input-label\"\n          onValue={onValue}\n          disabled={loading}\n          error={error}\n        />\n      </CardContent>\n    </>\n  )\n}\n","import * as React from 'react'\nimport { useListContext } from 'react-admin';\nimport { Button, Toolbar, Grid, Paper, ButtonGroup, Select, MenuItem } from '@material-ui/core';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\n\nexport const MobilePostPagination = () => {\n  const { page, perPage, total, setPage, setPerPage } = useListContext();\n  const nbPages = Math.ceil(total / perPage) || 1;\n  return (\n      nbPages > 1 ?\n        <Toolbar>\n          <Grid container>\n            <Grid item xs={3}>\n            <Paper elevation={0}\n              style={{height: '100%', display: 'flex', flexDirection: 'row', justifyContent: 'flex-end', alignItems: 'center'}}>\n              <Select value={perPage} style={{width: '100%', height: '70%', textAlign: 'center'}} variant='outlined'\n              onChange={e => setPerPage(parseInt(e.target.value as string, 10))}>\n                <MenuItem value={20}> 20 </MenuItem>\n                <MenuItem value={50}> 50 </MenuItem>\n                <MenuItem value={100}> 100 </MenuItem>\n              </Select>\n            </Paper>\n            </Grid>\n            <Grid item xs={4} />\n            <Grid item xs={5}>\n              <Paper elevation={0}\n              style={{height: '100%', display: 'flex', flexDirection: 'row', justifyContent: 'flex-end', alignItems: 'center'}}>\n                <ButtonGroup style={{height: '70%'}}>\n                  {page > 1 ?\n                    <Button variant=\"outlined\" color=\"primary\" key=\"prev\" onClick={() => setPage(page - 1)}>\n                      <ChevronLeft />\n                    </Button> :\n                    <Button variant=\"outlined\" color=\"primary\" disabled>\n                      <ChevronLeft />\n                    </Button> \n                  }\n                  <Button disabled variant=\"contained\"> {page} </Button>\n                  {page !== nbPages ?\n                    <Button variant=\"outlined\" color=\"primary\" key=\"next\" onClick={() => setPage(page + 1)}>\n                      <ChevronRight />\n                    </Button> :\n                    <Button variant=\"outlined\" color=\"primary\" disabled>\n                      <ChevronRight />\n                    </Button>\n                  }\n                </ButtonGroup>\n              </Paper>\n            </Grid>\n          </Grid>\n        </Toolbar> :\n        <div />\n  );\n}","import * as React from 'react'\nimport { TextField } from '@material-ui/core'\nimport { useField } from 'react-final-form'\nimport ArrowRightAltIcon from '@material-ui/icons/ArrowRightAlt'\n\nexport const DateFilterInput = ({ source }: { source: string }) => {\n  const defaultFromDate = new Date(Date.now() - 2678400000)\n  const defaultToDate = new Date(Date.now())\n  const [dateFrom, setDateFrom] = React.useState(\n    defaultFromDate.getTime().toString(),\n  )\n  const [dateTo, setDateTo] = React.useState(defaultToDate.getTime().toString())\n  const {\n    input: { onChange },\n    meta: { touched, error },\n  } = useField(source)\n\n  onChange([dateFrom, dateTo].join(';'))\n\n  const convertedDate = (date: Date) => date.toJSON().substr(0, 10)\n\n  return (\n    <span\n      key=\"date\"\n      style={{\n        display: 'flex',\n        justifyContent: 'center',\n        verticalAlign: 'center',\n        marginBottom: '5%',\n      }}\n    >\n      <TextField\n        defaultValue={convertedDate(defaultFromDate)}\n        name={source}\n        type=\"date\"\n        onChange={(e) => setDateFrom(Date.parse(e.target.value).toString())}\n        error={!!(touched && error)}\n        helperText={touched && error}\n        style={{ alignSelf: 'center' }}\n      />\n      <ArrowRightAltIcon style={{ marginTop: '4%' }} />\n      <TextField\n        defaultValue={convertedDate(defaultToDate)}\n        name={source}\n        type=\"date\"\n        onChange={(e) => setDateTo(Date.parse(e.target.value).toString())}\n        error={!!(touched && error)}\n        helperText={touched && error}\n      />\n    </span>\n  )\n}\n","import { Button, Grid, TableCell, withStyles } from '@material-ui/core'\n\nexport const BookingButton = withStyles({\n  root: {\n    width: '100%',\n    backgroundColor: 'rgb(220, 220, 220)',\n    boxShadow: '0px 0px 3px',\n    '&:hover': {\n      backgroundColor: 'rgb(220, 230, 230)',\n    },\n  },\n})(Button)\n\nexport const FullWidthButton = withStyles({\n  root: {\n    width: '100%',\n  },\n})(Button)\n\nexport const CenterGrid = withStyles({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'column',\n  },\n})(Grid)\n\nexport const NoPaddingCell = withStyles({\n  root: {\n    paddingBottom: 0,\n    paddingTop: 0,\n  },\n})(TableCell)\n","import React, { CSSProperties, useEffect, useState } from 'react'\nimport {\n  Collapse,\n  Grid,\n  Hidden,\n  IconButton,\n  TableCell,\n  TableRow,\n} from '@material-ui/core'\nimport { DateField, TextField, useTranslate } from 'react-admin'\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown'\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp'\nimport { useHistory } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport { ResourceName } from '../../core/ResourceName'\nimport { BookingButton, CenterGrid, NoPaddingCell } from './LogsComponents'\nimport { ExtendedLog } from '../../core/logs/extended-log'\nimport { ThemeState } from '../../core/common/theme.reducer'\nimport { getContrastColor } from '../../core/common/visual.utils'\n\ninterface LogRowProps {\n  readonly compactMode: boolean\n  readonly noBooking: boolean\n  readonly data: ExtendedLog\n}\n\nexport const LogRow = (props: LogRowProps) => {\n  const { data, compactMode, noBooking } = props\n  const [open, setOpen] = useState(false)\n  const history = useHistory()\n  const isDarkMode = useSelector(\n    (state: ThemeState) => state.theme.darkMode === 'dark',\n  )\n  const t = useTranslate()\n\n  useEffect(() => {\n    setOpen(false)\n  }, [data])\n\n  const defineStyle = () => {\n    if (\n      (!isDarkMode && data.color === 'transparent') ||\n      getContrastColor(data.color) === 'black'\n    ) {\n      return { color: 'black', fontWeight: 'normal' } as CSSProperties\n    }\n    return { color: 'white', fontWeight: 'bold' } as CSSProperties\n  }\n\n  return (\n    <>\n      <TableRow style={{ backgroundColor: data.color }}>\n        <Hidden mdUp={!compactMode}>\n          <TableCell>\n            <IconButton onClick={() => setOpen((v) => !v)}>\n              {open ? (\n                <ArrowDropUpIcon style={defineStyle()} />\n              ) : (\n                <ArrowDropDownIcon style={defineStyle()} />\n              )}\n            </IconButton>\n          </TableCell>\n        </Hidden>\n        <TableCell>\n          <DateField\n            record={data}\n            source=\"date\"\n            showTime\n            style={defineStyle()}\n          />\n        </TableCell>\n        <TableCell>\n          <TextField record={data} source=\"deviceName\" style={defineStyle()} />\n        </TableCell>\n        <TableCell>\n          <TextField record={data} source=\"ticketCode\" style={defineStyle()} />\n        </TableCell>\n        <Hidden smDown xlDown={compactMode}>\n          <TableCell>\n            <TextField\n              record={data}\n              source=\"text\"\n              sortable={false}\n              style={defineStyle()}\n            />\n          </TableCell>\n        </Hidden>\n        <Hidden smDown xlDown={compactMode || noBooking}>\n          <TableCell>\n            {data.bookingId == null ? (\n              <div />\n            ) : (\n              <BookingButton\n                onClick={() =>\n                  history.push({\n                    pathname: `/${ResourceName.TICKET_DETAILS}/${data.bookingId}/show`,\n                  })\n                }\n              >\n                {data.bookingId}\n              </BookingButton>\n            )}\n          </TableCell>\n        </Hidden>\n      </TableRow>\n      <Hidden mdUp={!compactMode}>\n        <TableRow>\n          <NoPaddingCell colSpan={4}>\n            <Collapse in={open}>\n              <Grid\n                container\n                style={{ marginTop: '1%', marginBottom: '1%' }}\n                item\n              >\n                <Hidden xlDown={noBooking}>\n                  <CenterGrid item xs={5}>\n                    {`${t('resources.logs.fields.bookingId')}:`}\n                  </CenterGrid>\n                  <CenterGrid item xs={7}>\n                    {data.bookingId == null ? (\n                      <div />\n                    ) : (\n                      <BookingButton\n                        onClick={() =>\n                          history.push({\n                            pathname: `/${ResourceName.TICKET_DETAILS}/${data.bookingId}/show`,\n                          })\n                        }\n                      >\n                        {data.bookingId}\n                      </BookingButton>\n                    )}\n                  </CenterGrid>\n                  <hr\n                    style={{\n                      width: '90%',\n                      marginTop: '1%',\n                      marginBottom: '1%',\n                    }}\n                  />\n                </Hidden>\n                <CenterGrid item xs={5}>\n                  {`${t('resources.logs.fields.description')}:`}\n                </CenterGrid>\n                <CenterGrid item xs={7}>\n                  {data.text}\n                </CenterGrid>\n              </Grid>\n            </Collapse>\n          </NoPaddingCell>\n        </TableRow>\n      </Hidden>\n    </>\n  )\n}\n","export const getContrastColor = (hexcolor: string) => {\n    const r = parseInt(hexcolor.substr(1, 2), 16);\n    const g = parseInt(hexcolor.substr(3, 2), 16);\n    const b = parseInt(hexcolor.substr(5, 2), 16);\n    const yiq = ((r * 299) + (g * 587) + (b * 114)) / 1000;\n    return (yiq >= 128) ? 'black' : 'white';\n  }","import React from 'react'\nimport {\n  Hidden,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from '@material-ui/core'\nimport { useListContext, useListSortContext, useTranslate } from 'react-admin'\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward'\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward'\nimport { ExtendedLog } from '../../core/logs/extended-log'\nimport { FullWidthButton } from './LogsComponents'\nimport { LogRow } from './LogRow'\n\ninterface LogGridProps {\n  readonly compactMode: boolean\n  readonly noBooking: boolean\n}\n\nexport const LogGrid = (props: LogGridProps) => {\n  const { compactMode, noBooking } = props\n  const { ids, data } = useListContext()\n  const { currentSort, setSort } = useListSortContext()\n  const t = useTranslate()\n\n  const inverseOrder = (order: string) => (order === 'ASC' ? 'DESC' : 'ASC')\n\n  const handleSortChange = (sortBy: string) => {\n    setSort(\n      sortBy,\n      sortBy === currentSort.field ? inverseOrder(currentSort.order) : 'DESC',\n    )\n  }\n\n  const HeaderCell = (name: string, display: string) => (\n    <>\n      {currentSort.field === name ? (\n        <FullWidthButton\n          startIcon={\n            currentSort.order === 'ASC' ? (\n              <ArrowUpwardIcon />\n            ) : (\n              <ArrowDownwardIcon />\n            )\n          }\n        >\n          {t(display)}\n        </FullWidthButton>\n      ) : (\n        <FullWidthButton>{t(display)}</FullWidthButton>\n      )}\n    </>\n  )\n\n  return (\n    <TableContainer component={Paper}>\n      <Table\n        aria-label=\"a dense table\"\n        size=\"small\"\n        padding={compactMode ? 'none' : 'default'}\n      >\n        <TableHead>\n          <TableRow>\n            <Hidden mdUp={!compactMode}>\n              <TableCell style={{ width: '3%' }} />\n            </Hidden>\n            <TableCell\n              onClick={() => handleSortChange('date')}\n              style={{ width: '10%' }}\n            >\n              {HeaderCell('date', 'resources.logs.fields.date')}\n            </TableCell>\n            <TableCell\n              onClick={() => handleSortChange('deviceName')}\n              style={{ width: '15%' }}\n            >\n              {HeaderCell('deviceName', 'resources.logs.fields.deviceName')}\n            </TableCell>\n            <TableCell\n              onClick={() => handleSortChange('ticketCode')}\n              style={{ width: '25%' }}\n            >\n              {HeaderCell('ticketCode', 'resources.logs.fields.ticketCode')}\n            </TableCell>\n            <Hidden smDown xlDown={compactMode}>\n              <TableCell style={{ textAlign: 'center', width: '25%' }}>\n                {t('resources.logs.fields.description').toUpperCase()}\n              </TableCell>\n            </Hidden>\n            <Hidden smDown xlDown={compactMode || noBooking}>\n              <TableCell\n                onClick={() => handleSortChange('bookingId')}\n                style={{ width: '15%' }}\n              >\n                {HeaderCell('bookingId', 'resources.logs.fields.bookingId')}\n              </TableCell>\n            </Hidden>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {ids.map((id) => (\n            <LogRow\n              key={id}\n              data={data[id] as ExtendedLog}\n              compactMode={compactMode}\n              noBooking={noBooking}\n            />\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n","import { useMediaQuery, useTheme } from '@material-ui/core'\nimport React from 'react'\nimport {\n  Filter,\n  FilterProps,\n  List,\n  Pagination,\n  SelectInput,\n  TextInput,\n  ListProps,\n  useTranslate,\n  useLocale,\n} from 'react-admin'\nimport { MobilePostPagination } from '../common/Pagination'\nimport { DateFilterInput } from './DateFilterInput'\nimport { LogGrid } from './LogGrid'\n\ninterface LogListProps extends ListProps {\n  readonly compactMode?: boolean\n  readonly noBooking?: boolean\n}\n\nconst ListFilters = (props: Omit<FilterProps, 'children'>) => {\n  const t = useTranslate()\n  return (\n    <Filter {...props}>\n      <TextInput source=\"ticketCode\" alwaysOn />\n      <SelectInput\n        source=\"deviceName\"\n        choices={[\n          {\n            id: 'Czytnik',\n            name: t('resources.logs.fields.deviceNameChoices.reader'),\n          },\n          {\n            id: 'Przej\\u015Bcie',\n            name: t('resources.logs.fields.deviceNameChoices.gateway'),\n          },\n        ]}\n      />\n      <DateFilterInput source=\"date\" key=\"date\" />\n      <TextInput source=\"bookingId\" />\n      <TextInput source=\"event\" />\n    </Filter>\n  )\n}\n\nexport const LogList = ({\n  compactMode = false,\n  noBooking = false,\n  ...props\n}: LogListProps) => {\n  const theme = useTheme()\n  const smallScreen = useMediaQuery(theme.breakpoints.down('sm'))\n  const locale = useLocale()\n  return (\n    <List\n      perPage={20}\n      exporter={false}\n      pagination={\n        smallScreen ? (\n          <MobilePostPagination />\n        ) : (\n          <Pagination rowsPerPageOptions={[20, 50, 100]} />\n        )\n      }\n      filters={<ListFilters />}\n      filter={{ locale }}\n      sort={{ field: 'date', order: 'DESC' }}\n      {...props}\n    >\n      <LogGrid compactMode={compactMode} noBooking={noBooking} />\n    </List>\n  )\n}\n","import {\n  Badge, Button, Card,\n  CardContent,\n  CardHeader,\n  createStyles, Dialog, DialogActions, DialogContent, DialogTitle, FormControlLabel, Grid, IconButton, makeStyles, Paper,\n  Switch, Theme, withStyles, Zoom\n} from '@material-ui/core'\nimport { deepPurple } from '@material-ui/core/colors'\nimport { TransitionProps } from '@material-ui/core/transitions'\nimport ListIcon from '@material-ui/icons/List'\nimport SearchIcon from '@material-ui/icons/Search'\nimport SettingsIcon from '@material-ui/icons/Settings'\nimport React, { useEffect, useState } from 'react'\nimport { ResourceContextProvider, useGetIdentity, useTranslate } from 'react-admin'\nimport { ResourceName } from '../core/ResourceName'\nimport { FindUserByTicket } from './common/FindUserByTicket'\nimport { LogList } from './logs/LogList'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    header: {\n      textAlign: 'center',\n      letterSpacing: theme.spacing(0.2),\n    },\n  }),\n)\n\nconst OpenDashboardSettingsModalButton = withStyles({\n  root: {\n    height: 44,\n    width: 45,\n    border: 'solid thin',\n    borderColor: deepPurple[300],\n    boxShadow: '0px 0px 3px #9575cd',\n  },\n})(IconButton)\n\nconst Transition = React.forwardRef(\n  (props: TransitionProps, ref: React.Ref<unknown>) => (\n    <Zoom ref={ref} {...props} />\n  ),\n)\n\nconst TicketFinder = () => (\n  <Card style={{ width: '100%', marginBottom: '5px' }}>\n    <FindUserByTicket />\n  </Card>\n)\n\nconst LastLogs = () => {\n  const t = useTranslate()\n  return (\n    <Card style={{ width: '100%', marginBottom: '5px' }}>\n      <CardHeader title={t('dashboard.cards.last-logs.title')} />\n      <CardContent>\n        <ResourceContextProvider value={ResourceName.LOGS}>\n          <LogList\n            basePath=\"/\"\n            title=\" \"\n            compactMode\n            pagination={false}\n            perPage={10}\n            actions={false}\n            filters={undefined}\n          />\n        </ResourceContextProvider>\n      </CardContent>\n    </Card>\n  )\n}\n\nconst ComponentsModal = ({\n  components,\n  open,\n  setOpen,\n}: {\n  components: { ticketfinder: boolean; dashlogs: boolean }\n  open: boolean\n  setOpen: (change: boolean) => void\n}) => {\n  const { identity } = useGetIdentity()\n  const t = useTranslate()\n\n  const [componentsOpen, setComponentsOpen] = useState({\n    ticketfinder: components.ticketfinder,\n    dashlogs: components.dashlogs,\n  })\n\n  const componentsChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setComponentsOpen({\n      ...componentsOpen,\n      [event.target.name]: event.target.checked,\n    })\n  }\n\n  const handleAccept = () => {\n    Object.entries(componentsOpen).map((component) => {\n      localStorage.setItem(\n        `${identity?.id}.${component[0]}`,\n        component[1] ? '1' : '0',\n      )\n      return component\n    })\n    setOpen(false)\n  }\n\n  useEffect(() => {\n    setComponentsOpen({\n      ticketfinder:\n        localStorage.getItem(`${identity?.id}.ticketfinder`) === '1',\n      dashlogs: localStorage.getItem(`${identity?.id}.dashlogs`) === '1',\n    })\n  }, [open, identity])\n\n  return (\n    <Dialog open={open} style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }} onClose={() => setOpen(false)} TransitionComponent={Transition}>\n      <Paper style={{ display: \"flex\", flexDirection: \"column\", width: \"40vh\" }}>\n        <DialogTitle style={{ textAlign: \"center\" }}>{t('dashboard.settings.title')}</DialogTitle>\n        <DialogContent>\n          <Grid container spacing={1}>\n            <Grid item xs={6}>\n              <Paper\n                style={{\n                  width: '100%',\n                  height: '150px',\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  flexDirection: 'column',\n                }}\n              >\n                <SearchIcon />\n                <FormControlLabel\n                  control={\n                    <Switch\n                      checked={componentsOpen.ticketfinder}\n                      name='ticketfinder'\n                      onChange={componentsChange} />}\n                  label={t('dashboard.settings.ticket-finder-label')}\n                  labelPlacement=\"top\"\n                  style={{ margin: '5%', textAlign: 'center', width: '90%' }}\n                />\n              </Paper>\n            </Grid>\n            <Grid item xs={6}>\n              <Paper\n                style={{\n                  width: '100%',\n                  height: '150px',\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  flexDirection: 'column',\n                }}\n              >\n                <ListIcon />\n                <FormControlLabel\n                  control={\n                    <Switch\n                      checked={componentsOpen.dashlogs}\n                      name='dashlogs'\n                      onChange={componentsChange} />}\n                  label={t('dashboard.settings.last-logs-label')}\n                  labelPlacement=\"top\"\n                  style={{ margin: '5%', textAlign: 'center', width: '90%' }}\n                />\n              </Paper>\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button variant=\"outlined\" onClick={() => setOpen(false)}>{t('dashboard.settings.cancel-button')}</Button>\n          <Button variant=\"outlined\" color='primary' onClick={handleAccept}>{t('dashboard.settings.save-button')}</Button>\n        </DialogActions>\n      </Paper>\n    </Dialog>\n  )\n}\n\nconst DashboardSettingsModalButton = ({\n  setModalOpen,\n}: {\n  setModalOpen: (state: boolean) => void\n}) => {\n  const { identity } = useGetIdentity()\n\n  return (\n    <div style={{ marginTop: '5px' }}>\n      {localStorage.getItem(`${identity?.id}.newfeaturedash`) ? (\n        <OpenDashboardSettingsModalButton\n          onClick={() => {\n            setModalOpen(true)\n          }}\n        >\n          <SettingsIcon color=\"primary\" />\n        </OpenDashboardSettingsModalButton>\n      ) : (\n        <Badge color=\"primary\" variant=\"dot\" overlap=\"circle\">\n          <OpenDashboardSettingsModalButton\n            onClick={() => {\n              localStorage.setItem(`${identity?.id}.newfeaturedash`, '1')\n              setModalOpen(true)\n            }}\n          >\n            <SettingsIcon color=\"primary\" />\n          </OpenDashboardSettingsModalButton>\n        </Badge>\n      )}\n    </div>\n  )\n}\n\nexport const Dashboard = () => {\n  const { identity } = useGetIdentity()\n  const classes = useStyles()\n  const t = useTranslate()\n  const [dashboardSettingsModalOpen, setDashboardSettingsModalOpen] = useState(false)\n\n  useEffect(() => {\n    ;['dashlogs', 'ticketfinder'].map((component) => {\n      if (!localStorage.getItem(`${identity?.id}.${component}`))\n        localStorage.setItem(`${identity?.id}.${component}`, '1')\n      return component\n    })\n  }, [identity])\n\n  const handleModalOpen = (value: boolean) => {\n    setDashboardSettingsModalOpen(value)\n  }\n\n  return (\n    <Grid container spacing={1}>\n      <ComponentsModal\n        open={dashboardSettingsModalOpen}\n        setOpen={setDashboardSettingsModalOpen}\n        components={{\n          ticketfinder:\n            localStorage.getItem(`${identity?.id}.ticketfinder`) === '1',\n          dashlogs: localStorage.getItem(`${identity?.id}.dashlogs`) === '1',\n        }}\n      />\n      <Grid item xs={12}>\n        <Card>\n          <CardHeader\n            className={classes.header}\n            title={t('dashboard.welcome')}\n            titleTypographyProps={{ variant: 'h4' }}\n          />\n        </Card>\n      </Grid>\n      <Grid item sm={6} xs={12}>\n        {localStorage.getItem(`${identity?.id}.ticketfinder`) === '1' && (\n          <TicketFinder />\n        )}\n      </Grid>\n      <Grid\n        item\n        sm={6}\n        xs={12}\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'flex-end',\n          width: '10%',\n        }}\n      >\n        {localStorage.getItem(`${identity?.id}.dashlogs`) === '1' && (\n          <LastLogs />\n        )}\n        <DashboardSettingsModalButton setModalOpen={handleModalOpen} />\n      </Grid>\n    </Grid>\n  )\n}\n","import { makeStyles, Theme } from '@material-ui/core'\n\ntype ThemeProps = Readonly<{ isDarkMode: boolean }>\n\nexport const useThemeStyles = makeStyles<Theme, ThemeProps>({\n  background: ({ isDarkMode }) => ({\n    backgroundColor: isDarkMode ? '#7A7A7A' : '#FAFAFA',\n  }),\n})\n","import {\n  Box,\n  Button,\n  Collapse,\n  IconButton,\n  makeStyles,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from '@material-ui/core'\nimport clsx from 'clsx'\nimport { ArrowDropDown, ArrowDropUp } from '@material-ui/icons'\nimport React, { ReactElement, useState } from 'react'\nimport { Show, ShowProps, useShowContext, useTranslate } from 'react-admin'\nimport { useSelector } from 'react-redux'\nimport {\n  BlockOverallView,\n  ObjectOverallView,\n  TribuneOverallView,\n} from '../../../core/stats/overall-view/overall-view'\nimport { ThemeState } from '../../../core/common/theme.reducer'\nimport { useThemeStyles } from '../../common/theme-styles'\nimport { useCommonStyles } from '../../common/common-styles'\nimport { ValueWithLabel } from '../../../core/common/types'\n\nconst ThemedTableRow = ({ children }: { children: ReactElement[] }) => {\n  const isDarkMode = useSelector(\n    (state: ThemeState) => state.theme.darkMode === 'dark',\n  )\n  const themeClasses = useThemeStyles({ isDarkMode })\n  return <TableRow className={themeClasses.background}>{children}</TableRow>\n}\n\nconst useStyles = makeStyles({\n  noBottomBorder: {\n    borderBottom: 'none',\n  },\n  quarterWidth: {\n    width: '25%',\n  },\n})\n\nconst ViewTitle = (record: any) => {\n  const {\n    record: { eventName, date, id },\n  } = record\n  const t = useTranslate()\n  const description = `${eventName} ${date.replace('T', ' ')} ${id}`\n  return (\n    <span>{`${t('resources.stats-overall-view.name')}: ${description}`}</span>\n  )\n}\n\nconst BlockView = ({\n  capacity,\n  entered,\n  enteredAbo,\n  enteredNormal,\n  enteredInfix,\n  enteredPoints,\n  enteredService,\n  name,\n  sold,\n  soldAbo,\n  soldNormal,\n  soldInfix,\n  soldPoints,\n  soldService,\n}: BlockOverallView) => {\n  const [open, setOpen] = useState(false)\n  const classes = useStyles()\n  const commonStyles = useCommonStyles()\n  const t = useTranslate()\n\n  const firstColumnEntries = [\n    { label: 'resources.stats-overall-view.labels.normal', value: soldNormal },\n    { label: 'resources.stats-overall-view.labels.abo', value: soldAbo },\n    { label: 'resources.stats-overall-view.labels.infix', value: soldInfix },\n    { label: 'resources.stats-overall-view.labels.points', value: soldPoints },\n    {\n      label: 'resources.stats-overall-view.labels.service',\n      value: soldService,\n    },\n  ].map(\n    ({ value, label }: ValueWithLabel) =>\n      !!value && (\n        <Box key={label} ml=\"71px\">\n          {t(label)}\n        </Box>\n      ),\n  )\n\n  const secondColumnEntries = [\n    { label: enteredNormal, value: soldNormal },\n    { label: enteredAbo, value: soldAbo },\n    { label: enteredInfix, value: soldInfix },\n    { label: enteredPoints, value: soldPoints },\n    { label: enteredService, value: soldService },\n  ].map(\n    ({ value, label }: ValueWithLabel<number>, idx) =>\n      !!value && (\n        // eslint-disable-next-line react/no-array-index-key\n        <Box key={idx} textAlign=\"center\">\n          {label}\n        </Box>\n      ),\n  )\n\n  const thirdColumnEntries = [\n    { label: soldNormal, value: soldNormal },\n    { label: soldAbo, value: soldAbo },\n    { label: soldInfix, value: soldInfix },\n    { label: soldPoints, value: soldPoints },\n    { label: soldService, value: soldService },\n  ].map(\n    ({ value, label }: ValueWithLabel<number>, idx) =>\n      !!value && (\n        // eslint-disable-next-line react/no-array-index-key\n        <Box key={idx} textAlign=\"center\">\n          {label}\n        </Box>\n      ),\n  )\n\n  return (\n    <>\n      <ThemedTableRow>\n        <TableCell className={clsx({ [classes.noBottomBorder]: open })}>\n          {sold > 0 && (\n            <IconButton\n              onClick={() => setOpen((v) => !v)}\n              style={{ height: '40px', width: '40px', marginLeft: '30px' }}\n            >\n              {open ? <ArrowDropUp /> : <ArrowDropDown />}\n            </IconButton>\n          )}\n          <span style={{ marginLeft: sold > 0 ? '2px' : '72px' }}>{name}</span>\n        </TableCell>\n        <TableCell\n          className={clsx(\n            { [classes.noBottomBorder]: open },\n            commonStyles.textCentered,\n          )}\n        >\n          {entered}\n        </TableCell>\n        <TableCell\n          className={clsx(\n            { [classes.noBottomBorder]: open },\n            commonStyles.textCentered,\n          )}\n        >\n          {sold}\n        </TableCell>\n        <TableCell\n          className={clsx(\n            { [classes.noBottomBorder]: open },\n            commonStyles.textCentered,\n          )}\n        >\n          {capacity}\n        </TableCell>\n      </ThemedTableRow>\n      {open && (\n        <ThemedTableRow>\n          <TableCell>{firstColumnEntries}</TableCell>\n          <TableCell>{secondColumnEntries}</TableCell>\n          <TableCell>{thirdColumnEntries}</TableCell>\n          <TableCell />\n        </ThemedTableRow>\n      )}\n    </>\n  )\n}\n\nconst TribuneView = (tribune: TribuneOverallView) => {\n  const { capacity, entered, name, sold, blocks } = tribune\n  const [open, setOpen] = useState(false)\n  const commonStyles = useCommonStyles()\n  return (\n    <>\n      {blocks.length > 0 && capacity > 0 && (\n        <>\n          <TableRow>\n            <TableCell>\n              <IconButton\n                onClick={() => setOpen((v) => !v)}\n                style={{ height: '40px', width: '40px' }}\n              >\n                {open ? <ArrowDropUp /> : <ArrowDropDown />}\n              </IconButton>\n              <span style={{ marginLeft: '2px' }}>{name}</span>\n            </TableCell>\n            <TableCell className={commonStyles.textCentered}>\n              {entered}\n            </TableCell>\n            <TableCell className={commonStyles.textCentered}>{sold}</TableCell>\n            <TableCell className={commonStyles.textCentered}>\n              {capacity}\n            </TableCell>\n          </TableRow>\n          {open &&\n            blocks.map((block) => <BlockView {...block} key={block.id} />)}\n        </>\n      )}\n    </>\n  )\n}\n\nconst ObjectView = (objectOverallView: ObjectOverallView) => {\n  const { name, tribunes } = objectOverallView\n  const [open, setOpen] = useState(true)\n  const classes = useStyles()\n  const commonStyles = useCommonStyles()\n  const t = useTranslate()\n\n  const quantityColumnLabels = [\n    'resources.stats-overall-view.labels.entries',\n    'resources.stats-overall-view.labels.sold',\n    'resources.stats-overall-view.labels.capacity',\n  ].map((label) => (\n    <TableCell\n      key={label}\n      className={clsx(classes.quarterWidth, commonStyles.textCentered)}\n    >\n      {t(label)}\n    </TableCell>\n  ))\n\n  const summaryRow = ({ entered, sold, capacity }: ObjectOverallView) => (\n    <TableRow style={{ height: '40px' }}>\n      <TableCell>\n        <Box ml=\"2px\">{t('resources.stats-overall-view.labels.total')}</Box>\n      </TableCell>\n      {[entered, sold, capacity].map((value, idx) => (\n        // eslint-disable-next-line react/no-array-index-key\n        <TableCell key={idx} className={commonStyles.textCentered}>\n          {value}\n        </TableCell>\n      ))}\n    </TableRow>\n  )\n\n  return (\n    <Box\n      style={{ margin: '5px', borderRadius: '5px', boxShadow: '0px 0px 2px' }}\n    >\n      <Button style={{ width: '100%' }} onClick={() => setOpen((v) => !v)}>\n        {name}\n      </Button>\n      <Collapse in={open}>\n        <TableContainer>\n          <Table padding=\"none\">\n            <TableHead>\n              <TableRow>\n                <TableCell style={{ width: '25%' }}>\n                  <div style={{ marginLeft: '2px' }}>\n                    {t('resources.stats-overall-view.labels.tribune')}\n                  </div>\n                </TableCell>\n                {quantityColumnLabels}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {tribunes.map((tribune) => (\n                <TribuneView {...tribune} key={tribune.id} />\n              ))}\n              {summaryRow(objectOverallView)}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Collapse>\n      {!open && (\n        <Table padding=\"none\">\n          <TableHead>\n            <TableRow>\n              <TableCell style={{ width: '25%' }} />\n              {quantityColumnLabels}\n            </TableRow>\n          </TableHead>\n          <TableBody>{summaryRow(objectOverallView)}</TableBody>\n        </Table>\n      )}\n    </Box>\n  )\n}\n\nconst StatsView = () => {\n  const { record } = useShowContext()\n\n  return (\n    <>\n      {record?.objects.map((object: ObjectOverallView) => (\n        <ObjectView {...object} key={record.id} />\n      ))}\n    </>\n  )\n}\n\nexport const OverallView = (props: ShowProps) => (\n  <Show title={<ViewTitle />} {...props}>\n    <StatsView />\n  </Show>\n)\n","import * as React from 'react'\nimport {\n  Datagrid,\n  DateField,\n  Filter,\n  FilterProps,\n  List,\n  ListProps,\n  TextField,\n  TextInput,\n  useListContext,\n} from 'react-admin'\nimport { ResourceName } from '../../../core/ResourceName'\n\nconst ListFilters = (props: Omit<FilterProps, 'children'>) => (\n  <Filter {...props}>\n    <TextInput source=\"name\" alwaysOn />\n  </Filter>\n)\n\nconst OverallViewGrid = () => {\n  const { loading } = useListContext()\n  // TODO: header doesn't change color when theme value is switched\n  //  the reason is the need to change the theme at <Admin> level - not at <Layout> level\n  //  the solution is here - https://stackoverflow.com/a/63967145 -> after that customReducer needs to be removed\n  return (\n    <Datagrid\n      size=\"medium\"\n      loaded={!loading}\n      rowClick={(id) => `${ResourceName.STATS_OVERALL_VIEW}/${id}/show`}\n    >\n      <TextField source=\"id\" sortable={false} />\n      <TextField source=\"name\" sortable={false} />\n      <DateField source=\"dateStart\" sortable={false} showTime />\n      <DateField source=\"dateEnd\" sortable={false} showTime />\n    </Datagrid>\n  )\n}\n\nexport const OverallViewList = (props: ListProps) => (\n  <List {...props} actions={false} pagination={false} filters={<ListFilters />}>\n    <OverallViewGrid />\n  </List>\n)\n","import { TicketType } from '../enum/TicketType'\nimport { BookingType } from '../enum/BookingType'\n\nconst bookingTypeMapping: Record<BookingType, string> = {\n  [BookingType.NORMAL]: 'resources.enums.bookingType.normal',\n  [BookingType.ABO]: 'resources.enums.bookingType.abo',\n  [BookingType.INFIX]: 'resources.enums.bookingType.infix',\n  [BookingType.POINTS]: 'resources.enums.bookingType.points',\n  [BookingType.SERVICE]: 'resources.enums.bookingType.service',\n}\n\nconst ticketTypeMapping: Record<TicketType, string> = {\n  [TicketType.K]: 'resources.enums.ticketType.k',\n  [TicketType.M]: 'resources.enums.ticketType.m',\n  [TicketType.Z]: 'resources.enums.ticketType.z',\n  [TicketType.N]: 'resources.enums.ticketType.n',\n  [TicketType.P]: 'resources.enums.ticketType.p',\n  [TicketType.U]: 'resources.enums.ticketType.u',\n  [TicketType.R]: 'resources.enums.ticketType.r',\n}\n\nexport const mapFromBookingType = (bookingType: BookingType): string =>\n  bookingTypeMapping[bookingType]\n\nexport const mapFromTicketType = (ticketType: TicketType): string =>\n  ticketTypeMapping[ticketType]\n","import * as React from 'react'\nimport { useShowContext } from 'react-admin'\nimport {\n  Box,\n  createStyles,\n  makeStyles,\n  Theme,\n  Typography,\n} from '@material-ui/core'\nimport { TicketDetails } from '../../core/ticket-details/ticket-details'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    header: {\n      letterSpacing: theme.spacing(0.2),\n    },\n  }),\n)\nexport const TicketDetailsHeader = () => {\n  const classes = useStyles()\n  const { record } = useShowContext<TicketDetails>()\n  return (\n    <Box m={2}>\n      <Typography className={classes.header} variant=\"h5\" paragraph>\n        {record?.firstname} {record?.lastname}\n      </Typography>\n    </Box>\n  )\n}\n","import * as React from 'react'\nimport {\n  DateField,\n  Labeled,\n  TextField,\n  TextFieldProps,\n  useRecordContext,\n  useTranslate,\n} from 'react-admin'\nimport {\n  Box,\n  Chip,\n  createStyles,\n  makeStyles,\n  Paper,\n  Theme,\n} from '@material-ui/core'\nimport { mapFromTicketType } from '../../core/ticket-details/ticket-details-values.mapper'\nimport { TicketDetails } from '../../core/ticket-details/ticket-details'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ticketBox: {\n      display: 'flex',\n      flexDirection: 'column',\n      padding: theme.spacing(1),\n      marginLeft: theme.spacing(1),\n    },\n    ticketField: {\n      padding: theme.spacing(0),\n      margin: theme.spacing(0),\n      marginBottom: theme.spacing(0.5),\n    },\n  }),\n)\n\nexport const TicketDetailsTicketsField = ({ label }: TextFieldProps) => {\n  const classes = useStyles()\n  const t = useTranslate()\n  const record = useRecordContext<TicketDetails>()\n  const mappedRecords = (record.tickets || []).map(\n    ({ id, ticketType, createdAt, ticketCode }) => ({\n      id,\n      ticketCode,\n      ticketType: mapFromTicketType(ticketType),\n      createdAt,\n    }),\n  )\n  const fields = mappedRecords.map((mappedRecord) => (\n    <Paper\n      key={mappedRecord.id}\n      variant=\"elevation\"\n      className={classes.ticketBox}\n    >\n      <Labeled\n        className={classes.ticketField}\n        label=\"resources.ticket-details.fields.tickets.fields.id\"\n      >\n        <TextField\n          className={classes.ticketField}\n          record={mappedRecord}\n          source=\"id\"\n        />\n      </Labeled>\n      <Labeled\n        className={classes.ticketField}\n        label=\"resources.ticket-details.fields.tickets.fields.ticketCode\"\n      >\n        <TextField\n          className={classes.ticketField}\n          record={mappedRecord}\n          source=\"ticketCode\"\n        />\n      </Labeled>\n      <Labeled\n        className={classes.ticketField}\n        label=\"resources.ticket-details.fields.tickets.fields.ticketType\"\n      >\n        <Chip\n          label={t(mappedRecord.ticketType)}\n          className={classes.ticketField}\n        />\n      </Labeled>\n      <Labeled\n        className={classes.ticketField}\n        label=\"resources.ticket-details.fields.tickets.fields.createdAt\"\n      >\n        <DateField\n          className={classes.ticketField}\n          record={mappedRecord}\n          source=\"createdAt\"\n          showTime\n        />\n      </Labeled>\n    </Paper>\n  ))\n  return (\n    <Labeled label={label}>\n      <Box display=\"flex\" flexWrap=\"wrap\" flexDirection=\"row\">\n        {fields}\n      </Box>\n    </Labeled>\n  )\n}\n","import {\n  CREATE,\n  CreateParams,\n  sanitizeFetchType,\n  UPDATE_MANY,\n  UpdateManyParams,\n} from 'react-admin'\nimport { TicketDetails } from './ticket-details'\nimport { ResourceName } from '../ResourceName'\nimport { AccessUsingsCreateParams } from '../access-usings/access-usings-create.params'\nimport { Access, Action, ToggleButtonState } from './toggle-button'\n\ntype Mutation = {\n  type: string\n  resource: string\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  payload?: object\n}\n\nconst blockMutation = (ticketDetails: TicketDetails): Mutation => {\n  const { accessesIds, tickets } = ticketDetails\n  const ticketIds = tickets.map((t) => t.id)\n  return {\n    type: sanitizeFetchType(CREATE),\n    resource: ResourceName.ACCESS_USINGS,\n    payload: {\n      data: { ticketIds, accessIds: accessesIds },\n    } as CreateParams<AccessUsingsCreateParams>,\n  }\n}\n\nconst unblockMutation = ({ tickets }: TicketDetails): Mutation => {\n  const activeAccessUsingIds = tickets\n    .flatMap((t) => t.accessUsings)\n    .filter((au) => au.active)\n    .map((au) => au.id)\n  return {\n    type: sanitizeFetchType(UPDATE_MANY),\n    resource: ResourceName.ACCESS_USINGS,\n    payload: {\n      ids: activeAccessUsingIds,\n    } as UpdateManyParams,\n  }\n}\n\ntype State = {\n  mutateQuery?: (ticketDetails: TicketDetails) => Mutation\n} & ToggleButtonState\n\nexport const blockAccessButtonInitialState = {\n  type: Access.DISABLED,\n  text: 'resources.ticket-details.actions.blockAccessNA',\n}\n\nexport const toggleAccessButtonReducer = (\n  state: State,\n  { type }: Action,\n): State => {\n  switch (type) {\n    case Access.BLOCK: {\n      return {\n        type,\n        text: 'resources.ticket-details.actions.blockAccess',\n        mutateQuery: blockMutation,\n      }\n    }\n    case Access.UNBLOCK: {\n      return {\n        type,\n        text: 'resources.ticket-details.actions.unblockAccess',\n        mutateQuery: unblockMutation,\n      }\n    }\n    case Access.DISABLED: {\n      return blockAccessButtonInitialState\n    }\n    default:\n      throw new Error()\n  }\n}\n","import * as React from 'react'\nimport { useEffect, useReducer } from 'react'\nimport {\n  useMutation,\n  useNotify,\n  useRecordContext,\n  useRefresh,\n  useShowContext,\n  useTranslate,\n} from 'react-admin'\nimport { Button, createStyles, makeStyles, Theme } from '@material-ui/core'\nimport { Access } from '../../core/ticket-details/toggle-button'\nimport { TicketDetails } from '../../core/ticket-details/ticket-details'\nimport {\n  blockAccessButtonInitialState,\n  toggleAccessButtonReducer,\n} from '../../core/ticket-details/toggle-access-button.reducer'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    button: {\n      color: theme.palette.common.white,\n      marginLeft: theme.spacing(1),\n    },\n  }),\n)\n\nexport const ToggleAccessButton = () => {\n  const classes = useStyles()\n  const t = useTranslate()\n  const notify = useNotify()\n  const { loading } = useShowContext()\n  const [{ type, text, mutateQuery }, dispatch] = useReducer(\n    toggleAccessButtonReducer,\n    blockAccessButtonInitialState,\n  )\n  const ticketDetails = useRecordContext<TicketDetails>()\n  const [mutate, { loading: mutationLoading }] = useMutation()\n  const refresh = useRefresh()\n\n  const isActive = (td: TicketDetails) =>\n    td.tickets.some((ticket) => ticket.accessUsings.some((a) => a.active))\n\n  useEffect(() => {\n    if (isActive(ticketDetails)) {\n      dispatch({ type: Access.UNBLOCK })\n    } else {\n      dispatch({ type: Access.BLOCK })\n    }\n  }, [ticketDetails])\n\n  const onClick = async () => {\n    try {\n      const query = mutateQuery?.(ticketDetails)\n      await mutate(query, { returnPromise: true })\n      refresh()\n    } catch (err) {\n      notify((err as Error)?.message, 'error')\n    }\n  }\n\n  return (\n    <Button\n      disabled={type === Access.DISABLED || loading || mutationLoading}\n      className={classes.button}\n      variant=\"contained\"\n      color=\"secondary\"\n      onClick={onClick}\n    >\n      {t(text)}\n    </Button>\n  )\n}\n","import { Access, Action, ToggleButtonState } from './toggle-button'\nimport { BookingUpdateRequest } from '../bookings/booking-update.request'\nimport { BookingDisabledOption } from '../enum/BookingDisabledOption'\n\ntype State = {\n  mutateParam?: BookingUpdateRequest['disabled']\n} & ToggleButtonState\n\nexport const blockTicketButtonInitialState = {\n  type: Access.DISABLED,\n  text: 'resources.ticket-details.actions.blockTicketNA',\n}\n\nexport const toggleTicketButtonReducer = (\n  state: State,\n  { type }: Action,\n): State => {\n  switch (type) {\n    case Access.BLOCK: {\n      return {\n        type,\n        text: 'resources.ticket-details.actions.blockTicket',\n        mutateParam: BookingDisabledOption.ADMIN,\n      }\n    }\n    case Access.UNBLOCK: {\n      return {\n        type,\n        text: 'resources.ticket-details.actions.unblockTicket',\n        mutateParam: null,\n      }\n    }\n    case Access.DISABLED: {\n      return blockTicketButtonInitialState\n    }\n    default:\n      throw new Error()\n  }\n}\n","import * as React from 'react'\nimport { useEffect, useReducer } from 'react'\nimport {\n  sanitizeFetchType,\n  UPDATE,\n  UpdateParams,\n  useMutation,\n  useNotify,\n  useRecordContext,\n  useRefresh,\n  useShowContext,\n  useTranslate,\n} from 'react-admin'\nimport { Button, createStyles, makeStyles, Theme } from '@material-ui/core'\nimport { TicketDetails } from '../../core/ticket-details/ticket-details'\nimport { BookingUpdateRequest } from '../../core/bookings/booking-update.request'\nimport { BookingDisabledOption } from '../../core/enum/BookingDisabledOption'\nimport { ResourceName } from '../../core/ResourceName'\nimport {\n  blockTicketButtonInitialState,\n  toggleTicketButtonReducer,\n} from '../../core/ticket-details/toggle-ticket-button.reducer'\nimport { Access } from '../../core/ticket-details/toggle-button'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    button: {\n      color: theme.palette.common.white,\n      marginLeft: theme.spacing(1),\n    },\n  }),\n)\n\nexport const ToggleTicketButton = () => {\n  const classes = useStyles()\n  const t = useTranslate()\n  const notify = useNotify()\n  const { loading } = useShowContext()\n  const [{ type, text, mutateParam }, dispatch] = useReducer(\n    toggleTicketButtonReducer,\n    blockTicketButtonInitialState,\n  )\n  const { id: bookingId, bookingDisabled } = useRecordContext<TicketDetails>()\n  const [mutate, { loading: mutationLoading }] = useMutation()\n  const refresh = useRefresh()\n\n  useEffect(() => {\n    if (bookingDisabled === null) {\n      dispatch({ type: Access.BLOCK })\n    } else if (bookingDisabled === BookingDisabledOption.ADMIN) {\n      dispatch({ type: Access.UNBLOCK })\n    } else {\n      dispatch({ type: Access.DISABLED })\n    }\n  }, [bookingDisabled])\n\n  const onClick = async () => {\n    try {\n      await mutate(\n        {\n          type: sanitizeFetchType(UPDATE),\n          resource: ResourceName.BOOKINGS,\n          payload: {\n            data: { id: bookingId, disabled: mutateParam },\n          } as UpdateParams<BookingUpdateRequest>,\n        },\n        { returnPromise: true },\n      )\n      refresh()\n    } catch (err) {\n      notify((err as Error)?.message, 'error')\n    }\n  }\n\n  return (\n    <Button\n      disabled={type === Access.DISABLED || loading || mutationLoading}\n      className={classes.button}\n      variant=\"contained\"\n      color=\"secondary\"\n      onClick={onClick}\n    >\n      {t(text)}\n    </Button>\n  )\n}\n","import * as React from 'react'\nimport {\n  ChipFieldProps,\n  DateField,\n  Labeled,\n  ResourceContextProvider,\n  Show,\n  ShowProps,\n  Tab,\n  TabbedShowLayout,\n  TextField,\n  useRecordContext,\n  useTranslate,\n} from 'react-admin'\nimport { Box, Chip, Divider } from '@material-ui/core'\nimport { TicketDetails } from '../../core/ticket-details/ticket-details'\nimport { mapFromBookingType } from '../../core/ticket-details/ticket-details-values.mapper'\nimport { TicketDetailsHeader } from './TicketDetailsHeader'\nimport { TicketDetailsTicketsField } from './TicketDetailsTicketsField'\nimport { ToggleAccessButton } from './ToggleAccessButton'\nimport { ToggleTicketButton } from './ToggleTicketButton'\nimport { ResourceName } from '../../core/ResourceName'\nimport { LogList } from '../logs/LogList'\n\nconst MappedChipField = <T extends unknown>({\n  mapper,\n  source,\n}: ChipFieldProps & { mapper: (value: T) => string }) => {\n  const record = useRecordContext<TicketDetails>()\n  const t = useTranslate()\n  const mappedValue = mapper(record[source as string])\n  return <Chip label={t(mappedValue)} />\n}\n\nexport const TicketDetailsView = (props: ShowProps) => {\n  const { id: ticketLogsBookingFilter, basePath } = props\n  return (\n    <Show {...props}>\n      <>\n        <TicketDetailsHeader />\n        <Divider />\n        <TabbedShowLayout syncWithLocation={false}>\n          <Tab label=\"resources.ticket-details.tabs.booking\">\n            <TextField\n              label=\"resources.ticket-details.fields.eventName\"\n              source=\"eventName\"\n            />\n            <TextField\n              label=\"resources.ticket-details.fields.pesel\"\n              source=\"pesel\"\n            />\n            <TextField\n              label=\"resources.ticket-details.fields.variantName\"\n              source=\"variantName\"\n            />\n            <Labeled label=\"resources.ticket-details.fields.bookingType\">\n              <MappedChipField\n                source=\"bookingType\"\n                mapper={mapFromBookingType}\n              />\n            </Labeled>\n            <DateField\n              label=\"resources.ticket-details.fields.activeFrom\"\n              source=\"activeFrom\"\n              emptyText=\"N/A\"\n              showTime\n            />\n            <DateField\n              label=\"resources.ticket-details.fields.activeTo\"\n              source=\"activeTo\"\n              emptyText=\"N/A\"\n              showTime\n            />\n            <TicketDetailsTicketsField label=\"resources.ticket-details.fields.tickets.name\" />\n            <DateField\n              label=\"resources.ticket-details.fields.createdAt\"\n              source=\"createdAt\"\n              showTime\n            />\n            <DateField\n              label=\"resources.ticket-details.fields.modifiedAt\"\n              source=\"modifiedAt\"\n              showTime\n            />\n          </Tab>\n          <Tab label=\"resources.ticket-details.tabs.logs\">\n            <ResourceContextProvider value={ResourceName.TICKET_LOGS}>\n              <LogList\n                basePath={basePath}\n                filter={{ bookingId: ticketLogsBookingFilter }}\n                filters={undefined}\n                actions={false}\n                title=\" \"\n                noBooking />\n            </ResourceContextProvider>\n          </Tab>\n        </TabbedShowLayout>\n        <Divider />\n        <Box p={1} display=\"flex\" justifyContent=\"flex-end\">\n          <ToggleAccessButton />\n          <ToggleTicketButton />\n        </Box>\n      </>\n    </Show>\n  )\n}\n","import * as React from 'react'\nimport { TextField, TextFieldProps, useRecordContext } from 'react-admin'\nimport { maskMiddlePart } from '../../core/common/mask.utils'\n\nexport const MaskField = ({ source, ...rest }: TextFieldProps) => {\n  const record = useRecordContext()\n  const recordWithMappedValue = {\n    ...record,\n    [source as string]: maskMiddlePart(record[source as string], 2),\n  }\n  return <TextField {...rest} record={recordWithMappedValue} source={source} />\n}\n","/**\n * @example\n * maskMiddlePart('importantValue', 3) === 'imp********lue'\n */\nexport const maskMiddlePart = (word: string, threshold: number) => {\n  const firstChars = word.substring(0, threshold)\n  const lastChars = word.slice(-threshold)\n  const restCharsLength = word.length - firstChars.length - lastChars.length\n  return `${firstChars}${'*'.repeat(\n    restCharsLength > 0 ? restCharsLength : 0,\n  )}${lastChars}`\n}\n","import { Box, Card, Divider, Typography } from '@material-ui/core'\nimport * as React from 'react'\nimport {\n  Datagrid,\n  List,\n  ListProps,\n  TextField,\n  useListContext,\n  useTranslate,\n} from 'react-admin'\nimport { useLocation } from 'react-router-dom'\nimport { ResourceName } from '../../core/ResourceName'\nimport { FindUserByTicket } from '../common/FindUserByTicket'\nimport { MaskField } from '../common/MaskField'\n\nconst TicketInfoGrid = () => {\n  const {\n    loading,\n    filterValues: { ticketCode },\n  } = useListContext()\n  const t = useTranslate()\n  return (\n    <>\n      <Box m={2}>\n        <Typography variant=\"h5\" paragraph>\n          {t('resources.ticket-info.search-list-title', { ticketCode })}\n        </Typography>\n      </Box>\n      <Divider />\n      <Datagrid\n        loaded={!loading}\n        rowClick={(id) => `${ResourceName.TICKET_DETAILS}/${id}/show`}\n      >\n        <TextField source=\"firstname\" sortable={false} />\n        <TextField source=\"lastname\" sortable={false} />\n        <MaskField source=\"pesel\" sortable={false} />\n        <TextField source=\"ticketCode\" sortable={false} />\n        <TextField source=\"eventName\" sortable={false} />\n        <TextField source=\"id\" sortable={false} />\n      </Datagrid>\n    </>\n  )\n}\n\nexport const TicketInfoList = (props: ListProps) => {\n  const { search } = useLocation()\n  return (\n    <>\n      <Card style={{ marginTop: '2%' }}>\n        <FindUserByTicket titleCentered />\n      </Card>\n      {!!search && (\n        <List actions={false} pagination={false} {...props}>\n          <TicketInfoGrid />\n        </List>\n      )}\n    </>\n  )\n}\n","import ReceiptIcon from '@material-ui/icons/Receipt'\nimport ViewComfyIcon from '@material-ui/icons/ViewComfy'\nimport React from 'react'\nimport { Admin, Resource } from 'react-admin'\nimport themeReducer from './core/common/theme.reducer'\nimport { providersFactory } from './core/providers.factory'\nimport { ResourceName } from './core/ResourceName'\nimport { AppLayout } from './main/common/AppLayout'\nimport { Dashboard } from './main/Dashboard'\nimport { LogList } from './main/logs/LogList'\nimport { OverallView } from './main/stats/overall-view/OverallView'\nimport { OverallViewList } from './main/stats/overall-view/OverallViewList'\nimport { TicketDetailsView } from './main/ticket-details/TicketDetailsView'\nimport { TicketInfoList } from './main/ticket-info/TicketInfoList'\n\nconst App = () => {\n  const { authProvider, dataProvider, i18nProvider } = providersFactory(process.env.NODE_ENV)\n  return (\n    <Admin\n      dashboard={Dashboard}\n      authProvider={authProvider}\n      dataProvider={dataProvider}\n      i18nProvider={i18nProvider}\n      customReducers={{theme: themeReducer}}\n      layout={AppLayout}\n    >\n      <Resource\n        icon={ReceiptIcon}\n        name={ResourceName.TICKET_INFO}\n        list={TicketInfoList}\n      />\n      <Resource\n        name={ResourceName.TICKET_DETAILS}\n        show={TicketDetailsView}\n      />\n      <Resource\n        name={ResourceName.LOGS}\n        list={LogList}\n      />\n      <Resource\n        icon={ViewComfyIcon}\n        name={ResourceName.STATS_OVERALL_VIEW_LIST}\n        list={OverallViewList}\n      />\n      <Resource\n        icon={ViewComfyIcon}\n        name={ResourceName.STATS_OVERALL_VIEW}\n        show={OverallView}\n      />\n      <Resource\n        name={ResourceName.TICKET_LOGS} />\n    </Admin>\n  )\n}\n\nexport default App\n","import { AuthProvider, DataProvider, I18nProvider, LegacyDataProvider } from 'react-admin'\nimport fakeDataProvider from './fake/fake-data.provider'\nimport fakeAuthProvider from './fake/providers/fake-auth.provider'\nimport authProvider from './auth/auth.provider'\nimport dataProvider from './data.provider'\nimport i18nProvider from './i18n.provider'\n\ninterface Providers {\n  readonly authProvider: AuthProvider\n  readonly dataProvider: DataProvider | LegacyDataProvider\n  readonly i18nProvider: I18nProvider\n}\n\nexport const providersFactory = (\n  env: 'development' | 'test' | 'production',\n): Providers => {\n  switch (env) {\n    case 'production':\n      return {\n        authProvider,\n        dataProvider,\n        i18nProvider,\n      }\n    case 'development':\n      return {\n        authProvider,\n        dataProvider,\n        i18nProvider,\n      }\n    default:\n      return {\n        authProvider: fakeAuthProvider,\n        dataProvider: fakeDataProvider,\n        i18nProvider,\n      }\n  }\n}\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import { initReactI18next } from 'react-i18next'\nimport i18n from 'i18next'\nimport plTranslation from './locales/pl/translation.json'\nimport enTranslation from './locales/en/translation.json'\n\nconst identity = localStorage.getItem('username')\nconst lng = identity && localStorage.getItem(`${identity}.lng`)\n\ni18n.use(initReactI18next)\n  .init({\n    lng: lng || 'pl',\n    fallbackLng: 'pl',\n    debug: false,\n    interpolation: {\n      escapeValue: false, // not needed for react as it escapes by default\n    },\n    resources: {\n      pl: { translation: plTranslation },\n      en: { translation: enTranslation },\n    },\n  })\n\nexport default i18n\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport './i18n.init'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}