{"version":3,"sources":["core/ResourceName.ts","core/enum/TicketType.ts","main/common/InputWithButton.tsx","main/common/FindUserByTicket.tsx","main/Dashboard.tsx","custom.theme.ts","core/fake/providers/fake-tickets.provider.ts","core/enum/BookingType.ts","core/enum/BookingDisabledOption.ts","core/fake/providers/fake-ticket-info.provider.ts","core/fake/providers/fake-ticket-details.provider.ts","main/ticket-details/AccessToggleButtons.tsx","core/fake/providers/fake-access-usings.provider.ts","core/fake/providers/fake-bookings.provider.ts","core/fake/providers/fake-logs.provider.ts","core/fake/fake-data.provider.ts","core/fake/providers/fake-auth.provider.ts","core/common/header.parser.ts","core/common/fetch.utils.ts","core/api-urls.ts","core/auth/auth.provider.ts","core/common/mapper.utils.ts","core/ticket-info/ticket-info.mapper.ts","core/common/condition.builder.ts","core/ticket-info/ticket-info.provider.ts","core/tickets/tickets.provider.ts","core/ticket-details/ticket-details.mapper.ts","core/ticket-details/ticket-details.provider.ts","core/bookings/bookings.provider.ts","core/access-usings/access-usings.provider.ts","core/logs/log-filter.mapper.ts","core/logs/log-sort.mapper.ts","core/logs/extended-logs.provider.ts","core/data.provider.ts","main/common/MaskField.tsx","core/common/mask.utils.ts","main/ticket-info/TicketInfoList.tsx","core/ticket-details/ticket-details-values.mapper.ts","main/ticket-details/TicketDetailsView.tsx","main/logs/LogList.tsx","App.tsx","core/providers.factory.ts","reportWebVitals.ts","index.tsx"],"names":["ResourceName","TicketType","useStyles","makeStyles","theme","createStyles","root","display","margin","spacing","height","button","fontWeight","marginLeft","InputWithButton","label","onValue","disabled","error","classes","useState","inputError","setInputError","inputValue","setInputValue","handleClick","Box","className","FormControl","InputLabel","Input","onInput","event","target","value","onKeyDown","ev","key","FormHelperText","Button","variant","color","onClick","FindUserByTicket","history","useHistory","notify","useNotify","setError","useMutation","mutate","loading","fetchTickets","useCallback","ticketCode","type","sanitizeFetchType","GET_LIST","resource","TICKETS","payload","filter","returnPromise","a","total","data","onlyTicket","push","pathname","TICKET_DETAILS","bookingId","TICKET_INFO","search","stringify","JSON","message","header","textAlign","letterSpacing","Dashboard","Grid","container","item","xs","Card","CardHeader","title","sm","CardContent","customTheme","defaultTheme","palette","primary","deepPurple","secondary","green","typography","fontFamily","join","body1","body2","h5","BookingType","BookingDisabledOption","fakeTickets","id","ticketType","K","active","accessUsingsIds","createdAt","modifiedAt","provider","getList","params","Promise","resolve","length","fakeTicketInfoList","firstname","lastname","pesel","eventName","Access","fakeTicketDetailsList","variantName","bookingType","NORMAL","activeFrom","activeTo","tickets","M","bookingDisabled","STORNO","getOne","found","find","v","reject","Error","update","create","fakeLogs","date","deviceName","text","dataProviders","ACCESS_USINGS","fakeAccessUsingsProvider","BOOKINGS","fakeBookingsProvider","LOGS","fakeLogsProvider","fakeTicketsProvider","fakeTicketInfoProvider","fakeTicketDetailsProvider","fetchType","authProvider","login","logout","checkError","checkAuth","getPermissions","getIdentity","fullName","contentRangeParser","headerValue","split","rangeFrom","summarySecondPartSplit","rangeTo","parseInt","baseHeaders","authHeaders","Authorization","localStorage","getItem","get","baseUrl","path","fetchUtils","fetchJson","method","headers","Headers","then","json","getWithPagination","forEach","parent","console","log","range","getByConditions","pathParam","API_V1","process","AUTH_URL","BOOKINGS_URL","CUSTOMERS_URL","EVENTS_URL","EXTENDED_LOGS_URL","TICKETS_URL","VARIANTS_URL","url","body","username","password","token","setItem","removeItem","status","toMapById","values","Map","map","mapToTicketBaseInfoList","bookings","customers","events","bookingById","customerById","eventById","ticket","customerId","eventId","name","mapToTicketBaseInfo","buildFilterByIdsCondition","ids","firstId","reduce","prev","curr","getByUniqueIds","uniqueIds","Array","from","Set","toUniqueIds","filterByTicketCodeCondition","bookingIds","customerIds","eventIds","pendingCustomers","pendingEvents","all","ticketBaseInfoList","mapToTicketDetails","booking","variantId","pendingCustomer","pendingEvent","pendingVariant","pendingTickets","ticketsIds","customer","mapping","getFilterParam","Object","keys","entries","getFilterMapper","mapper","sort","field","order","pagination","page","perPage","filterParam","queryParams","p","c","mapped","device","predictTotal","m","pp","accessUsingsProvider","bookingsProvider","logsProvider","ticketsProvider","ticketInfoProvider","ticketDetailsProvider","MaskField","source","rest","record","useRecordContext","recordWithMappedValue","word","threshold","firstChars","substring","lastChars","slice","restCharsLength","repeat","maskMiddlePart","TextField","TicketInfoGrid","useListContext","filterValues","Typography","paragraph","Divider","Datagrid","loaded","rowClick","sortable","TicketInfoList","props","useLocation","List","actions","common","white","ticketButtonState","BLOCK","ADMIN","UNBLOCK","DISABLED","AccessToggleButtons","useShowContext","mutationLoading","ticketButton","setTicketButton","refresh","useRefresh","useEffect","toggleTicketBlock","UPDATE","bookingTypeMapping","AB","INFIX","POINTS","SERVICE","ticketTypeMapping","Z","N","P","U","R","mapFromTicketType","mapFromBookingType","ticketBox","flexDirection","padding","ticketField","marginBottom","Header","MappedChipField","mappedValue","Chip","TicketsField","fields","mappedRecord","Paper","Labeled","DateField","showTime","flexWrap","TicketDetailsView","Show","TabbedShowLayout","syncWithLocation","Tab","emptyText","justifyContent","LogGrid","ListFilters","Filter","TextInput","alwaysOn","LogList","Pagination","rowsPerPageOptions","filters","App","env","dataProvider","fakeAuthProvider","fakeDataProvider","providersFactory","Admin","dashboard","Resource","options","icon","ReceiptIcon","list","show","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.43074634.chunk.js","sourcesContent":["export enum ResourceName {\n  ACCESS_USINGS = 'access-usings',\n  BOOKINGS = 'bookings',\n  LOGS = 'logs',\n  TICKETS = 'tickets',\n  TICKET_DETAILS = 'ticket-details',\n  TICKET_INFO = 'ticket-info',\n}\n","export enum TicketType {\n  K = 'K',\n  M = 'M',\n  Z = 'Z',\n  N = 'N',\n  P = 'P',\n  U = 'U',\n  R = 'R',\n}\n","import React, { ChangeEvent, FC, useState } from 'react'\nimport {\n  Box,\n  Button,\n  createStyles,\n  FormControl,\n  FormHelperText,\n  Input,\n  InputLabel,\n  makeStyles,\n  Theme,\n} from '@material-ui/core'\nimport SearchIcon from '@material-ui/icons/Search'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      margin: theme.spacing(1),\n      height: theme.spacing(8),\n    },\n    button: {\n      fontWeight: 'bold',\n      height: theme.spacing(6),\n      marginLeft: theme.spacing(2),\n    },\n  }),\n)\n\ntype InputWithButtonProps = {\n  label: string\n  onValue: (value: string) => void\n  disabled: boolean\n  error: string\n}\n\nexport const InputWithButton: FC<Readonly<InputWithButtonProps>> = ({\n  label,\n  onValue,\n  disabled,\n  error,\n}) => {\n  const classes = useStyles()\n  const [inputError, setInputError] = useState(false)\n  const [inputValue, setInputValue] = useState('')\n\n  const handleInput = (event: ChangeEvent<HTMLInputElement>) => {\n    setInputValue(event.target.value)\n  }\n\n  const handleClick = () => {\n    if (inputValue) {\n      setInputError(false)\n      onValue(inputValue)\n    } else {\n      setInputError(true)\n    }\n  }\n\n  return (\n    <Box className={classes.root}>\n      <FormControl disabled={disabled}>\n        <InputLabel>{label}</InputLabel>\n        <Input\n          error={inputError || !!error}\n          onInput={handleInput}\n          onKeyDown={(ev) => ev.key === 'Enter' && handleClick()}\n        />\n        {inputError && (\n          <FormHelperText error>Pole jest wymagane</FormHelperText>\n        )}\n        {!!error && <FormHelperText error>{error}</FormHelperText>}\n      </FormControl>\n      <Button\n        className={classes.button}\n        variant=\"contained\"\n        color=\"primary\"\n        disabled={disabled}\n        onClick={handleClick}\n      >\n        <SearchIcon />\n      </Button>\n    </Box>\n  )\n}\n","import * as React from 'react'\nimport { useCallback, useState } from 'react'\nimport {\n  GET_LIST,\n  GetListResult,\n  sanitizeFetchType,\n  useMutation,\n  useNotify,\n} from 'react-admin'\nimport { stringify } from 'querystring'\nimport { useHistory } from 'react-router-dom'\nimport { TicketCodeFilter } from '../../core/common/ticket-code.filter'\nimport { ResourceName } from '../../core/ResourceName'\nimport { TicketDto } from '../../core/dto/ticket.dto'\nimport { InputWithButton } from './InputWithButton'\n\nexport const FindUserByTicket = () => {\n  const history = useHistory()\n  const notify = useNotify()\n  const [error, setError] = useState('')\n  const [mutate, { loading }] = useMutation()\n\n  const fetchTickets = useCallback(\n    (ticketCode: string) =>\n      mutate(\n        {\n          type: sanitizeFetchType(GET_LIST),\n          resource: ResourceName.TICKETS,\n          payload: { filter: { ticketCode } } as TicketCodeFilter,\n        },\n        { returnPromise: true },\n      ) as Promise<GetListResult<TicketDto>>,\n    [mutate],\n  )\n\n  const onValue = useCallback(\n    async (ticketCode: string) => {\n      setError('')\n      try {\n        const {\n          total,\n          data: [onlyTicket],\n        } = await fetchTickets(ticketCode)\n        if (!total) {\n          setError('Nie ma biletu o takim kodzie')\n        } else if (total === 1) {\n          history.push({\n            pathname: `/${ResourceName.TICKET_DETAILS}/${onlyTicket.bookingId}/show`,\n          })\n        } else {\n          history.push({\n            pathname: `/${ResourceName.TICKET_INFO}`,\n            search: stringify({\n              filter: JSON.stringify({\n                ticketCode,\n              } as TicketCodeFilter['filter']),\n            }),\n          })\n        }\n      } catch (err) {\n        notify(err?.message, 'error')\n      }\n    },\n    [fetchTickets, history, notify],\n  )\n\n  return (\n    <InputWithButton\n      label=\"Kod biletu\"\n      onValue={onValue}\n      disabled={loading}\n      error={error}\n    />\n  )\n}\n","import {\n  Card,\n  CardContent,\n  CardHeader,\n  createStyles,\n  Grid,\n  makeStyles,\n  Theme,\n} from '@material-ui/core'\nimport * as React from 'react'\nimport { FindUserByTicket } from './common/FindUserByTicket'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    header: {\n      textAlign: 'center',\n      letterSpacing: theme.spacing(0.2),\n    },\n  }),\n)\n\nexport const Dashboard = () => {\n  const classes = useStyles()\n  return (\n    <Grid container spacing={1}>\n      <Grid item xs={12}>\n        <Card>\n          <CardHeader\n            className={classes.header}\n            title=\"Witaj w aplikacji administracyjnej Sport Data\"\n          />\n        </Card>\n      </Grid>\n      <Grid item sm={6} xs={12}>\n        <Card>\n          <CardHeader title=\"Znajdź użytkownika po kodzie biletu\" />\n          <CardContent>\n            <FindUserByTicket />\n          </CardContent>\n        </Card>\n      </Grid>\n    </Grid>\n  )\n}\n","import { defaultTheme } from 'react-admin'\nimport { deepPurple, green } from '@material-ui/core/colors'\nimport { ThemeOptions } from '@material-ui/core'\n\nexport const customTheme: ThemeOptions = {\n  ...defaultTheme,\n  palette: {\n    primary: deepPurple,\n    secondary: green,\n  },\n  typography: {\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Arial',\n      'sans-serif',\n    ].join(','),\n    body1: {\n      fontWeight: 300,\n    },\n    body2: {\n      fontWeight: 300,\n    },\n    h5: {\n      fontWeight: 200,\n    },\n  },\n}\n","import { DataProvider } from 'react-admin'\nimport { TicketDto } from '../../dto/ticket.dto'\nimport { TicketType } from '../../enum/TicketType'\n\nconst fakeTickets: TicketDto[] = [\n  {\n    id: 1,\n    ticketCode: 'A',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52815,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n  {\n    id: 2,\n    ticketCode: 'A',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52816,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n  {\n    id: 3,\n    ticketCode: '010000011492',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52817,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n  {\n    id: 4,\n    ticketCode: '411000006572',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52818,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n  {\n    id: 5,\n    ticketCode: '871000006824',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52819,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n  {\n    id: 6,\n    ticketCode: '370000011495',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52820,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n  {\n    id: 7,\n    ticketCode: '450000011501',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52821,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n  {\n    id: 8,\n    ticketCode: '630000011502',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52822,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n  {\n    id: 9,\n    ticketCode: '020000011503',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52823,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n  {\n    id: 10,\n    ticketCode: '310000011504',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52824,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n]\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getList: (resource, params) =>\n    Promise.resolve({ data: fakeTickets, total: fakeTickets.length }),\n} as DataProvider\n\nexport default provider\n","export enum BookingType {\n  NORMAL = 'NORMAL',\n  AB = 'AB',\n  INFIX = 'INFIX',\n  SERVICE = 'SERVICE',\n  POINTS = 'POINTS',\n}\n","export enum BookingDisabledOption {\n  ADMIN = 'ADMIN',\n  BAN = 'BAN',\n  STORNO = 'STORNO',\n  MISTAKE = 'MISTAKE',\n}\n","import { DataProvider } from 'react-admin'\nimport { TicketType } from '../../enum/TicketType'\nimport { TicketInfo } from '../../ticket-info/ticket-info'\n\nconst fakeTicketInfoList: TicketInfo[] = [\n  {\n    id: 1,\n    firstname: 'Marek',\n    lastname: 'Pies',\n    pesel: '47120554776',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n  },\n  {\n    id: 2,\n    firstname: 'Janek',\n    lastname: 'Krużganek',\n    pesel: '47120554776',\n    eventName: 'POGOŃ SZCZECIN 20/21',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n  },\n  {\n    id: 3,\n    firstname: 'Wacław',\n    lastname: 'Rymski',\n    pesel: '9988711225',\n    eventName: 'POGOŃ SZCZECIN 20/21',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n  },\n  {\n    id: 4,\n    firstname: 'Mirka',\n    lastname: 'Korzeń',\n    pesel: '56483978659',\n    eventName: 'POGOŃ SZCZECIN 20/21',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n  },\n  {\n    id: 5,\n    firstname: 'Tis',\n    lastname: 'Lomasz',\n    pesel: '47120554776',\n    eventName: 'POGOŃ SZCZECIN 20/21',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n  },\n  {\n    id: 6,\n    firstname: 'Bogdana',\n    lastname: 'Jaruzelska',\n    pesel: '47120554776',\n    eventName: 'POGOŃ SZCZECIN 20/21',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n  },\n  {\n    id: 7,\n    firstname: 'Jeremi',\n    lastname: 'Pomidor',\n    pesel: '12345678900',\n    eventName: 'POGOŃ SZCZECIN 20/21',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n  },\n  {\n    id: 8,\n    firstname: 'Roman',\n    lastname: 'Zoman',\n    pesel: '13243567890',\n    eventName: 'POGOŃ SZCZECIN 20/21',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n  },\n  {\n    id: 9,\n    firstname: 'Bacha',\n    lastname: 'Kaszalot',\n    pesel: '98097612678',\n    eventName: 'POGOŃ SZCZECIN 20/21',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n  },\n  {\n    id: 10,\n    firstname: 'Jadwiga',\n    lastname: 'Ogórek',\n    pesel: '47120554776',\n    eventName: 'POGOŃ SZCZECIN 20/21',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n  },\n]\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getList: (resource, params) =>\n    Promise.resolve({\n      data: fakeTicketInfoList,\n      total: fakeTicketInfoList.length,\n    }),\n} as DataProvider\n\nexport default provider\n","import { DataProvider } from 'react-admin'\nimport { TicketType } from '../../enum/TicketType'\nimport { TicketDetails } from '../../ticket-details/ticket-details'\nimport { BookingType } from '../../enum/BookingType'\nimport { BookingDisabledOption } from '../../enum/BookingDisabledOption'\n\nconst fakeTicketDetailsList: TicketDetails[] = [\n  {\n    id: 1,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56424,\n        ticketCode: '060000020917',\n        ticketType: TicketType.K,\n        active: true,\n        bookingId: 55832,\n        accessUsingsIds: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n        modifiedAt: '2021-07-15T08:50:27.2054',\n      },\n      {\n        id: 56425,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.M,\n        active: true,\n        bookingId: 55832,\n        accessUsingsIds: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n        modifiedAt: '2021-07-15T08:50:27.2054',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    bookingDisabled: BookingDisabledOption.STORNO,\n  },\n  {\n    id: 2,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56459,\n        ticketCode: '240000020972',\n        ticketType: TicketType.K,\n        active: true,\n        bookingId: 55852,\n        accessUsingsIds: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n        modifiedAt: '2021-07-15T08:50:27.2054',\n      },\n      {\n        id: 56460,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.M,\n        active: true,\n        bookingId: 55852,\n        accessUsingsIds: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n        modifiedAt: '2021-07-15T08:50:27.2054',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    bookingDisabled: BookingDisabledOption.STORNO,\n  },\n  {\n    id: 3,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56479,\n        ticketCode: '370000020991',\n        ticketType: TicketType.K,\n        active: true,\n        bookingId: 55863,\n        accessUsingsIds: [1393],\n        createdAt: '2021-07-15T08:50:27.2054',\n        modifiedAt: '2021-07-15T08:50:27.2054',\n      },\n      {\n        id: 56480,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.K,\n        active: true,\n        bookingId: 55863,\n        accessUsingsIds: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n        modifiedAt: '2021-07-15T08:50:27.2054',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    bookingDisabled: null,\n  },\n  {\n    id: 4,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56479,\n        ticketCode: '370000020991',\n        ticketType: TicketType.K,\n        active: true,\n        bookingId: 55863,\n        accessUsingsIds: [1393],\n        createdAt: '2021-07-15T08:50:27.2054',\n        modifiedAt: '2021-07-15T08:50:27.2054',\n      },\n      {\n        id: 56480,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.K,\n        active: true,\n        bookingId: 55863,\n        accessUsingsIds: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n        modifiedAt: '2021-07-15T08:50:27.2054',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    bookingDisabled: null,\n  },\n  {\n    id: 5,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56479,\n        ticketCode: '370000020991',\n        ticketType: TicketType.K,\n        active: true,\n        bookingId: 55863,\n        accessUsingsIds: [1393],\n        createdAt: '2021-07-15T08:50:27.2054',\n        modifiedAt: '2021-07-15T08:50:27.2054',\n      },\n      {\n        id: 56480,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.K,\n        active: true,\n        bookingId: 55863,\n        accessUsingsIds: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n        modifiedAt: '2021-07-15T08:50:27.2054',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    bookingDisabled: null,\n  },\n  {\n    id: 6,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56479,\n        ticketCode: '370000020991',\n        ticketType: TicketType.K,\n        active: true,\n        bookingId: 55863,\n        accessUsingsIds: [1393],\n        createdAt: '2021-07-15T08:50:27.2054',\n        modifiedAt: '2021-07-15T08:50:27.2054',\n      },\n      {\n        id: 56480,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.K,\n        active: true,\n        bookingId: 55863,\n        accessUsingsIds: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n        modifiedAt: '2021-07-15T08:50:27.2054',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    bookingDisabled: null,\n  },\n  {\n    id: 7,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56479,\n        ticketCode: '370000020991',\n        ticketType: TicketType.K,\n        active: true,\n        bookingId: 55863,\n        accessUsingsIds: [1393],\n        createdAt: '2021-07-15T08:50:27.2054',\n        modifiedAt: '2021-07-15T08:50:27.2054',\n      },\n      {\n        id: 56480,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.K,\n        active: true,\n        bookingId: 55863,\n        accessUsingsIds: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n        modifiedAt: '2021-07-15T08:50:27.2054',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    bookingDisabled: null,\n  },\n  {\n    id: 8,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56479,\n        ticketCode: '370000020991',\n        ticketType: TicketType.K,\n        active: true,\n        bookingId: 55863,\n        accessUsingsIds: [1393],\n        createdAt: '2021-07-15T08:50:27.2054',\n        modifiedAt: '2021-07-15T08:50:27.2054',\n      },\n      {\n        id: 56480,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.K,\n        active: true,\n        bookingId: 55863,\n        accessUsingsIds: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n        modifiedAt: '2021-07-15T08:50:27.2054',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    bookingDisabled: null,\n  },\n  {\n    id: 9,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56479,\n        ticketCode: '370000020991',\n        ticketType: TicketType.K,\n        active: true,\n        bookingId: 55863,\n        accessUsingsIds: [1393],\n        createdAt: '2021-07-15T08:50:27.2054',\n        modifiedAt: '2021-07-15T08:50:27.2054',\n      },\n      {\n        id: 56480,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.K,\n        active: true,\n        bookingId: 55863,\n        accessUsingsIds: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n        modifiedAt: '2021-07-15T08:50:27.2054',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    bookingDisabled: null,\n  },\n  {\n    id: 10,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56479,\n        ticketCode: '370000020991',\n        ticketType: TicketType.K,\n        active: true,\n        bookingId: 55863,\n        accessUsingsIds: [1393],\n        createdAt: '2021-07-15T08:50:27.2054',\n        modifiedAt: '2021-07-15T08:50:27.2054',\n      },\n      {\n        id: 56480,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.K,\n        active: true,\n        bookingId: 55863,\n        accessUsingsIds: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n        modifiedAt: '2021-07-15T08:50:27.2054',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    bookingDisabled: null,\n  },\n]\n\nconst provider = {\n  getOne: (resource, { id }: { id: string }) => {\n    const found = fakeTicketDetailsList.find((v) => `${v.id}` === id)\n    if (found) {\n      return Promise.resolve({\n        data: found,\n      })\n    }\n    return Promise.reject(new Error())\n  },\n} as DataProvider\n\nexport default provider\n","import * as React from 'react'\nimport { useEffect, useState } from 'react'\nimport { Button, createStyles, makeStyles, Theme } from '@material-ui/core'\nimport {\n  sanitizeFetchType,\n  UPDATE,\n  UpdateParams,\n  useMutation,\n  useNotify,\n  useRecordContext,\n  useRefresh,\n  useShowContext,\n} from 'react-admin'\nimport { BookingDisabledOption } from '../../core/enum/BookingDisabledOption'\nimport { BookingUpdateRequest } from '../../core/bookings/booking-update.request'\nimport { TicketDetails } from '../../core/ticket-details/ticket-details'\nimport { ResourceName } from '../../core/ResourceName'\n\nenum Access {\n  BLOCK = 'BLOCK',\n  UNBLOCK = 'UNBLOCK',\n  DISABLED = 'DISABLED',\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    button: {\n      color: theme.palette.common.white,\n      marginLeft: theme.spacing(1),\n    },\n  }),\n)\n\ntype ButtonState<T> = { text: string; params?: T; disabled?: boolean }\n\ntype TicketButtonState = ButtonState<BookingUpdateRequest['disabled']>\n\nconst ticketButtonState: Record<Access, TicketButtonState> = {\n  [Access.BLOCK]: {\n    text: 'Zablokuj bilet',\n    params: BookingDisabledOption.ADMIN,\n  },\n  [Access.UNBLOCK]: {\n    text: 'Odblokuj bilet',\n    params: null,\n  },\n  [Access.DISABLED]: {\n    text: 'Zablokuj bilet (N/A)',\n    disabled: true,\n  },\n}\n\n// TODO: extract buttons as components\nexport const AccessToggleButtons = () => {\n  const { loading } = useShowContext()\n  const notify = useNotify()\n  const [mutate, { loading: mutationLoading }] = useMutation()\n  const { id: bookingId, bookingDisabled } = useRecordContext<TicketDetails>()\n  const [ticketButton, setTicketButton] = useState<TicketButtonState>(\n    ticketButtonState.DISABLED,\n  )\n  const classes = useStyles()\n  const refresh = useRefresh()\n\n  useEffect(() => {\n    if (bookingDisabled === null) {\n      setTicketButton(ticketButtonState.BLOCK)\n    } else if (bookingDisabled === BookingDisabledOption.ADMIN) {\n      setTicketButton(ticketButtonState.UNBLOCK)\n    } else {\n      setTicketButton(ticketButtonState.DISABLED)\n    }\n  }, [bookingDisabled])\n\n  const toggleAccessUsing = () => () => {\n    // call to backend\n    refresh()\n  }\n\n  const toggleTicketBlock = async () => {\n    try {\n      await mutate(\n        {\n          type: sanitizeFetchType(UPDATE),\n          resource: ResourceName.BOOKINGS,\n          payload: {\n            data: { id: bookingId, disabled: ticketButton.params },\n          } as UpdateParams<BookingUpdateRequest>,\n        },\n        { returnPromise: true },\n      )\n      refresh()\n    } catch (err) {\n      notify(err?.message, 'error')\n    }\n  }\n\n  return (\n    <>\n      <Button\n        disabled\n        className={classes.button}\n        variant=\"contained\"\n        color=\"secondary\"\n        onClick={toggleAccessUsing()}\n      >\n        Oznacz dostęp jako wykorzystany\n      </Button>\n      <Button\n        disabled={loading || ticketButton?.disabled || mutationLoading}\n        className={classes.button}\n        variant=\"contained\"\n        color=\"secondary\"\n        onClick={toggleTicketBlock}\n      >\n        {ticketButton.text}\n      </Button>\n    </>\n  )\n}\n","import { CreateResult, DataProvider, UpdateResult } from 'react-admin'\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  update: async (resource, params): Promise<UpdateResult<unknown>> =>\n    Promise.resolve({\n      data: { id: 1 },\n    }),\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  create: async (resource, params): Promise<CreateResult<unknown>> =>\n    Promise.resolve({\n      data: { id: 1 },\n    }),\n} as DataProvider\n\nexport default provider\n","import { DataProvider, UpdateResult } from 'react-admin'\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  update: async (resource, params): Promise<UpdateResult<unknown>> =>\n    Promise.resolve({\n      data: { id: 1 },\n    }),\n} as DataProvider\n\nexport default provider\n","import { DataProvider } from 'react-admin'\nimport { ExtendedLog } from '../../logs/extended-log'\n\nconst fakeLogs: ExtendedLog[] = [\n  {\n    id: 1,\n    date: '2021-07-15T08:50:27.2054',\n    ticketCode: 'A',\n    bookingId: 52815,\n    deviceName: 'Device name',\n    text: 'MF',\n  },\n  {\n    id: 2,\n    date: '2021-07-15T08:50:27.2054',\n    ticketCode: 'A',\n    bookingId: 52816,\n    deviceName: 'Device name',\n    text: 'MF',\n  },\n  {\n    id: 3,\n    date: '2021-07-15T08:50:27.2054',\n    ticketCode: 'A',\n    bookingId: 1111,\n    deviceName: 'Device name',\n    text: 'MF',\n  },\n  {\n    id: 4,\n    date: '2021-07-15T08:50:27.2054',\n    ticketCode: 'A',\n    bookingId: 11112,\n    deviceName: 'Device name',\n    text: 'MF',\n  },\n  {\n    id: 5,\n    date: '2021-07-15T08:50:27.2054',\n    ticketCode: 'A',\n    bookingId: 16612,\n    deviceName: 'Device name',\n    text: 'MF',\n  },\n  {\n    id: 6,\n    date: '2021-07-15T08:50:27.2054',\n    ticketCode: 'A',\n    bookingId: 167782,\n    deviceName: 'Device name',\n    text: 'MF',\n  },\n  {\n    id: 7,\n    date: '2021-07-15T08:50:27.2054',\n    ticketCode: 'A',\n    bookingId: 122782,\n    deviceName: 'Device name',\n    text: 'MF',\n  },\n  {\n    id: 8,\n    date: '2021-07-15T08:50:27.2054',\n    ticketCode: 'A',\n    bookingId: 189782,\n    deviceName: 'Device name',\n    text: 'MF',\n  },\n  {\n    id: 9,\n    date: '2021-07-15T08:50:27.2054',\n    ticketCode: 'A',\n    bookingId: 183332,\n    deviceName: 'Device name',\n    text: 'MF',\n  },\n  {\n    id: 10,\n    date: '2021-07-15T08:50:27.2054',\n    ticketCode: 'A',\n    bookingId: 656565,\n    deviceName: 'Device name',\n    text: 'MF',\n  },\n]\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getList: (resource, params) =>\n    Promise.resolve({ data: fakeLogs, total: fakeLogs.length }),\n} as DataProvider\n\nexport default provider\n","import { DataProvider, sanitizeFetchType } from 'react-admin'\nimport { ResourceName } from '../ResourceName'\nimport fakeTicketsProvider from './providers/fake-tickets.provider'\nimport fakeTicketInfoProvider from './providers/fake-ticket-info.provider'\nimport fakeTicketDetailsProvider from './providers/fake-ticket-details.provider'\nimport fakeAccessUsingsProvider from './providers/fake-access-usings.provider'\nimport fakeBookingsProvider from './providers/fake-bookings.provider'\nimport fakeLogsProvider from './providers/fake-logs.provider'\n\n// TODO: add fake providers for bookings, logs and access usings\nconst dataProviders: Record<ResourceName, DataProvider> = {\n  [ResourceName.ACCESS_USINGS]: fakeAccessUsingsProvider,\n  [ResourceName.BOOKINGS]: fakeBookingsProvider,\n  [ResourceName.LOGS]: fakeLogsProvider,\n  [ResourceName.TICKETS]: fakeTicketsProvider,\n  [ResourceName.TICKET_INFO]: fakeTicketInfoProvider,\n  [ResourceName.TICKET_DETAILS]: fakeTicketDetailsProvider,\n}\n\nexport default (\n  fetchType: string,\n  resource: string,\n  params: unknown,\n): Promise<unknown> => {\n  const selectedProvider = dataProviders[resource as ResourceName]\n  const type = sanitizeFetchType(fetchType)\n  return selectedProvider[type](resource, params)\n}\n","import { AuthProvider } from 'react-admin'\n\nconst authProvider: AuthProvider = {\n  login: () => Promise.resolve(),\n  logout: () => Promise.resolve(),\n  checkError: () => Promise.resolve(),\n  checkAuth: () => Promise.resolve(),\n  getPermissions: () => Promise.resolve(),\n  getIdentity: () =>\n    Promise.resolve({\n      id: 'no-auth',\n      fullName: 'no-auth',\n    }),\n}\n\nexport default authProvider\n","export type ContentRangeHeaderValue = `bytes ${number}-${number}/${number}`\n\nexport const contentRangeParser = (headerValue: ContentRangeHeaderValue) => {\n  // TODO: remove when there will be always content range header\n  if (!headerValue) {\n    return {\n      total: null,\n    }\n  }\n  const summary = headerValue.split(' ')[1]\n  const split = summary.split('-')\n  const rangeFrom = split[0]\n  const summarySecondPartSplit = split[1].split('/')\n  const rangeTo = summarySecondPartSplit[0]\n  const total = summarySecondPartSplit[1]\n  return {\n    rangeFrom: parseInt(rangeFrom, 10),\n    rangeTo: parseInt(rangeTo, 10),\n    total: parseInt(total, 10),\n  }\n}\n","import { fetchUtils } from 'react-admin'\nimport { ContentRangeHeaderValue, contentRangeParser } from './header.parser'\n\nconst getToken = () => localStorage.getItem('token') as string\n\nconst baseHeaders: HeadersInit = {\n  'Content-Type': 'application/json',\n}\n\nconst authHeaders = (): HeadersInit => ({\n  ...baseHeaders,\n  Authorization: `Bearer ${getToken()}`,\n})\n\nexport const get = <T>(baseUrl: string, path: string) =>\n  fetchUtils\n    .fetchJson(`${baseUrl}${path}`, {\n      method: 'GET',\n      headers: new Headers(authHeaders()),\n    })\n    .then(({ json }) => json as Promise<T>)\n\nexport const getWithPagination = <T>(baseUrl: string, path: string) =>\n  fetchUtils\n    .fetchJson(`${baseUrl}${path}`, {\n      method: 'GET',\n      headers: new Headers(authHeaders()),\n    })\n    .then(({ json, headers }) => {\n      headers.forEach((value, key, parent) => {\n        // eslint-disable-next-line no-console\n        console.log({ key, value, parent })\n      })\n      // eslint-disable-next-line no-console\n      console.log({\n        headers,\n      })\n      return Promise.resolve({\n        data: json as T,\n        range: contentRangeParser(\n          headers.get('content-range') as ContentRangeHeaderValue,\n        ),\n      })\n    })\n\nexport const getByConditions = <T>(\n  baseUrl: string,\n  pathParam: string,\n): Promise<T[]> => get<T[]>(baseUrl, `/GetByConditions/${pathParam}`)\n\nexport const authPost = <T, K>(url: string, body: T) =>\n  fetchUtils\n    .fetchJson(url, {\n      method: 'POST',\n      body: JSON.stringify(body),\n      headers: new Headers(baseHeaders),\n    })\n    .then(({ json }) => json as Promise<K>)\n\nexport const patch = <T, K>(baseUrl: string, body: T) =>\n  fetchUtils\n    .fetchJson(baseUrl, {\n      method: 'PATCH',\n      body: JSON.stringify(body),\n      headers: new Headers(authHeaders()),\n    })\n    .then(({ json }) => json as Promise<K>)\n","const API_V1 = `${process.env.REACT_APP_API_BASE_URL}/api/v1`\nexport const AUTH_URL = `${API_V1}/Authorization/Authenticate`\nexport const BOOKINGS_URL = `${API_V1}/ticketManagement/Bookings`\nexport const CUSTOMERS_URL = `${API_V1}/ticketManagement/Customers`\nexport const EVENTS_URL = `${API_V1}/ticketManagement/Events`\nexport const EXTENDED_LOGS_URL = `${API_V1}/ticketManagement/Logs/GetExtendedLogByConditions`\nexport const TICKETS_URL = `${API_V1}/ticketManagement/Tickets`\nexport const VARIANTS_URL = `${API_V1}/ticketManagement/Variants`\n","import { AuthProvider } from 'react-admin'\nimport { authPost } from '../common/fetch.utils'\nimport { AuthDto } from '../dto/auth.dto'\nimport { AUTH_URL } from '../api-urls'\nimport { AuthRequest } from './auth.request'\n\nconst authProvider: AuthProvider = {\n  login: ({ username, password }) =>\n    authPost<AuthRequest, AuthDto>(AUTH_URL, {\n      login: username,\n      password,\n    }).then(({ token }) => {\n      localStorage.setItem('username', username)\n      localStorage.setItem('token', token)\n    }),\n  logout: () => {\n    localStorage.removeItem('username')\n    localStorage.removeItem('token')\n    return Promise.resolve()\n  },\n  checkError: ({ status }) => {\n    if (status === 401 || status === 403) {\n      localStorage.removeItem('username')\n      localStorage.removeItem('token')\n      return Promise.reject()\n    }\n    return Promise.resolve()\n  },\n  checkAuth: () =>\n    localStorage.getItem('token') ? Promise.resolve() : Promise.reject(),\n  getPermissions: () => Promise.resolve(),\n  getIdentity: () =>\n    Promise.resolve({\n      id: 'user',\n      fullName: localStorage.getItem('username') as string,\n    }),\n}\n\nexport default authProvider\n","export const toMapById = <T extends { id: number }>(values: T[]) =>\n  new Map(values.map((v): [number, T] => [v.id, v]))\n","import { CustomerDto } from '../dto/customer.dto'\nimport { EventDto } from '../dto/event.dto'\nimport { TicketDto } from '../dto/ticket.dto'\nimport { TicketInfo } from './ticket-info'\nimport { BookingDto } from '../dto/booking.dto'\nimport { toMapById } from '../common/mapper.utils'\n\nexport const mapToTicketBaseInfo = (\n  { firstname, lastname, pesel }: CustomerDto,\n  { name: eventName }: EventDto,\n  { bookingId, ticketCode, ticketType }: TicketDto,\n): TicketInfo => ({\n  id: bookingId,\n  firstname,\n  lastname,\n  pesel,\n  eventName,\n  ticketCode,\n  ticketType,\n})\n\nexport const mapToTicketBaseInfoList = (\n  bookings: BookingDto[],\n  customers: CustomerDto[],\n  events: EventDto[],\n  tickets: TicketDto[],\n): TicketInfo[] => {\n  const bookingById = toMapById(bookings)\n  const customerById = toMapById(customers)\n  const eventById = toMapById(events)\n  return tickets.map((ticket) => {\n    const { customerId, eventId } = bookingById.get(\n      ticket.bookingId,\n    ) as BookingDto\n    const customer = customerById.get(customerId) as CustomerDto\n    const event = eventById.get(eventId) as EventDto\n    return mapToTicketBaseInfo(customer, event, ticket)\n  })\n}\n","export const buildFilterByIdsCondition = (ids: number[]): string => {\n  const [firstId, ...restIds] = ids\n  return (restIds || []).reduce(\n    (prev, curr) => `${prev as string}||v.Id==${curr}`,\n    `v=>v.Id==${firstId}`,\n  )\n}\n","import { DataProvider, GetListResult } from 'react-admin'\nimport {\n  BOOKINGS_URL,\n  CUSTOMERS_URL,\n  EVENTS_URL,\n  TICKETS_URL,\n} from '../api-urls'\nimport { getByConditions } from '../common/fetch.utils'\nimport { BookingDto } from '../dto/booking.dto'\nimport { TicketInfo } from './ticket-info'\nimport { TicketDto } from '../dto/ticket.dto'\nimport { CustomerDto } from '../dto/customer.dto'\nimport { EventDto } from '../dto/event.dto'\nimport { mapToTicketBaseInfoList } from './ticket-info.mapper'\nimport { buildFilterByIdsCondition } from '../common/condition.builder'\nimport { TicketCodeFilter } from '../common/ticket-code.filter'\n\nconst toUniqueIds = (ids: number[]) => Array.from(new Set(ids))\n\nconst getByUniqueIds = <T>(baseUrl: string, ids: number[]): Promise<T[]> => {\n  const uniqueIds = toUniqueIds(ids)\n  return getByConditions<T>(baseUrl, buildFilterByIdsCondition(uniqueIds))\n}\n\nconst provider = {\n  getList: async (\n    resource: string,\n    { filter }: TicketCodeFilter,\n  ): Promise<GetListResult<TicketInfo>> => {\n    const filterByTicketCodeCondition = `t=>t.TicketCode==\"${filter.ticketCode}\"`\n    const tickets = await getByConditions<TicketDto>(\n      TICKETS_URL,\n      filterByTicketCodeCondition,\n    )\n\n    const bookingIds = tickets.map((v) => v.bookingId)\n    const bookings = await getByUniqueIds<BookingDto>(BOOKINGS_URL, bookingIds)\n\n    const customerIds = bookings.map((v) => v.customerId)\n    const eventIds = bookings.map((v) => v.eventId)\n\n    const pendingCustomers = getByUniqueIds<CustomerDto>(\n      CUSTOMERS_URL,\n      customerIds,\n    )\n    const pendingEvents = getByUniqueIds<EventDto>(EVENTS_URL, eventIds)\n    const [customers, events] = await Promise.all([\n      pendingCustomers,\n      pendingEvents,\n    ])\n\n    const ticketBaseInfoList = mapToTicketBaseInfoList(\n      bookings,\n      customers,\n      events,\n      tickets,\n    )\n    return Promise.resolve({\n      data: ticketBaseInfoList,\n      total: ticketBaseInfoList.length,\n    })\n  },\n} as DataProvider\n\nexport default provider\n","import { DataProvider, GetListResult } from 'react-admin'\nimport { getByConditions } from '../common/fetch.utils'\nimport { TICKETS_URL } from '../api-urls'\nimport { TicketCodeFilter } from '../common/ticket-code.filter'\nimport { TicketDto } from '../dto/ticket.dto'\n\nconst provider = {\n  getList: async (\n    resource: string,\n    { filter }: TicketCodeFilter,\n  ): Promise<GetListResult<TicketDto>> => {\n    const filterByTicketCodeCondition = `t=>t.TicketCode==\"${filter.ticketCode}\"`\n    const tickets = await getByConditions<TicketDto>(\n      TICKETS_URL,\n      filterByTicketCodeCondition,\n    )\n    return Promise.resolve({\n      data: tickets,\n      total: tickets.length,\n    })\n  },\n} as DataProvider\n\nexport default provider\n","import { CustomerDto } from '../dto/customer.dto'\nimport { EventDto } from '../dto/event.dto'\nimport { TicketDto } from '../dto/ticket.dto'\nimport { VariantDto } from '../dto/variant.dto'\nimport { TicketDetails } from './ticket-details'\nimport { BookingDto } from '../dto/booking.dto'\n\nexport const mapToTicketDetails = (\n  {\n    id: bookingId,\n    disabled: bookingDisabled,\n    type: bookingType,\n    activeFrom,\n    activeTo,\n    createdAt,\n    modifiedAt,\n  }: BookingDto,\n  { firstname, lastname, pesel }: CustomerDto,\n  { name: eventName }: EventDto,\n  { name: variantName }: VariantDto,\n  tickets: TicketDto[],\n): TicketDetails => ({\n  id: bookingId,\n  firstname,\n  lastname,\n  eventName,\n  pesel,\n  variantName,\n  bookingType,\n  activeFrom,\n  activeTo,\n  tickets,\n  createdAt,\n  modifiedAt,\n  bookingDisabled,\n})\n","import { DataProvider, GetOneParams, GetOneResult } from 'react-admin'\nimport {\n  BOOKINGS_URL,\n  CUSTOMERS_URL,\n  EVENTS_URL,\n  TICKETS_URL,\n  VARIANTS_URL,\n} from '../api-urls'\nimport { get, getByConditions } from '../common/fetch.utils'\nimport { BookingDto } from '../dto/booking.dto'\nimport { TicketDto } from '../dto/ticket.dto'\nimport { CustomerDto } from '../dto/customer.dto'\nimport { EventDto } from '../dto/event.dto'\nimport { buildFilterByIdsCondition } from '../common/condition.builder'\nimport { mapToTicketDetails } from './ticket-details.mapper'\nimport { VariantDto } from '../dto/variant.dto'\nimport { TicketDetails } from './ticket-details'\n\nconst provider = {\n  getOne: async (\n    resource: string,\n    { id: bookingId }: GetOneParams,\n  ): Promise<GetOneResult<TicketDetails>> => {\n    const booking = await get<BookingDto>(BOOKINGS_URL, `/${bookingId}`)\n    const { customerId, eventId, variantId } = booking\n    const pendingCustomer = get<CustomerDto>(CUSTOMERS_URL, `/${customerId}`)\n    const pendingEvent = get<EventDto>(EVENTS_URL, `/${eventId}`)\n    const pendingVariant = get<VariantDto>(VARIANTS_URL, `/${variantId}`)\n    const pendingTickets = getByConditions<TicketDto>(\n      TICKETS_URL,\n      buildFilterByIdsCondition(booking.ticketsIds),\n    )\n\n    const [customer, event, variant, tickets] = await Promise.all([\n      pendingCustomer,\n      pendingEvent,\n      pendingVariant,\n      pendingTickets,\n    ])\n\n    return {\n      data: mapToTicketDetails(booking, customer, event, variant, tickets),\n    }\n  },\n} as DataProvider\n\nexport default provider\n","import { DataProvider, UpdateParams, UpdateResult } from 'react-admin'\nimport { patch } from '../common/fetch.utils'\nimport { BOOKINGS_URL } from '../api-urls'\nimport { BookingUpdateRequest } from './booking-update.request'\nimport { BookingDto } from '../dto/booking.dto'\n\nconst provider = {\n  update: async (\n    resource: string,\n    { data }: UpdateParams<BookingUpdateRequest>,\n  ): Promise<UpdateResult<BookingDto>> => {\n    const booking = await patch<BookingUpdateRequest, BookingDto>(\n      BOOKINGS_URL,\n      data,\n    )\n    return Promise.resolve({\n      data: booking,\n    })\n  },\n} as DataProvider\n\nexport default provider\n","import { CreateResult, DataProvider, UpdateResult } from 'react-admin'\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  update: async (resource, params): Promise<UpdateResult<unknown>> =>\n    Promise.resolve({\n      data: { id: 1 },\n    }),\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  create: async (resource, params): Promise<CreateResult<unknown>> =>\n    Promise.resolve({\n      data: { id: 1 },\n    }),\n} as DataProvider\n\nexport default provider\n","import { ExtendedLog } from './extended-log'\n\nconst mapping: Partial<\n  Record<keyof ExtendedLog, (value: string | number) => string>\n> = {\n  ticketCode: (value) => `l=>l.TicketCode==\"${value}\"`,\n}\n\nexport const getFilterMapper = (key: keyof ExtendedLog) =>\n  mapping[key] as (value: string | number) => string\n","import { ExtendedLog } from './extended-log'\n\nconst mapping: Partial<Record<keyof ExtendedLog, string>> = {\n  id: 'l=>l.Id',\n  date: 'l=>l.Date',\n  deviceName: 'l=>l.Device.Name',\n  ticketCode: 'l=>l.TicketCode',\n  bookingId: 'l=>l.BookingId',\n}\n\nexport const mapSortLogParam = (key: keyof ExtendedLog) => mapping[key]\n","import { DataProvider, GetListResult } from 'react-admin'\nimport { EXTENDED_LOGS_URL } from '../api-urls'\nimport { getWithPagination } from '../common/fetch.utils'\nimport { ExtendedLogDto } from '../dto/extended-log.dto'\nimport { ExtendedLog } from './extended-log'\nimport { LogListParams } from './log-list.params'\nimport { getFilterMapper } from './log-filter.mapper'\nimport { mapSortLogParam } from './log-sort.mapper'\n\n// TODO: update if more filters\nconst getFilterParam = (filter: Partial<ExtendedLog>) => {\n  if (Object.keys(filter).length) {\n    const [key, value] = Object.entries(filter)[0]\n    const mapper = getFilterMapper(key as keyof ExtendedLog)\n    return mapper(value as string)\n  }\n  return 'l=>true'\n}\n\nconst provider = {\n  getList: async (\n    resource: string,\n    {\n      filter,\n      sort: { field, order },\n      pagination: { page, perPage },\n    }: LogListParams,\n  ): Promise<GetListResult<ExtendedLog>> => {\n    const filterParam = getFilterParam(filter)\n    const queryParams: string[] = []\n    queryParams.push(`sortBy=${mapSortLogParam(field)}`)\n    queryParams.push(`sortOrder=${order}`)\n    queryParams.push(`rangeFrom=${page * perPage - perPage}`)\n    queryParams.push(`rangeTo=${page * perPage}`)\n\n    const path = queryParams.reduce((p, c) => `${p}&${c}`, `/${filterParam}?`)\n    const {\n      data,\n      range: { total },\n    } = await getWithPagination<ExtendedLogDto[]>(EXTENDED_LOGS_URL, path)\n    const mapped = data.map(\n      ({\n        id,\n        date,\n        device: { name: deviceName },\n        ticketCode,\n        data: [{ text }],\n        bookingId,\n      }) =>\n        ({\n          id,\n          date,\n          deviceName,\n          ticketCode,\n          text,\n          bookingId,\n        } as ExtendedLog),\n    )\n\n    // TODO: notify if there is no `total` value\n    const predictTotal = (m: unknown[], p: number, pp: number) =>\n      m.length - 1 === pp ? p * pp + pp : (p - 1) * pp + m.length\n\n    return Promise.resolve({\n      data: mapped,\n      // TODO: temporary\n      total: total || predictTotal(mapped, page, perPage),\n    })\n  },\n} as DataProvider\n\nexport default provider\n","import { DataProvider, sanitizeFetchType } from 'react-admin'\nimport ticketInfoProvider from './ticket-info/ticket-info.provider'\nimport { ResourceName } from './ResourceName'\nimport ticketsProvider from './tickets/tickets.provider'\nimport ticketDetailsProvider from './ticket-details/ticket-details.provider'\nimport bookingsProvider from './bookings/bookings.provider'\nimport accessUsingsProvider from './access-usings/access-usings.provider'\nimport logsProvider from './logs/extended-logs.provider'\n\nconst dataProviders: Record<ResourceName, DataProvider> = {\n  [ResourceName.ACCESS_USINGS]: accessUsingsProvider,\n  [ResourceName.BOOKINGS]: bookingsProvider,\n  [ResourceName.LOGS]: logsProvider,\n  [ResourceName.TICKETS]: ticketsProvider,\n  [ResourceName.TICKET_INFO]: ticketInfoProvider,\n  [ResourceName.TICKET_DETAILS]: ticketDetailsProvider,\n}\n\nexport default (\n  fetchType: string,\n  resource: string,\n  params: unknown,\n): Promise<unknown> => {\n  const selectedProvider = dataProviders[resource as ResourceName]\n  const type = sanitizeFetchType(fetchType)\n  return selectedProvider[type](resource, params)\n}\n","import * as React from 'react'\nimport { TextField, TextFieldProps, useRecordContext } from 'react-admin'\nimport { maskMiddlePart } from '../../core/common/mask.utils'\n\nexport const MaskField = ({ source, ...rest }: TextFieldProps) => {\n  const record = useRecordContext()\n  const recordWithMappedValue = {\n    ...record,\n    [source as string]: maskMiddlePart(record[source as string], 2),\n  }\n  return <TextField {...rest} record={recordWithMappedValue} source={source} />\n}\n","/**\n * @example\n * maskMiddlePart('importantValue', 3) === 'imp********lue'\n */\nexport const maskMiddlePart = (word: string, threshold: number) => {\n  const firstChars = word.substring(0, threshold)\n  const lastChars = word.slice(-threshold)\n  const restCharsLength = word.length - firstChars.length - lastChars.length\n  return `${firstChars}${'*'.repeat(\n    restCharsLength > 0 ? restCharsLength : 0,\n  )}${lastChars}`\n}\n","import * as React from 'react'\nimport {\n  Datagrid,\n  List,\n  ListProps,\n  TextField,\n  useListContext,\n} from 'react-admin'\nimport { useLocation } from 'react-router-dom'\nimport { Box, Divider, Typography } from '@material-ui/core'\nimport { FindUserByTicket } from '../common/FindUserByTicket'\nimport { MaskField } from '../common/MaskField'\nimport { ResourceName } from '../../core/ResourceName'\n\nconst TicketInfoGrid = () => {\n  const {\n    loading,\n    filterValues: { ticketCode },\n  } = useListContext()\n  return (\n    <>\n      <Box m={2}>\n        <Typography variant=\"h5\" paragraph>\n          Wyszukiwanie biletu po kodzie: {ticketCode}\n        </Typography>\n      </Box>\n      <Divider />\n      <Datagrid\n        loaded={!loading}\n        rowClick={(id) => `${ResourceName.TICKET_DETAILS}/${id}/show`}\n      >\n        <TextField label=\"Imię\" source=\"firstname\" sortable={false} />\n        <TextField label=\"Nazwisko\" source=\"lastname\" sortable={false} />\n        <MaskField label=\"Pesel\" source=\"pesel\" sortable={false} />\n        <TextField label=\"Bilet\" source=\"ticketCode\" sortable={false} />\n        <TextField label=\"Wydarzenie\" source=\"eventName\" sortable={false} />\n      </Datagrid>\n    </>\n  )\n}\n\nexport const TicketInfoList = (props: ListProps) => {\n  const { search } = useLocation()\n  return (\n    <>\n      <FindUserByTicket />\n      {!!search && (\n        <List actions={false} pagination={false} {...props}>\n          <TicketInfoGrid />\n        </List>\n      )}\n    </>\n  )\n}\n","import { TicketType } from '../enum/TicketType'\nimport { BookingType } from '../enum/BookingType'\n\nconst bookingTypeMapping: Record<BookingType, string> = {\n  [BookingType.NORMAL]: 'Bilet pojedynczy',\n  [BookingType.AB]: 'Abonament',\n  [BookingType.INFIX]: 'Infix',\n  [BookingType.POINTS]: 'Points',\n  [BookingType.SERVICE]: 'Karta serwisowa',\n}\n\nconst ticketTypeMapping: Record<TicketType, string> = {\n  [TicketType.K]: 'Kod kreskowy',\n  [TicketType.M]: 'Nr mifare',\n  [TicketType.Z]: 'Nr dowodu',\n  [TicketType.N]: 'Nr biletu',\n  [TicketType.P]: 'Pesel',\n  [TicketType.U]: 'Nr unique (125k)',\n  [TicketType.R]: 'Nr rejestracyjny',\n}\n\nexport const mapFromTicketType = (ticketType: TicketType): string =>\n  ticketTypeMapping[ticketType]\n\nexport const mapFromBookingType = (bookingType: BookingType): string =>\n  bookingTypeMapping[bookingType]\n","import * as React from 'react'\nimport {\n  ChipFieldProps,\n  DateField,\n  Labeled,\n  Show,\n  ShowProps,\n  Tab,\n  TabbedShowLayout,\n  TextField,\n  TextFieldProps,\n  useRecordContext,\n  useShowContext,\n} from 'react-admin'\nimport {\n  Box,\n  Chip,\n  createStyles,\n  Divider,\n  makeStyles,\n  Paper,\n  Theme,\n  Typography,\n} from '@material-ui/core'\nimport { TicketDetails } from '../../core/ticket-details/ticket-details'\nimport { AccessToggleButtons } from './AccessToggleButtons'\nimport {\n  mapFromBookingType,\n  mapFromTicketType,\n} from '../../core/ticket-details/ticket-details-values.mapper'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    header: {\n      letterSpacing: theme.spacing(0.2),\n    },\n    ticketBox: {\n      display: 'flex',\n      flexDirection: 'column',\n      padding: theme.spacing(1),\n      marginLeft: theme.spacing(1),\n    },\n    ticketField: {\n      padding: theme.spacing(0),\n      margin: theme.spacing(0),\n      marginBottom: theme.spacing(0.5),\n    },\n  }),\n)\n\nconst Header = () => {\n  const classes = useStyles()\n  const { record } = useShowContext<TicketDetails>()\n  return (\n    <Box m={2}>\n      <Typography className={classes.header} variant=\"h5\" paragraph>\n        {record?.firstname} {record?.lastname}\n      </Typography>\n    </Box>\n  )\n}\n\nconst MappedChipField = <T extends unknown>({\n  mapper,\n  source,\n}: ChipFieldProps & { mapper: (value: T) => string }) => {\n  const record = useRecordContext<TicketDetails>()\n  const mappedValue = mapper(record[source as string])\n  return <Chip label={mappedValue} />\n}\n\n// TODO: extract as component\nconst TicketsField = ({ label }: TextFieldProps) => {\n  const classes = useStyles()\n  const record = useRecordContext<TicketDetails>()\n  const mappedRecords = (record.tickets || []).map(\n    ({ id, ticketType, createdAt, ticketCode }) => ({\n      id,\n      ticketCode,\n      ticketType: mapFromTicketType(ticketType),\n      createdAt,\n    }),\n  )\n  const fields = mappedRecords.map((mappedRecord) => (\n    <Paper\n      key={mappedRecord.id}\n      variant=\"elevation\"\n      className={classes.ticketBox}\n    >\n      <Labeled className={classes.ticketField} label=\"id\">\n        <TextField\n          className={classes.ticketField}\n          record={mappedRecord}\n          source=\"id\"\n        />\n      </Labeled>\n      <Labeled className={classes.ticketField} label=\"Kod biletu\">\n        <TextField\n          className={classes.ticketField}\n          record={mappedRecord}\n          source=\"ticketCode\"\n        />\n      </Labeled>\n      <Labeled className={classes.ticketField} label=\"Typ wejściówki\">\n        <Chip label={mappedRecord.ticketType} className={classes.ticketField} />\n      </Labeled>\n      <Labeled className={classes.ticketField} label=\"Utworzono\">\n        <DateField\n          className={classes.ticketField}\n          record={mappedRecord}\n          source=\"createdAt\"\n          showTime\n        />\n      </Labeled>\n    </Paper>\n  ))\n  return (\n    <Labeled label={label}>\n      <Box display=\"flex\" flexWrap=\"wrap\" flexDirection=\"row\">\n        {fields}\n      </Box>\n    </Labeled>\n  )\n}\n\nexport const TicketDetailsView = (props: ShowProps) => (\n  <>\n    <Show {...props}>\n      <>\n        <Header />\n        <Divider />\n        <TabbedShowLayout syncWithLocation={false}>\n          <Tab label=\"Bilet\">\n            <TextField label=\"Impreza\" source=\"eventName\" />\n            <TextField label=\"Pesel\" source=\"pesel\" />\n            <TextField label=\"Wariant\" source=\"variantName\" />\n            <Labeled label=\"Rodzaj wejściówki\">\n              <MappedChipField\n                source=\"bookingType\"\n                mapper={mapFromBookingType}\n              />\n            </Labeled>\n            <DateField\n              label=\"Aktywny od\"\n              source=\"activeFrom\"\n              emptyText=\"N/A\"\n              showTime\n            />\n            <DateField\n              label=\"Aktywny do\"\n              source=\"activeTo\"\n              emptyText=\"N/A\"\n              showTime\n            />\n            <TicketsField label=\"Wejściówki:\" />\n            <DateField label=\"Utworzono\" source=\"createdAt\" showTime />\n            <DateField label=\"Zmodyfikowano\" source=\"modifiedAt\" showTime />\n          </Tab>\n        </TabbedShowLayout>\n        <Divider />\n        <Box p={1} display=\"flex\" justifyContent=\"flex-end\">\n          <AccessToggleButtons />\n        </Box>\n      </>\n    </Show>\n  </>\n)\n","import * as React from 'react'\nimport {\n  Datagrid,\n  DateField,\n  Filter,\n  FilterProps,\n  List,\n  ListProps,\n  Pagination,\n  TextField,\n  TextInput,\n} from 'react-admin'\n\nconst LogGrid = () => (\n  <Datagrid>\n    <DateField label=\"Data\" source=\"date\" showTime />\n    <TextField label=\"Urządzenie\" source=\"deviceName\" />\n    <TextField label=\"Bilet\" source=\"ticketCode\" />\n    <TextField label=\"Opis\" source=\"text\" sortable={false} />\n    <TextField label=\"Rezerwacja\" source=\"bookingId\" />\n  </Datagrid>\n)\n\nconst ListFilters = (props: Omit<FilterProps, 'children'>) => (\n  <Filter {...props}>\n    <TextInput source=\"ticketCode\" alwaysOn />\n  </Filter>\n)\n\nexport const LogList = (props: ListProps) => (\n  <List\n    perPage={20}\n    actions={false}\n    pagination={<Pagination rowsPerPageOptions={[20, 50, 100]} />}\n    filters={<ListFilters />}\n    {...props}\n  >\n    <LogGrid />\n  </List>\n)\n","import React from 'react'\nimport ReceiptIcon from '@material-ui/icons/Receipt'\nimport { Admin, Resource } from 'react-admin'\nimport { Dashboard } from './main/Dashboard'\nimport { customTheme } from './custom.theme'\nimport { providersFactory } from './core/providers.factory'\nimport { TicketInfoList } from './main/ticket-info/TicketInfoList'\nimport { TicketDetailsView } from './main/ticket-details/TicketDetailsView'\nimport { ResourceName } from './core/ResourceName'\nimport { LogList } from './main/logs/LogList'\n\n// TODO: merge customers and products view\n// TODO: chage dashboard name - https://stackoverflow.com/questions/59879156/react-admin-how-to-change-the-dashboard-name-in-the-menu/59880647#59880647\n// TODO: create browser router - https://marmelab.com/react-admin/Admin.html#history\n// TODO: handle InfoDetailsView event for releasing access\n// TODO: add fake providers\nconst App = () => {\n  const { authProvider, dataProvider } = providersFactory(process.env.NODE_ENV)\n  return (\n    <Admin\n      theme={customTheme}\n      dashboard={Dashboard}\n      authProvider={authProvider}\n      dataProvider={dataProvider}\n    >\n      <Resource\n        options={{ label: 'Bilety' }}\n        icon={ReceiptIcon}\n        name={ResourceName.TICKET_INFO}\n        list={TicketInfoList}\n      />\n      <Resource\n        options={{ label: 'Wejściówka' }}\n        name={ResourceName.TICKET_DETAILS}\n        show={TicketDetailsView}\n      />\n      <Resource\n        options={{ label: 'Logi' }}\n        name={ResourceName.LOGS}\n        list={LogList}\n      />\n    </Admin>\n  )\n}\n\nexport default App\n","import { AuthProvider, DataProvider, LegacyDataProvider } from 'react-admin'\nimport fakeDataProvider from './fake/fake-data.provider'\nimport fakeAuthProvider from './fake/providers/fake-auth.provider'\nimport authProvider from './auth/auth.provider'\nimport dataProvider from './data.provider'\n\ninterface Providers {\n  readonly authProvider: AuthProvider\n  readonly dataProvider: DataProvider | LegacyDataProvider\n}\n\nexport const providersFactory = (\n  env: 'development' | 'test' | 'production',\n): Providers => {\n  switch (env) {\n    case 'production':\n      return {\n        authProvider,\n        dataProvider,\n      }\n    case 'development':\n      return {\n        authProvider,\n        dataProvider,\n      }\n    default:\n      return {\n        authProvider: fakeAuthProvider,\n        dataProvider: fakeDataProvider,\n      }\n  }\n}\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}