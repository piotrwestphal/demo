{"version":3,"sources":["core/ResourceName.ts","core/enum/TicketType.ts","main/common/InputWithButton.tsx","main/common/FindUserByTicket.tsx","main/Dashboard.tsx","custom.theme.ts","core/fake/fake-tickets.provider.ts","core/enum/BookingType.ts","core/enum/BookingDisabledOption.ts","core/fake/fake-ticket-info.provider.ts","core/fake/fake-ticket-details.provider.ts","core/fake/fake-data.provider.ts","core/fake/fake-auth.provider.ts","core/common/fetch.utils.ts","core/api-urls.ts","core/auth/auth.provider.ts","core/common/mapper.utils.ts","core/ticket-info/ticket-info.mapper.ts","core/common/condition.builder.ts","core/ticket-info/ticket-info.provider.ts","core/tickets/tickets-provider.ts","core/ticket-details/ticket-details.mapper.ts","core/ticket-details/ticket-details.provider.ts","core/data.provider.ts","main/common/MaskField.tsx","core/common/mask.utils.ts","main/ticket-info/TicketInfoList.tsx","main/ticket-details/AccessButtons.tsx","core/ticket-details/ticket-details-values.mapper.ts","main/ticket-details/TicketDetailsView.tsx","App.tsx","core/providers.factory.ts","reportWebVitals.ts","index.tsx"],"names":["ResourceName","TicketType","useStyles","makeStyles","theme","createStyles","root","display","margin","spacing","height","button","fontWeight","marginLeft","InputWithButton","label","onValue","disabled","error","classes","useState","inputError","setInputError","inputValue","setInputValue","handleClick","Box","className","FormControl","InputLabel","Input","onInput","event","target","value","onKeyDown","ev","key","FormHelperText","Button","variant","color","onClick","FindUserByTicket","history","useHistory","setError","useMutation","mutate","loading","fetchTickets","useCallback","ticketCode","type","sanitizeFetchType","GET_LIST","resource","TICKETS","payload","filter","returnPromise","a","total","data","onlyTicket","push","pathname","TICKET_DETAILS","bookingId","TICKET_INFO","search","stringify","JSON","message","header","textAlign","letterSpacing","Dashboard","Grid","container","item","xs","Card","CardHeader","title","sm","CardContent","customTheme","defaultTheme","palette","primary","deepPurple","secondary","green","typography","fontFamily","join","body1","body2","h5","BookingType","BookingDisabledOption","fakeTickets","id","ticketType","K","active","accessUsingsIds","createdAt","modifiedAt","provider","getList","params","Promise","resolve","length","fakeTicketInfoList","firstname","lastname","pesel","eventName","fakeTicketDetailsList","variantName","bookingType","NORMAL","activeFrom","activeTo","tickets","M","bookingDisabled","STORNO","getOne","found","find","v","reject","Error","dataProviders","fakeTicketsProvider","fakeTicketInfoProvider","fakeTicketDetailsProvider","fetchType","authProvider","login","logout","checkError","checkAuth","getPermissions","getIdentity","fullName","baseHeaders","get","baseUrl","path","fetchUtils","fetchJson","method","headers","Headers","Authorization","localStorage","getItem","then","json","getByConditions","pathParam","API_V1","process","AUTH_URL","BOOKINGS_URL","CUSTOMERS_URL","EVENTS_URL","TICKETS_URL","VARIANTS_URL","url","body","username","password","token","setItem","removeItem","status","toMapById","values","Map","map","mapToTicketBaseInfoList","bookings","customers","events","bookingById","customerById","eventById","ticket","customerId","eventId","name","mapToTicketBaseInfo","buildFilterByIdsCondition","ids","firstId","reduce","prev","curr","getByUniqueIds","uniqueIds","Array","from","Set","toUniqueIds","filterByTicketCodeCondition","bookingIds","customerIds","eventIds","pendingCustomers","pendingEvents","all","ticketBaseInfoList","mapToTicketDetails","booking","variantId","pendingCustomer","pendingEvent","pendingVariant","pendingTickets","ticketsIds","customer","ticketsProvider","ticketInfoProvider","ticketDetailsProvider","MaskField","source","rest","record","useRecordContext","recordWithMappedValue","word","threshold","firstChars","substring","lastChars","slice","restCharsLength","repeat","maskMiddlePart","TextField","TicketList","useListContext","filterValues","m","Typography","paragraph","Divider","Datagrid","loaded","rowClick","sortable","TicketInfoList","props","useLocation","List","actions","pagination","common","white","AccessButtons","useShowContext","refresh","useRefresh","bookingTypeMapping","AB","INFIX","POINTS","SERVICE","ticketTypeMapping","Z","N","P","U","R","mapFromTicketType","mapFromBookingType","ticketBox","flexDirection","padding","ticketField","marginBottom","Header","MappedChipField","mapper","mappedValue","Chip","TicketsField","fields","mappedRecord","Paper","Labeled","DateField","showTime","flexWrap","TicketDetailsView","Show","TabbedShowLayout","syncWithLocation","Tab","emptyText","p","justifyContent","App","env","dataProvider","fakeAuthProvider","fakeDataProvider","providersFactory","Admin","dashboard","Resource","options","icon","ReceiptIcon","list","show","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3af88eaa.chunk.js","sourcesContent":["export enum ResourceName {\n  TICKETS = 'tickets',\n  TICKET_INFO = 'ticket-info',\n  TICKET_DETAILS = 'ticket-details',\n}\n","export enum TicketType {\n  K = 'K',\n  M = 'M',\n  Z = 'Z',\n  N = 'N',\n  P = 'P',\n  U = 'U',\n  R = 'R',\n}\n","import React, { ChangeEvent, FC, useState } from 'react'\nimport {\n  Box,\n  Button,\n  createStyles,\n  FormControl,\n  FormHelperText,\n  Input,\n  InputLabel,\n  makeStyles,\n  Theme,\n} from '@material-ui/core'\nimport SearchIcon from '@material-ui/icons/Search'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      margin: theme.spacing(1),\n      height: theme.spacing(8),\n    },\n    button: {\n      fontWeight: 'bold',\n      height: theme.spacing(6),\n      marginLeft: theme.spacing(2),\n    },\n  }),\n)\n\ntype InputWithButtonProps = {\n  label: string\n  onValue: (value: string) => void\n  disabled: boolean\n  error: string\n}\n\nexport const InputWithButton: FC<Readonly<InputWithButtonProps>> = ({\n  label,\n  onValue,\n  disabled,\n  error,\n}) => {\n  const classes = useStyles()\n  const [inputError, setInputError] = useState(false)\n  const [inputValue, setInputValue] = useState('')\n\n  const handleInput = (event: ChangeEvent<HTMLInputElement>) => {\n    setInputValue(event.target.value)\n  }\n\n  const handleClick = () => {\n    if (inputValue) {\n      setInputError(false)\n      onValue(inputValue)\n    } else {\n      setInputError(true)\n    }\n  }\n\n  return (\n    <Box className={classes.root}>\n      <FormControl disabled={disabled}>\n        <InputLabel>{label}</InputLabel>\n        <Input\n          error={inputError || !!error}\n          onInput={handleInput}\n          onKeyDown={(ev) => ev.key === 'Enter' && handleClick()}\n        />\n        {inputError && (\n          <FormHelperText error>Pole jest wymagane</FormHelperText>\n        )}\n        {!!error && <FormHelperText error>{error}</FormHelperText>}\n      </FormControl>\n      <Button\n        className={classes.button}\n        variant=\"contained\"\n        color=\"primary\"\n        disabled={disabled}\n        onClick={handleClick}\n      >\n        <SearchIcon />\n      </Button>\n    </Box>\n  )\n}\n","import * as React from 'react'\nimport { useCallback, useState } from 'react'\nimport {\n  GET_LIST,\n  GetListResult,\n  sanitizeFetchType,\n  useMutation,\n} from 'react-admin'\nimport { stringify } from 'querystring'\nimport { useHistory } from 'react-router-dom'\nimport { TicketCodeFilter } from '../../core/common/ticket-code.filter'\nimport { ResourceName } from '../../core/ResourceName'\nimport { TicketDto } from '../../core/dto/ticket.dto'\nimport { InputWithButton } from './InputWithButton'\n\nexport const FindUserByTicket = () => {\n  const history = useHistory()\n  const [error, setError] = useState('')\n  const [mutate, { loading }] = useMutation()\n\n  const fetchTickets = useCallback(\n    (ticketCode: string) =>\n      mutate(\n        {\n          type: sanitizeFetchType(GET_LIST),\n          resource: ResourceName.TICKETS,\n          payload: { filter: { ticketCode } } as TicketCodeFilter,\n        },\n        { returnPromise: true },\n      ) as Promise<GetListResult<TicketDto>>,\n    [mutate],\n  )\n\n  const onValue = useCallback(\n    async (ticketCode: string) => {\n      setError('')\n      try {\n        const {\n          total,\n          data: [onlyTicket],\n        } = await fetchTickets(ticketCode)\n        if (!total) {\n          setError('Nie ma biletu o takim kodzie')\n        } else if (total === 1) {\n          history.push({\n            pathname: `/${ResourceName.TICKET_DETAILS}/${onlyTicket.bookingId}/show`,\n          })\n        } else {\n          history.push({\n            pathname: `/${ResourceName.TICKET_INFO}`,\n            search: stringify({\n              filter: JSON.stringify({\n                ticketCode,\n              } as TicketCodeFilter['filter']),\n            }),\n          })\n        }\n      } catch (err) {\n        setError(err?.message)\n      }\n    },\n    [fetchTickets, history],\n  )\n\n  return (\n    <InputWithButton\n      label=\"Kod biletu\"\n      onValue={onValue}\n      disabled={loading}\n      error={error}\n    />\n  )\n}\n","import {\n  Card,\n  CardContent,\n  CardHeader,\n  createStyles,\n  Grid,\n  makeStyles,\n  Theme,\n} from '@material-ui/core'\nimport * as React from 'react'\nimport { FindUserByTicket } from './common/FindUserByTicket'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    header: {\n      textAlign: 'center',\n      letterSpacing: theme.spacing(0.2),\n    },\n  }),\n)\n\nexport const Dashboard = () => {\n  const classes = useStyles()\n  return (\n    <Grid container spacing={1}>\n      <Grid item xs={12}>\n        <Card>\n          <CardHeader\n            className={classes.header}\n            title=\"Witaj w aplikacji administracyjnej Sport Data\"\n          />\n        </Card>\n      </Grid>\n      <Grid item sm={6} xs={12}>\n        <Card>\n          <CardHeader title=\"Znajdź użytkownika po kodzie biletu\" />\n          <CardContent>\n            <FindUserByTicket />\n          </CardContent>\n        </Card>\n      </Grid>\n    </Grid>\n  )\n}\n","import { defaultTheme } from 'react-admin'\nimport { deepPurple, green } from '@material-ui/core/colors'\nimport { ThemeOptions } from '@material-ui/core'\n\nexport const customTheme: ThemeOptions = {\n  ...defaultTheme,\n  palette: {\n    primary: deepPurple,\n    secondary: green,\n  },\n  typography: {\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Arial',\n      'sans-serif',\n    ].join(','),\n    body1: {\n      fontWeight: 300,\n    },\n    body2: {\n      fontWeight: 300,\n    },\n    h5: {\n      fontWeight: 200,\n    },\n  },\n}\n","import { DataProvider } from 'react-admin'\nimport { TicketDto } from '../dto/ticket.dto'\nimport { TicketType } from '../enum/TicketType'\n\nconst fakeTickets: TicketDto[] = [\n  {\n    id: 1,\n    ticketCode: 'A',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52815,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054Z',\n    modifiedAt: '2021-07-15T08:50:27.2054Z',\n  },\n  {\n    id: 2,\n    ticketCode: 'A',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52816,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054Z',\n    modifiedAt: '2021-07-15T08:50:27.2054Z',\n  },\n  {\n    id: 3,\n    ticketCode: '010000011492',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52817,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054Z',\n    modifiedAt: '2021-07-15T08:50:27.2054Z',\n  },\n  {\n    id: 4,\n    ticketCode: '411000006572',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52818,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054Z',\n    modifiedAt: '2021-07-15T08:50:27.2054Z',\n  },\n  {\n    id: 5,\n    ticketCode: '871000006824',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52819,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054Z',\n    modifiedAt: '2021-07-15T08:50:27.2054Z',\n  },\n  {\n    id: 6,\n    ticketCode: '370000011495',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52820,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054Z',\n    modifiedAt: '2021-07-15T08:50:27.2054Z',\n  },\n  {\n    id: 7,\n    ticketCode: '450000011501',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52821,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054Z',\n    modifiedAt: '2021-07-15T08:50:27.2054Z',\n  },\n  {\n    id: 8,\n    ticketCode: '630000011502',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52822,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054Z',\n    modifiedAt: '2021-07-15T08:50:27.2054Z',\n  },\n  {\n    id: 9,\n    ticketCode: '020000011503',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52823,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054Z',\n    modifiedAt: '2021-07-15T08:50:27.2054Z',\n  },\n  {\n    id: 10,\n    ticketCode: '310000011504',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52824,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054Z',\n    modifiedAt: '2021-07-15T08:50:27.2054Z',\n  },\n]\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getList: (resource, params) =>\n    Promise.resolve({ data: fakeTickets, total: fakeTickets.length }),\n} as DataProvider\n\nexport default provider\n","export enum BookingType {\n  NORMAL = 'NORMAL',\n  AB = 'AB',\n  INFIX = 'INFIX',\n  SERVICE = 'SERVICE',\n  POINTS = 'POINTS',\n}\n","export enum BookingDisabledOption {\n  ADMIN = 'ADMIN',\n  BAN = 'BAN',\n  STORNO = 'STORNO',\n  MISTAKE = 'MISTAKE',\n}\n","import { DataProvider } from 'react-admin'\nimport { TicketType } from '../enum/TicketType'\nimport { TicketInfo } from '../ticket-info/ticket-info'\n\nconst fakeTicketInfoList: TicketInfo[] = [\n  {\n    id: 1,\n    firstname: 'Marek',\n    lastname: 'Pies',\n    pesel: '47120554776',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n  },\n  {\n    id: 2,\n    firstname: 'Janek',\n    lastname: 'Krużganek',\n    pesel: '47120554776',\n    eventName: 'POGOŃ SZCZECIN 20/21',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n  },\n  {\n    id: 3,\n    firstname: 'Wacław',\n    lastname: 'Rymski',\n    pesel: '9988711225',\n    eventName: 'POGOŃ SZCZECIN 20/21',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n  },\n  {\n    id: 4,\n    firstname: 'Mirka',\n    lastname: 'Korzeń',\n    pesel: '56483978659',\n    eventName: 'POGOŃ SZCZECIN 20/21',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n  },\n  {\n    id: 5,\n    firstname: 'Tis',\n    lastname: 'Lomasz',\n    pesel: '47120554776',\n    eventName: 'POGOŃ SZCZECIN 20/21',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n  },\n  {\n    id: 6,\n    firstname: 'Bogdana',\n    lastname: 'Jaruzelska',\n    pesel: '47120554776',\n    eventName: 'POGOŃ SZCZECIN 20/21',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n  },\n  {\n    id: 7,\n    firstname: 'Jeremi',\n    lastname: 'Pomidor',\n    pesel: '12345678900',\n    eventName: 'POGOŃ SZCZECIN 20/21',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n  },\n  {\n    id: 8,\n    firstname: 'Roman',\n    lastname: 'Zoman',\n    pesel: '13243567890',\n    eventName: 'POGOŃ SZCZECIN 20/21',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n  },\n  {\n    id: 9,\n    firstname: 'Bacha',\n    lastname: 'Kaszalot',\n    pesel: '98097612678',\n    eventName: 'POGOŃ SZCZECIN 20/21',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n  },\n  {\n    id: 10,\n    firstname: 'Jadwiga',\n    lastname: 'Ogórek',\n    pesel: '47120554776',\n    eventName: 'POGOŃ SZCZECIN 20/21',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n  },\n]\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getList: (resource, params) =>\n    Promise.resolve({\n      data: fakeTicketInfoList,\n      total: fakeTicketInfoList.length,\n    }),\n} as DataProvider\n\nexport default provider\n","import { DataProvider } from 'react-admin'\nimport { TicketType } from '../enum/TicketType'\nimport { TicketDetails } from '../ticket-details/ticket-details'\nimport { BookingType } from '../enum/BookingType'\nimport { BookingDisabledOption } from '../enum/BookingDisabledOption'\n\nconst fakeTicketDetailsList: TicketDetails[] = [\n  {\n    id: 1,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56424,\n        ticketCode: '060000020917',\n        ticketType: TicketType.K,\n        active: true,\n        bookingId: 55832,\n        accessUsingsIds: [],\n        createdAt: '2021-07-15T08:50:27.2054Z',\n        modifiedAt: '2021-07-15T08:50:27.2054Z',\n      },\n      {\n        id: 56425,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.M,\n        active: true,\n        bookingId: 55832,\n        accessUsingsIds: [],\n        createdAt: '2021-07-15T08:50:27.2054Z',\n        modifiedAt: '2021-07-15T08:50:27.2054Z',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054Z',\n    modifiedAt: '2021-07-15T08:50:27.2054Z',\n    bookingDisabled: BookingDisabledOption.STORNO,\n  },\n  {\n    id: 2,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56459,\n        ticketCode: '240000020972',\n        ticketType: TicketType.K,\n        active: true,\n        bookingId: 55852,\n        accessUsingsIds: [],\n        createdAt: '2021-07-15T08:50:27.2054Z',\n        modifiedAt: '2021-07-15T08:50:27.2054Z',\n      },\n      {\n        id: 56460,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.M,\n        active: true,\n        bookingId: 55852,\n        accessUsingsIds: [],\n        createdAt: '2021-07-15T08:50:27.2054Z',\n        modifiedAt: '2021-07-15T08:50:27.2054Z',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054Z',\n    modifiedAt: '2021-07-15T08:50:27.2054Z',\n    bookingDisabled: BookingDisabledOption.STORNO,\n  },\n  {\n    id: 3,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56479,\n        ticketCode: '370000020991',\n        ticketType: TicketType.K,\n        active: true,\n        bookingId: 55863,\n        accessUsingsIds: [1393],\n        createdAt: '2021-07-15T08:50:27.2054Z',\n        modifiedAt: '2021-07-15T08:50:27.2054Z',\n      },\n      {\n        id: 56480,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.K,\n        active: true,\n        bookingId: 55863,\n        accessUsingsIds: [],\n        createdAt: '2021-07-15T08:50:27.2054Z',\n        modifiedAt: '2021-07-15T08:50:27.2054Z',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054Z',\n    modifiedAt: '2021-07-15T08:50:27.2054Z',\n    bookingDisabled: null,\n  },\n  {\n    id: 4,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56479,\n        ticketCode: '370000020991',\n        ticketType: TicketType.K,\n        active: true,\n        bookingId: 55863,\n        accessUsingsIds: [1393],\n        createdAt: '2021-07-15T08:50:27.2054Z',\n        modifiedAt: '2021-07-15T08:50:27.2054Z',\n      },\n      {\n        id: 56480,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.K,\n        active: true,\n        bookingId: 55863,\n        accessUsingsIds: [],\n        createdAt: '2021-07-15T08:50:27.2054Z',\n        modifiedAt: '2021-07-15T08:50:27.2054Z',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054Z',\n    modifiedAt: '2021-07-15T08:50:27.2054Z',\n    bookingDisabled: null,\n  },\n  {\n    id: 5,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56479,\n        ticketCode: '370000020991',\n        ticketType: TicketType.K,\n        active: true,\n        bookingId: 55863,\n        accessUsingsIds: [1393],\n        createdAt: '2021-07-15T08:50:27.2054Z',\n        modifiedAt: '2021-07-15T08:50:27.2054Z',\n      },\n      {\n        id: 56480,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.K,\n        active: true,\n        bookingId: 55863,\n        accessUsingsIds: [],\n        createdAt: '2021-07-15T08:50:27.2054Z',\n        modifiedAt: '2021-07-15T08:50:27.2054Z',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054Z',\n    modifiedAt: '2021-07-15T08:50:27.2054Z',\n    bookingDisabled: null,\n  },\n  {\n    id: 6,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56479,\n        ticketCode: '370000020991',\n        ticketType: TicketType.K,\n        active: true,\n        bookingId: 55863,\n        accessUsingsIds: [1393],\n        createdAt: '2021-07-15T08:50:27.2054Z',\n        modifiedAt: '2021-07-15T08:50:27.2054Z',\n      },\n      {\n        id: 56480,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.K,\n        active: true,\n        bookingId: 55863,\n        accessUsingsIds: [],\n        createdAt: '2021-07-15T08:50:27.2054Z',\n        modifiedAt: '2021-07-15T08:50:27.2054Z',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054Z',\n    modifiedAt: '2021-07-15T08:50:27.2054Z',\n    bookingDisabled: null,\n  },\n  {\n    id: 7,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56479,\n        ticketCode: '370000020991',\n        ticketType: TicketType.K,\n        active: true,\n        bookingId: 55863,\n        accessUsingsIds: [1393],\n        createdAt: '2021-07-15T08:50:27.2054Z',\n        modifiedAt: '2021-07-15T08:50:27.2054Z',\n      },\n      {\n        id: 56480,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.K,\n        active: true,\n        bookingId: 55863,\n        accessUsingsIds: [],\n        createdAt: '2021-07-15T08:50:27.2054Z',\n        modifiedAt: '2021-07-15T08:50:27.2054Z',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054Z',\n    modifiedAt: '2021-07-15T08:50:27.2054Z',\n    bookingDisabled: null,\n  },\n  {\n    id: 8,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56479,\n        ticketCode: '370000020991',\n        ticketType: TicketType.K,\n        active: true,\n        bookingId: 55863,\n        accessUsingsIds: [1393],\n        createdAt: '2021-07-15T08:50:27.2054Z',\n        modifiedAt: '2021-07-15T08:50:27.2054Z',\n      },\n      {\n        id: 56480,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.K,\n        active: true,\n        bookingId: 55863,\n        accessUsingsIds: [],\n        createdAt: '2021-07-15T08:50:27.2054Z',\n        modifiedAt: '2021-07-15T08:50:27.2054Z',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054Z',\n    modifiedAt: '2021-07-15T08:50:27.2054Z',\n    bookingDisabled: null,\n  },\n  {\n    id: 9,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56479,\n        ticketCode: '370000020991',\n        ticketType: TicketType.K,\n        active: true,\n        bookingId: 55863,\n        accessUsingsIds: [1393],\n        createdAt: '2021-07-15T08:50:27.2054Z',\n        modifiedAt: '2021-07-15T08:50:27.2054Z',\n      },\n      {\n        id: 56480,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.K,\n        active: true,\n        bookingId: 55863,\n        accessUsingsIds: [],\n        createdAt: '2021-07-15T08:50:27.2054Z',\n        modifiedAt: '2021-07-15T08:50:27.2054Z',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054Z',\n    modifiedAt: '2021-07-15T08:50:27.2054Z',\n    bookingDisabled: null,\n  },\n  {\n    id: 10,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56479,\n        ticketCode: '370000020991',\n        ticketType: TicketType.K,\n        active: true,\n        bookingId: 55863,\n        accessUsingsIds: [1393],\n        createdAt: '2021-07-15T08:50:27.2054Z',\n        modifiedAt: '2021-07-15T08:50:27.2054Z',\n      },\n      {\n        id: 56480,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.K,\n        active: true,\n        bookingId: 55863,\n        accessUsingsIds: [],\n        createdAt: '2021-07-15T08:50:27.2054Z',\n        modifiedAt: '2021-07-15T08:50:27.2054Z',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054Z',\n    modifiedAt: '2021-07-15T08:50:27.2054Z',\n    bookingDisabled: null,\n  },\n]\n\nconst provider = {\n  getOne: (resource, { id }: { id: string }) => {\n    const found = fakeTicketDetailsList.find((v) => `${v.id}` === id)\n    if (found) {\n      return Promise.resolve({\n        data: found,\n      })\n    }\n    return Promise.reject(new Error())\n  },\n} as DataProvider\n\nexport default provider\n","import { DataProvider, sanitizeFetchType } from 'react-admin'\nimport { ResourceName } from '../ResourceName'\nimport fakeTicketsProvider from './fake-tickets.provider'\nimport fakeTicketInfoProvider from './fake-ticket-info.provider'\nimport fakeTicketDetailsProvider from './fake-ticket-details.provider'\n\nconst dataProviders: Record<ResourceName, DataProvider> = {\n  [ResourceName.TICKETS]: fakeTicketsProvider,\n  [ResourceName.TICKET_INFO]: fakeTicketInfoProvider,\n  [ResourceName.TICKET_DETAILS]: fakeTicketDetailsProvider,\n}\n\nexport default (\n  fetchType: string,\n  resource: string,\n  params: unknown,\n): Promise<unknown> => {\n  const selectedProvider = dataProviders[resource as ResourceName]\n  const type = sanitizeFetchType(fetchType)\n  return selectedProvider[type](resource, params)\n}\n","import { AuthProvider } from 'react-admin'\n\nconst authProvider: AuthProvider = {\n  login: () => Promise.resolve(),\n  logout: () => Promise.resolve(),\n  checkError: () => Promise.resolve(),\n  checkAuth: () => Promise.resolve(),\n  getPermissions: () => Promise.resolve(),\n  getIdentity: () =>\n    Promise.resolve({\n      id: 'no-auth',\n      fullName: 'no-auth',\n    }),\n}\n\nexport default authProvider\n","import { fetchUtils } from 'react-admin'\n\nconst getToken = () => localStorage.getItem('token') as string\n\nconst baseHeaders: HeadersInit = {\n  'Content-Type': 'application/json',\n}\n\nconst authHeaders = (): HeadersInit => ({\n  ...baseHeaders,\n  Authorization: `Bearer ${getToken()}`,\n})\n\nexport const get = <T>(baseUrl: string, path: string) =>\n  fetchUtils\n    .fetchJson(`${baseUrl}${path}`, {\n      method: 'GET',\n      headers: new Headers(authHeaders()),\n    })\n    .then(({ json }) => json as Promise<T>)\n\nexport const getByConditions = <T>(\n  baseUrl: string,\n  pathParam: string,\n): Promise<T[]> => get<T[]>(baseUrl, `/GetByConditions/${pathParam}`)\n\nexport const authPost = <T, K>(url: string, body: T) =>\n  fetchUtils\n    .fetchJson(url, {\n      method: 'POST',\n      body: JSON.stringify(body),\n      headers: new Headers(baseHeaders),\n    })\n    .then(({ json }) => json as Promise<K>)\n","const API_V1 = `${process.env.REACT_APP_API_BASE_URL}/api/v1`\nexport const AUTH_URL = `${API_V1}/Authorization/Authenticate`\nexport const BOOKINGS_URL = `${API_V1}/ticketManagement/Bookings`\nexport const CUSTOMERS_URL = `${API_V1}/ticketManagement/Customers`\nexport const EVENTS_URL = `${API_V1}/ticketManagement/Events`\nexport const SEATS_URL = `${API_V1}/ticketManagement/Seats`\nexport const TICKETS_URL = `${API_V1}/ticketManagement/Tickets`\nexport const VARIANTS_URL = `${API_V1}/ticketManagement/Variants`\n","import { AuthProvider } from 'react-admin'\nimport { authPost } from '../common/fetch.utils'\nimport { AuthDto } from '../dto/auth.dto'\nimport { AUTH_URL } from '../api-urls'\nimport { AuthRequest } from './auth.request'\n\nconst authProvider: AuthProvider = {\n  login: ({ username, password }) =>\n    authPost<AuthRequest, AuthDto>(AUTH_URL, {\n      login: username,\n      password,\n    }).then(({ token }) => {\n      localStorage.setItem('username', username)\n      localStorage.setItem('token', token)\n    }),\n  logout: () => {\n    localStorage.removeItem('username')\n    localStorage.removeItem('token')\n    return Promise.resolve()\n  },\n  checkError: ({ status }) => {\n    if (status === 401 || status === 403) {\n      localStorage.removeItem('username')\n      localStorage.removeItem('token')\n      return Promise.reject()\n    }\n    return Promise.resolve()\n  },\n  checkAuth: () =>\n    localStorage.getItem('token') ? Promise.resolve() : Promise.reject(),\n  getPermissions: () => Promise.resolve(),\n  getIdentity: () =>\n    Promise.resolve({\n      id: 'user',\n      fullName: localStorage.getItem('username') as string,\n    }),\n}\n\nexport default authProvider\n","export const toMapById = <T extends { id: number }>(values: T[]) =>\n  new Map(values.map((v): [number, T] => [v.id, v]))\n","import { CustomerDto } from '../dto/customer.dto'\nimport { EventDto } from '../dto/event.dto'\nimport { TicketDto } from '../dto/ticket.dto'\nimport { TicketInfo } from './ticket-info'\nimport { BookingDto } from '../dto/booking.dto'\nimport { toMapById } from '../common/mapper.utils'\n\nexport const mapToTicketBaseInfo = (\n  { firstname, lastname, pesel }: CustomerDto,\n  { name: eventName }: EventDto,\n  { bookingId, ticketCode, ticketType }: TicketDto,\n): TicketInfo => ({\n  id: bookingId,\n  firstname,\n  lastname,\n  pesel,\n  eventName,\n  ticketCode,\n  ticketType,\n})\n\nexport const mapToTicketBaseInfoList = (\n  bookings: BookingDto[],\n  customers: CustomerDto[],\n  events: EventDto[],\n  tickets: TicketDto[],\n): TicketInfo[] => {\n  const bookingById = toMapById(bookings)\n  const customerById = toMapById(customers)\n  const eventById = toMapById(events)\n  return tickets.map((ticket) => {\n    const { customerId, eventId } = bookingById.get(\n      ticket.bookingId,\n    ) as BookingDto\n    const customer = customerById.get(customerId) as CustomerDto\n    const event = eventById.get(eventId) as EventDto\n    return mapToTicketBaseInfo(customer, event, ticket)\n  })\n}\n","export const buildFilterByIdsCondition = (ids: number[]): string => {\n  const [firstId, ...restIds] = ids\n  return (restIds || []).reduce(\n    (prev, curr) => `${prev as string}||v.Id==${curr}`,\n    `v=>v.Id==${firstId}`,\n  )\n}\n","import { DataProvider, GetListResult } from 'react-admin'\nimport {\n  BOOKINGS_URL,\n  CUSTOMERS_URL,\n  EVENTS_URL,\n  TICKETS_URL,\n} from '../api-urls'\nimport { getByConditions } from '../common/fetch.utils'\nimport { BookingDto } from '../dto/booking.dto'\nimport { TicketInfo } from './ticket-info'\nimport { TicketDto } from '../dto/ticket.dto'\nimport { CustomerDto } from '../dto/customer.dto'\nimport { EventDto } from '../dto/event.dto'\nimport { mapToTicketBaseInfoList } from './ticket-info.mapper'\nimport { buildFilterByIdsCondition } from '../common/condition.builder'\nimport { TicketCodeFilter } from '../common/ticket-code.filter'\n\nconst toUniqueIds = (ids: number[]) => Array.from(new Set(ids))\n\nconst getByUniqueIds = <T>(baseUrl: string, ids: number[]): Promise<T[]> => {\n  const uniqueIds = toUniqueIds(ids)\n  return getByConditions<T>(baseUrl, buildFilterByIdsCondition(uniqueIds))\n}\n\nconst provider = {\n  getList: async (\n    resource: string,\n    { filter }: TicketCodeFilter,\n  ): Promise<GetListResult<TicketInfo>> => {\n    const filterByTicketCodeCondition = `t=>t.TicketCode==\"${filter.ticketCode}\"`\n    const tickets = await getByConditions<TicketDto>(\n      TICKETS_URL,\n      filterByTicketCodeCondition,\n    )\n\n    const bookingIds = tickets.map((v) => v.bookingId)\n    const bookings = await getByUniqueIds<BookingDto>(BOOKINGS_URL, bookingIds)\n\n    const customerIds = bookings.map((v) => v.customerId)\n    const eventIds = bookings.map((v) => v.eventId)\n\n    const pendingCustomers = getByUniqueIds<CustomerDto>(\n      CUSTOMERS_URL,\n      customerIds,\n    )\n    const pendingEvents = getByUniqueIds<EventDto>(EVENTS_URL, eventIds)\n    const [customers, events] = await Promise.all([\n      pendingCustomers,\n      pendingEvents,\n    ])\n\n    const ticketBaseInfoList = mapToTicketBaseInfoList(\n      bookings,\n      customers,\n      events,\n      tickets,\n    )\n    return Promise.resolve({\n      data: ticketBaseInfoList,\n      total: ticketBaseInfoList.length,\n    })\n  },\n} as DataProvider\n\nexport default provider\n","import { DataProvider, GetListResult } from 'react-admin'\nimport { TicketCodeFilter } from '../common/ticket-code.filter'\nimport { getByConditions } from '../common/fetch.utils'\nimport { TicketDto } from '../dto/ticket.dto'\nimport { TICKETS_URL } from '../api-urls'\n\nconst provider = {\n  getList: async (\n    resource: string,\n    { filter }: TicketCodeFilter,\n  ): Promise<GetListResult<TicketDto>> => {\n    const filterByTicketCodeCondition = `t=>t.TicketCode==\"${filter.ticketCode}\"`\n    const tickets = await getByConditions<TicketDto>(\n      TICKETS_URL,\n      filterByTicketCodeCondition,\n    )\n    return Promise.resolve({\n      data: tickets,\n      total: tickets.length,\n    })\n  },\n} as DataProvider\n\nexport default provider\n","import { CustomerDto } from '../dto/customer.dto'\nimport { EventDto } from '../dto/event.dto'\nimport { TicketDto } from '../dto/ticket.dto'\nimport { VariantDto } from '../dto/variant.dto'\nimport { TicketDetails } from './ticket-details'\nimport { BookingDto } from '../dto/booking.dto'\n\nexport const mapToTicketDetails = (\n  {\n    id: bookingId,\n    disabled: bookingDisabled,\n    type: bookingType,\n    activeFrom,\n    activeTo,\n    createdAt,\n    modifiedAt,\n  }: BookingDto,\n  { firstname, lastname, pesel }: CustomerDto,\n  { name: eventName }: EventDto,\n  { name: variantName }: VariantDto,\n  tickets: TicketDto[],\n): TicketDetails => ({\n  id: bookingId,\n  firstname,\n  lastname,\n  eventName,\n  pesel,\n  variantName,\n  bookingType,\n  activeFrom,\n  activeTo,\n  tickets,\n  createdAt,\n  modifiedAt,\n  bookingDisabled,\n})\n","import { DataProvider, GetOneParams, GetOneResult } from 'react-admin'\nimport {\n  BOOKINGS_URL,\n  CUSTOMERS_URL,\n  EVENTS_URL,\n  TICKETS_URL,\n  VARIANTS_URL,\n} from '../api-urls'\nimport { get, getByConditions } from '../common/fetch.utils'\nimport { BookingDto } from '../dto/booking.dto'\nimport { TicketDto } from '../dto/ticket.dto'\nimport { CustomerDto } from '../dto/customer.dto'\nimport { EventDto } from '../dto/event.dto'\nimport { buildFilterByIdsCondition } from '../common/condition.builder'\nimport { mapToTicketDetails } from './ticket-details.mapper'\nimport { VariantDto } from '../dto/variant.dto'\nimport { TicketDetails } from './ticket-details'\n\nconst provider = {\n  getOne: async (\n    resource: string,\n    { id: bookingId }: GetOneParams,\n  ): Promise<GetOneResult<TicketDetails>> => {\n    const booking = await get<BookingDto>(BOOKINGS_URL, `/${bookingId}`)\n    const { customerId, eventId, variantId } = booking\n    const pendingCustomer = get<CustomerDto>(CUSTOMERS_URL, `/${customerId}`)\n    const pendingEvent = get<EventDto>(EVENTS_URL, `/${eventId}`)\n    const pendingVariant = get<VariantDto>(VARIANTS_URL, `/${variantId}`)\n    const pendingTickets = getByConditions<TicketDto>(\n      TICKETS_URL,\n      buildFilterByIdsCondition(booking.ticketsIds),\n    )\n\n    const [customer, event, variant, tickets] = await Promise.all([\n      pendingCustomer,\n      pendingEvent,\n      pendingVariant,\n      pendingTickets,\n    ])\n\n    return {\n      data: mapToTicketDetails(booking, customer, event, variant, tickets),\n    }\n  },\n} as DataProvider\n\nexport default provider\n","import { DataProvider, sanitizeFetchType } from 'react-admin'\nimport ticketInfoProvider from './ticket-info/ticket-info.provider'\nimport { ResourceName } from './ResourceName'\nimport ticketsProvider from './tickets/tickets-provider'\nimport ticketDetailsProvider from './ticket-details/ticket-details.provider'\n\nconst dataProviders: Record<ResourceName, DataProvider> = {\n  [ResourceName.TICKETS]: ticketsProvider,\n  [ResourceName.TICKET_INFO]: ticketInfoProvider,\n  [ResourceName.TICKET_DETAILS]: ticketDetailsProvider,\n}\n\nexport default (\n  fetchType: string,\n  resource: string,\n  params: unknown,\n): Promise<unknown> => {\n  const selectedProvider = dataProviders[resource as ResourceName]\n  const type = sanitizeFetchType(fetchType)\n  return selectedProvider[type](resource, params)\n}\n","import * as React from 'react'\nimport { TextField, TextFieldProps, useRecordContext } from 'react-admin'\nimport { maskMiddlePart } from '../../core/common/mask.utils'\n\nexport const MaskField = ({ source, ...rest }: TextFieldProps) => {\n  const record = useRecordContext()\n  const recordWithMappedValue = {\n    ...record,\n    [source as string]: maskMiddlePart(record[source as string], 2),\n  }\n  return <TextField {...rest} record={recordWithMappedValue} source={source} />\n}\n","/**\n * @example\n * maskMiddlePart('importantValue', 3) === 'imp********lue'\n */\nexport const maskMiddlePart = (word: string, threshold: number) => {\n  const firstChars = word.substring(0, threshold)\n  const lastChars = word.slice(-threshold)\n  const restCharsLength = word.length - firstChars.length - lastChars.length\n  return `${firstChars}${'*'.repeat(\n    restCharsLength > 0 ? restCharsLength : 0,\n  )}${lastChars}`\n}\n","import * as React from 'react'\nimport { Datagrid, List, TextField, useListContext } from 'react-admin'\nimport { useLocation } from 'react-router-dom'\nimport { Box, Divider, ListProps, Typography } from '@material-ui/core'\nimport { FindUserByTicket } from '../common/FindUserByTicket'\nimport { MaskField } from '../common/MaskField'\nimport { ResourceName } from '../../core/ResourceName'\n\nconst TicketList = () => {\n  const {\n    loading,\n    filterValues: { ticketCode },\n  } = useListContext()\n  return (\n    <>\n      <Box m={2}>\n        <Typography variant=\"h5\" paragraph>\n          Wyszukiwanie biletu po kodzie: {ticketCode}\n        </Typography>\n      </Box>\n      <Divider />\n      <Datagrid\n        loaded={!loading}\n        rowClick={(id) => `${ResourceName.TICKET_DETAILS}/${id}/show`}\n      >\n        <TextField label=\"Imię\" source=\"firstname\" sortable={false} />\n        <TextField label=\"Nazwisko\" source=\"lastname\" sortable={false} />\n        <MaskField label=\"Pesel\" source=\"pesel\" sortable={false} />\n        <TextField label=\"Bilet\" source=\"ticketCode\" sortable={false} />\n        <TextField label=\"Wydarzenie\" source=\"eventName\" sortable={false} />\n      </Datagrid>\n    </>\n  )\n}\n\nexport const TicketInfoList = (props: ListProps) => {\n  const { search } = useLocation()\n  return (\n    <>\n      <FindUserByTicket />\n      {!!search && (\n        <List actions={false} pagination={false} {...props}>\n          <TicketList />\n        </List>\n      )}\n    </>\n  )\n}\n","import * as React from 'react'\nimport { Button, createStyles, makeStyles, Theme } from '@material-ui/core'\nimport { useRefresh, useShowContext } from 'react-admin'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    button: {\n      color: theme.palette.common.white,\n      marginLeft: theme.spacing(1),\n    },\n  }),\n)\n\nexport const AccessButtons = () => {\n  const { loading } = useShowContext()\n  const classes = useStyles()\n  const refresh = useRefresh()\n\n  const handleClick = () => {\n    // set loading\n    // call to backend\n    refresh()\n  }\n  return (\n    <>\n      <Button\n        disabled={loading === true}\n        className={classes.button}\n        variant=\"contained\"\n        color=\"secondary\"\n        onClick={handleClick}\n      >\n        Oznacz dostęp jako wykorzystany\n      </Button>\n      <Button\n        disabled={loading === true}\n        className={classes.button}\n        variant=\"contained\"\n        color=\"secondary\"\n        onClick={handleClick}\n      >\n        Zablokuj\n      </Button>\n    </>\n  )\n}\n","import { TicketType } from '../enum/TicketType'\nimport { BookingType } from '../enum/BookingType'\n\nconst bookingTypeMapping: Record<BookingType, string> = {\n  [BookingType.NORMAL]: 'Bilet pojedynczy',\n  [BookingType.AB]: 'Abonament',\n  [BookingType.INFIX]: 'Infix',\n  [BookingType.POINTS]: 'Points',\n  [BookingType.SERVICE]: 'Service',\n}\n\nconst ticketTypeMapping: Record<TicketType, string> = {\n  [TicketType.K]: 'Kod kreskowy',\n  [TicketType.M]: 'Nr mifare',\n  [TicketType.Z]: 'Nr dowodu',\n  [TicketType.N]: 'Nr biletu',\n  [TicketType.P]: 'Pesel',\n  [TicketType.U]: 'Nr unique (125k)',\n  [TicketType.R]: 'Nr rejestracyjny',\n}\n\nexport const mapFromTicketType = (ticketType: TicketType): string =>\n  ticketTypeMapping[ticketType]\n\nexport const mapFromBookingType = (bookingType: BookingType): string =>\n  bookingTypeMapping[bookingType]\n","import * as React from 'react'\nimport {\n  ChipFieldProps,\n  DateField,\n  Labeled,\n  Show,\n  ShowProps,\n  Tab,\n  TabbedShowLayout,\n  TextField,\n  TextFieldProps,\n  useRecordContext,\n  useShowContext,\n} from 'react-admin'\nimport {\n  Box,\n  Chip,\n  createStyles,\n  Divider,\n  makeStyles,\n  Paper,\n  Theme,\n  Typography,\n} from '@material-ui/core'\nimport { TicketDetails } from '../../core/ticket-details/ticket-details'\nimport { AccessButtons } from './AccessButtons'\nimport {\n  mapFromBookingType,\n  mapFromTicketType,\n} from '../../core/ticket-details/ticket-details-values.mapper'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    header: {\n      letterSpacing: theme.spacing(0.2),\n    },\n    ticketBox: {\n      display: 'flex',\n      flexDirection: 'column',\n      padding: theme.spacing(1),\n      marginLeft: theme.spacing(1),\n    },\n    ticketField: {\n      padding: theme.spacing(0),\n      margin: theme.spacing(0),\n      marginBottom: theme.spacing(0.5),\n    },\n  }),\n)\n\nconst Header = () => {\n  const classes = useStyles()\n  const { record } = useShowContext<TicketDetails>()\n  return (\n    <Box m={2}>\n      <Typography className={classes.header} variant=\"h5\" paragraph>\n        {record?.firstname} {record?.lastname}\n      </Typography>\n    </Box>\n  )\n}\n\nconst MappedChipField = <T extends unknown>({\n  mapper,\n  source,\n}: ChipFieldProps & { mapper: (value: T) => string }) => {\n  const record = useRecordContext<TicketDetails>()\n  const mappedValue = mapper(record[source as string])\n  return <Chip label={mappedValue} />\n}\n\nconst TicketsField = ({ label }: TextFieldProps) => {\n  const classes = useStyles()\n  const record = useRecordContext<TicketDetails>()\n  const mappedRecords = (record.tickets || []).map(\n    ({ id, ticketType, createdAt }) => ({\n      id,\n      ticketType: mapFromTicketType(ticketType),\n      createdAt,\n    }),\n  )\n  const fields = mappedRecords.map((mappedRecord) => (\n    <Paper\n      key={mappedRecord.id}\n      variant=\"elevation\"\n      className={classes.ticketBox}\n    >\n      <Labeled className={classes.ticketField} label=\"id\">\n        <TextField\n          className={classes.ticketField}\n          record={mappedRecord}\n          source=\"id\"\n        />\n      </Labeled>\n      <Labeled className={classes.ticketField} label=\"Typ wejściówki\">\n        <Chip label={mappedRecord.ticketType} className={classes.ticketField} />\n      </Labeled>\n      <Labeled className={classes.ticketField} label=\"Utworzono\">\n        <DateField\n          className={classes.ticketField}\n          record={mappedRecord}\n          source=\"createdAt\"\n          showTime\n        />\n      </Labeled>\n    </Paper>\n  ))\n  return (\n    <Labeled label={label}>\n      <Box display=\"flex\" flexWrap=\"wrap\" flexDirection=\"row\">\n        {fields}\n      </Box>\n    </Labeled>\n  )\n}\n\nexport const TicketDetailsView = (props: ShowProps) => (\n  <>\n    <Show {...props}>\n      <>\n        <Header />\n        <Divider />\n        <TabbedShowLayout syncWithLocation={false}>\n          <Tab label=\"Bilet\">\n            <TextField label=\"Impreza\" source=\"eventName\" />\n            <TextField label=\"Pesel\" source=\"pesel\" />\n            <TextField label=\"Wariant\" source=\"variantName\" />\n            <Labeled label=\"Rodzaj wejściówki\">\n              <MappedChipField\n                source=\"bookingType\"\n                mapper={mapFromBookingType}\n              />\n            </Labeled>\n            <DateField\n              label=\"Aktywny od\"\n              source=\"activeFrom\"\n              emptyText=\"N/A\"\n              showTime\n            />\n            <DateField\n              label=\"Aktywny do\"\n              source=\"activeTo\"\n              emptyText=\"N/A\"\n              showTime\n            />\n            <TicketsField label=\"Wejściówki:\" />\n            <DateField label=\"Utworzono\" source=\"createdAt\" showTime />\n            <DateField label=\"Zmodyfikowano\" source=\"modifiedAt\" showTime />\n          </Tab>\n        </TabbedShowLayout>\n        <Divider />\n        <Box p={1} display=\"flex\" justifyContent=\"flex-end\">\n          <AccessButtons />\n        </Box>\n      </>\n    </Show>\n  </>\n)\n","import React from 'react'\nimport ReceiptIcon from '@material-ui/icons/Receipt'\nimport { Admin, Resource } from 'react-admin'\nimport { Dashboard } from './main/Dashboard'\nimport { customTheme } from './custom.theme'\nimport { providersFactory } from './core/providers.factory'\nimport { TicketInfoList } from './main/ticket-info/TicketInfoList'\nimport { TicketDetailsView } from './main/ticket-details/TicketDetailsView'\nimport { ResourceName } from './core/ResourceName'\n\n// TODO: merge customers and products view\n// TODO: chage dashboard name - https://stackoverflow.com/questions/59879156/react-admin-how-to-change-the-dashboard-name-in-the-menu/59880647#59880647\n// TODO: create browser router - https://marmelab.com/react-admin/Admin.html#history\n// TODO: simple view for logs with only one filter\n// TODO: handle InfoDetailsView buttons events\n// TODO: multiple results DDEAF42C\nconst App = () => {\n  const { authProvider, dataProvider } = providersFactory(process.env.NODE_ENV)\n  return (\n    <Admin\n      theme={customTheme}\n      dashboard={Dashboard}\n      authProvider={authProvider}\n      dataProvider={dataProvider}\n    >\n      <Resource\n        options={{ label: 'Bilety' }}\n        icon={ReceiptIcon}\n        name={ResourceName.TICKET_INFO}\n        list={TicketInfoList}\n      />\n      <Resource\n        options={{ label: 'Wejściówka' }}\n        name={ResourceName.TICKET_DETAILS}\n        show={TicketDetailsView}\n      />\n    </Admin>\n  )\n}\n\nexport default App\n","import { AuthProvider, DataProvider, LegacyDataProvider } from 'react-admin'\nimport fakeDataProvider from './fake/fake-data.provider'\nimport fakeAuthProvider from './fake/fake-auth.provider'\nimport authProvider from './auth/auth.provider'\nimport dataProvider from './data.provider'\n\ninterface Providers {\n  readonly authProvider: AuthProvider\n  readonly dataProvider: DataProvider | LegacyDataProvider\n}\n\nexport const providersFactory = (\n  env: 'development' | 'test' | 'production',\n): Providers => {\n  switch (env) {\n    case 'production':\n      return {\n        authProvider,\n        dataProvider,\n      }\n    case 'development':\n      return {\n        authProvider,\n        dataProvider,\n      }\n    default:\n      return {\n        authProvider: fakeAuthProvider,\n        dataProvider: fakeDataProvider,\n      }\n  }\n}\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}