{"version":3,"sources":["core/constants/reducer.actions.ts","core/common/theme.reducer.ts","core/ResourceName.ts","core/enum/TicketType.ts","core/enum/BookingType.ts","core/enum/BookingDisabledOption.ts","core/enum/CustomerDocumentType.ts","core/enum/Gender.ts","core/fake/providers/fake-access-usings.provider.ts","core/fake/providers/fake-bookings.provider.ts","core/fake/providers/fake-logs.provider.ts","core/fake/providers/fake-stats-overall-view-list.provider.ts","core/fake/providers/fake-stats-overall-view.provider.ts","core/fake/providers/fake-ticket-details.provider.ts","core/enum/AccessActivePeriodStartingOptions.ts","core/enum/AccessBonuses.ts","core/enum/DayOfWeek.ts","core/fake/providers/fake-ticket-info.provider.ts","core/fake/providers/fake-tickets.provider.ts","core/fake/providers/fake-accesses.provider.ts","core/enum/EventStatus.ts","core/fake/providers/fake-events.provider.ts","core/enum/DeviceDirection.ts","core/fake/providers/fake-customer-details.provider.ts","core/fake/providers/fake-customer-info.provider.ts","core/fake/providers/fake-access-dates.provider.ts","core/fake/providers/fake-companies.provider.ts","core/fake/providers/fake-objects.provider.ts","core/fake/providers/fake-palms.provider.ts","core/fake/providers/fake-engines.provider.ts","core/fake/providers/fake-entrances.provider.ts","core/fake/fake-data.provider.ts","core/fake/providers/fake-auth.provider.ts","core/common/header.parser.ts","core/common/fetch.utils.ts","core/api-urls.ts","core/auth/withSyncPermissions.ts","core/auth/auth.provider.ts","core/access-usings/access-usings-sort.mapper.ts","core/auth/Authority.ts","core/access-usings/access-usings-filter.mapper.ts","core/access-usings/access-usings.provider.ts","core/bookings/booking-filter.mapper.ts","core/bookings/booking-sort.mapper.ts","core/bookings/bookings.mapper.ts","core/bookings/bookings.provider.ts","core/logs/log-filter.mapper.ts","core/logs/log-sort.mapper.ts","core/logs/extended-logs.mapper.ts","core/logs/extended-logs.provider.ts","core/common/filter.values.ts","core/stats/overall-view/overall-view-list-sort.mapper.ts","core/stats/overall-view/overall-view-list.mapper.ts","core/stats/overall-view/overall-view-list.provider.ts","core/stats/overall-view/overall-view.mapper.ts","core/stats/overall-view/overall-view.provider.ts","core/common/condition.builder.ts","core/common/mapper.utils.ts","core/ticket-details/ticket-details.mapper.ts","core/ticket-details/ticket-details.provider.ts","core/ticket-info/ticket-info.mapper.ts","core/ticket-info/ticket-info-sort.mapper.ts","core/ticket-info/ticket-info-filter.mapper.ts","core/ticket-info/ticket-info.provider.ts","core/tickets/tickets.provider.ts","core/accesses/access-filter.mapper.ts","core/accesses/access-sort.mapper.ts","core/accesses/access.provider.ts","core/events/event-sort.mapper.ts","core/events/event.provider.ts","core/customer-details/customer-details.provider.ts","core/customer-info/customer-info-filter.mapper.ts","core/customer-info/customer-info-sort.mapper.ts","core/customer-info/customer-info.provider.ts","core/access-dates/access-dates-filter.mapper.ts","core/access-dates/access-dates-sort.mapper.ts","core/access-dates/access-dates.provider.ts","core/companies/company-filter.mapper.ts","core/companies/company-sort.mapper.ts","core/companies/companies.provider.ts","core/objects/object-filter.mapper.ts","core/objects/object-sort.mapper.ts","core/objects/objects.provider.ts","core/devices/palms/palm-filter.mapper.ts","core/devices/palms/palm-sort.mapper.ts","core/devices/palms/palms.provider.ts","core/devices/engines/engine-filter.mapper.ts","core/devices/engines/engine-sort.mapper.ts","core/devices/engines/engines.provider.ts","core/entrances/entrance-sort.mapper.ts","core/entrances/entrance.provider.ts","core/data.provider.ts","core/i18n.provider.ts","app.theme.ts","main/common/AppSubmenu.tsx","assets/icons/EngineDevice.js","main/common/AppMenu.tsx","main/common/AppLayout.tsx","main/common/SearchInput.tsx","main/common/FindCustomerByInfo.tsx","main/common/FindUserByTicket.tsx","core/auth/authority.mapper.ts","core/common/dashboard.ts","main/hooks/useHasAuthority.ts","main/events/EventList.tsx","main/common/Pagination.tsx","main/logs/DateFilterInput.tsx","main/logs/LogsComponents.ts","main/logs/LogRow.tsx","core/common/visual.utils.ts","main/logs/LogGrid.tsx","main/logs/LogList.tsx","main/Dashboard.tsx","core/ticket-details/toggle-button.ts","main/common/Configuration.tsx","main/common/routes.tsx","main/common/MaskField.tsx","core/common/mask.utils.ts","main/ticket-info/TicketInfoList.tsx","core/ticket-details/ticket-details-values.mapper.ts","main/ticket-details/TicketDetailsHeader.tsx","main/ticket-details/TicketDetailsTicketsField.tsx","core/ticket-details/toggle-access-button.reducer.ts","core/enum/Multiplicities.ts","main/ticket-details/ToggleAccessButton.tsx","core/ticket-details/toggle-ticket-button.reducer.ts","main/ticket-details/ToggleTicketButton.tsx","main/ticket-details/accesses/AccessList.tsx","main/ticket-details/TicketDetailsComponents.tsx","main/ticket-details/accesses/AccessUsingsList.tsx","main/ticket-details/accesses/AccessDatesList.tsx","main/ticket-details/accesses/AccessShow.tsx","main/ticket-details/TicketDetailsView.tsx","main/stats/overall-view/OverallViewList.tsx","main/stats/overall-view/OverallView.tsx","main/events/EventShow.tsx","main/events/EventEdit.tsx","main/customer-info/CustomerInfoList.tsx","main/customer-details/CustomerBookingsList.tsx","main/customer-details/CustomerDetailsView.tsx","main/devices/palms/PalmList.tsx","main/devices/palms/PalmDialogs.tsx","main/devices/palms/PalmShow.tsx","main/devices/palms/PalmEdit.tsx","core/enum/StanbyMode.ts","main/devices/engines/EngineList.tsx","main/devices/engines/EngineDialogs.tsx","main/devices/engines/EngineShow.tsx","main/devices/engines/EngineEdit.tsx","main/events/EventCreate.tsx","main/Resources.tsx","core/common/dashboard.reducer.ts","App.tsx","core/providers.factory.ts","reportWebVitals.ts","i18n.init.ts","index.tsx"],"names":["CHANGE_THEME","UPDATE_DASHBOARD","identity","localStorage","getItem","initialState","darkMode","themeReducer","ResourceName","state","action","type","setItem","TicketType","BookingType","BookingDisabledOption","CustomerDocumentType","Gender","provider","updateMany","resource","params","a","Promise","resolve","data","create","id","update","fakeLogs","date","ticketCode","bookingId","deviceName","text","color","getList","total","length","fakeStatsOverallViewList","name","dateStart","dateEnd","eventName","capacity","sold","entered","objects","getOne","found","find","v","reject","Error","AccessActivePeriodStartingOptions","AccessBonuses","DayOfWeek","fakeTicketDetailsList","firstname","lastname","pesel","variantName","accessesIds","bookingType","NORMAL","activeFrom","activeTo","tickets","ticketType","K","accessUsings","createdAt","M","modifiedAt","bookingDisabled","STORNO","company","birthdate","documentType","ID_CARD","documentNumber","nationality","gender","MALE","seatId","blockId","accesses","objectName","tribuneName","blockName","rowNumber","fakeTicketInfoList","eventId","eventDate","fakeTickets","active","accessUsingsIds","EventStatus","fakeAccesses","bonus","N","entranceId","allowReenter","multipleEntry","multiple","usePriority","isTicketUnlockWithNextDay","releaseTime","releaseDayOfWeek","FRIDAY","releaseDayOfMonth","delay","activePeriod","activePeriodStartingFrom","FIRST_USE","variantsIds","accessDatesIds","createdById","modifiedById","createdByName","modifiedByName","DeviceDirection","fakeEvents","status","INACTIVE","externalId","infix","objectsIds","fakeCustomerDetailsList","bookingsIds","c","fakeCustomerInfoList","fakeCompanies","usersIds","eventsIds","fakeObjects","tribunesIds","fakePalms","fakeEngines","fakeEntrances","dataProviders","ACCESS_DATES","fakeAccessDatesProvider","ACCESSES","fakeAccessesProvider","ACCESS_USINGS","fakeAccessUsingsProvider","BOOKINGS","fakeBookingsProvider","COMPANIES","fakeCompaniesProvider","CUSTOMER_DETAILS","fakeCustomerDetailsProvider","CUSTOMER_INFO","fakeCustomerInfoProvider","ENGINES","fakeEnginesProvider","ENTRANCES","fakeEntrancesProvider","EVENTS","fakeEventsProvider","LOGS","fakeLogsProvider","OBJECTS","fakeObjectsProvider","PALMS","fakePalmsProvider","TICKETS","fakeTicketsProvider","TICKET_INFO","fakeTicketInfoProvider","TICKET_DETAILS","fakeTicketDetailsProvider","TICKET_LOGS","STATS_OVERALL_VIEW","fakeStatsOverallViewProvider","STATS_OVERALL_VIEW_LIST","fakeStatsOverallViewListProvider","fetchType","sanitizeFetchType","authProvider","login","logout","checkError","checkAuth","getPermissions","getIdentity","fullName","contentRangeParser","headerValue","split","rangeFrom","summarySecondPartSplit","rangeTo","parseInt","getToken","baseHeaders","authHeaders","token","Authorization","getWithHeaders","url","headers","fetchUtils","fetchJson","method","Headers","then","json","postWithHeaders","body","JSON","stringify","get","baseUrl","path","getWithToken","getByConditions","getWithPagination","range","post","patch","put","API_V1","process","AUTH_URL","ROLES_URL","ACCESSES_URL","BOOKINGS_URL","CUSTOMERS_URL","EVENTS_URL","EXTENDED_LOGS_URL","TICKETS_URL","VARIANTS_URL","SEATS_URL","BLOCKS_URL","TRIBUNES_URL","OBJECTS_URL","ENGINES_URL","PALMS_URL","COMPANIES_URL","USERS_URL","ENTRANCES_URL","areRolesOutOfSync","local","remote","size","every","value","has","validateRoles","dataProvider","rolesFromRemote","rolesFromLocalStorage","console","error","Set","withSynchronizedPermissions","Proxy","target","Array","from","roleDtos","roles","map","join","username","password","r","removeItem","Authority","mapping","direction","ticketId","accessId","lambdaParameter","getFilterParams","filter","Object","keys","entries","key","getFilterMapper","mapper","reduce","p","ids","pendingUpdates","auId","req","all","au","ticketIds","accessIds","request","flatMap","Date","toISOString","IN","verifierDeviceId","sort","field","order","pagination","page","perPage","filterParams","toString","queryParams","push","pathParams","tId","ticket","mapToBookings","events","variants","disabled","customerId","variantId","ticketsIds","foundEvent","event","foundVariant","variant","eventDateStart","booking","eventIds","variantIds","mapToExtendedLog","locale","scheme","device","logEntry","language","includes","partialValues","partialFilterValues","extendedLogs","dto","ALL_RESULTS","mapToEventOverallView","overallViewList","calculateCapacity","seats","bookings","b","mapToTribuneOverallView","tribune","blocks","enteredBookingIds","blocksIds","block","filteredSeats","s","filteredBookingIds","concat","filteredBookings","book","filteredEnteredBookingIds","enteredBookingId","filteredEnteredBookings","enteredBookings","soldNormal","enteredNormal","soldAbo","ABO","enteredAbo","soldInfix","INFIX","enteredInfix","soldService","SERVICE","enteredService","soldPoints","POINTS","enteredPoints","mapToBlockOverallView","mapToOverallView","selectedEvent","tribunes","o","object","filteredTribunes","t","objectId","filteredBlocks","filteredSeatIds","seatsIds","tribuneId","mapToObjectOverallView","pendingSelectedEvent","pendingObjects","pendingTribunes","pendingBlocks","pendingSeats","bookingsCondition","pendingBookings","pendingEnteredBookings","overallViewData","buildFilterByIdsCondition","firstId","prev","curr","toMapById","values","Map","toUniqueValues","mapToTicketDetails","seat","accessUsingById","mapToTicket","rowAlias","fetchTicketsWithAccessUsings","accessUsingIds","pendingCustomer","pendingEvent","pendingVariant","pendingTicketsWithAccessUsings","customer","mapToTicketBaseInfoList","customers","bookingById","customerById","eventById","mapToTicketBaseInfo","getByUniqueIds","uniqueIds","bookingIds","customerIds","pendingCustomers","pendingEvents","ticketBaseInfoList","filterByTicketCodeCondition","access","modifiedBy","createdBy","userName","getTime","getTimezoneOffset","toJSON","previousData","eventUpdate","previousName","previousDateStart","previousDateEnd","activate","undefined","deactivate","getCompaniesList","companies","attachCompanies","eventCompanies","detachCompanies","attachObjects","eventObjects","detachObjects","getDevicesList","devices","attachDevices","eventDevices","detachDevices","info","q","categoryId","isWatched","lastRefresh","onlineInfixCeck","multiplicity","lock","palmId","lockName","unlock","setMobileDeviceId","mobileDeviceId","resetMobileDeviceId","attachEvents","detachEvents","attachEntrances","entrancesIds","detachEntrances","address","engineEvents","engineEntrances","setTSCanCredentials","removeTSCanCredentials","setStandbyMode","note","accessDatesProvider","accessesProvider","accessUsingsProvider","bookingsProvider","companiesProvider","customersDetailsProvider","customersInfoProvider","engineProvider","entrancesProvider","eventsProvider","logsProvider","objectsProvider","palmProvider","ticketsProvider","ticketInfoProvider","ticketDetailsProvider","statsOverallViewProvider","statsOverallViewListProvider","translate","options","i18n","changeLocale","changeLanguage","getLocale","overriddenTheme","defaultTheme","typography","fontFamily","body1","fontWeight","body2","h5","LightTheme","palette","primary","deepPurple","secondary","green","DarkTheme","light","main","dark","contrastText","useStyles","makeStyles","theme","icon","minWidth","spacing","sidebarIsOpen","transition","paddingLeft","sidebarIsClosed","SubMenu","props","handleToggle","isOpen","children","sidebarOpen","useSelector","admin","ui","classes","header","MenuItem","button","onClick","ListItemIcon","className","ExpandMore","Typography","Tooltip","title","placement","Collapse","in","timeout","unmountOnExit","component","disablePadding","createSvgIcon","React","d","open","width","closed","AppMenu","avRes","useState","menuStats","menuDevices","setOpen","availableResources","getResources","useTranslate","menu","style","userSelect","DashboardMenuItem","MenuItemLink","to","primaryText","leftIcon","Receipt","Person","List","Event","ViewComfy","Sort","transform","anyDeviceResourcesAvailable","VideoLabel","PhoneAndroid","EngineDevice","flex","textOverflow","whiteSpace","overflow","AppUserMenu","UserMenu","Settings","AppTopBar","AppBar","userMenu","AppLayout","Layout","appBar","RoundInputBox","withStyles","root","borderRadius","marginLeft","display","flexDirection","border","borderColor","Box","RoundInputBoxBtn","background","borderTopLeftRadius","borderBottomLeftRadius","margin","Button","RoundInputBoxFC","marginTop","FormControl","SearchInput","label","onValue","inputError","setInputError","inputValue","setInputValue","handleClick","Input","disableUnderline","placeholder","onInput","onKeyDown","ev","FormHelperText","FindCustomerByInfo","history","useHistory","notify","useNotify","setError","useMutation","mutate","loading","fetchCustomers","useCallback","GET_LIST","payload","returnPromise","replace","onlyCustomer","pathname","search","message","CardHeader","CardContent","FindUserByTicket","fetchTickets","onlyTicket","DashboardItem","VIEW_LOGS","VIEW_STATS_OVERALL_VIEW","hasAuthorityWithGivenPermissions","authority","permissions","permissionSet","mapAuthorityToRequiredPermissions","reqPerms","useHasAuthority","usePermissions","loaded","actionColumnsWithoutPadding","padding","ListFilters","Filter","TextInput","source","alwaysOn","LastEvents","hasAuthority","Datagrid","FunctionField","render","record","toLowerCase","Link","IconButton","EventGrid","compactMode","useListContext","rowClick","TextField","DateField","showTime","EventList","actions","filters","exporter","Pagination","rowsPerPageOptions","MobilePostPagination","setPage","setPerPage","nbPages","Math","ceil","Toolbar","Grid","container","item","xs","Paper","elevation","height","justifyContent","alignItems","Select","textAlign","onChange","e","ButtonGroup","createStyles","verticalAlign","marginBottom","DateFilterInput","defaultFromDate","now","setHours","defaultToDate","dateFrom","setDateFrom","dateTo","setDateTo","useField","input","meta","touched","convertedDate","substring","defaultValue","parse","helperText","alignSelf","BookingButton","backgroundColor","boxShadow","FullWidthButton","CenterGrid","NoPaddingCell","paddingBottom","paddingTop","TableCell","LogRow","noBooking","isDarkMode","useEffect","defineStyle","hexcolor","substr","TableRow","Hidden","mdUp","smDown","xlDown","sortable","colSpan","LogGrid","useListSortContext","currentSort","setSort","handleSortChange","sortBy","HeaderCell","startIcon","TableContainer","Table","TableHead","toUpperCase","TableBody","SelectInput","choices","LogList","listProps","useTheme","smallScreen","useMediaQuery","breakpoints","down","useLocale","INACTIVE_COMPONENTS_KEY","ToggleType","letterSpacing","lastLogs","TicketFinder","Card","CustomerFinder","LastLogs","ResourceContextProvider","basePath","Dashboard","inactiveComponents","dashboard","isItemActive","inactiveItems","titleTypographyProps","sm","TICKET_FINDER","LAST_EVENTS","CUSTOMER_FINDER","LAST_LOGS","select","compsContainer","DashboardItemSwitch","dashboardItem","dispatch","useDispatch","FormControlLabel","control","Switch","checked","labelPlacement","DashboardCustomization","Configuration","setLocale","useSetLocale","Title","exact","MaskField","rest","useRecordContext","properRecord","word","threshold","firstChars","lastChars","slice","restCharsLength","repeat","maskMiddlePart","TicketInfoGrid","filterValues","m","paragraph","Divider","TicketInfoList","bookingTypeMapping","ticketTypeMapping","Z","P","U","R","mapFromBookingType","mapFromTicketType","TicketDetailsHeader","useShowContext","ticketBox","ticketField","TicketDetailsTicketsField","fields","mappedRecord","Labeled","Chip","flexWrap","Multiplicities","blockMutation","ticketDetails","CREATE","unblockMutation","activeAccessUsingIds","UPDATE_MANY","blockAccessButtonInitialState","DISABLED","toggleAccessButtonReducer","BLOCK","mutateQuery","UNBLOCK","common","white","ToggleAccessButton","useReducer","mutationLoading","refresh","useRefresh","some","query","blockTicketButtonInitialState","toggleTicketButtonReducer","mutateParam","ADMIN","ToggleTicketButton","UPDATE","AccessGrid","setSelected","cursor","hover","AccessList","up","fontSize","ButtonBase","BackButton","writingMode","textOrientation","BackButtonText","AccessUsingsGrid","patchAccess","AccessUsingsList","AccessDatesRow","dayOfWeek","timeFrom","timeTo","AccessDatesGrid","AccessDatesList","TabButton","selected","change","AccessDetails","NO_LIMIT","AccessDates","AccessUses","AccessShow","selectedTab","setSelectedTab","handleTabChange","prop","Show","MappedChipField","mappedValue","AccessDetailsView","selectedAccess","setSelectedAccess","paddingY","ProfileDetailsView","Tab","addLabel","StatusButtons","TicketMainView","TicketLogsView","TicketDetailsView","TabbedShowLayout","syncWithLocation","OverallViewGrid","OverallViewList","noBottomBorder","borderBottom","quarterWidth","ViewTitle","description","BlockGrid","firstColumnEntries","secondColumnEntries","thirdColumnEntries","TribuneGrid","TribuneHeader","ArrayField","expand","isRowExpandable","ObjectGrid","OverallView","ShowTitle","useMemo","Attachments","refetchList","refetch","useQuery","toLocaleLowerCase","allFiltered","refetchAllFiltered","getAttachmentsFetchType","enabled","attachedDto","refetchAttachedIds","isAttached","attachmentId","companiesIds","verifierDevicesIds","handleAttach","idsToAttach","handleDetach","idsToDetach","Checkbox","GeneralEditButton","handleActivation","IN_TRANSITION","ACTIVE","marginRight","EditButton","EventShow","EditTitle","EditToolbar","SaveButton","ShowButton","Cancel","EventEdit","Edit","SimpleForm","redirect","toolbar","DateTimeInput","CustomerInfoGrid","smallDevice","CustomerInfoList","BookingGrid","BookingList","CustomerBookingsView","CustomerLogsView","CustomerTabs","bookingPresent","CustomerDetailsView","PalmList","ConfirmDialog","confirm","cancel","Dialog","DialogTitle","DialogActions","DeviceIdModal","close","setValue","errorText","setErrorText","confirmOpen","setConfirmOpen","palm","handleClose","handleSetMobileDeviceId","onClose","DialogContent","fullWidth","LockModal","handleLock","GeneralActions","deviceIdModalOpen","setDeviceIdModalOpen","lockModalOpen","setLockModalOpen","unlockDialogOpen","setUnlockDialogOpen","resetIdDialogOpen","setResetIdDialogOpen","attachedList","PalmTabs","day","month","year","hour","minute","PalmShow","StanbyMode","HidingField","useEditContext","PalmEdit","hasShow","BooleanInput","OUT","INFO","SINGLE","MULTIPLE","CHECK_ALL","EngineList","dialogProperty","SetTSCanCredentialsModal","loginValue","setLoginValue","useStateRef","loginError","setLoginError","loginErrorCurrentValue","loginErrorText","setLoginErrorText","passwordValue","setPasswordValue","passwordError","setPasswordError","passwordErrorCurrentValue","passwordErrorText","setPasswordErrorText","engine","handleSetTSCanCredentials","current","engineId","autoComplete","SetStandbyModeModal","handleSetStandbyMode","stanbyMode","ALWAYS_ON","ALWAYS_OFF","SENSOR","standbyModeModalOpen","setStandbyModeModalOpen","removeTSCanCredentialsDialogOpen","setRemoveTSCanCredentialsDialogOpen","tsCanCredentialsModalOpen","setTSCanCredentialsModalOpen","handleRemoveTSCanCredentials","EngineTabs","EngineShow","EngineEdit","CreateTitle","ObjectsInput","objectIds","EventCreate","Create","TabbedForm","FormTab","isRequired","validate","required","generateResourcesBasedOnPermissions","Resource","ReceiptIcon","list","show","PersonIcon","edit","ViewComfyIcon","save","dashboardReducer","App","env","i18nProvider","fakeAuthProvider","fakeDataProvider","providersFactory","Admin","customReducers","customRoutes","routes","layout","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","lng","use","initReactI18next","init","fallbackLng","debug","interpolation","escapeValue","resources","pl","translation","plTranslation","en","enTranslation","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.50e87152.chunk.js","sourcesContent":["export const CHANGE_THEME = 'change-theme'\nexport const UPDATE_DASHBOARD = 'dashboard/update'\n","import { Action } from 'redux'\nimport { CHANGE_THEME } from '../constants/reducer.actions'\n\nconst identity = localStorage.getItem('username')\n\nexport type ThemeState = {\n  theme: {\n    darkMode: 'light' | 'dark'\n  }\n}\n\nconst initialState = {\n  darkMode: localStorage.getItem(`${identity}.darkMode`) === 'dark' ? 'dark' : 'light',\n}\n\nfunction themeReducer(state = initialState, action: Action<any>) {\n    if (action.type === CHANGE_THEME) {\n        if (state.darkMode === 'dark') localStorage.setItem(`${identity}.darkMode`, 'light')\n        else localStorage.setItem(`${identity}.darkMode`, 'dark')\n        return {\n            ...state,\n            darkMode: state.darkMode === 'dark' ? 'light' : 'dark'\n        }\n    }\n    return state\n}\n\nexport default themeReducer","export enum ResourceName {\n  ACCESS_DATES = 'access-dates',\n  ACCESSES = 'accesses',\n  ACCESS_USINGS = 'access-usings',\n  BOOKINGS = 'bookings',\n  ENGINES = 'engines',\n  EVENTS = 'events',\n  COMPANIES = 'companies',\n  CUSTOMER_DETAILS = 'customer-details',\n  CUSTOMER_INFO = 'customer-info',\n  LOGS = 'logs',\n  OBJECTS = 'objects',\n  PALMS = 'palms',\n  TICKETS = 'tickets',\n  TICKET_DETAILS = 'ticket-details',\n  TICKET_INFO = 'ticket-info',\n  TICKET_LOGS = 'ticket-logs',\n  STATS_OVERALL_VIEW_LIST = \"stats-overall-view-list\",\n  STATS_OVERALL_VIEW = \"stats-overall-view\",\n  ENTRANCES = 'entrances'\n}\n","export enum TicketType {\n  K = 'K',\n  M = 'M',\n  Z = 'Z',\n  N = 'N',\n  P = 'P',\n  U = 'U',\n  R = 'R',\n}\n","export enum BookingType {\n  NORMAL = 'NORMAL',\n  ABO = 'ABO',\n  INFIX = 'INFIX',\n  SERVICE = 'SERVICE',\n  POINTS = 'POINTS',\n}\n","export enum BookingDisabledOption {\n  ADMIN = 'ADMIN',\n  BAN = 'BAN',\n  STORNO = 'STORNO',\n  MISTAKE = 'MISTAKE',\n}\n","export enum CustomerDocumentType {\n  OTHER = 'OTHER',\n  ID_CARD = 'ID_CARD',\n  PASSPORT = 'PASSPORT',\n  STUDENT_CARD = 'STUDENT_CARD',\n  SCHOOL_ID = 'SCHOOL_ID',\n  DRIVING_LICENSE = 'DRIVING_LICENSE',\n}\n","export enum Gender {\n  MALE = 'MALE',\n  FEMALE = 'FEMALE',\n}\n","import { CreateResult, DataProvider, UpdateManyResult } from 'react-admin'\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  updateMany: async (resource, params): Promise<UpdateManyResult> =>\n    Promise.resolve({\n      data: [1],\n    }),\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  create: async (resource, params): Promise<CreateResult<unknown>> =>\n    Promise.resolve({\n      data: { id: 1 },\n    }),\n} as DataProvider\n\nexport default provider\n","import { DataProvider, UpdateResult } from 'react-admin'\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  update: async (resource, params): Promise<UpdateResult<unknown>> =>\n    Promise.resolve({\n      data: { id: 1 },\n    }),\n} as DataProvider\n\nexport default provider\n","import { DataProvider } from 'react-admin'\nimport { ExtendedLog } from '../../logs/extended-log'\n\nconst fakeLogs: ExtendedLog[] = [\n  {\n    id: 1,\n    date: '2021-07-15T08:50:27.2054',\n    ticketCode: 'A',\n    bookingId: 52815,\n    deviceName: 'Device name',\n    text: 'MF',\n    color: 'transparent',\n  },\n  {\n    id: 2,\n    date: '2021-07-15T08:50:27.2054',\n    ticketCode: 'A',\n    bookingId: 52816,\n    deviceName: 'Device name',\n    text: 'MF',\n    color: 'transparent',\n  },\n  {\n    id: 3,\n    date: '2021-07-15T08:50:27.2054',\n    ticketCode: 'A',\n    bookingId: 1111,\n    deviceName: 'Device name',\n    text: 'MF',\n    color: 'transparent',\n  },\n  {\n    id: 4,\n    date: '2021-07-15T08:50:27.2054',\n    ticketCode: 'A',\n    bookingId: 11112,\n    deviceName: 'Device name',\n    text: 'MF',\n    color: 'transparent',\n  },\n  {\n    id: 5,\n    date: '2021-07-15T08:50:27.2054',\n    ticketCode: 'A',\n    bookingId: 16612,\n    deviceName: 'Device name',\n    text: 'MF',\n    color: 'transparent',\n  },\n  {\n    id: 6,\n    date: '2021-07-15T08:50:27.2054',\n    ticketCode: 'A',\n    bookingId: 167782,\n    deviceName: 'Device name',\n    text: 'MF',\n    color: 'transparent',\n  },\n  {\n    id: 7,\n    date: '2021-07-15T08:50:27.2054',\n    ticketCode: 'A',\n    bookingId: 122782,\n    deviceName: 'Device name',\n    text: 'MF',\n    color: 'transparent',\n  },\n  {\n    id: 8,\n    date: '2021-07-15T08:50:27.2054',\n    ticketCode: 'A',\n    bookingId: 189782,\n    deviceName: 'Device name',\n    text: 'MF',\n    color: 'transparent',\n  },\n  {\n    id: 9,\n    date: '2021-07-15T08:50:27.2054',\n    ticketCode: 'A',\n    bookingId: 183332,\n    deviceName: 'Device name',\n    text: 'MF',\n    color: 'transparent',\n  },\n  {\n    id: 10,\n    date: '2021-07-15T08:50:27.2054',\n    ticketCode: 'A',\n    bookingId: 656565,\n    deviceName: 'Device name',\n    text: 'MF',\n    color: 'transparent',\n  },\n]\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getList: (resource, params) =>\n    Promise.resolve({ data: fakeLogs, total: fakeLogs.length }),\n} as DataProvider\n\nexport default provider\n","import { DataProvider } from 'react-admin'\nimport { EventOverallView } from '../../stats/overall-view/event-overall-view'\n\nconst fakeStatsOverallViewList: EventOverallView[] = [\n  {\n    id: 1,\n    name: \"\",\n    dateStart: '2021-07-13T15:11:06.771267',\n    dateEnd: '2021-07-13T15:11:06.771267'\n  },\n  {\n    id: 2,\n    name: \"\",\n    dateStart: '2021-07-13T15:11:06.771267',\n    dateEnd: '2021-07-13T15:11:06.771267'\n  },\n  {\n    id: 3,\n    name: \"\",\n    dateStart: '2021-07-13T15:11:06.771267',\n    dateEnd: '2021-07-13T15:11:06.771267'\n  },\n  {\n    id: 4,\n    name: \"\",\n    dateStart: '2021-07-13T15:11:06.771267',\n    dateEnd: '2021-07-13T15:11:06.771267'\n  },\n  {\n    id: 5,\n    name: \"\",\n    dateStart: '2021-07-13T15:11:06.771267',\n    dateEnd: '2021-07-13T15:11:06.771267'\n  },\n]\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getList: (resource, params) =>\n    Promise.resolve({ data: fakeStatsOverallViewList, total: fakeStatsOverallViewList.length }),\n} as DataProvider\n\nexport default provider","import { DataProvider } from 'react-admin'\nimport { DateTime } from '../../common/date-time'\nimport { OverallView } from '../../stats/overall-view/overall-view'\n\nconst fakeStatsOverallViewList: OverallView[] = [\n  {\n    id: 1,\n    eventName: \"\",\n    capacity: 0,\n    sold: 0,\n    entered: 0,\n    objects: [],\n    date: \"01-01-2021T00:00.00\" as DateTime\n  },\n  {\n    id: 2,\n    eventName: \"\",\n    capacity: 0,\n    sold: 0,\n    entered: 0,\n    objects: [],\n    date: \"01-01-2021T00:00.00\" as DateTime\n  },\n  {\n    id: 3,\n    eventName: \"\",\n    capacity: 0,\n    sold: 0,\n    entered: 0,\n    objects: [],\n    date: \"01-01-2021T00:00.00\" as DateTime\n  },\n  {\n    id: 4,\n    eventName: \"\",\n    capacity: 0,\n    sold: 0,\n    entered: 0,\n    objects: [],\n    date: \"01-01-2021T00:00.00\" as DateTime\n  },\n  {\n    id: 5,\n    eventName: \"\",\n    capacity: 0,\n    sold: 0,\n    entered: 0,\n    objects: [],\n    date: \"01-01-2021T00:00.00\" as DateTime\n  },\n]\n\nconst provider = {\n  getOne: (resource, { id }: { id: string }) => {\n    const found = fakeStatsOverallViewList.find((v) => `${v.id}` === id)\n    if (found) {\n      return Promise.resolve({\n        data: found,\n      })\n    }\n    return Promise.reject(new Error())\n  },\n} as DataProvider\n\nexport default provider","import { DataProvider } from 'react-admin'\nimport { TicketType } from '../../enum/TicketType'\nimport { TicketDetails } from '../../ticket-details/ticket-details'\nimport { BookingType } from '../../enum/BookingType'\nimport { BookingDisabledOption } from '../../enum/BookingDisabledOption'\nimport { CustomerDocumentType } from '../../enum/CustomerDocumentType'\nimport { Gender } from '../../enum/Gender'\n\nconst fakeTicketDetailsList: TicketDetails[] = [\n  {\n    id: 1,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    accessesIds: [10],\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56424,\n        ticketCode: '060000020917',\n        ticketType: TicketType.K,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n      {\n        id: 56425,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.M,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    bookingDisabled: BookingDisabledOption.STORNO,\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    documentNumber: \"12345678901\",\n    nationality: \"Poland\",\n    gender: Gender.MALE,\n    seatId: null,\n    blockId: null,\n    accesses: [],\n    objectName: null,\n    tribuneName: null,\n    blockName: null,\n    rowNumber: null\n  },\n  {\n    id: 2,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    accessesIds: [10],\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56424,\n        ticketCode: '060000020917',\n        ticketType: TicketType.K,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n      {\n        id: 56425,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.M,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    bookingDisabled: BookingDisabledOption.STORNO,\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    documentNumber: \"12345678901\",\n    nationality: \"Poland\",\n    gender: Gender.MALE,\n    seatId: null,\n    blockId: null,\n    accesses: [],\n    objectName: null,\n    tribuneName: null,\n    blockName: null,\n    rowNumber: null\n  },\n  {\n    id: 3,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    accessesIds: [10],\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56424,\n        ticketCode: '060000020917',\n        ticketType: TicketType.K,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n      {\n        id: 56425,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.M,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    bookingDisabled: null,\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    documentNumber: \"12345678901\",\n    nationality: \"Poland\",\n    gender: Gender.MALE,\n    seatId: null,\n    blockId: null,\n    accesses: [],\n    objectName: null,\n    tribuneName: null,\n    blockName: null,\n    rowNumber: null\n  },\n  {\n    id: 4,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    accessesIds: [10],\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56424,\n        ticketCode: '060000020917',\n        ticketType: TicketType.K,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n      {\n        id: 56425,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.M,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    bookingDisabled: null,\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    documentNumber: \"12345678901\",\n    nationality: \"Poland\",\n    gender: Gender.MALE,\n    seatId: null,\n    blockId: null,\n    accesses: [],\n    objectName: null,\n    tribuneName: null,\n    blockName: null,\n    rowNumber: null\n  },\n  {\n    id: 5,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    accessesIds: [10],\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56424,\n        ticketCode: '060000020917',\n        ticketType: TicketType.K,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n      {\n        id: 56425,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.M,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    bookingDisabled: null,\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    documentNumber: \"12345678901\",\n    nationality: \"Poland\",\n    gender: Gender.MALE,\n    seatId: null,\n    blockId: null,\n    accesses: [],\n    objectName: null,\n    tribuneName: null,\n    blockName: null,\n    rowNumber: null\n  },\n  {\n    id: 6,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    accessesIds: [10],\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56424,\n        ticketCode: '060000020917',\n        ticketType: TicketType.K,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n      {\n        id: 56425,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.M,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    bookingDisabled: null,\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    documentNumber: \"12345678901\",\n    nationality: \"Poland\",\n    gender: Gender.MALE,\n    seatId: null,\n    blockId: null,\n    accesses: [],\n    objectName: null,\n    tribuneName: null,\n    blockName: null,\n    rowNumber: null\n  },\n  {\n    id: 7,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    accessesIds: [10],\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56424,\n        ticketCode: '060000020917',\n        ticketType: TicketType.K,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n      {\n        id: 56425,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.M,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    bookingDisabled: null,\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    documentNumber: \"12345678901\",\n    nationality: \"Poland\",\n    gender: Gender.MALE,\n    seatId: null,\n    blockId: null,\n    accesses: [],\n    objectName: null,\n    tribuneName: null,\n    blockName: null,\n    rowNumber: null\n  },\n  {\n    id: 8,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    accessesIds: [10],\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56424,\n        ticketCode: '060000020917',\n        ticketType: TicketType.K,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n      {\n        id: 56425,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.M,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    bookingDisabled: null,\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    documentNumber: \"12345678901\",\n    nationality: \"Poland\",\n    gender: Gender.MALE,\n    seatId: null,\n    blockId: null,\n    accesses: [],\n    objectName: null,\n    tribuneName: null,\n    blockName: null,\n    rowNumber: null\n  },\n  {\n    id: 9,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    accessesIds: [10],\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56424,\n        ticketCode: '060000020917',\n        ticketType: TicketType.K,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n      {\n        id: 56425,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.M,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    bookingDisabled: null,\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    documentNumber: \"12345678901\",\n    nationality: \"Poland\",\n    gender: Gender.MALE,\n    seatId: null,\n    blockId: null,\n    accesses: [],\n    objectName: null,\n    tribuneName: null,\n    blockName: null,\n    rowNumber: null\n  },\n  {\n    id: 10,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    accessesIds: [10],\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56424,\n        ticketCode: '060000020917',\n        ticketType: TicketType.K,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n      {\n        id: 56425,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.M,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    bookingDisabled: null,\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    documentNumber: \"12345678901\",\n    nationality: \"Poland\",\n    gender: Gender.MALE,\n    seatId: null,\n    blockId: null,\n    accesses: [],\n    objectName: null,\n    tribuneName: null,\n    blockName: null,\n    rowNumber: null\n  },\n]\n\nconst provider = {\n  getOne: (resource, { id }: { id: string }) => {\n    const found = fakeTicketDetailsList.find((v) => `${v.id}` === id)\n    if (found) {\n      return Promise.resolve({\n        data: found,\n      })\n    }\n    return Promise.reject(new Error())\n  },\n} as DataProvider\n\nexport default provider\n","export enum AccessActivePeriodStartingOptions {\n  NO_LIMIT = 'NO_LIMIT',\n  PURCHASE_DATE = 'PURCHASE_DATE',\n  FIRST_USE = 'FIRST_USE',\n}\n","export enum AccessBonuses {\n  N = 'N',\n  Y = 'Y',\n  Z = 'Z',\n  D = 'D',\n}\n","export enum DayOfWeek {\n  SUNDAY = 'Sunday',\n  MONDAY = 'Monday',\n  TUESDAY = 'Tuesday',\n  WEDNESDAY = 'Wednesday',\n  THURSDAY = 'Thursday',\n  FRIDAY = 'Friday',\n  SATURDAY = 'Saturday',\n}\n","import { DataProvider } from 'react-admin'\nimport { TicketType } from '../../enum/TicketType'\nimport { TicketInfo } from '../../ticket-info/ticket-info'\n\nconst fakeTicketInfoList: TicketInfo[] = [\n  {\n    id: 1,\n    firstname: 'Marek',\n    lastname: 'Pies',\n    pesel: '47120554776',\n    eventId: 0,\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    eventDate: '2021-07-15T08:50:27.2054',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n    bookingId: 0\n  },\n  {\n    id: 2,\n    firstname: 'Janek',\n    lastname: 'Krużganek',\n    pesel: '47120554776',\n    eventId: 0,\n    eventName: 'POGOŃ SZCZECIN 20/21',\n    eventDate: '2021-07-15T08:50:27.2054',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n    bookingId: 0\n  },\n  {\n    id: 3,\n    firstname: 'Wacław',\n    lastname: 'Rymski',\n    pesel: '9988711225',\n    eventId: 0,\n    eventName: 'POGOŃ SZCZECIN 20/21',\n    eventDate: '2021-07-15T08:50:27.2054',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n    bookingId: 0\n  },\n  {\n    id: 4,\n    firstname: 'Mirka',\n    lastname: 'Korzeń',\n    pesel: '56483978659',\n    eventId: 0,\n    eventName: 'POGOŃ SZCZECIN 20/21',\n    eventDate: '2021-07-15T08:50:27.2054',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n    bookingId: 0\n  },\n  {\n    id: 5,\n    firstname: 'Tis',\n    lastname: 'Lomasz',\n    pesel: '47120554776',\n    eventId: 0,\n    eventName: 'POGOŃ SZCZECIN 20/21',\n    eventDate: '2021-07-15T08:50:27.2054',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n    bookingId: 0\n  },\n  {\n    id: 6,\n    firstname: 'Bogdana',\n    lastname: 'Jaruzelska',\n    pesel: '47120554776',\n    eventId: 0,\n    eventName: 'POGOŃ SZCZECIN 20/21',\n    eventDate: '2021-07-15T08:50:27.2054',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n    bookingId: 0\n  },\n  {\n    id: 7,\n    firstname: 'Jeremi',\n    lastname: 'Pomidor',\n    pesel: '12345678900',\n    eventId: 0,\n    eventName: 'POGOŃ SZCZECIN 20/21',\n    eventDate: '2021-07-15T08:50:27.2054',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n    bookingId: 0\n  },\n  {\n    id: 8,\n    firstname: 'Roman',\n    lastname: 'Zoman',\n    pesel: '13243567890',\n    eventId: 0,\n    eventName: 'POGOŃ SZCZECIN 20/21',\n    eventDate: '2021-07-15T08:50:27.2054',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n    bookingId: 0\n  },\n  {\n    id: 9,\n    firstname: 'Bacha',\n    lastname: 'Kaszalot',\n    pesel: '98097612678',\n    eventId: 0,\n    eventName: 'POGOŃ SZCZECIN 20/21',\n    eventDate: '2021-07-15T08:50:27.2054',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n    bookingId: 0\n  },\n  {\n    id: 10,\n    firstname: 'Jadwiga',\n    lastname: 'Ogórek',\n    pesel: '47120554776',\n    eventId: 0,\n    eventName: 'POGOŃ SZCZECIN 20/21',\n    eventDate: '2021-07-15T08:50:27.2054',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n    bookingId: 0\n  },\n]\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getList: (resource, params) =>\n    Promise.resolve({\n      data: fakeTicketInfoList,\n      total: fakeTicketInfoList.length,\n    }),\n} as DataProvider\n\nexport default provider\n","import { DataProvider } from 'react-admin'\nimport { TicketDto } from '../../dto/ticket.dto'\nimport { TicketType } from '../../enum/TicketType'\n\nconst fakeTickets: TicketDto[] = [\n  {\n    id: 1,\n    ticketCode: 'A',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52815,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n  {\n    id: 2,\n    ticketCode: 'A',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52816,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n  {\n    id: 3,\n    ticketCode: '010000011492',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52817,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n  {\n    id: 4,\n    ticketCode: '411000006572',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52818,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n  {\n    id: 5,\n    ticketCode: '871000006824',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52819,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n  {\n    id: 6,\n    ticketCode: '370000011495',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52820,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n  {\n    id: 7,\n    ticketCode: '450000011501',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52821,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n  {\n    id: 8,\n    ticketCode: '630000011502',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52822,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n  {\n    id: 9,\n    ticketCode: '020000011503',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52823,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n  {\n    id: 10,\n    ticketCode: '310000011504',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52824,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n]\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getList: (resource, params) =>\n    Promise.resolve({ data: fakeTickets, total: fakeTickets.length }),\n} as DataProvider\n\nexport default provider\n","import { DataProvider } from 'react-admin'\nimport { Access } from '../../accesses/access'\nimport { AccessActivePeriodStartingOptions } from '../../enum/AccessActivePeriodStartingOptions'\nimport { AccessBonuses } from '../../enum/AccessBonuses'\nimport { DayOfWeek } from '../../enum/DayOfWeek'\n\nconst fakeAccesses: Access[] = [\n  {\n    id: 1,\n    name: 'access1',\n    bonus: AccessBonuses.N,\n    entranceId: 0,\n    allowReenter: false,\n    multipleEntry: false,\n    multiple: 0,\n    usePriority: 0,\n    isTicketUnlockWithNextDay: false,\n    releaseTime: '2021-07-15T08:50:27.2054',\n    releaseDayOfWeek: DayOfWeek.FRIDAY,\n    releaseDayOfMonth: 1,\n    delay: '',\n    activePeriod: '',\n    activePeriodStartingFrom: AccessActivePeriodStartingOptions.FIRST_USE,\n    variantsIds: [],\n    accessDatesIds: [],\n    createdById: 0,\n    modifiedById: 0,\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    createdByName: \"abc\",\n    modifiedByName: \"abc\"\n  },\n  {\n    id: 2,\n    name: 'access2',\n    bonus: AccessBonuses.N,\n    entranceId: 0,\n    allowReenter: false,\n    multipleEntry: false,\n    multiple: 0,\n    usePriority: 0,\n    isTicketUnlockWithNextDay: false,\n    releaseTime: '2021-07-15T08:50:27.2054',\n    releaseDayOfWeek: DayOfWeek.FRIDAY,\n    releaseDayOfMonth: 1,\n    delay: '',\n    activePeriod: '',\n    activePeriodStartingFrom: AccessActivePeriodStartingOptions.FIRST_USE,\n    variantsIds: [],\n    accessDatesIds: [],\n    createdById: 0,\n    modifiedById: 0,\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    createdByName: \"abc\",\n    modifiedByName: \"abc\"\n  },\n  {\n    id: 3,\n    name: 'access3',\n    bonus: AccessBonuses.N,\n    entranceId: 0,\n    allowReenter: false,\n    multipleEntry: false,\n    multiple: 0,\n    usePriority: 0,\n    isTicketUnlockWithNextDay: false,\n    releaseTime: '2021-07-15T08:50:27.2054',\n    releaseDayOfWeek: DayOfWeek.FRIDAY,\n    releaseDayOfMonth: 1,\n    delay: '',\n    activePeriod: '',\n    activePeriodStartingFrom: AccessActivePeriodStartingOptions.FIRST_USE,\n    variantsIds: [],\n    accessDatesIds: [],\n    createdById: 0,\n    modifiedById: 0,\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    createdByName: \"abc\",\n    modifiedByName: \"abc\"\n  },\n  {\n    id: 4,\n    name: 'access4',\n    bonus: AccessBonuses.N,\n    entranceId: 0,\n    allowReenter: false,\n    multipleEntry: false,\n    multiple: 0,\n    usePriority: 0,\n    isTicketUnlockWithNextDay: false,\n    releaseTime: '2021-07-15T08:50:27.2054',\n    releaseDayOfWeek: DayOfWeek.FRIDAY,\n    releaseDayOfMonth: 1,\n    delay: '',\n    activePeriod: '',\n    activePeriodStartingFrom: AccessActivePeriodStartingOptions.FIRST_USE,\n    variantsIds: [],\n    accessDatesIds: [],\n    createdById: 0,\n    modifiedById: 0,\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    createdByName: \"abc\",\n    modifiedByName: \"abc\"\n  },\n  {\n    id: 5,\n    name: 'access5',\n    bonus: AccessBonuses.N,\n    entranceId: 0,\n    allowReenter: false,\n    multipleEntry: false,\n    multiple: 0,\n    usePriority: 0,\n    isTicketUnlockWithNextDay: false,\n    releaseTime: '2021-07-15T08:50:27.2054',\n    releaseDayOfWeek: DayOfWeek.FRIDAY,\n    releaseDayOfMonth: 1,\n    delay: '',\n    activePeriod: '',\n    activePeriodStartingFrom: AccessActivePeriodStartingOptions.FIRST_USE,\n    variantsIds: [],\n    accessDatesIds: [],\n    createdById: 0,\n    modifiedById: 0,\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    createdByName: \"abc\",\n    modifiedByName: \"abc\"\n  },\n  {\n    id: 6,\n    name: 'access6',\n    bonus: AccessBonuses.N,\n    entranceId: 0,\n    allowReenter: false,\n    multipleEntry: false,\n    multiple: 0,\n    usePriority: 0,\n    isTicketUnlockWithNextDay: false,\n    releaseTime: '2021-07-15T08:50:27.2054',\n    releaseDayOfWeek: DayOfWeek.FRIDAY,\n    releaseDayOfMonth: 1,\n    delay: '',\n    activePeriod: '',\n    activePeriodStartingFrom: AccessActivePeriodStartingOptions.FIRST_USE,\n    variantsIds: [],\n    accessDatesIds: [],\n    createdById: 0,\n    modifiedById: 0,\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    createdByName: \"abc\",\n    modifiedByName: \"abc\"\n  },\n  {\n    id: 7,\n    name: 'access7',\n    bonus: AccessBonuses.N,\n    entranceId: 0,\n    allowReenter: false,\n    multipleEntry: false,\n    multiple: 0,\n    usePriority: 0,\n    isTicketUnlockWithNextDay: false,\n    releaseTime: '2021-07-15T08:50:27.2054',\n    releaseDayOfWeek: DayOfWeek.FRIDAY,\n    releaseDayOfMonth: 1,\n    delay: '',\n    activePeriod: '',\n    activePeriodStartingFrom: AccessActivePeriodStartingOptions.FIRST_USE,\n    variantsIds: [],\n    accessDatesIds: [],\n    createdById: 0,\n    modifiedById: 0,\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    createdByName: \"abc\",\n    modifiedByName: \"abc\"\n  },\n  {\n    id: 8,\n    name: 'access8',\n    bonus: AccessBonuses.N,\n    entranceId: 0,\n    allowReenter: false,\n    multipleEntry: false,\n    multiple: 0,\n    usePriority: 0,\n    isTicketUnlockWithNextDay: false,\n    releaseTime: '2021-07-15T08:50:27.2054',\n    releaseDayOfWeek: DayOfWeek.FRIDAY,\n    releaseDayOfMonth: 1,\n    delay: '',\n    activePeriod: '',\n    activePeriodStartingFrom: AccessActivePeriodStartingOptions.FIRST_USE,\n    variantsIds: [],\n    accessDatesIds: [],\n    createdById: 0,\n    modifiedById: 0,\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    createdByName: \"abc\",\n    modifiedByName: \"abc\"\n  },\n  {\n    id: 9,\n    name: 'access9',\n    bonus: AccessBonuses.N,\n    entranceId: 0,\n    allowReenter: false,\n    multipleEntry: false,\n    multiple: 0,\n    usePriority: 0,\n    isTicketUnlockWithNextDay: false,\n    releaseTime: '2021-07-15T08:50:27.2054',\n    releaseDayOfWeek: DayOfWeek.FRIDAY,\n    releaseDayOfMonth: 1,\n    delay: '',\n    activePeriod: '',\n    activePeriodStartingFrom: AccessActivePeriodStartingOptions.FIRST_USE,\n    variantsIds: [],\n    accessDatesIds: [],\n    createdById: 0,\n    modifiedById: 0,\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    createdByName: \"abc\",\n    modifiedByName: \"abc\"\n  },\n  {\n    id: 10,\n    name: 'access10',\n    bonus: AccessBonuses.N,\n    entranceId: 0,\n    allowReenter: false,\n    multipleEntry: false,\n    multiple: 0,\n    usePriority: 0,\n    isTicketUnlockWithNextDay: false,\n    releaseTime: '2021-07-15T08:50:27.2054',\n    releaseDayOfWeek: DayOfWeek.FRIDAY,\n    releaseDayOfMonth: 1,\n    delay: '',\n    activePeriod: '',\n    activePeriodStartingFrom: AccessActivePeriodStartingOptions.FIRST_USE,\n    variantsIds: [],\n    accessDatesIds: [],\n    createdById: 0,\n    modifiedById: 0,\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    createdByName: \"abc\",\n    modifiedByName: \"abc\"\n  },\n]\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getList: (resource, params) =>\n    Promise.resolve({ data: fakeAccesses, total: fakeAccesses.length }),\n} as DataProvider\n\nexport default provider\n","export enum EventStatus {\n  INACTIVE = 'INACTIVE',\n  ACTIVE = 'ACTIVE',\n  IN_TRANSITION = 'IN_TRANSITION',\n}\n","import { DataProvider } from 'react-admin'\nimport { EventDto } from '../../dto/event/event.dto'\nimport { EventStatus } from '../../enum/EventStatus'\n\nconst fakeEvents: EventDto[] = [\n  {\n    id: 1,\n    name: \"Event1\",\n    dateStart: '2021-07-15T08:50:27.2054',\n    dateEnd: '2021-07-15T08:50:27.2054',\n    status: EventStatus.INACTIVE,\n    externalId: '1',\n    infix: 'abc123',\n    objectsIds: [1, 2, 3]\n  },\n  {\n    id: 2,\n    name: \"Event2\",\n    dateStart: '2021-07-15T08:50:27.2054',\n    dateEnd: '2021-07-15T08:50:27.2054',\n    status: EventStatus.INACTIVE,\n    externalId: '1',\n    infix: 'abc123',\n    objectsIds: [1, 2, 3]\n  },\n  {\n    id: 3,\n    name: \"Event3\",\n    dateStart: '2021-07-15T08:50:27.2054',\n    dateEnd: '2021-07-15T08:50:27.2054',\n    status: EventStatus.INACTIVE,\n    externalId: '1',\n    infix: 'abc123',\n    objectsIds: [1, 2, 3]\n  },\n  {\n    id: 4,\n    name: \"Event4\",\n    dateStart: '2021-07-15T08:50:27.2054',\n    dateEnd: '2021-07-15T08:50:27.2054',\n    status: EventStatus.INACTIVE,\n    externalId: '1',\n    infix: 'abc123',\n    objectsIds: [1, 2, 3]\n  },\n  {\n    id: 5,\n    name: \"Event5\",\n    dateStart: '2021-07-15T08:50:27.2054',\n    dateEnd: '2021-07-15T08:50:27.2054',\n    status: EventStatus.INACTIVE,\n    externalId: '1',\n    infix: 'abc123',\n    objectsIds: [1, 2, 3]\n  },\n  {\n    id: 6,\n    name: \"Event6\",\n    dateStart: '2021-07-15T08:50:27.2054',\n    dateEnd: '2021-07-15T08:50:27.2054',\n    status: EventStatus.INACTIVE,\n    externalId: '1',\n    infix: 'abc123',\n    objectsIds: [1, 2, 3]\n  },\n  {\n    id: 7,\n    name: \"Event7\",\n    dateStart: '2021-07-15T08:50:27.2054',\n    dateEnd: '2021-07-15T08:50:27.2054',\n    status: EventStatus.INACTIVE,\n    externalId: '1',\n    infix: 'abc123',\n    objectsIds: [1, 2, 3]\n  },\n  {\n    id: 8,\n    name: \"Event8\",\n    dateStart: '2021-07-15T08:50:27.2054',\n    dateEnd: '2021-07-15T08:50:27.2054',\n    status: EventStatus.INACTIVE,\n    externalId: '1',\n    infix: 'abc123',\n    objectsIds: [1, 2, 3]\n  },\n  {\n    id: 9,\n    name: \"Event9\",\n    dateStart: '2021-07-15T08:50:27.2054',\n    dateEnd: '2021-07-15T08:50:27.2054',\n    status: EventStatus.INACTIVE,\n    externalId: '1',\n    infix: 'abc123',\n    objectsIds: [1, 2, 3]\n  },\n  {\n    id: 10,\n    name: \"Event10\",\n    dateStart: '2021-07-15T08:50:27.2054',\n    dateEnd: '2021-07-15T08:50:27.2054',\n    status: EventStatus.INACTIVE,\n    externalId: '1',\n    infix: 'abc123',\n    objectsIds: [1, 2, 3]\n  },\n]\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getList: (resource, params) =>\n    Promise.resolve({ data: fakeEvents, total: fakeEvents.length })\n} as DataProvider\n\nexport default provider","export enum DeviceDirection {\n  IN = 'IN',\n  OUT = 'OUT',\n  INFO = 'INFO',\n}\n","import { DataProvider } from 'react-admin'\nimport { CustomerDetails } from \"../../customer-details/customer-details\";\nimport { CustomerDocumentType } from '../../enum/CustomerDocumentType'\nimport { Gender } from '../../enum/Gender'\n\nconst fakeCustomerDetailsList: CustomerDetails[] = [\n  {\n    id: 1,\n    type: \"MANUAL\",\n    firstname: \"Jan\",\n    lastname: \"Kowalski\",\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    pesel: \"12345678901\",\n    documentNumber: null,\n    nationality: \"PL\",\n    gender: Gender.MALE,\n    bookingsIds: []\n  },\n  {\n    id: 2,\n    type: \"MANUAL\",\n    firstname: \"Jan\",\n    lastname: \"Kowalski\",\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    pesel: \"12345678901\",\n    documentNumber: null,\n    nationality: \"PL\",\n    gender: Gender.MALE,\n    bookingsIds: []\n  },\n  {\n    id: 3,\n    type: \"MANUAL\",\n    firstname: \"Jan\",\n    lastname: \"Kowalski\",\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    pesel: \"12345678901\",\n    documentNumber: null,\n    nationality: \"PL\",\n    gender: Gender.MALE,\n    bookingsIds: []\n  },\n  {\n    id: 4,\n    type: \"MANUAL\",\n    firstname: \"Jan\",\n    lastname: \"Kowalski\",\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    pesel: \"12345678901\",\n    documentNumber: null,\n    nationality: \"PL\",\n    gender: Gender.MALE,\n    bookingsIds: []\n  },\n  {\n    id: 5,\n    type: \"MANUAL\",\n    firstname: \"Jan\",\n    lastname: \"Kowalski\",\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    pesel: \"12345678901\",\n    documentNumber: null,\n    nationality: \"PL\",\n    gender: Gender.MALE,\n    bookingsIds: []\n  },\n  {\n    id: 6,\n    type: \"MANUAL\",\n    firstname: \"Jan\",\n    lastname: \"Kowalski\",\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    pesel: \"12345678901\",\n    documentNumber: null,\n    nationality: \"PL\",\n    gender: Gender.MALE,\n    bookingsIds: []\n  },\n  {\n    id: 7,\n    type: \"MANUAL\",\n    firstname: \"Jan\",\n    lastname: \"Kowalski\",\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    pesel: \"12345678901\",\n    documentNumber: null,\n    nationality: \"PL\",\n    gender: Gender.MALE,\n    bookingsIds: []\n  },\n  {\n    id: 8,\n    type: \"MANUAL\",\n    firstname: \"Jan\",\n    lastname: \"Kowalski\",\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    pesel: \"12345678901\",\n    documentNumber: null,\n    nationality: \"PL\",\n    gender: Gender.MALE,\n    bookingsIds: []\n  },\n  {\n    id: 9,\n    type: \"MANUAL\",\n    firstname: \"Jan\",\n    lastname: \"Kowalski\",\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    pesel: \"12345678901\",\n    documentNumber: null,\n    nationality: \"PL\",\n    gender: Gender.MALE,\n    bookingsIds: []\n  },\n  {\n    id: 10,\n    type: \"MANUAL\",\n    firstname: \"Jan\",\n    lastname: \"Kowalski\",\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    pesel: \"12345678901\",\n    documentNumber: null,\n    nationality: \"PL\",\n    gender: Gender.MALE,\n    bookingsIds: []\n  },\n]\n\nconst provider = {\n  getOne: (resource, { id }: { id: string }) => {\n    const found = fakeCustomerDetailsList.find((c) => `${c.id}` === id)\n    if(found) {\n      return Promise.resolve({\n        data: found\n      })\n    }\n    return Promise.reject(new Error())\n  }\n} as DataProvider\n\nexport default provider","import { DataProvider } from 'react-admin'\nimport { CustomerInfo } from '../../customer-info/customer-info'\n\nconst fakeCustomerInfoList: CustomerInfo[] = [\n  {\n    id: 1,\n    firstname: \"jan\",\n    lastname: \"kowalski\",\n    pesel: \"12345678901\",\n    documentNumber: \"12345678901\"\n  },\n  {\n    id: 2,\n    firstname: \"jan\",\n    lastname: \"kowalski\",\n    pesel: \"12345678901\",\n    documentNumber: \"12345678901\"\n  },\n  {\n    id: 3,\n    firstname: \"jan\",\n    lastname: \"kowalski\",\n    pesel: \"12345678901\",\n    documentNumber: \"12345678901\"\n  },\n  {\n    id: 4,\n    firstname: \"jan\",\n    lastname: \"kowalski\",\n    pesel: \"12345678901\",\n    documentNumber: \"12345678901\"\n  },\n  {\n    id: 5,\n    firstname: \"jan\",\n    lastname: \"kowalski\",\n    pesel: \"12345678901\",\n    documentNumber: \"12345678901\"\n  },\n  {\n    id: 6,\n    firstname: \"jan\",\n    lastname: \"kowalski\",\n    pesel: \"12345678901\",\n    documentNumber: \"12345678901\"\n  },\n  {\n    id: 7,\n    firstname: \"jan\",\n    lastname: \"kowalski\",\n    pesel: \"12345678901\",\n    documentNumber: \"12345678901\"\n  },\n  {\n    id: 8,\n    firstname: \"jan\",\n    lastname: \"kowalski\",\n    pesel: \"12345678901\",\n    documentNumber: \"12345678901\"\n  },\n  {\n    id: 9,\n    firstname: \"jan\",\n    lastname: \"kowalski\",\n    pesel: \"12345678901\",\n    documentNumber: \"12345678901\"\n  },\n  {\n    id: 10,\n    firstname: \"jan\",\n    lastname: \"kowalski\",\n    pesel: \"12345678901\",\n    documentNumber: \"12345678901\"\n  },\n]\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getList: (resource, params) =>\n    Promise.resolve({ data: fakeCustomerInfoList, total: fakeCustomerInfoList.length })\n} as DataProvider\n\nexport default provider","import { DataProvider } from 'react-admin'\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getList: (resource, params) =>\n    Promise.resolve({ data: {}, total: 0 }),\n} as DataProvider\n\nexport default provider","import { DataProvider } from \"react-admin\"\nimport { CompanyDto } from \"../../dto/company.dto\"\n\nconst fakeCompanies: CompanyDto[] = [\n  {\n    id: 0,\n    name: \"0\",\n    usersIds: [],\n    eventsIds: []\n  },\n  {\n    id: 1,\n    name: \"1\",\n    usersIds: [],\n    eventsIds: []\n  },\n  {\n    id: 2,\n    name: \"2\",\n    usersIds: [],\n    eventsIds: []\n  },\n  {\n    id: 3,\n    name: \"3\",\n    usersIds: [],\n    eventsIds: []\n  },\n  {\n    id: 4,\n    name: \"4\",\n    usersIds: [],\n    eventsIds: []\n  },\n  {\n    id: 5,\n    name: \"5\",\n    usersIds: [],\n    eventsIds: []\n  },\n  {\n    id: 6,\n    name: \"6\",\n    usersIds: [],\n    eventsIds: []\n  },\n  {\n    id: 7,\n    name: \"7\",\n    usersIds: [],\n    eventsIds: []\n  },\n  {\n    id: 8,\n    name: \"8\",\n    usersIds: [],\n    eventsIds: []\n  },\n  {\n    id: 9,\n    name: \"9\",\n    usersIds: [],\n    eventsIds: []\n  },\n]\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getList: (resource, params) =>\n    Promise.resolve({ data: fakeCompanies, total: fakeCompanies.length })\n} as DataProvider\n\nexport default provider","import { DataProvider } from 'react-admin'\nimport { ObjectDto } from '../../dto/object.dto'\n\nconst fakeObjects: ObjectDto[] = [\n  {\n    id: 0,\n    name: \"0\",\n    tribunesIds: [],\n    eventsIds: []\n  },\n  {\n    id: 1,\n    name: \"1\",\n    tribunesIds: [],\n    eventsIds: []\n  },\n  {\n    id: 2,\n    name: \"2\",\n    tribunesIds: [],\n    eventsIds: []\n  },\n  {\n    id: 3,\n    name: \"3\",\n    tribunesIds: [],\n    eventsIds: []\n  },\n  {\n    id: 4,\n    name: \"4\",\n    tribunesIds: [],\n    eventsIds: []\n  },\n  {\n    id: 5,\n    name: \"5\",\n    tribunesIds: [],\n    eventsIds: []\n  },\n  {\n    id: 6,\n    name: \"6\",\n    tribunesIds: [],\n    eventsIds: []\n  },\n  {\n    id: 7,\n    name: \"7\",\n    tribunesIds: [],\n    eventsIds: []\n  },\n  {\n    id: 8,\n    name: \"8\",\n    tribunesIds: [],\n    eventsIds: []\n  },\n  {\n    id: 9,\n    name: \"9\",\n    tribunesIds: [],\n    eventsIds: []\n  },\n]\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getList: (resource, params) =>\n    Promise.resolve({ data: fakeObjects, total: fakeObjects.length })\n} as DataProvider\n\nexport default provider","import { DataProvider } from 'react-admin';\nimport { PalmDto } from '../../dto/device/palm/palm.dto';\n\nconst fakePalms: PalmDto[] = []\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getList: (resource, params) =>\n    Promise.resolve({ data: fakePalms, total: fakePalms.length })\n} as DataProvider\n\nexport default provider","import { DataProvider } from 'react-admin'\nimport { EngineDto } from '../../dto/device/engine/engine.dto'\n\nconst fakeEngines: EngineDto[] = []\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getList: (resource, params) =>\n    Promise.resolve({ data: fakeEngines, total: fakeEngines.length })\n} as DataProvider\n\nexport default provider","import { DataProvider } from 'react-admin'\nimport { EntranceDto } from '../../dto/entrance.dto'\n\nconst fakeEntrances: EntranceDto[] = []\n\nconst provider = {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    getList: (resource, params) =>\n        Promise.resolve({ data: fakeEntrances, total: fakeEntrances.length })\n} as DataProvider\n\nexport default provider","import { DataProvider, sanitizeFetchType } from 'react-admin'\nimport { ResourceName } from '../ResourceName'\nimport fakeAccessUsingsProvider from './providers/fake-access-usings.provider'\nimport fakeBookingsProvider from './providers/fake-bookings.provider'\nimport fakeLogsProvider from './providers/fake-logs.provider'\nimport fakeStatsOverallViewListProvider from './providers/fake-stats-overall-view-list.provider'\nimport fakeStatsOverallViewProvider from './providers/fake-stats-overall-view.provider'\nimport fakeTicketDetailsProvider from './providers/fake-ticket-details.provider'\nimport fakeTicketInfoProvider from './providers/fake-ticket-info.provider'\nimport fakeTicketsProvider from './providers/fake-tickets.provider'\nimport fakeAccessesProvider from './providers/fake-accesses.provider'\nimport fakeEventsProvider from './providers/fake-events.provider'\nimport fakeCustomerDetailsProvider from './providers/fake-customer-details.provider'\nimport fakeCustomerInfoProvider from './providers/fake-customer-info.provider'\nimport fakeAccessDatesProvider from './providers/fake-access-dates.provider'\nimport fakeCompaniesProvider from './providers/fake-companies.provider'\nimport fakeObjectsProvider from './providers/fake-objects.provider'\nimport fakePalmsProvider from './providers/fake-palms.provider'\nimport fakeEnginesProvider from './providers/fake-engines.provider'\nimport fakeEntrancesProvider from './providers/fake-entrances.provider'\n\nconst dataProviders: Record<ResourceName, DataProvider> = {\n  [ResourceName.ACCESS_DATES]: fakeAccessDatesProvider,\n  [ResourceName.ACCESSES]: fakeAccessesProvider,\n  [ResourceName.ACCESS_USINGS]: fakeAccessUsingsProvider,\n  [ResourceName.BOOKINGS]: fakeBookingsProvider,\n  [ResourceName.COMPANIES]: fakeCompaniesProvider,\n  [ResourceName.CUSTOMER_DETAILS]: fakeCustomerDetailsProvider,\n  [ResourceName.CUSTOMER_INFO]: fakeCustomerInfoProvider,\n  [ResourceName.ENGINES]: fakeEnginesProvider,\n  [ResourceName.ENTRANCES]: fakeEntrancesProvider,\n  [ResourceName.EVENTS]: fakeEventsProvider,\n  [ResourceName.LOGS]: fakeLogsProvider,\n  [ResourceName.OBJECTS]: fakeObjectsProvider,\n  [ResourceName.PALMS]: fakePalmsProvider,\n  [ResourceName.TICKETS]: fakeTicketsProvider,\n  [ResourceName.TICKET_INFO]: fakeTicketInfoProvider,\n  [ResourceName.TICKET_DETAILS]: fakeTicketDetailsProvider,\n  [ResourceName.TICKET_LOGS]: fakeLogsProvider,\n  [ResourceName.STATS_OVERALL_VIEW]: fakeStatsOverallViewProvider,\n  [ResourceName.STATS_OVERALL_VIEW_LIST]: fakeStatsOverallViewListProvider,\n}\n\nexport default (\n  fetchType: string,\n  resource: string,\n  params: unknown,\n): Promise<unknown> => {\n  const selectedProvider = dataProviders[resource as ResourceName]\n  const type = sanitizeFetchType(fetchType)\n  return selectedProvider[type](resource, params)\n}\n","import { AuthProvider } from 'react-admin'\n\nconst authProvider: AuthProvider = {\n  login: () => Promise.resolve(),\n  logout: () => Promise.resolve(),\n  checkError: () => Promise.resolve(),\n  checkAuth: () => Promise.resolve(),\n  getPermissions: () => Promise.resolve(),\n  getIdentity: () =>\n    Promise.resolve({\n      id: 'no-auth',\n      fullName: 'no-auth',\n    }),\n}\n\nexport default authProvider\n","export type ContentRangeHeaderValue = `bytes ${number}-${number}/${number}`\n\nexport const contentRangeParser = (headerValue: ContentRangeHeaderValue) => {\n  if (!headerValue) {\n    // 'content-range' header should exist otherwise pagination doesn't work\n    return {\n      total: 0,\n    }\n  }\n  const summary = headerValue.split(' ')[1]\n  const split = summary.split('-')\n  const rangeFrom = split[0]\n  const summarySecondPartSplit = split[1].split('/')\n  const rangeTo = summarySecondPartSplit[0]\n  const total = summarySecondPartSplit[1]\n  return {\n    rangeFrom: parseInt(rangeFrom, 10),\n    rangeTo: parseInt(rangeTo, 10),\n    total: parseInt(total, 10),\n  }\n}\n","import { fetchUtils } from 'react-admin'\nimport { ContentRangeHeaderValue, contentRangeParser } from './header.parser'\n\nconst getToken = () => localStorage.getItem('token') as string\n\nconst baseHeaders: HeadersInit = {\n  'Content-Type': 'application/json',\n}\n\nconst authHeaders = (token = getToken()): HeadersInit => ({\n  ...baseHeaders,\n  Authorization: `Bearer ${token}`,\n})\n\nconst getWithHeaders = <T>(url: string, headers: HeadersInit) =>\n  fetchUtils\n    .fetchJson(url, {\n      method: 'GET',\n      headers: new Headers(headers),\n    })\n    .then(({ json }) => json as Promise<T>)\n\nconst postWithHeaders = <T, K>(url: string, body: T, headers: HeadersInit) =>\n  fetchUtils\n    .fetchJson(url, {\n      method: 'POST',\n      body: JSON.stringify(body),\n      headers: new Headers(headers),\n    })\n    .then(({ json }) => json as Promise<K>)\n\nexport const get = <T>(baseUrl: string, path?: string) =>\n  getWithHeaders<T>(`${baseUrl}${path || ''}`, authHeaders())\n\nexport const getWithToken = <T>(url: string, token: string) =>\n  getWithHeaders<T>(url, authHeaders(token))\n\nexport const getByConditions = <T>(\n  baseUrl: string,\n  path: string,\n): Promise<T[]> =>\n  getWithHeaders<T[]>(`${baseUrl}/GetByConditions/${path}`, authHeaders())\n\nexport const getWithPagination = <T>(baseUrl: string, path: string) =>\n  fetchUtils\n    .fetchJson(`${baseUrl}${path}`, {\n      method: 'GET',\n      headers: new Headers(authHeaders()),\n    })\n    .then(({ json, headers }) =>\n      Promise.resolve({\n        data: json as T,\n        range: contentRangeParser(\n          headers.get('content-range') as ContentRangeHeaderValue,\n        ),\n      }),\n    )\n\nexport const authPost = <T, K>(url: string, body: T) =>\n  postWithHeaders<T, K>(url, body, baseHeaders)\n\nexport const post = <T, K>(url: string, body: T) =>\n  postWithHeaders<T, K>(url, body, authHeaders())\n\nexport const patch = <T, K>(baseUrl: string, body: T) =>\n  fetchUtils\n    .fetchJson(baseUrl, {\n      method: 'PATCH',\n      body: JSON.stringify(body),\n      headers: new Headers(authHeaders()),\n    })\n    .then(({ json }) => json as Promise<K>)\n\nexport const put = <T, K>(baseUrl: string, body: T) =>\n  fetchUtils\n    .fetchJson(baseUrl, {\n      method: 'PUT',\n      body: JSON.stringify(body),\n      headers: new Headers(authHeaders()),\n    })\n    .then(({ json }) => json as Promise<K>)\n","const API_V1 = `${process.env.REACT_APP_API_BASE_URL}/api/v1`\nexport const AUTH_URL = `${API_V1}/Authorization/Authenticate`\nexport const ROLES_URL = `${API_V1}/User/GetRoles`\nexport const ACCESS_USINGS = `${API_V1}/ticketManagement/AccessUsings`\nexport const ACCESSES_URL = `${API_V1}/ticketManagement/Accesses`\nexport const ACCESS_DATES = `${API_V1}/ticketManagement/AccessDates`\nexport const BOOKINGS_URL = `${API_V1}/ticketManagement/Bookings`\nexport const CUSTOMERS_URL = `${API_V1}/ticketManagement/Customers`\nexport const EVENTS_URL = `${API_V1}/ticketManagement/Events`\nexport const EXTENDED_LOGS_URL = `${API_V1}/ticketManagement/Logs/GetExtendedLogByConditions`\nexport const TICKETS_URL = `${API_V1}/ticketManagement/Tickets`\nexport const VARIANTS_URL = `${API_V1}/ticketManagement/Variants`\nexport const SEATS_URL = `${API_V1}/ticketManagement/Seats`\nexport const BLOCKS_URL = `${API_V1}/ticketManagement/Blocks`\nexport const TRIBUNES_URL = `${API_V1}/ticketManagement/Tribunes`\nexport const OBJECTS_URL = `${API_V1}/ticketManagement/Objects`\nexport const ENGINES_URL = `${API_V1}/deviceManagement/Engines`\nexport const PALMS_URL = `${API_V1}/deviceManagement/Palms`\nexport const COMPANIES_URL = `${API_V1}/Administrator/GetCompaniesByConditions`\nexport const USERS_URL = `${API_V1}/Administrator/GetUserById/`\nexport const ENTRANCES_URL = `${API_V1}/deviceManagement/Entrances`","import { AuthProvider } from 'react-admin'\nimport { get } from '../common/fetch.utils'\nimport { RoleDto } from '../dto/role.dto'\nimport { ROLES_URL } from '../api-urls'\n\nconst areRolesOutOfSync = (local: Set<string>, remote: string[]) =>\n  local.size !== remote.length || !remote.every((value) => local.has(value))\n\nconst validateRoles = async (\n  dataProvider: AuthProvider,\n  params: any,\n  rolesFromRemote: string[],\n): Promise<Set<string>> => {\n  const rolesFromLocalStorage = (await dataProvider.getPermissions(\n    params,\n  )) as Set<string>\n  if (areRolesOutOfSync(rolesFromLocalStorage, rolesFromRemote)) {\n    // eslint-disable-next-line no-console\n    console.error('Corrupted permissions')\n    await dataProvider.logout('')\n    return Promise.resolve(new Set([]))\n  }\n  return Promise.resolve(rolesFromLocalStorage)\n}\n\nexport const withSynchronizedPermissions = (dataProvider: AuthProvider) => {\n  // this is set once on app initialization\n  let rolesFromRemote: string[] | null = null\n\n  return new Proxy<AuthProvider>(dataProvider, {\n    get:\n      (target, name: string) =>\n      async (params: any): Promise<any> => {\n        switch (name as keyof AuthProvider) {\n          // avoid re-executing getRoles call\n          case 'login': {\n            await dataProvider.login(params)\n            const rolesFromLocalStorage = (await dataProvider.getPermissions(\n              params,\n            )) as Set<string>\n            rolesFromRemote = Array.from(rolesFromLocalStorage)\n            return Promise.resolve()\n          }\n          case 'getPermissions': {\n            if (rolesFromRemote) {\n              // compares the status of local and remote roles each time it checks for permissions\n              return validateRoles(dataProvider, params, rolesFromRemote)\n            }\n            // after reloading the page it needs to fetch roles from remote\n            const roleDtos = await get<RoleDto[]>(ROLES_URL)\n            const roles = roleDtos.map((v) => v.name)\n            rolesFromRemote = roles\n            localStorage.setItem('roles', roles.join())\n            return Promise.resolve(new Set(roles))\n          }\n          default: {\n            return dataProvider[name](params)\n          }\n        }\n      },\n  })\n}\n","import { AuthProvider } from 'react-admin'\nimport { authPost, getWithToken } from '../common/fetch.utils'\nimport { AuthDto } from '../dto/auth.dto'\nimport { AUTH_URL, ROLES_URL } from '../api-urls'\nimport { AuthRequest } from './auth.request'\nimport { RoleDto } from '../dto/role.dto'\nimport { withSynchronizedPermissions } from './withSyncPermissions'\n\nconst authProvider: AuthProvider = {\n  login: async ({ username, password }) => {\n    const { token } = await authPost<AuthRequest, AuthDto>(AUTH_URL, {\n      login: username,\n      password,\n    })\n    const roleDtos = await getWithToken<RoleDto[]>(ROLES_URL, token)\n    const roles = roleDtos.map((r) => r.name)\n    localStorage.setItem('username', username)\n    localStorage.setItem('token', token)\n    localStorage.setItem('roles', roles.join())\n  },\n  logout: () => {\n    localStorage.removeItem('username')\n    localStorage.removeItem('token')\n    localStorage.removeItem('roles')\n    return Promise.resolve()\n  },\n  checkError: ({ status }) => {\n    if (status === 401 || status === 403) {\n      localStorage.removeItem('username')\n      localStorage.removeItem('token')\n      localStorage.removeItem('roles')\n      return Promise.reject()\n    }\n    return Promise.resolve()\n  },\n  checkAuth: () =>\n    localStorage.getItem('token') ? Promise.resolve() : Promise.reject(),\n  getPermissions: (): Promise<Set<string>> => {\n    const roles = localStorage.getItem('roles') as string\n    return Promise.resolve(new Set(roles?.split(',') || []))\n  },\n  getIdentity: () =>\n    Promise.resolve({\n      id: localStorage.getItem('username') as string,\n    }),\n}\n\nexport default withSynchronizedPermissions(authProvider)\n","import { AccessUsingDto } from \"../dto/access-using.dto\"\n\nconst mapping: Partial<Record<keyof AccessUsingDto, string>> = {\n  id: 'au=>au.Id',\n  date: 'au=>au.Date',\n  direction: 'au=>au.Direction',\n  active: 'au=>au.Active',\n  ticketId: 'au=>au.TicketId',\n  accessId: 'au=>au.AccessId'\n}\n\nexport const mapSortAccessUsingsParam = (key: keyof AccessUsingDto) => mapping[key]","export enum Authority {\n  VIEW_LOGS,\n  VIEW_STATS_OVERALL_VIEW,\n}","import { AccessUsingDto } from \"../dto/access-using.dto\"\n\nconst mapping: Partial<\n  Record<keyof AccessUsingDto, (lambdaParameter: string, value: string | number) => string>\n> = {\n  id: (lambdaParameter, value) => `${(lambdaParameter)}.Id.ToString().Contains(\"${value}\")`,\n  ticketId: (lambdaParameter, value) => `\"${value}\".Contains(${(lambdaParameter)}.TicketId.ToString())`,\n  accessId: (lambdaParameter, value) => `${(lambdaParameter)}.AccessId.ToString().Contains(\"${value}\")`,\n}\n\nexport const getFilterMapper = (key: keyof AccessUsingDto) =>\n  mapping[key] as (lambdaParameter: string, value: string | number) => string\n","import {\n  CreateParams,\n  CreateResult,\n  DataProvider,\n  UpdateManyParams,\n  UpdateManyResult,\n  GetListResult\n} from 'react-admin'\nimport { AccessUsingsCreateParams } from './access-usings-create.params'\nimport { AccessUsingDto } from '../dto/access-using.dto'\nimport { DeviceDirection } from '../enum/DeviceDirection'\nimport { DateTime } from '../common/date-time'\nimport { getByConditions, getWithPagination, patch, post } from '../common/fetch.utils'\nimport { ACCESS_USINGS, TICKETS_URL } from '../api-urls'\nimport { AccessUsingsListParams } from './access-usings-list.params'\nimport { mapSortAccessUsingsParam } from './access-usings-sort.mapper'\nimport { getFilterMapper } from './access-usings-filter.mapper'\nimport { TicketDto } from '../dto/ticket.dto'\nimport { AccessUsing } from './access-using'\n\nconst getFilterParams = (filter: Partial<AccessUsingDto>) => {\n  if (Object.keys(filter).length) {\n    const filterParams = Object.entries(filter).map(([key, value]) => {\n      const mapper = getFilterMapper(key as keyof AccessUsingDto)\n      return mapper(\"au\", value as string)\n    })\n    return filterParams.reduce((p, c) => `${p}&&${c}`)\n  }\n  return \"true\"\n}\n\ntype CreateAccessUsingRequest = Array<\n  Omit<AccessUsingDto, 'id' | 'verifierDeviceId'> & { verifierDeviceId: null }\n>\ntype UpdateAccessUsingRequest = Pick<AccessUsingDto, 'id'> & { active: false }\n\nconst provider = {\n  updateMany: async (\n    resource,\n    { ids, data: { active = false } }: UpdateManyParams,\n  ): Promise<UpdateManyResult> => {\n    const pendingUpdates = ids\n      .map((auId) => ({ id: auId, active } as UpdateAccessUsingRequest))\n      .map((req) =>\n        patch<UpdateAccessUsingRequest, AccessUsingDto>(ACCESS_USINGS, req),\n      )\n    const accessUsings = await Promise.all(pendingUpdates)\n    return Promise.resolve({\n      data: accessUsings.map((au) => au.id),\n    })\n  },\n  create: async (\n    resource,\n    { data }: CreateParams<AccessUsingsCreateParams>,\n  ): Promise<CreateResult> => {\n    const { ticketIds, accessIds } = data\n    const request: CreateAccessUsingRequest = accessIds.flatMap((accessId) =>\n      ticketIds.map((ticketId) => ({\n        date: new Date().toISOString() as DateTime,\n        direction: DeviceDirection.IN,\n        active: true,\n        accessId,\n        ticketId,\n        verifierDeviceId: null,\n      })),\n    )\n    await post<CreateAccessUsingRequest, AccessUsingDto[]>(\n      ACCESS_USINGS,\n      request,\n    )\n    return Promise.resolve({\n      data: { id: 0 }, // need to return something\n    })\n  },\n  getList: async (\n    resource: string,\n    {\n      filter,\n      sort: { field, order },\n      pagination: { page, perPage }\n    }: AccessUsingsListParams\n  ): Promise<GetListResult<AccessUsingDto>> => {\n    const filterParams = `au=>${getFilterParams(filter).toString()}`\n    const queryParams: string[] = []\n    queryParams.push(`sortBy=${mapSortAccessUsingsParam(field)}`)\n    queryParams.push(`sortOrder=${order}`)\n    queryParams.push(`rangeFrom=${page * perPage - perPage}`)\n    queryParams.push(`rangeTo=${page * perPage}`)\n\n    const pathParams = queryParams.reduce((p, c) => `${p}&${c}`)\n    const path = `/${filterParams}?${pathParams}`\n\n    const {\n      data,\n      range: { total }\n    } = await getWithPagination<AccessUsingDto[]>(`${ACCESS_USINGS}/GetByConditions`, path)\n\n    const tickets = await getByConditions<TicketDto>\n      (TICKETS_URL, `t=>${filter?.ticketId?.toString().split(\" \").map((tId) => `t.Id==${tId}`).join(\"||\")}`)\n\n    const accessUsings = data.map(({\n      id, date, direction, active, ticketId, accessId, verifierDeviceId\n    }) => ({\n      id, date, direction, active, ticketId, accessId, verifierDeviceId,\n      ticketCode: tickets.find((ticket) => ticket.id === ticketId)?.ticketCode\n    } as AccessUsing))\n\n    return Promise.resolve({\n      data: accessUsings,\n      total\n    })\n  }\n} as DataProvider\n\nexport default provider\n","import { BookingDto } from '../dto/booking.dto'\n\nconst mapping: Partial<\n  Record<keyof BookingDto, (lambdaParameter: string, value: string | number) => string>\n> = {\n  id: (lambdaParameter, value) => value?.toString().split(\",\").length > 1 ?\n    `\"${value}\".Contains(${(lambdaParameter)}.Id.ToString())` :\n    `${(lambdaParameter)}.Id==${value}`,\n}\n\nexport const getFilterMapper = (key: keyof BookingDto) =>\n  mapping[key] as (lambdaParameters: string, value: string | number) => string","import { BookingDto } from \"../dto/booking.dto\"\n\nconst mapping: Partial<Record<keyof BookingDto, string>> = {\n  id: 'l=>l.Id',\n}\n\nexport const mapSortBookingParam = (key: keyof BookingDto) => mapping[key]\n","import { BookingDto } from \"../dto/booking.dto\";\nimport { EventDto } from \"../dto/event/event.dto\";\nimport { VariantDto } from \"../dto/variant.dto\";\nimport { Booking } from \"./booking\";\n\nexport const mapToBookings = (\n  {\n    id,\n    type,\n    disabled,\n    activeFrom,\n    activeTo,\n    eventId,\n    seatId,\n    blockId,\n    customerId,\n    variantId,\n    ticketsIds,\n    createdAt,\n    modifiedAt\n  }: BookingDto,\n  events: EventDto[],\n  variants: VariantDto[]\n): Booking => {\n  const foundEvent = events.find((event) => event.id === eventId)\n  const foundVariant = variants.find((variant) => variant.id === variantId)\n  return({\n    id,\n    type,\n    disabled,\n    activeFrom,\n    activeTo,\n    eventId,\n    seatId,\n    blockId,\n    customerId,\n    variantId,\n    ticketsIds,\n    createdAt,\n    modifiedAt,\n    eventName: foundEvent?.name,\n    eventDateStart: foundEvent?.dateStart,\n    variantName: foundVariant?.name\n  })\n}","import { DataProvider, UpdateParams, UpdateResult, GetListResult } from 'react-admin'\nimport { getByConditions, getWithPagination, patch } from '../common/fetch.utils'\nimport { BOOKINGS_URL, EVENTS_URL, VARIANTS_URL } from '../api-urls'\nimport { BookingUpdateRequest } from './booking-update.request'\nimport { BookingDto } from '../dto/booking.dto'\nimport { BookingListParams } from './booking-list.params'\nimport { getFilterMapper } from './booking-filter.mapper'\nimport { mapSortBookingParam } from './booking-sort.mapper'\nimport { Booking } from './booking'\nimport { EventDto } from '../dto/event/event.dto'\nimport { mapToBookings } from './bookings.mapper'\nimport { VariantDto } from '../dto/variant.dto'\n\nconst getFilterParams = (filter: Partial<BookingDto>) => {\n  if (Object.keys(filter).length) {\n    const filterParams = Object.entries(filter).map(([key, value]) => {\n      const mapper = getFilterMapper(key as keyof BookingDto)\n      return mapper(\"b\", value as string)\n    })\n    return filterParams.reduce((p, c) => `${p}&&${c}`)\n  }\n  return \"true\"\n}\n\nconst provider = {\n  update: async (\n    resource: string,\n    { data }: UpdateParams<BookingUpdateRequest>,\n  ): Promise<UpdateResult<BookingDto>> => {\n    const booking = await patch<BookingUpdateRequest, BookingDto>(\n      BOOKINGS_URL,\n      data,\n    )\n    return Promise.resolve({\n      data: booking,\n    })\n  },\n  getList: async (\n    resource: string,\n    {\n      filter,\n      sort: { field, order },\n      pagination: { page, perPage },\n    }: BookingListParams\n  ): Promise<GetListResult<Booking>> => {\n    const filterParams = `b=>${getFilterParams(filter).toString()}`\n    const queryParams: string [] = []\n    queryParams.push(`sortBy=${mapSortBookingParam(field)}`)\n    queryParams.push(`sortOrder=${order}`)\n    queryParams.push(`rangeFrom=${page * perPage - perPage}`)\n    queryParams.push(`rangeTo=${page * perPage}`)\n\n    const pathParams = queryParams.reduce((p, c) => `${p}&${c}`)\n    const path = `/${filterParams}?${pathParams}`\n\n    const {\n      data,\n    } = await getWithPagination<BookingDto[]>(`${BOOKINGS_URL}/GetByConditions`, path)\n\n    const eventIds = data.map((booking) => booking.eventId)\n    const events = await getByConditions<EventDto>(EVENTS_URL, `e=>\"${eventIds.join(\",\")}\".Contains(e.Id.ToString())`)\n\n    const variantIds = data.map((booking) => booking.variantId)\n    const variants = await getByConditions<VariantDto>(VARIANTS_URL, `v=>\"${variantIds.join(\",\")}\".Contains(v.Id.ToString())`)\n\n    return {\n      data: data.map((booking) => mapToBookings(booking, events, variants)),\n      total: data.length\n    }\n  }\n} as DataProvider\n\nexport default provider\n","import { ExtendedLogFilterValues } from './extended-log'\n\nconst mapping: Partial<\n  Record<\n    keyof ExtendedLogFilterValues,\n    (lambdaParameter: string, value: string | number) => string\n  >\n> = {\n  ticketCode: (lambdaParameter, value) => `${(lambdaParameter)}.TicketCode.Contains(\"${value}\")`,\n  bookingId: (lambdaParameter, value) => value?.toString().split(\",\").length > 1 ?\n    `\"${value}\".Contains(${(lambdaParameter)}.BookingId.ToString())` :\n    `${(lambdaParameter)}.BookingId.ToString().Contains(\"${value}\")`,\n  date: (lambdaParameter, value) => `${(lambdaParameter)}.Date > DateTimeOffset.FromUnixTimeMilliseconds(${value.toString().split(';')[0]}).DateTime && l.Date < DateTimeOffset.FromUnixTimeMilliseconds(${value.toString().split(';')[1]}).DateTime`,\n  deviceName: (lambdaParameter, value) => `${(lambdaParameter)}.Device.Name.Contains(\"${value}\")`,\n  text: (lambdaParameter, value) => `${(lambdaParameter)}.Data.Text.Contains(\"${value}\")`,\n  event: (lambdaParameter, value) => `${(lambdaParameter)}.Booking.Event.Name.Contains(\"${value}\")`\n}\n\nexport const getFilterMapper = (key: keyof ExtendedLogFilterValues) =>\n  mapping[key] as (lambdaParameter: string, value: string | number) => string\n","import { ExtendedLog } from './extended-log'\n\nconst mapping: Partial<Record<keyof ExtendedLog, string>> = {\n  id: 'l=>l.Id',\n  date: 'l=>l.Date',\n  deviceName: 'l=>l.Device.Name',\n  ticketCode: 'l=>l.TicketCode',\n  bookingId: 'l=>l.BookingId',\n}\n\nexport const mapSortLogParam = (key: keyof ExtendedLog) => mapping[key]\n","import { ExtendedLog } from './extended-log'\nimport { ExtendedLogDto } from '../dto/extended-log.dto'\n\nexport const mapToExtendedLog = (\n  {\n    id,\n    date,\n    ticketCode,\n    bookingId,\n    scheme,\n    device: { name: deviceName },\n    data,\n  }: ExtendedLogDto,\n  locale: string,\n): ExtendedLog => {\n  const logEntry = data.filter(({ language }) => language.includes(locale))[0]\n  return {\n    id,\n    date,\n    deviceName,\n    ticketCode,\n    text: logEntry?.text || scheme,\n    color: data[0].color || 'transparent',\n    bookingId,\n  }\n}\n","import { DataProvider, GetListResult } from 'react-admin'\nimport { EXTENDED_LOGS_URL } from '../api-urls'\nimport { getWithPagination } from '../common/fetch.utils'\nimport { ExtendedLogDto } from '../dto/extended-log.dto'\nimport { ExtendedLog, ExtendedLogFilterValues } from './extended-log'\nimport { LogListParams } from './log-list.params'\nimport { getFilterMapper } from './log-filter.mapper'\nimport { mapSortLogParam } from './log-sort.mapper'\nimport { mapToExtendedLog } from './extended-logs.mapper'\n\nconst getFilterParams = (\n  partialValues: Partial<ExtendedLogFilterValues>,\n): string => {\n  if (Object.keys(partialValues).length) {\n    const filterParams = Object.entries(partialValues).map(([key, value]) => {\n      const mapper = getFilterMapper(key as keyof ExtendedLogFilterValues)\n      return mapper('l', value as string)\n    })\n    return filterParams.reduce((p, c) => `${p}&&${c}`)\n  }\n  return 'true'\n}\n\nconst provider = {\n  getList: async (\n    resource: string,\n    {\n      filter: { locale, ...partialFilterValues },\n      sort: { field, order },\n      pagination: { page, perPage },\n    }: LogListParams,\n  ): Promise<GetListResult<ExtendedLog>> => {\n    const filterParams = `l=>${getFilterParams(partialFilterValues)}`\n    const queryParams: string[] = []\n    queryParams.push(`sortBy=${mapSortLogParam(field)}`)\n    queryParams.push(`sortOrder=${order}`)\n    queryParams.push(`rangeFrom=${page * perPage - perPage}`)\n    queryParams.push(`rangeTo=${page * perPage}`)\n\n    const pathParams = queryParams.reduce((p, c) => `${p}&${c}`)\n    const path = `/${filterParams}?${pathParams}`\n\n    const {\n      data,\n      range: { total },\n    } = await getWithPagination<ExtendedLogDto[]>(EXTENDED_LOGS_URL, path)\n    const extendedLogs = data.map((dto) => mapToExtendedLog(dto, locale))\n\n    return Promise.resolve({\n      data: extendedLogs,\n      total,\n    })\n  },\n} as DataProvider\n\nexport default provider\n","export const ALL_RESULTS = 'l=>true'\n","import { EventOverallView } from \"./event-overall-view\"\n\nconst mapping: Partial<Record<keyof EventOverallView, string>> = {\n  id: 'e=>e.Id',\n  name: 'e=>e.Name',\n  dateStart: 'e=>e.DateStart',\n  dateEnd: 'e=>e.DateEnd'\n}\n\nexport const mapSortOverallViewParam = (key: keyof EventOverallView) => mapping[key]","import { EventDto } from \"../../dto/event/event.dto\"\nimport { EventOverallView } from \"./event-overall-view\"\n\nexport const mapToEventOverallView = (\n  event: EventDto\n): EventOverallView => ({\n  id: event.id,\n  name: event.name,\n  dateStart: event.dateStart,\n  dateEnd: event.dateEnd\n})","import { DataProvider, GetListResult } from \"react-admin\"\nimport { EVENTS_URL } from '../../api-urls'\nimport { getWithPagination } from '../../common/fetch.utils'\nimport { ALL_RESULTS } from \"../../common/filter.values\"\nimport { NameFilter } from \"../../common/name.filter\"\nimport { EventDto } from \"../../dto/event/event.dto\"\nimport { EventOverallView } from \"./event-overall-view\"\nimport { mapSortOverallViewParam } from \"./overall-view-list-sort.mapper\"\nimport { mapToEventOverallView } from \"./overall-view-list.mapper\"\n\nconst provider = {\n  getList: async (\n    resource: string,\n    { filter, sort: { order, field }, pagination: { page, perPage } }: NameFilter,\n  ): Promise<GetListResult<EventOverallView>> => {\n    const queryParams: string[] = []\n    queryParams.push(`sortBy=${mapSortOverallViewParam(field)}`)\n    queryParams.push(`sortOrder=${order}`)\n    queryParams.push(`rangeFrom=${page * perPage - perPage}`)\n    queryParams.push(`rangeTo=${page * perPage}`)\n\n    const pathParams = queryParams.reduce((p, c) => `${p}&${c}`)\n    const path = `${filter.name ? `e=>e.Name.Contains(\"${filter.name}\")` : ALL_RESULTS}?${pathParams}`\n\n    const { data, range: { total } } = await getWithPagination<EventDto[]>(\n      `${EVENTS_URL}/GetByConditions/`, path)\n\n    const overallViewList = data.map((event) => mapToEventOverallView(event))\n\n    return {\n      data: overallViewList,\n      total\n    }\n  },\n} as DataProvider\n\nexport default provider","import { BlockDto } from '../../dto/block.dto'\nimport { BookingDto } from '../../dto/booking.dto'\nimport { EventDto } from '../../dto/event/event.dto'\nimport { ObjectDto } from '../../dto/object.dto'\nimport { SeatDto } from '../../dto/seat.dto'\nimport { TribuneDto } from '../../dto/tribune.dto'\nimport { BookingType } from '../../enum/BookingType'\nimport {\n  BlockOverallView,\n  ObjectOverallView,\n  OverallView,\n  TribuneOverallView,\n} from './overall-view'\n\nconst calculateCapacity = (seats: SeatDto[], bookings: BookingDto[]) =>\n  seats.length + bookings.filter((b) => b.seatId == null).length\n\nconst mapToBlockOverallView = (\n  block: BlockDto,\n  seats: SeatDto[],\n  bookings: BookingDto[],\n  enteredBookings: BookingDto[],\n): BlockOverallView => ({\n  id: block.id,\n  name: block.name,\n  capacity: calculateCapacity(seats, bookings),\n  sold: bookings.length,\n  entered: enteredBookings.length,\n  soldNormal: bookings.filter((b) => b.type === BookingType.NORMAL).length,\n  enteredNormal: enteredBookings.filter((b) => b.type === BookingType.NORMAL)\n    .length,\n  soldAbo: bookings.filter((b) => b.type === BookingType.ABO).length,\n  enteredAbo: enteredBookings.filter((b) => b.type === BookingType.ABO).length,\n  soldInfix: bookings.filter((b) => b.type === BookingType.INFIX).length,\n  enteredInfix: enteredBookings.filter((b) => b.type === BookingType.INFIX)\n    .length,\n  soldService: bookings.filter((b) => b.type === BookingType.SERVICE).length,\n  enteredService: enteredBookings.filter((b) => b.type === BookingType.SERVICE)\n    .length,\n  soldPoints: bookings.filter((b) => b.type === BookingType.POINTS).length,\n  enteredPoints: enteredBookings.filter((b) => b.type === BookingType.POINTS)\n    .length,\n})\n\nconst mapToTribuneOverallView = (\n  tribune: TribuneDto,\n  blocks: BlockDto[],\n  seats: SeatDto[],\n  bookings: BookingDto[],\n  enteredBookingIds: number[],\n): TribuneOverallView => ({\n  id: tribune.id,\n  name: tribune.name,\n  capacity: calculateCapacity(seats, bookings),\n  sold: bookings.length,\n  entered: enteredBookingIds.length,\n  blocks: blocks\n    .filter((b) => tribune.blocksIds.includes(b.id))\n    .map((block) => {\n      const filteredSeats = seats.filter((s) => s.blockId === block.id)\n      const filteredBookingIds = block.bookingsIds.concat(\n        filteredSeats.flatMap((s) => s.bookingsIds),\n      )\n      const filteredBookings = bookings.filter((book) =>\n        filteredBookingIds.includes(book.id),\n      )\n      const filteredEnteredBookingIds = enteredBookingIds.filter(\n        (enteredBookingId) => filteredBookingIds.includes(enteredBookingId),\n      )\n      const filteredEnteredBookings = bookings.filter((book) =>\n        filteredEnteredBookingIds.includes(book.id),\n      )\n      return mapToBlockOverallView(\n        block,\n        filteredSeats,\n        filteredBookings,\n        filteredEnteredBookings,\n      )\n    }),\n})\n\nconst mapToObjectOverallView = (\n  object: ObjectDto,\n  tribunes: TribuneDto[],\n  blocks: BlockDto[],\n  seats: SeatDto[],\n  bookings: BookingDto[],\n  enteredBookingIds: number[],\n): ObjectOverallView => ({\n  id: object.id,\n  name: object.name,\n  capacity: calculateCapacity(seats, bookings),\n  sold: bookings.length,\n  entered: enteredBookingIds.length,\n  tribunes: tribunes\n    .filter((t) => object.tribunesIds.includes(t.id))\n    .map((tribune) => {\n      const filteredBlocks = blocks.filter((b) => b.tribuneId === tribune.id)\n      const filteredSeatIds = filteredBlocks.flatMap((b) => b.seatsIds)\n      const filteredSeats = seats.filter((s) => filteredSeatIds.includes(s.id))\n      const filteredBookingIds = filteredBlocks\n        .flatMap((b) => b.bookingsIds)\n        .concat(filteredSeats.flatMap((s) => s.bookingsIds))\n      const filteredBookings = bookings.filter((book) =>\n        filteredBookingIds.includes(book.id),\n      )\n      const filteredEnteredBookingIds = enteredBookingIds.filter(\n        (enteredBookingId) => filteredBookingIds.includes(enteredBookingId),\n      )\n      return mapToTribuneOverallView(\n        tribune,\n        filteredBlocks,\n        filteredSeats,\n        filteredBookings,\n        filteredEnteredBookingIds,\n      )\n    }),\n})\n\nexport const mapToOverallView = (\n  selectedEvent: EventDto,\n  objects: ObjectDto[],\n  tribunes: TribuneDto[],\n  blocks: BlockDto[],\n  seats: SeatDto[],\n  bookings: BookingDto[],\n  enteredBookings: BookingDto[],\n): OverallView => {\n  const enteredBookingIds = enteredBookings.map((book) => book.id)\n  return {\n    id: selectedEvent.id,\n    eventName: selectedEvent.name,\n    capacity: calculateCapacity(seats, bookings),\n    sold: bookings.length,\n    entered: enteredBookings.length,\n    date: selectedEvent.dateStart,\n    objects: objects\n      .filter((o) => selectedEvent.objectsIds.includes(o.id))\n      .map((object) => {\n        const filteredTribunes = tribunes.filter(\n          (t) => t.objectId === object.id,\n        )\n        const filteredBlocks = blocks.filter((b) =>\n          filteredTribunes.flatMap((t) => t.blocksIds).includes(b.id),\n        )\n        const filteredSeatIds = filteredBlocks.flatMap((b) => b.seatsIds)\n        const filteredSeats = seats.filter((s) =>\n          filteredSeatIds.includes(s.id),\n        )\n        const filteredBookingIds = filteredBlocks\n          .flatMap((b) => b.bookingsIds)\n          .concat(filteredSeats.flatMap((s) => s.bookingsIds))\n        const filteredBookings = bookings.filter((book) =>\n          filteredBookingIds.includes(book.id),\n        )\n        const filteredEnteredBookingIds = enteredBookingIds.filter(\n          (enteredBookingId) => filteredBookingIds.includes(enteredBookingId),\n        )\n        return mapToObjectOverallView(\n          object,\n          filteredTribunes,\n          filteredBlocks,\n          filteredSeats,\n          filteredBookings,\n          filteredEnteredBookingIds,\n        )\n      }),\n  }\n}\n","import { DataProvider, GetOneParams, GetOneResult } from 'react-admin'\nimport {\n  BLOCKS_URL,\n  BOOKINGS_URL,\n  EVENTS_URL,\n  OBJECTS_URL,\n  SEATS_URL,\n  TRIBUNES_URL,\n} from '../../api-urls'\nimport { get, getByConditions } from '../../common/fetch.utils'\nimport { BlockDto } from '../../dto/block.dto'\nimport { BookingDto } from '../../dto/booking.dto'\nimport { EventDto } from '../../dto/event/event.dto'\nimport { ObjectDto } from '../../dto/object.dto'\nimport { SeatDto } from '../../dto/seat.dto'\nimport { TribuneDto } from '../../dto/tribune.dto'\nimport { OverallView } from './overall-view'\nimport { mapToOverallView } from './overall-view.mapper'\n\nconst provider = {\n  getOne: async (\n    resource: string,\n    { id: eventId }: GetOneParams,\n  ): Promise<GetOneResult<OverallView>> => {\n    const pendingSelectedEvent = get<EventDto>(EVENTS_URL, `/${eventId}`)\n    const pendingObjects = getByConditions<ObjectDto>(\n      OBJECTS_URL,\n      `o=>o.Events.Any(e => e.Id.Equals(${eventId}))?sortBy=o=>o.Name&sortOrder=ASC`,\n    )\n    const pendingTribunes = getByConditions<TribuneDto>(\n      TRIBUNES_URL,\n      `t=>t.Object.Events.Any(e => e.Id.Equals(${eventId}))?sortBy=t=>t.Name&sortOrder=ASC`,\n    )\n    const pendingBlocks = getByConditions<BlockDto>(\n      BLOCKS_URL,\n      `b=>b.Tribune.Object.Events.Any(e => e.Id.Equals(${eventId}))?sortBy=b=>b.Name&sortOrder=ASC`,\n    )\n    const pendingSeats = getByConditions<SeatDto>(\n      SEATS_URL,\n      `s=>s.Block.Tribune.Object.Events.Any(e => e.Id.Equals(${eventId}))`,\n    )\n    const bookingsCondition = `b=>b.EventId.Equals(${eventId}) && b.Disabled != TicketAPI.Models.Enums.TicketManagement.BookingDisabledOptions.STORNO`\n    const pendingBookings = getByConditions<BookingDto>(\n      BOOKINGS_URL,\n      bookingsCondition,\n    )\n    const pendingEnteredBookings = getByConditions<BookingDto>(\n      BOOKINGS_URL,\n      `${bookingsCondition} && b.Tickets.SelectMany(t => t.AccessUsings).Any(au => au.Active == true && au.Direction.Equals(TicketAPI.Models.Enums.DeviceManagement.DeviceDirections.IN))`,\n    )\n\n    const [\n      selectedEvent,\n      objects,\n      tribunes,\n      blocks,\n      seats,\n      bookings,\n      enteredBookings,\n    ] = await Promise.all([\n      pendingSelectedEvent,\n      pendingObjects,\n      pendingTribunes,\n      pendingBlocks,\n      pendingSeats,\n      pendingBookings,\n      pendingEnteredBookings,\n    ])\n\n    const overallViewData = mapToOverallView(\n      selectedEvent,\n      objects,\n      tribunes,\n      blocks,\n      seats,\n      bookings,\n      enteredBookings,\n    )\n\n    return {\n      data: overallViewData,\n    }\n  },\n} as DataProvider\n\nexport default provider\n","export const buildFilterByIdsCondition = (ids: number[]): string => {\n  const [firstId, ...restIds] = ids\n  return (restIds || []).reduce(\n    (prev, curr) => `${prev as string}||v.Id==${curr}`,\n    `v=>v.Id==${firstId}`,\n  )\n}\n","export const toMapById = <T extends { id: number }>(values: T[]) =>\n  new Map(values.map((v): [number, T] => [v.id, v]))\n\nexport const toUniqueValues = (values: number[]) => Array.from(new Set(values))\n","import { CustomerDto } from '../dto/customer.dto'\nimport { EventDto } from '../dto/event/event.dto'\nimport { TicketDto } from '../dto/ticket.dto'\nimport { VariantDto } from '../dto/variant.dto'\nimport { TicketDetails } from './ticket-details'\nimport { BookingDto } from '../dto/booking.dto'\nimport { AccessUsingDto } from '../dto/access-using.dto'\nimport { Ticket } from './ticket'\nimport { toMapById } from '../common/mapper.utils'\nimport { BlockDto } from '../dto/block.dto'\nimport { TribuneDto } from '../dto/tribune.dto'\nimport { SeatDto } from '../dto/seat.dto'\nimport { ObjectDto } from '../dto/object.dto'\n\nconst mapToTicket = (\n  { id, ticketCode, ticketType, createdAt, accessUsingsIds }: TicketDto,\n  accessUsingById: Map<number, AccessUsingDto>,\n): Ticket => ({\n  id,\n  ticketCode,\n  ticketType,\n  createdAt,\n  accessUsings: accessUsingsIds.map(\n    (auId) => accessUsingById.get(auId) as AccessUsingDto,\n  ),\n})\n\nexport const mapToTicketDetails = (\n  {\n    id: bookingId,\n    disabled: bookingDisabled,\n    type: bookingType,\n    activeFrom,\n    activeTo,\n    createdAt,\n    modifiedAt,\n    seatId,\n    blockId\n  }: BookingDto,\n  {\n    firstname,\n    lastname,\n    pesel,\n    company,\n    birthdate,\n    documentType,\n    documentNumber,\n    nationality,\n    gender\n  }: CustomerDto,\n  { name: eventName }: EventDto,\n  { name: variantName, accessesIds }: VariantDto,\n  tickets: TicketDto[],\n  accessUsings: AccessUsingDto[],\n  block: BlockDto,\n  tribune: TribuneDto,\n  object: ObjectDto,\n  seat: SeatDto | null\n): TicketDetails => {\n  const accessUsingById = toMapById(accessUsings)\n  return {\n    id: bookingId,\n    firstname,\n    lastname,\n    eventName,\n    pesel,\n    variantName,\n    accessesIds,\n    bookingType,\n    activeFrom,\n    activeTo,\n    tickets: tickets.map((t) => mapToTicket(t, accessUsingById)),\n    createdAt,\n    modifiedAt,\n    bookingDisabled,\n    company,\n    birthdate,\n    documentType,\n    documentNumber,\n    nationality,\n    gender,\n    seatId,\n    blockId,\n    objectName: object?.name || null,\n    tribuneName: tribune?.name || null,\n    blockName: block?.name || null,\n    rowNumber: seat?.rowAlias || null\n  }\n}\n","import { DataProvider, GetOneParams, GetOneResult } from 'react-admin'\nimport {\n  ACCESS_USINGS,\n  BLOCKS_URL,\n  BOOKINGS_URL,\n  CUSTOMERS_URL,\n  EVENTS_URL,\n  OBJECTS_URL,\n  SEATS_URL,\n  TICKETS_URL,\n  TRIBUNES_URL,\n  VARIANTS_URL,\n} from '../api-urls'\nimport { get, getByConditions } from '../common/fetch.utils'\nimport { BookingDto } from '../dto/booking.dto'\nimport { TicketDto } from '../dto/ticket.dto'\nimport { CustomerDto } from '../dto/customer.dto'\nimport { EventDto } from '../dto/event/event.dto'\nimport { buildFilterByIdsCondition } from '../common/condition.builder'\nimport { mapToTicketDetails } from './ticket-details.mapper'\nimport { VariantDto } from '../dto/variant.dto'\nimport { TicketDetails } from './ticket-details'\nimport { toUniqueValues } from '../common/mapper.utils'\nimport { AccessUsingDto } from '../dto/access-using.dto'\nimport { TribuneDto } from '../dto/tribune.dto'\nimport { BlockDto } from '../dto/block.dto'\nimport { SeatDto } from '../dto/seat.dto'\nimport { ObjectDto } from '../dto/object.dto'\n\nconst fetchTicketsWithAccessUsings = async (ticketIds: number[]) => {\n  const tickets = await getByConditions<TicketDto>(\n    TICKETS_URL,\n    buildFilterByIdsCondition(ticketIds),\n  )\n  const accessUsingIds = tickets.flatMap((t) => t.accessUsingsIds)\n  const accessUsings = accessUsingIds.length\n    ? await getByConditions<AccessUsingDto>(\n        ACCESS_USINGS,\n        buildFilterByIdsCondition(toUniqueValues(accessUsingIds)),\n      )\n    : []\n  return {\n    tickets,\n    accessUsings,\n  }\n}\n\nconst provider = {\n  getOne: async (\n    resource: string,\n    { id: bookingId }: GetOneParams,\n  ): Promise<GetOneResult<TicketDetails>> => {\n    const booking = await get<BookingDto>(BOOKINGS_URL, `/${bookingId}`)\n    const { customerId, eventId, variantId } = booking\n\n    const pendingCustomer = get<CustomerDto>(CUSTOMERS_URL, `/${customerId}`)\n    const pendingEvent = get<EventDto>(EVENTS_URL, `/${eventId}`)\n    const pendingVariant = get<VariantDto>(VARIANTS_URL, `/${variantId}`)\n    const pendingTicketsWithAccessUsings = fetchTicketsWithAccessUsings(\n      booking.ticketsIds,\n    )\n\n    const seat = booking.seatId\n      ? await get<SeatDto>(SEATS_URL, `/${booking.seatId.toString()}`)\n      : null\n    const block = seat\n      ? await get<BlockDto>(BLOCKS_URL, `/${seat.blockId.toString()}`)\n      : await get<BlockDto>(BLOCKS_URL, `/${booking?.blockId?.toString()}`)\n    const tribune = await get<TribuneDto>(\n      TRIBUNES_URL,\n      `/${block.tribuneId.toString()}`,\n    )\n    const object = await get<ObjectDto>(\n      OBJECTS_URL,\n      `/${tribune.objectId.toString()}`,\n    )\n\n    const [customer, event, variant, { tickets, accessUsings }] =\n      await Promise.all([\n        pendingCustomer,\n        pendingEvent,\n        pendingVariant,\n        pendingTicketsWithAccessUsings,\n      ])\n\n    return {\n      data: mapToTicketDetails(\n        booking,\n        customer,\n        event,\n        variant,\n        tickets,\n        accessUsings,\n        block,\n        tribune,\n        object,\n        seat,\n      ),\n    }\n  },\n} as DataProvider\n\nexport default provider\n","import { CustomerDto } from '../dto/customer.dto'\nimport { EventDto } from '../dto/event/event.dto'\nimport { TicketDto } from '../dto/ticket.dto'\nimport { TicketInfo } from './ticket-info'\nimport { BookingDto } from '../dto/booking.dto'\nimport { toMapById } from '../common/mapper.utils'\n\nexport const mapToTicketBaseInfo = (\n  { firstname, lastname, pesel }: CustomerDto,\n  { id: eventId, name: eventName, dateStart: eventDate }: EventDto,\n  { id, bookingId, ticketCode, ticketType }: TicketDto,\n): TicketInfo => ({\n  id,\n  firstname,\n  lastname,\n  pesel,\n  eventId,\n  eventName,\n  eventDate,\n  ticketCode,\n  ticketType,\n  bookingId\n})\n\nexport const mapToTicketBaseInfoList = (\n  bookings: BookingDto[],\n  customers: CustomerDto[],\n  events: EventDto[],\n  tickets: TicketDto[],\n): TicketInfo[] => {\n  const bookingById = toMapById(bookings)\n  const customerById = toMapById(customers)\n  const eventById = toMapById(events)\n  return tickets.map((ticket) => {\n    const { customerId, eventId } = bookingById.get(\n      ticket.bookingId,\n    ) as BookingDto\n    const customer = customerById.get(customerId) as CustomerDto\n    const event = eventById.get(eventId) as EventDto\n    return mapToTicketBaseInfo(customer, event, ticket)\n  })\n}\n","import { TicketInfo } from './ticket-info'\n\nconst mapping: Partial<Record<keyof TicketInfo, string>> = {\n  id: 't=>t.Id',\n  ticketCode: 't=>t.TicketCode',\n  bookingId: 't=>t.BookingId'\n}\n\nexport const mapSortTicketParams = (key: keyof TicketInfo) => mapping[key]","import { TicketInfo } from \"./ticket-info\"\n\nconst mapping: Partial<\n  Record<\n    keyof TicketInfo,\n    (lambdaParameter: string, value: string | number) => string\n  >\n> = {\n  ticketCode: (lambdaParameter, value) => `${(lambdaParameter)}.TicketCode.Contains(\"${value}\")`,\n}\n\nexport const getFilterMapper = (key: keyof TicketInfo) =>\n  mapping[key] as (lambdaParameter: string, value: string | number) => string\n","import { DataProvider, GetListResult } from 'react-admin'\nimport {\n  BOOKINGS_URL,\n  CUSTOMERS_URL,\n  EVENTS_URL,\n  TICKETS_URL,\n} from '../api-urls'\nimport { getByConditions, getWithPagination } from '../common/fetch.utils'\nimport { BookingDto } from '../dto/booking.dto'\nimport { TicketInfo } from './ticket-info'\nimport { TicketDto } from '../dto/ticket.dto'\nimport { CustomerDto } from '../dto/customer.dto'\nimport { EventDto } from '../dto/event/event.dto'\nimport { mapToTicketBaseInfoList } from './ticket-info.mapper'\nimport { buildFilterByIdsCondition } from '../common/condition.builder'\nimport { TicketCodeFilter } from '../common/ticket-code.filter'\nimport { toUniqueValues } from '../common/mapper.utils'\nimport { mapSortTicketParams } from './ticket-info-sort.mapper'\nimport { getFilterMapper } from './ticket-info-filter.mapper'\n\nconst getFilterParams = (\n  partialValues: Partial<TicketInfo>,\n): string => {\n  if (Object.keys(partialValues).length) {\n    const filterParams = Object.entries(partialValues).map(([key, value]) => {\n      const mapper = getFilterMapper(key as keyof TicketInfo)\n      return mapper('t', value as string)\n    })\n    return filterParams.reduce((p, c) => `${p}&&${c}`)\n  }\n  return 'true'\n}\nconst getByUniqueIds = <T>(baseUrl: string, ids: number[]): Promise<T[]> => {\n  const uniqueIds = toUniqueValues(ids)\n  return getByConditions<T>(baseUrl, buildFilterByIdsCondition(uniqueIds))\n}\n\nconst provider = {\n  getList: async (\n    resource: string,\n    {\n      filter,\n      pagination: { page, perPage },\n      sort: { field, order }\n    }: TicketCodeFilter,\n  ): Promise<GetListResult<TicketInfo>> => {\n    const filterParams = `t=>${getFilterParams(filter)}`\n    const queryParams: string[] = []\n    if (!!page && !!field) {\n      queryParams.push(`sortBy=${mapSortTicketParams(field)}`)\n      queryParams.push(`sortOrder=${order}`)\n      queryParams.push(`rangeFrom=${page * perPage - perPage}`)\n      queryParams.push(`rangeTo=${page * perPage}`)\n    }\n    else queryParams.push('')\n\n    const pathParams = queryParams.reduce((p, c) => `${p}&${c}`)\n    const path = `/${filterParams}?${pathParams}`\n    const { data: tickets, range: { total } } = await getWithPagination<TicketDto[]>(\n      `${TICKETS_URL}/GetByConditions`, path\n    )\n\n    const bookingIds = tickets.map((v) => v.bookingId)\n    const bookings = await getByUniqueIds<BookingDto>(BOOKINGS_URL, bookingIds)\n\n    const customerIds = bookings.map((v) => v.customerId)\n    const eventIds = bookings.map((v) => v.eventId)\n\n    const pendingCustomers = getByUniqueIds<CustomerDto>(\n      CUSTOMERS_URL,\n      customerIds,\n    )\n    const pendingEvents = getByUniqueIds<EventDto>(EVENTS_URL, eventIds)\n    const [customers, events] = await Promise.all([\n      pendingCustomers,\n      pendingEvents,\n    ])\n\n    const ticketBaseInfoList = mapToTicketBaseInfoList(\n      bookings,\n      customers,\n      events,\n      tickets,\n    )\n    return Promise.resolve({\n      data: ticketBaseInfoList,\n      total\n    })\n  },\n} as DataProvider\n\nexport default provider\n","import { DataProvider, GetListResult } from 'react-admin'\nimport { getByConditions } from '../common/fetch.utils'\nimport { TICKETS_URL } from '../api-urls'\nimport { TicketCodeFilter } from '../common/ticket-code.filter'\nimport { TicketDto } from '../dto/ticket.dto'\n\nconst provider = {\n  getList: async (\n    resource: string,\n    { filter }: TicketCodeFilter,\n  ): Promise<GetListResult<TicketDto>> => {\n    const filterByTicketCodeCondition = `t=>t.TicketCode.Contains(\"${filter.ticketCode}\")`\n    const tickets = await getByConditions<TicketDto>(\n      TICKETS_URL,\n      filterByTicketCodeCondition,\n    )\n    return Promise.resolve({\n      data: tickets,\n      total: tickets.length,\n    })\n  },\n} as DataProvider\n\nexport default provider\n","import { Access } from './access'\n\nconst mapping: Partial<\n  Record<\n    keyof Access,\n    (lambdaParameter: string, value: string | number) => string\n  >\n> = {\n  id: (lambdaParameter, value) => value.toString().split(\",\").map((v) => `${v}==${lambdaParameter}.Id`).join(\"&&\"),\n}\n\nexport const getFilterMapper = (key: keyof Access) =>\n  mapping[key] as (lambdaParameter: string, value: string | number) => string\n","import { Access } from './access'\n\nconst mapping: Partial<Record<keyof Access, string>> = {\n  id: 'a=>a.Id',\n}\n\nexport const mapSortAccessParam = (key: keyof Access) => mapping[key]\n","import {\n  DataProvider,\n  GetListResult,\n  GetOneParams,\n  GetOneResult,\n} from 'react-admin'\nimport { ACCESSES_URL, USERS_URL } from '../api-urls'\nimport { getWithPagination, get } from '../common/fetch.utils'\nimport { AccessDto } from '../dto/access.dto'\nimport { UserDto } from '../dto/user.dto'\nimport { Access } from './access'\nimport { getFilterMapper } from './access-filter.mapper'\nimport { mapSortAccessParam } from './access-sort.mapper'\nimport { AccessParams } from './access.params'\n\nconst getFilterParams = (filter: Partial<Access>) => {\n  if (Object.keys(filter).length) {\n    const filterParams = Object.entries(filter).map(([key, value]) => {\n      const mapper = getFilterMapper(key as keyof Access)\n      return mapper('a', value as string)\n    })\n    return filterParams.reduce((p, c) => `${p}&&${c}`)\n  }\n  return 'true'\n}\n\nconst provider = {\n  getList: async (\n    resource: string,\n    {\n      filter,\n      sort: { field, order },\n      pagination: { page, perPage },\n    }: AccessParams,\n  ): Promise<GetListResult<Access>> => {\n    const filterParams = `a=>${getFilterParams(filter).toString()}`\n    const queryParams: string[] = []\n    queryParams.push(`sortBy=${mapSortAccessParam(field)}`)\n    queryParams.push(`sortOrder=${order}`)\n    queryParams.push(`rangeFrom=${page * perPage - perPage}`)\n    queryParams.push(`rangeTo=${page * perPage}`)\n\n    const pathParams = queryParams.reduce((p, c) => `${p}&${c}`)\n    const path = `/${filterParams}?${pathParams}`\n\n    const { data } = await getWithPagination<AccessDto[]>(\n      `${ACCESSES_URL}/GetByConditions`,\n      path,\n    )\n    const accesses = data.map(\n      ({\n        id,\n        name,\n        bonus,\n        entranceId,\n        allowReenter,\n        multipleEntry,\n        multiple,\n        usePriority,\n        isTicketUnlockWithNextDay,\n        releaseTime,\n        releaseDayOfWeek,\n        releaseDayOfMonth,\n        delay,\n        activePeriod,\n        activePeriodStartingFrom,\n        variantsIds,\n        accessDatesIds,\n        createdById,\n        modifiedById,\n        createdAt,\n        modifiedAt,\n      }) =>\n        ({\n          id,\n          name,\n          bonus,\n          entranceId,\n          allowReenter,\n          multipleEntry,\n          multiple,\n          usePriority,\n          isTicketUnlockWithNextDay,\n          releaseTime,\n          releaseDayOfWeek,\n          releaseDayOfMonth,\n          delay,\n          activePeriod,\n          activePeriodStartingFrom,\n          variantsIds,\n          accessDatesIds,\n          createdById,\n          modifiedById,\n          createdAt,\n          modifiedAt,\n        } as Access),\n    )\n\n    return Promise.resolve({\n      data: accesses,\n      total: accesses.length,\n    })\n  },\n  getOne: async (\n    resource: string,\n    { id }: GetOneParams,\n  ): Promise<GetOneResult<Access>> => {\n    const access = await get<AccessDto>(ACCESSES_URL, `/${id}`)\n    const modifiedBy = await get<UserDto>(\n      USERS_URL,\n      access.modifiedById.toString(),\n    )\n    const createdBy =\n      access.modifiedById === access.createdById\n        ? modifiedBy\n        : await get<UserDto>(USERS_URL, access.createdById.toString())\n    return {\n      data: {\n        ...access,\n        modifiedByName: modifiedBy.userName,\n        createdByName: createdBy.userName,\n      },\n    }\n  },\n} as DataProvider\n\nexport default provider\n","import { EventDto } from \"../dto/event/event.dto\"\n\nconst mapping: Partial<Record<keyof EventDto, string>> = {\n  id: 'e=>e.Id',\n  name: 'e=>e.Name',\n  dateStart: 'e=>e.DateStart',\n  dateEnd: 'e=>e.DateEnd',\n  status: 'e=>e.Status'\n}\n\nexport const mapSortEventParam = (key: keyof EventDto) => mapping[key]\n","import { DataProvider, GetListParams, GetListResult, GetOneParams, GetOneResult, Identifier, UpdateParams, UpdateResult, CreateParams, CreateResult } from \"react-admin\"\nimport { EVENTS_URL } from \"../api-urls\"\nimport { CacheableDataProviderExtensionResult, DataProviderExtensionResult } from \"../common/data-provider\"\nimport { DateTime } from \"../common/date-time\"\nimport { get, getWithPagination, patch, post, put } from \"../common/fetch.utils\"\nimport { ALL_RESULTS } from \"../common/filter.values\"\nimport { EventCompaniesDto } from \"../dto/event/event-companies.dto\"\nimport { EventDevicesDto } from \"../dto/event/event-devices.dto\"\nimport { EventObjectsDto } from \"../dto/event/event-objects.dto\"\nimport { EventDto } from \"../dto/event/event.dto\"\nimport { EventStatus } from \"../enum/EventStatus\"\nimport { mapSortEventParam } from './event-sort.mapper'\n\ntype EventUpdateRequest = {\n  id: number,\n  name?: string,\n  dateStart?: DateTime,\n  dateEnd?: DateTime,\n  status?: EventStatus\n}\n\ninterface EventListParams extends GetListParams {\n  readonly sort: {\n    readonly field: keyof EventDto\n    readonly order: 'ASC' | 'DESC'\n  }\n  readonly filter:\n  {\n    readonly name: string\n  }\n}\n\nconst provider = {\n  getList: async (\n    resource: string,\n    {\n      filter: { name },\n      sort: { field, order },\n      pagination: { page, perPage }\n    }: EventListParams,\n  ): Promise<GetListResult<EventDto>> => {\n\n    const queryParams: string[] = []\n    queryParams.push(`sortBy=${mapSortEventParam(field)}`)\n    queryParams.push(`sortOrder=${order}`)\n    queryParams.push(`rangeFrom=${page * perPage - perPage}`)\n    queryParams.push(`rangeTo=${page * perPage}`)\n    const pathParams = queryParams.reduce((p, c) => `${p}&${c}`)\n    const { data, range: { total } } = await getWithPagination<EventDto[]>(`${EVENTS_URL}/GetByConditions/`, `${name ? `e=>e.Name.Contains(\"${name}\")` : ALL_RESULTS}?${pathParams}`)\n\n    return Promise.resolve({\n      data,\n      total\n    })\n  },\n  getOne: async (\n    resource: string,\n    { id }: GetOneParams\n  ): Promise<GetOneResult<EventDto>> => {\n    const event = await get<EventDto>(EVENTS_URL, `/${id}`)\n\n    return {\n      data: event\n    }\n  },\n  create: async (\n    resource: string,\n    { data }: CreateParams\n  ): Promise<CreateResult<EventDto>> => {\n    const event = await post<CreateEventRequest[], EventDto[]>(EVENTS_URL, [{\n      ...data,\n      dateStart:\n        new Date(new Date(data?.dateStart).getTime() - (new Date(data?.dateStart).getTimezoneOffset() * 60000)).toJSON() as DateTime,\n      dateEnd:\n        new Date(new Date(data?.dateEnd).getTime() - (new Date(data?.dateEnd).getTimezoneOffset() * 60000)).toJSON() as DateTime\n    }])\n\n    return {\n      data: event[0]\n    }\n  },\n  update: async (\n    resource: string,\n    { id, data, previousData }: UpdateParams\n  ): Promise<UpdateResult> => {\n    const { name, dateStart, dateEnd } = data\n\n    let eventUpdate = data\n    if (previousData) {\n      const { name: previousName, dateStart: previousDateStart, dateEnd: previousDateEnd } = previousData\n      eventUpdate = await patch<EventUpdateRequest, EventDto>(EVENTS_URL, {\n        id: parseInt(id as string, 10),\n        name: name ?? previousName,\n        dateStart: dateStart ?\n          new Date(new Date(dateStart).getTime() - (new Date(dateStart).getTimezoneOffset() * 60000)).toJSON() as DateTime :\n          previousDateStart,\n        dateEnd: dateEnd ?\n          new Date(new Date(dateEnd).getTime() - (new Date(dateEnd).getTimezoneOffset() * 60000)).toJSON() as DateTime :\n          previousDateEnd\n      })\n    }\n\n    return Promise.resolve({\n      data: { id, ...data, ...eventUpdate }\n    })\n  },\n  activate: async (\n    resource: string,\n    { eventId }: ChangeStateParams\n  ): Promise<DataProviderExtensionResult<ChangeStateResponse>> => {\n    const activate = await put<undefined, ChangeStateResponse>\n      (`${EVENTS_URL}/ActivateAsyncJob/${eventId}`, undefined)\n    return {\n      data: activate\n    }\n  },\n  deactivate: async (\n    resource: string,\n    { eventId }: ChangeStateParams\n  ): Promise<DataProviderExtensionResult<ChangeStateResponse>> => {\n    const deactivate = await put<undefined, ChangeStateResponse>\n      (`${EVENTS_URL}/DeactivateAsyncJob/${eventId}`, undefined)\n    return {\n      data: deactivate\n    }\n  },\n  getCompaniesList: async (\n    resource: string,\n    { eventId }: GetCompaniesParams\n  ): Promise<CacheableDataProviderExtensionResult<EventCompaniesDto>> => {\n    const companies = await get<EventCompaniesDto>\n      (`${EVENTS_URL}`, `/GetCompanies/${eventId}`)\n    return {\n      data: companies\n    }\n  },\n  attachCompanies: async (\n    resource: string,\n    params: EventCompaniesDto\n  ): Promise<CacheableDataProviderExtensionResult<EventCompaniesDto>> => {\n    const eventCompanies = await put<EventCompaniesDto, EventCompaniesDto>\n      (`${EVENTS_URL}/AttachCompanies`, params)\n    return {\n      data: eventCompanies\n    }\n  },\n  detachCompanies: async (\n    resource: string,\n    params: EventCompaniesDto\n  ): Promise<CacheableDataProviderExtensionResult<EventCompaniesDto>> => {\n    const eventCompanies = await put<EventCompaniesDto, EventCompaniesDto>\n      (`${EVENTS_URL}/DetachCompanies`, params)\n    return {\n      data: eventCompanies\n    }\n  },\n  attachObjects: async (\n    resource: string,\n    params: EventObjectsDto\n  ): Promise<CacheableDataProviderExtensionResult<EventObjectsDto>> => {\n    const eventObjects = await put<EventObjectsDto, EventObjectsDto>\n      (`${EVENTS_URL}/AttachObjects`, params)\n    return {\n      data: eventObjects\n    }\n  },\n  detachObjects: async (\n    resource: string,\n    params: EventObjectsDto\n  ): Promise<CacheableDataProviderExtensionResult<EventObjectsDto>> => {\n    const eventObjects = await put<EventObjectsDto, EventObjectsDto>\n      (`${EVENTS_URL}/DetachObjects`, params)\n    return {\n      data: eventObjects\n    }\n  },\n  getDevicesList: async (\n    resource: string,\n    { eventId }: GetDevicesParams\n  ): Promise<CacheableDataProviderExtensionResult<EventDevicesDto>> => {\n    const devices = await get<EventDevicesDto>\n      (`${EVENTS_URL}`, `/GetDevices/${eventId}`)\n    return {\n      data: devices\n    }\n  },\n  attachDevices: async (\n    resource: string,\n    params: EventDevicesDto\n  ): Promise<CacheableDataProviderExtensionResult<EventDevicesDto>> => {\n    const eventDevices = await put<EventDevicesDto, EventDevicesDto>\n      (`${EVENTS_URL}/AttachDevices`, params)\n    return {\n      data: eventDevices\n    }\n  },\n  detachDevices: async (\n    resource: string,\n    params: EventDevicesDto\n  ): Promise<CacheableDataProviderExtensionResult<EventDevicesDto>> => {\n    const eventDevices = await put<EventDevicesDto, EventDevicesDto>\n      (`${EVENTS_URL}/DetachDevices`, params)\n    return {\n      data: eventDevices\n    }\n  }\n} as EventDataProvider\n\ninterface EventDataProvider extends DataProvider {\n  activate: (\n    resource: string,\n    params: ChangeStateParams\n  ) => Promise<DataProviderExtensionResult<ChangeStateResponse>>;\n\n  deactivate: (\n    resource: string,\n    params: ChangeStateParams\n  ) => Promise<DataProviderExtensionResult<ChangeStateResponse>>;\n\n  getCompaniesList: (\n    resource: string,\n    params: GetCompaniesParams\n  ) => Promise<CacheableDataProviderExtensionResult<EventCompaniesDto>>;\n\n  attachCompanies: (\n    resource: string,\n    params: EventCompaniesDto\n  ) => Promise<CacheableDataProviderExtensionResult<EventCompaniesDto>>;\n\n  detachCompanies: (\n    resource: string,\n    params: EventCompaniesDto\n  ) => Promise<CacheableDataProviderExtensionResult<EventCompaniesDto>>;\n\n  getObjectsList: (\n    resource: string,\n    params: GetObjectsParams\n  ) => Promise<CacheableDataProviderExtensionResult<EventObjectsDto>>;\n\n  attachObjects: (\n    resource: string,\n    params: EventObjectsDto\n  ) => Promise<CacheableDataProviderExtensionResult<EventObjectsDto>>;\n\n  detachObjects: (\n    resource: string,\n    params: EventObjectsDto\n  ) => Promise<CacheableDataProviderExtensionResult<EventObjectsDto>>;\n\n  getDevicesList: (\n    resource: string,\n    params: GetDevicesParams\n  ) => Promise<CacheableDataProviderExtensionResult<EventDevicesDto>>;\n\n  attachDevices: (\n    resource: string,\n    params: EventDevicesDto\n  ) => Promise<CacheableDataProviderExtensionResult<EventDevicesDto>>;\n\n  detachDevices: (\n    resource: string,\n    params: EventDevicesDto\n  ) => Promise<CacheableDataProviderExtensionResult<EventDevicesDto>>;\n};\n\nexport interface ChangeStateParams {\n  eventId: Identifier;\n}\n\nexport interface ChangeStateResponse {\n  jobId: Identifier;\n}\n\nexport interface GetCompaniesParams {\n  eventId: Identifier;\n}\n\nexport interface GetObjectsParams {\n  eventId: Identifier;\n}\n\nexport interface GetDevicesParams {\n  eventId: Identifier;\n}\n\nexport interface CreateEventRequest {\n  readonly name: string\n  readonly status?: EventStatus\n  readonly dateStart: DateTime\n  readonly dateEnd: DateTime\n  readonly externalId?: string\n  readonly infix?: string\n  readonly objectsIds?: number[]\n}\n\nexport default provider","import { DataProvider, GetOneParams, GetOneResult } from \"react-admin\"\nimport { CustomerDetails } from \"./customer-details\"\nimport { CustomerDto } from \"../dto/customer.dto\"\nimport { CUSTOMERS_URL } from \"../api-urls\"\nimport { get } from '../common/fetch.utils'\n\nconst provider = {\n  getOne: async (\n    resource: string,\n    { id: customerId }: GetOneParams,\n  ): Promise<GetOneResult<CustomerDetails>> => {\n    const customer = await get<CustomerDto>(CUSTOMERS_URL, `/${customerId}`)\n    return {\n      data: customer as CustomerDetails\n    }\n  }\n} as DataProvider\n\nexport default provider","import { CustomerInfo } from \"./customer-info\"\n\nconst mapping: Partial<\n  Record<\n    keyof CustomerInfo | 'info',\n    (lambdaParameter: string, value: string | number) => string\n  >\n> = {\n  firstname: (lambdaParameter, value) => `${(lambdaParameter)}.Firstname.Contains(\"${value}\")`,\n  lastname: (lambdaParameter, value) => `${(lambdaParameter)}.Lastname.Contains(\"${value}\")`,\n  pesel: (lambdaParameter, value) => `${(lambdaParameter)}.Pesel.Contains(\"${value}\")`,\n  documentNumber: (lambdaParameter, value) => `${(lambdaParameter)}.DocumentNumber.Contains(\"${value}\")`,\n  info: (lambdaParameter, value) => `${value.toString().split(\" \").map((q) =>\n    `(${(lambdaParameter)}.Firstname+${(lambdaParameter)}.Lastname+${(lambdaParameter)}.Pesel+${(lambdaParameter)}.DocumentNumber).Contains(\"${q}\")`).join(\"&&\")}`,\n}\n\nexport const getFilterMapper = (key: keyof CustomerInfo) =>\n  mapping[key] as (lambdaParameter: string, value: string | number) => string\n","import { CustomerInfo } from './customer-info'\n\nconst mapping: Partial<Record<keyof CustomerInfo, string>> = {\n  id: 'c=>c.Id',\n  firstname: 'c=>c.Firstname',\n  lastname: 'c=>c.Lastname',\n  pesel: 'c=>c.Pesel',\n  documentNumber: 'c=>c.DocumentNumber'\n}\n\nexport const mapSortCustomerParams = (key: keyof CustomerInfo) => mapping[key]","import { GetListResult, DataProvider } from \"react-admin\";\nimport { CUSTOMERS_URL } from \"../api-urls\";\nimport { getWithPagination } from \"../common/fetch.utils\";\nimport { CustomerDto } from \"../dto/customer.dto\";\nimport { CustomerInfo } from \"./customer-info\";\nimport { getFilterMapper } from \"./customer-info-filter.mapper\";\nimport { mapSortCustomerParams } from \"./customer-info-sort.mapper\";\nimport { CustomerInfoFilter } from \"./customer-info.params\";\n\nconst getFilterParams = (\n  partialValues: Partial<CustomerInfo> & { readonly info: string },\n): string => {\n  if (Object.keys(partialValues).length) {\n    const filterParams = Object.entries(partialValues).map(([key, value]) => {\n      const mapper = getFilterMapper(key as keyof CustomerInfo)\n      return mapper('c', value as string)\n    })\n    return filterParams.reduce((p, c) => `${p}&&${c}`)\n  }\n  return 'true'\n}\n\nconst provider = {\n  getList: async (\n    resource: string,\n    { filter, sort, pagination }: CustomerInfoFilter\n  ): Promise<GetListResult<CustomerInfo>> => {\n    const filterParams = `c=>${getFilterParams(filter)}`\n    const queryParams: string[] = []\n    if (!!pagination && !!sort) {\n      queryParams.push(`sortBy=${mapSortCustomerParams(sort.field)}`)\n      queryParams.push(`sortOrder=${sort.order}`)\n      queryParams.push(`rangeFrom=${pagination.page * pagination.perPage - pagination.perPage}`)\n      queryParams.push(`rangeTo=${pagination.page * pagination.perPage}`)\n    }\n    else queryParams.push('')\n    const pathParams = queryParams.reduce((p, c) => `${p}&${c}`)\n    const path = `/${filterParams}?${pathParams}`\n\n    const { data, range: { total } } = await getWithPagination<CustomerDto[]>(\n      `${CUSTOMERS_URL}/GetByConditions`,\n      path\n    )\n\n    return Promise.resolve({\n      data,\n      total\n    })\n  }\n} as DataProvider\n\nexport default provider","import { AccessDateDto } from '../dto/access-date.dto'\n\nconst mapping: Partial<\n  Record<keyof AccessDateDto, (lambdaParameter: string, value: string | number) => string>\n> = {\n  id: (lambdaParameter, value) => value.toString().split(\",\").map((v) => `${v}==${lambdaParameter}.Id`).join(\"&&\"),\n}\n\nexport const getFilterMapper = (key: keyof AccessDateDto) =>\n  mapping[key] as (lambdaParameter: string, value: string | number) => string\n","import { AccessDateDto } from \"../dto/access-date.dto\"\n\nconst mapping: Partial<Record<keyof AccessDateDto, string>> = {\n  id: 'au=>au.Id',\n  activeFrom: 'au=>au.ActiveFrom',\n  activeTo: 'au=>au.ActiveTo',\n  type: 'au=>au.Type'\n}\n\nexport const mapSortAccessDatesParam = (key: keyof AccessDateDto) => mapping[key]","import {\n  DataProvider, GetListResult\n} from 'react-admin'\nimport { AccessDateDto } from '../dto/access-date.dto'\nimport { getFilterMapper } from './access-dates-filter.mapper'\nimport { AccessDatesListParams } from './access-dates-list.params'\nimport { mapSortAccessDatesParam } from './access-dates-sort.mapper'\nimport { getWithPagination } from '../common/fetch.utils'\nimport { ACCESS_DATES } from '../api-urls'\n\nconst getFilterParams = (filter: Partial<AccessDateDto>) => {\n  if (Object.keys(filter).length) {\n    const filterParams = Object.entries(filter).map(([key, value]) => {\n      const mapper = getFilterMapper(key as keyof AccessDateDto)\n      return mapper(\"ad\", value as string)\n    })\n    return filterParams.reduce((p, c) => `${p}&&${c}`)\n  }\n  return \"true\"\n}\n\nconst provider = {\n  getList: async (\n    resource: string,\n    {\n      filter,\n      sort: { field, order },\n      pagination: { page, perPage }\n    }: AccessDatesListParams\n  ): Promise<GetListResult<AccessDateDto>> => {\n    const filterParams = `ad=>${getFilterParams(filter).toString()}`\n    const queryParams: string[] = []\n    queryParams.push(`sortBy=${mapSortAccessDatesParam(field)}`)\n    queryParams.push(`sortOrder=${order}`)\n    queryParams.push(`rangeFrom=${page * perPage - perPage}`)\n    queryParams.push(`rangeTo=${page * perPage}`)\n\n    const pathParams = queryParams.reduce((p, c) => `${p}&${c}`)\n    const path = `/${filterParams}?${pathParams}`\n\n    const {\n      data,\n      range: { total }\n    } = await getWithPagination<AccessDateDto[]>(`${ACCESS_DATES}/GetByConditions`, path)\n\n    return Promise.resolve({\n      data,\n      total\n    })\n  }\n} as DataProvider\n\nexport default provider","import { CompanyDto } from \"../dto/company.dto\"\n\nconst mapping: Partial<\n  Record<\n    keyof CompanyDto,\n    (lambdaParameter: string, value: string | number) => string\n  >\n> = {\n  name: (lambdaParameter, value) => `${(lambdaParameter)}.Name.Contains(\"${value}\")`\n}\n\nexport const getFilterMapper = (key: keyof CompanyDto) =>\n  mapping[key] as (lambdaParameter: string, value: string | number) => string\n","import { CompanyDto } from \"../dto/company.dto\"\n\nconst mapping: Partial<Record<keyof CompanyDto, string>> = {\n  id: 'c=>c.Id'\n}\n\nexport const mapSortCompanyParam = (key: keyof CompanyDto) => mapping[key]\n","import { DataProvider, GetListResult } from \"react-admin\"\nimport { COMPANIES_URL } from \"../api-urls\"\nimport { getWithPagination } from \"../common/fetch.utils\"\nimport { CompanyDto } from \"../dto/company.dto\"\nimport { getFilterMapper } from \"./company-filter.mapper\"\nimport { CompanyListParams } from \"./company-list.params\"\nimport { mapSortCompanyParam } from \"./company-sort.mapper\"\n\nconst getFilterParams = (\n  partialValues: Partial<CompanyDto>\n): string => {\n  if (Object.keys(partialValues).length) {\n    const filterParams = Object.entries(partialValues).map(([key, value]) => {\n      const mapper = getFilterMapper(key as keyof CompanyDto)\n      return mapper('c', value as string)\n    })\n    return filterParams.reduce((p, c) => `${p}&&${c}`)\n  }\n  return 'true'\n}\n\nconst provider = {\n  getList: async (\n    resource: string,\n    {\n      filter: { ...filter },\n      sort: { field, order },\n      pagination: { page, perPage }\n    }: CompanyListParams\n  ): Promise<GetListResult<CompanyDto>> => {\n\n    const filterParams = `c=>${getFilterParams(filter)}`\n    const queryParams: string[] = []\n    queryParams.push(`sortBy=${mapSortCompanyParam(field)}`)\n    queryParams.push(`sortOrder=${order}`)\n    queryParams.push(`rangeFrom=${page * perPage - perPage}`)\n    queryParams.push(`rangeTo=${page * perPage}`)\n    const pathParams = queryParams.reduce((p, c) => `${p}&${c}`)\n    const path = `/${filterParams}?${pathParams}`\n\n    const { data, range: { total } } = await getWithPagination<CompanyDto[]>(COMPANIES_URL, path)\n\n    return Promise.resolve({\n      data,\n      total\n    })\n  }\n} as DataProvider\n\nexport default provider","import { ObjectDto } from \"../dto/object.dto\"\n\nconst mapping: Partial<\n  Record<\n    keyof ObjectDto,\n    (lambdaParameter: string, value: string | number) => string\n  >\n> = {\n  name: (lambdaParameter, value) => `${(lambdaParameter)}.Name.Contains(\"${value}\")`\n}\n\nexport const getFilterMapper = (key: keyof ObjectDto) =>\n  mapping[key] as (lambdaParameter: string, value: string | number) => string\n","import { ObjectDto } from \"../dto/object.dto\"\n\nconst mapping: Partial<Record<keyof ObjectDto, string>> = {\n  id: 'l=>l.Id'\n}\n\nexport const mapSortCompanyParam = (key: keyof ObjectDto) => mapping[key]\n","import { DataProvider, GetListResult } from \"react-admin\"\nimport { OBJECTS_URL } from \"../api-urls\"\nimport { getWithPagination } from \"../common/fetch.utils\"\nimport { ObjectDto } from \"../dto/object.dto\"\nimport { getFilterMapper } from \"./object-filter.mapper\"\nimport { ObjectListParams } from \"./object-list.params\"\nimport { mapSortCompanyParam } from \"./object-sort.mapper\"\n\nconst getFilterParams = (\n  partialValues: Partial<ObjectDto>\n): string => {\n  if (Object.keys(partialValues).length > 0) {\n    const filterParams = Object.entries(partialValues).map(([key, value]) => {\n      const mapper = getFilterMapper(key as keyof ObjectDto)\n      return mapper('o', value as string)\n    })\n    return filterParams.reduce((p, c) => `${p}&&${c}`)\n  }\n  return 'true'\n}\n\nconst provider = {\n  getList: async (\n    resource: string,\n    {\n      filter: { ...filter },\n      sort: { field, order },\n      pagination: { page, perPage }\n    }: ObjectListParams\n  ): Promise<GetListResult<ObjectDto>> => {\n\n    const filterParams = `o=>${getFilterParams(filter)}`\n    const queryParams: string[] = []\n    queryParams.push(`sortBy=${mapSortCompanyParam(field)}`)\n    queryParams.push(`sortOrder=${order}`)\n    queryParams.push(`rangeFrom=${page * perPage - perPage}`)\n    queryParams.push(`rangeTo=${page * perPage}`)\n    const pathParams = queryParams.reduce((p, c) => `${p}&${c}`)\n    const path = `/${filterParams}?${pathParams}`\n\n    const { data, range: { total } } = await getWithPagination<ObjectDto[]>(`${OBJECTS_URL}/GetByConditions`, path)\n\n    return Promise.resolve({\n      data,\n      total\n    })\n  }\n} as DataProvider\n\nexport default provider","import { PalmDto } from \"../../dto/device/palm/palm.dto\"\n\nconst mapping: Partial<\n  Record<\n    keyof PalmDto,\n    (lambdaParameter: string, value: string | number) => string\n  >\n> = {\n  name: (lambdaParameter, value) => `${(lambdaParameter)}.Name.Contains(\"${value}\")`,\n  categoryId: (lambdaParameter, value) => `${(lambdaParameter)}.CategoryId==${value}`\n}\n\nexport const getFilterMapper = (key: keyof PalmDto) =>\n  mapping[key] as (lambdaParameter: string, value: string | number) => string","import { PalmDto } from \"../../dto/device/palm/palm.dto\"\n\n\nconst mapping: Partial<Record<keyof PalmDto, string>> = {\n  id: 'p=>p.Id',\n  name: \"p=>p.Name\"\n}\n\nexport const mapSortPalmParam = (key: keyof PalmDto) => mapping[key]\n","import { DataProvider, GetListResult, GetOneParams, GetOneResult, Identifier, UpdateParams, UpdateResult } from \"react-admin\"\nimport { PALMS_URL } from \"../../api-urls\"\nimport { CacheableDataProviderExtensionResult, DataProviderExtensionResult } from \"../../common/data-provider\"\nimport { DateTime } from \"../../common/date-time\"\nimport { get, getWithPagination, patch, put } from \"../../common/fetch.utils\"\nimport { PalmEntrancesDto } from \"../../dto/device/palm/palm-entrances.dto\"\nimport { PalmEventsDto } from \"../../dto/device/palm/palm-events.dto\"\nimport { PalmDto } from \"../../dto/device/palm/palm.dto\"\nimport { PalmLockResult } from \"../../enum/PalmLockResult\"\nimport { PalmResetMobileDeviceIdResults } from \"../../enum/PalmResetMobileDeviceIdResults\"\nimport { PalmSetMobileDeviceIdResults } from \"../../enum/PalmSetMobileDeviceIdResults\"\nimport { PalmUnlockResult } from \"../../enum/PalmUnlockResult\"\nimport { getFilterMapper } from \"./palm-filter.mapper\"\nimport { PalmListParams } from \"./palm-list.params\"\nimport { mapSortPalmParam } from \"./palm-sort.mapper\"\n\nconst getFilterParams = (\n  partialValues: Partial<PalmDto>\n): string => {\n  if (Object.keys(partialValues).length) {\n    const filterParams = Object.entries(partialValues).map(([key, value]) => {\n      const mapper = getFilterMapper(key as keyof PalmDto)\n      return mapper('o', value as string)\n    })\n    return filterParams.reduce((p, c) => `${p}&&${c}`)\n  }\n  return 'true'\n}\n\nconst provider = {\n  getList: async (\n    resource: string,\n    {\n      filter: { ...filter },\n      sort: { field, order },\n      pagination: { page, perPage }\n    }: PalmListParams\n  ): Promise<GetListResult<PalmDto>> => {\n\n    const filterParams = `o=>${getFilterParams(filter)}`\n    const queryParams: string[] = []\n    queryParams.push(`sortBy=${mapSortPalmParam(field)}`)\n    queryParams.push(`sortOrder=${order}`)\n    queryParams.push(`rangeFrom=${page * perPage - perPage}`)\n    queryParams.push(`rangeTo=${page * perPage - 1}`)\n    const pathParams = queryParams.reduce((p, c) => `${p}&${c}`)\n    const path = `/${filterParams}?${pathParams}`\n\n    const { data, range: { total } } = await getWithPagination<PalmDto[]>(`${PALMS_URL}/GetByConditions`, path)\n\n    return Promise.resolve({\n      data,\n      total\n    })\n  },\n  getOne: async (\n    resource: string,\n    { id }: GetOneParams\n  ): Promise<GetOneResult<PalmDto>> => {\n    const data = await get<PalmDto>(PALMS_URL, `/${id}`)\n    return Promise.resolve({\n      data\n    })\n  },\n  update: async (\n    resource: string,\n    { id, data, previousData }: UpdateParams\n  ): Promise<UpdateResult> => {\n    const update = await patch<{ id: Identifier, [n: string]: any }, PalmDto>(PALMS_URL, {\n      id,\n      name: data.name || previousData.name,\n      isWatched: data.isWatched,\n      lastRefresh: new Date(new Date(data.lastRefresh).getTime() - (new Date(data.lastRefresh).getTimezoneOffset() * 60000)).toJSON() as DateTime || previousData.lastRefresh,\n      direction: data.direction || previousData.direction,\n      categoryId: data.categoryId || previousData.categoryId,\n      onlineInfixCeck: data.onlineInfixCeck,\n      multiplicity: data.multiplicity || previousData.multiplicity\n    })\n    return Promise.resolve({ data: update })\n  },\n  lock: async (\n    resource: string,\n    { palmId, lockName }: LockParams\n  ): Promise<DataProviderExtensionResult<LockResponse>> => {\n    const data = await put<LockParams, LockResponse>(`${PALMS_URL}/Lock`, {\n      palmId,\n      lockName\n    })\n    return Promise.resolve({ data })\n  },\n  unlock: async (\n    resource: string,\n    { palmId }: UnlockParams\n  ): Promise<DataProviderExtensionResult<UnlockResponse>> => {\n    const data = await put<UnlockParams, UnlockResponse>(`${PALMS_URL}/Unlock`, {\n      palmId\n    })\n    return Promise.resolve({ data: { ...data, disabled: undefined } })\n  },\n  setMobileDeviceId: async (\n    resource: string,\n    { palmId, mobileDeviceId }: SetMobileDeviceIdParams\n  ): Promise<DataProviderExtensionResult<SetMobileDeviceIdResponse>> => {\n    const data = await put<SetMobileDeviceIdParams, SetMobileDeviceIdResponse>(`${PALMS_URL}/SetMobileDeviceId`, {\n      palmId,\n      mobileDeviceId\n    })\n    return Promise.resolve({ data })\n  },\n  resetMobileDeviceId: async (\n    resource: string,\n    { palmId }: ResetMobileDeviceIdParams\n  ): Promise<DataProviderExtensionResult<ResetMobileDeviceIdResponse>> => {\n    const data = await put<ResetMobileDeviceIdParams, ResetMobileDeviceIdResponse>(`${PALMS_URL}/ResetMobileDeviceId`, {\n      palmId\n    })\n    return Promise.resolve({ data: { ...data, mobileDeviceId: undefined } })\n  },\n  attachEvents: async (\n    resource: string,\n    { palmId, eventsIds }: PalmEventsDto\n  ): Promise<CacheableDataProviderExtensionResult<PalmEventsDto>> => {\n    const data = await put<PalmEventsDto, PalmEventsDto>(`${PALMS_URL}/AttachEvents`, {\n      palmId,\n      eventsIds\n    })\n    return Promise.resolve({ data })\n  },\n  detachEvents: async (\n    resource: string,\n    { palmId, eventsIds }: PalmEventsDto\n  ): Promise<CacheableDataProviderExtensionResult<PalmEventsDto>> => {\n    const data = await put<PalmEventsDto, PalmEventsDto>(`${PALMS_URL}/DetachEvents`, {\n      palmId,\n      eventsIds\n    })\n    return Promise.resolve({ data })\n  },\n  attachEntrances: async (\n    resource: string,\n    { palmId, entrancesIds }: PalmEntrancesDto\n  ): Promise<CacheableDataProviderExtensionResult<PalmEntrancesDto>> => {\n    const data = await put<PalmEntrancesDto, PalmEntrancesDto>(`${PALMS_URL}/AttachEntrances`, {\n      palmId,\n      entrancesIds\n    })\n    return Promise.resolve({ data })\n  },\n  detachEntrances: async (\n    resource: string,\n    { palmId, entrancesIds }: PalmEntrancesDto\n  ): Promise<CacheableDataProviderExtensionResult<PalmEntrancesDto>> => {\n    const data = await put<PalmEntrancesDto, PalmEntrancesDto>(`${PALMS_URL}/DetachEntrances`, {\n      palmId,\n      entrancesIds\n    })\n    return Promise.resolve({ data })\n  }\n} as PalmDataProvider\n\ninterface PalmDataProvider extends DataProvider {\n  lock: (\n    resource: string,\n    params: LockParams\n  ) => Promise<DataProviderExtensionResult<LockResponse>>,\n\n  unlock: (\n    resource: string,\n    params: UnlockParams\n  ) => Promise<DataProviderExtensionResult<UnlockResponse>>,\n\n  setMobileDeviceId: (\n    resource: string,\n    params: SetMobileDeviceIdParams\n  ) => Promise<DataProviderExtensionResult<SetMobileDeviceIdResponse>>,\n\n  resetMobileDeviceId: (\n    resource: string,\n    params: ResetMobileDeviceIdParams\n  ) => Promise<DataProviderExtensionResult<ResetMobileDeviceIdResponse>>,\n\n  attachEvents: (\n    resource: string,\n    params: PalmEventsDto\n  ) => Promise<CacheableDataProviderExtensionResult<PalmEventsDto>>,\n\n  detachEvents: (\n    resource: string,\n    params: PalmEventsDto\n  ) => Promise<CacheableDataProviderExtensionResult<PalmEventsDto>>,\n\n  attachEntrances: (\n    resource: string,\n    params: PalmEntrancesDto\n  ) => Promise<CacheableDataProviderExtensionResult<PalmEntrancesDto>>,\n\n  detachEntrances: (\n    resource: string,\n    params: PalmEntrancesDto\n  ) => Promise<CacheableDataProviderExtensionResult<PalmEntrancesDto>>\n}\n\nexport interface LockParams {\n  palmId: Identifier,\n  lockName: string\n}\n\nexport interface LockResponse {\n  palmId: Identifier,\n  lockName: string,\n  lockResult: PalmLockResult\n}\n\nexport interface UnlockParams {\n  palmId: Identifier\n}\n\nexport interface UnlockResponse {\n  palmId: Identifier,\n  unlockResult: PalmUnlockResult\n}\n\nexport interface SetMobileDeviceIdParams {\n  palmId: Identifier,\n  mobileDeviceId: string\n}\n\nexport interface SetMobileDeviceIdResponse {\n  palmId: Identifier,\n  mobileDeviceId: string,\n  setResult: PalmSetMobileDeviceIdResults\n}\n\nexport interface ResetMobileDeviceIdParams {\n  palmId: Identifier\n}\n\nexport interface ResetMobileDeviceIdResponse {\n  palmId: Identifier,\n  resetResult: PalmResetMobileDeviceIdResults\n}\n\nexport default provider","import { EngineDto } from \"../../dto/device/engine/engine.dto\"\n\nconst mapping: Partial<\n  Record<\n    keyof EngineDto,\n    (lambdaParameter: string, value: string | number) => string\n  >\n> = {\n  name: (lambdaParameter, value) => `${(lambdaParameter)}.Name.Contains(\"${value}\")`,\n  categoryId: (lambdaParameter, value) => `${(lambdaParameter)}.CategoryId==${value}`\n}\n\nexport const getFilterMapper = (key: keyof EngineDto) =>\n  mapping[key] as (lambdaParameter: string, value: string | number) => string\n","import { EngineDto } from \"../../dto/device/engine/engine.dto\"\n\nconst mapping: Partial<Record<keyof EngineDto, string>> = {\n  id: 'l=>l.Id',\n  name: \"p=>p.Name\",\n  address: \"p=>p.Address\"\n}\n\nexport const mapSortEngineParam = (key: keyof EngineDto) => mapping[key]\n","import { DataProvider, GetListResult, GetOneParams, GetOneResult, Identifier, UpdateParams, UpdateResult } from \"react-admin\"\nimport { ENGINES_URL } from \"../../api-urls\"\nimport { CacheableDataProviderExtensionResult, DataProviderExtensionResult } from \"../../common/data-provider\"\nimport { DateTime } from \"../../common/date-time\"\nimport { get, getWithPagination, patch, put } from \"../../common/fetch.utils\"\nimport { EngineEntrancesDto } from \"../../dto/device/engine/engine-entrances.dto\"\nimport { EngineEventsDto } from \"../../dto/device/engine/engine-events.dto\"\nimport { EngineDto } from \"../../dto/device/engine/engine.dto\"\nimport { RemoveTSCanCredentialsDto } from \"../../dto/device/engine/remove-tscan-credentials.dto\"\nimport { SetStandbyModeDto } from \"../../dto/device/engine/set-standby-mode.dto\"\nimport { SetTSCanCredentialsDto } from \"../../dto/device/engine/set-tscan-credentials.dto\"\nimport { EngineLockResults } from \"../../enum/EngineLockResults\"\nimport { EngineUnlockResults } from \"../../enum/EngineUnlockResults\"\nimport { getFilterMapper } from \"./engine-filter.mapper\"\nimport { EngineListParams } from \"./engine-list.params\"\nimport { mapSortEngineParam } from \"./engine-sort.mapper\"\n\nconst getFilterParams = (\n  partialValues: Partial<EngineDto>\n): string => {\n  if (Object.keys(partialValues).length) {\n    const filterParams = Object.entries(partialValues).map(([key, value]) => {\n      const mapper = getFilterMapper(key as keyof EngineDto)\n      return mapper('o', value as string)\n    })\n    return filterParams.reduce((p, c) => `${p}&&${c}`)\n  }\n  return 'true'\n}\n\nconst provider = {\n  getList: async (\n    resource: string,\n    {\n      filter: { ...filter },\n      sort: { field, order },\n      pagination: { page, perPage }\n    }: EngineListParams\n  ): Promise<GetListResult<EngineDto>> => {\n\n    const filterParams = `o=>${getFilterParams(filter)}`\n    const queryParams: string[] = []\n    queryParams.push(`sortBy=${mapSortEngineParam(field)}`)\n    queryParams.push(`sortOrder=${order}`)\n    queryParams.push(`rangeFrom=${page * perPage - perPage}`)\n    queryParams.push(`rangeTo=${page * perPage - 1}`)\n    const pathParams = queryParams.reduce((p, c) => `${p}&${c}`)\n    const path = `/${filterParams}?${pathParams}`\n\n    const { data, range: { total } } = await getWithPagination<EngineDto[]>(`${ENGINES_URL}/GetByConditions`, path)\n\n    return Promise.resolve({\n      data,\n      total\n    })\n  },\n  getOne: async (\n    resource: string,\n    { id }: GetOneParams\n  ): Promise<GetOneResult<EngineDto>> => {\n    const data = await get<EngineDto>(ENGINES_URL, `/${id}`)\n    return Promise.resolve({\n      data\n    })\n  },\n  update: async (\n    resource: string,\n    { id, data, previousData }: UpdateParams\n  ): Promise<UpdateResult> => {\n    const update = await patch<{ id: Identifier, [n: string]: any }, EngineDto>(ENGINES_URL, {\n      id,\n      name: data.name || previousData.name,\n      isWatched: data.isWatched,\n      lastRefresh: new Date(new Date(data.lastRefresh).getTime() - (new Date(data.lastRefresh).getTimezoneOffset() * 60000)).toJSON() as DateTime || previousData.lastRefresh,\n      address: data.address || previousData.address,\n      direction: data.direction || previousData.direction,\n      categoryId: data.categoryId || previousData.categoryId,\n      onlineInfixCeck: data.onlineInfixCeck,\n      multiplicity: data.multiplicity || previousData.multiplicity\n    })\n    return Promise.resolve({ data: update })\n  },\n  attachEvents: async (\n    resource: string,\n    params: EngineEventsDto\n  ): Promise<CacheableDataProviderExtensionResult<EngineEventsDto>> => {\n    const engineEvents = await put<EngineEventsDto, EngineEventsDto>\n      (`${ENGINES_URL}/AttachEvents`, params)\n    return {\n      data: engineEvents\n    }\n  },\n  detachEvents: async (\n    resource: string,\n    params: EngineEventsDto\n  ): Promise<CacheableDataProviderExtensionResult<EngineEventsDto>> => {\n    const engineEvents = await put<EngineEventsDto, EngineEventsDto>\n      (`${ENGINES_URL}/DetachEvents`, params)\n    return {\n      data: engineEvents\n    }\n  },\n  attachEntrances: async (\n    resource: string,\n    params: EngineEntrancesDto\n  ): Promise<CacheableDataProviderExtensionResult<EngineEntrancesDto>> => {\n    const engineEntrances = await put<EngineEntrancesDto, EngineEntrancesDto>\n      (`${ENGINES_URL}/AttachEntrances`, params)\n    return {\n      data: engineEntrances\n    }\n  },\n  detachEntrances: async (\n    resource: string,\n    params: EngineEntrancesDto\n  ): Promise<CacheableDataProviderExtensionResult<EngineEntrancesDto>> => {\n    const engineEntrances = await put<EngineEntrancesDto, EngineEntrancesDto>\n      (`${ENGINES_URL}/DetachEntrances`, params)\n    return {\n      data: engineEntrances\n    }\n  },\n  setTSCanCredentials: async (\n    resource: string,\n    params: SetTSCanCredentialsDto\n  ): Promise<DataProviderExtensionResult<SetTSCanCredentialsDto>> => {\n    const setTSCanCredentials = await put<SetTSCanCredentialsDto, SetTSCanCredentialsDto>\n      (`${ENGINES_URL}/SetTSCanCredentials`, params)\n    return {\n      data: setTSCanCredentials\n    }\n  },\n  removeTSCanCredentials: async (\n    resource: string,\n    params: RemoveTSCanCredentialsDto\n  ): Promise<DataProviderExtensionResult<RemoveTSCanCredentialsDto>> => {\n    const removeTSCanCredentials = await put<RemoveTSCanCredentialsDto, RemoveTSCanCredentialsDto>\n      (`${ENGINES_URL}/RemoveTSCanCredentials`, params)\n    return {\n      data: removeTSCanCredentials\n    }\n  },\n  lock: async (\n    resource: string,\n    params: LockParams\n  ): Promise<DataProviderExtensionResult<LockResponse>> => {\n    const lock = await put<LockParams, LockResponse>\n      (`${ENGINES_URL}/Lock`, params)\n    return {\n      data: lock\n    }\n  },\n  unlock: async (\n    resource: string,\n    params: UnlockParams\n  ): Promise<DataProviderExtensionResult<UnlockResponse>> => {\n    const unlock = await put<UnlockParams, UnlockResponse>\n      (`${ENGINES_URL}/Unlock`, params)\n    return {\n      data: unlock\n    }\n  },\n  setStandbyMode: async (\n    resource: string,\n    params: SetStandbyModeDto\n  ): Promise<DataProviderExtensionResult<SetStandbyModeDto>> => {\n    const setStandbyMode = await put<SetStandbyModeDto, SetStandbyModeDto>\n      (`${ENGINES_URL}/SetStandbyMode`, params)\n    return {\n      data: setStandbyMode\n    }\n  }\n} as EngineDataProvider\n\ninterface EngineDataProvider extends DataProvider {\n  attachEvents: (\n    resource: string,\n    params: EngineEventsDto\n  ) => Promise<CacheableDataProviderExtensionResult<EngineEventsDto>>;\n\n  detachEvents: (\n    resource: string,\n    params: EngineEventsDto\n  ) => Promise<CacheableDataProviderExtensionResult<EngineEventsDto>>;\n\n  attachEntrances: (\n    resource: string,\n    params: EngineEntrancesDto\n  ) => Promise<CacheableDataProviderExtensionResult<EngineEntrancesDto>>;\n\n  detachEntrances: (\n    resource: string,\n    params: EngineEntrancesDto\n  ) => Promise<CacheableDataProviderExtensionResult<EngineEntrancesDto>>;\n\n  setTSCanCredentials: (\n    resource: string,\n    params: SetTSCanCredentialsDto\n  ) => Promise<DataProviderExtensionResult<SetTSCanCredentialsDto>>;\n\n  removeTSCanCredentials: (\n    resource: string,\n    params: RemoveTSCanCredentialsDto\n  ) => Promise<DataProviderExtensionResult<RemoveTSCanCredentialsDto>>;\n\n  lock: (\n    resource: string,\n    params: LockParams\n  ) => Promise<DataProviderExtensionResult<LockResponse>>;\n\n  unlock: (\n    resource: string,\n    params: UnlockParams\n  ) => Promise<DataProviderExtensionResult<UnlockResponse>>;\n\n  setStandbyMode: (\n    resource: string,\n    params: SetStandbyModeDto\n  ) => Promise<DataProviderExtensionResult<SetStandbyModeDto>>;\n};\n\nexport interface LockParams {\n  engineId: number\n  lockName: string\n}\n\nexport interface LockResponse {\n  engineId: number\n  lockName: string\n  lockResult: EngineLockResults\n}\n\nexport interface UnlockParams {\n  engineId: number\n}\n\nexport interface UnlockResponse {\n  engineId: number\n  unlockResult: EngineUnlockResults\n}\n\nexport default provider","import { EntranceDto } from '../dto/entrance.dto'\n\nconst mapping: Partial<Record<keyof EntranceDto, string>> = {\n  id: 'e=>e.Id',\n  note: 'e=>e.Note'\n}\n\nexport const mapSortEntranceParam = (key: keyof EntranceDto) => mapping[key]\n","import { DataProvider, GetListParams, GetListResult } from 'react-admin'\nimport { ENTRANCES_URL } from '../api-urls'\nimport { getWithPagination } from '../common/fetch.utils'\nimport { ALL_RESULTS } from '../common/filter.values'\nimport { EntranceDto } from '../dto/entrance.dto'\nimport { mapSortEntranceParam } from './entrance-sort.mapper'\n\ninterface EntranceListParams extends GetListParams {\n  readonly sort: {\n    readonly field: keyof EntranceDto\n    readonly order: 'ASC' | 'DESC'\n  }\n  readonly filter:\n  {\n    readonly note: string\n  }\n}\n\nconst provider = {\n  getList: async (\n    resource: string,\n    {\n      filter: { note },\n      sort: { field, order },\n      pagination: { page, perPage }\n    }: EntranceListParams,\n  ): Promise<GetListResult<EntranceDto>> => {\n\n    const queryParams: string[] = []\n    queryParams.push(`sortBy=${mapSortEntranceParam(field)}`)\n    queryParams.push(`sortOrder=${order}`)\n    queryParams.push(`rangeFrom=${page * perPage - perPage}`)\n    queryParams.push(`rangeTo=${page * perPage}`)\n    const pathParams = queryParams.reduce((p, c) => `${p}&${c}`)\n    const { data, range: { total } } = await getWithPagination<EntranceDto[]>(`${ENTRANCES_URL}/GetByConditions/`, `${note ? `e=>e.Note.Contains(\"${note}\")` : ALL_RESULTS}?${pathParams}`)\n\n    return Promise.resolve({\n      data,\n      total\n    })\n  }\n} as DataProvider\n\nexport default provider","import { DataProvider, sanitizeFetchType } from 'react-admin'\nimport accessUsingsProvider from './access-usings/access-usings.provider'\nimport bookingsProvider from './bookings/bookings.provider'\nimport logsProvider from './logs/extended-logs.provider'\nimport { ResourceName } from './ResourceName'\nimport statsOverallViewListProvider from './stats/overall-view/overall-view-list.provider'\nimport statsOverallViewProvider from './stats/overall-view/overall-view.provider'\nimport ticketDetailsProvider from './ticket-details/ticket-details.provider'\nimport ticketInfoProvider from './ticket-info/ticket-info.provider'\nimport ticketsProvider from './tickets/tickets.provider'\nimport accessesProvider from './accesses/access.provider'\nimport eventsProvider from './events/event.provider'\nimport customersDetailsProvider from './customer-details/customer-details.provider'\nimport customersInfoProvider from './customer-info/customer-info.provider'\nimport accessDatesProvider from './access-dates/access-dates.provider'\nimport companiesProvider from './companies/companies.provider'\nimport objectsProvider from './objects/objects.provider'\nimport palmProvider from './devices/palms/palms.provider'\nimport engineProvider from './devices/engines/engines.provider'\nimport entrancesProvider from './entrances/entrance.provider'\n\nconst dataProviders: Record<ResourceName, DataProvider> = {\n  [ResourceName.ACCESS_DATES]: accessDatesProvider,\n  [ResourceName.ACCESSES]: accessesProvider,\n  [ResourceName.ACCESS_USINGS]: accessUsingsProvider,\n  [ResourceName.BOOKINGS]: bookingsProvider,\n  [ResourceName.COMPANIES]: companiesProvider,\n  [ResourceName.CUSTOMER_DETAILS]: customersDetailsProvider,\n  [ResourceName.CUSTOMER_INFO]: customersInfoProvider,\n  [ResourceName.ENGINES]: engineProvider,\n  [ResourceName.ENTRANCES]: entrancesProvider,\n  [ResourceName.EVENTS]: eventsProvider,\n  [ResourceName.LOGS]: logsProvider,\n  [ResourceName.OBJECTS]: objectsProvider,\n  [ResourceName.PALMS]: palmProvider,\n  [ResourceName.TICKETS]: ticketsProvider,\n  [ResourceName.TICKET_INFO]: ticketInfoProvider,\n  [ResourceName.TICKET_DETAILS]: ticketDetailsProvider,\n  [ResourceName.TICKET_LOGS]: logsProvider,\n  [ResourceName.STATS_OVERALL_VIEW]: statsOverallViewProvider,\n  [ResourceName.STATS_OVERALL_VIEW_LIST]: statsOverallViewListProvider,\n}\n\nexport default (\n  fetchType: string,\n  resource: string,\n  params: unknown,\n): Promise<unknown> => {\n  const selectedProvider = dataProviders[resource as ResourceName]\n  const type = sanitizeFetchType(fetchType)\n  return selectedProvider[type](resource, params)\n}\n","import i18n from 'i18next'\n\nconst provider = {\n  translate: (key: string, options: any): string => i18n.t(key, options),\n  changeLocale: async (locale: string): Promise<void> => {\n    const identity = localStorage.getItem('username') as string\n    localStorage.setItem(`${identity}.lng`, locale)\n    await i18n.changeLanguage(locale)\n  },\n  getLocale: (): string => i18n.language,\n}\n\nexport default provider","import { defaultTheme } from 'react-admin'\nimport { deepPurple, green } from '@material-ui/core/colors'\nimport { ThemeOptions } from '@material-ui/core'\n\nconst overriddenTheme: ThemeOptions = {\n  ...defaultTheme,\n  typography: {\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Arial',\n      'sans-serif',\n    ].join(','),\n    body1: {\n      fontWeight: 300,\n    },\n    body2: {\n      fontWeight: 300,\n    },\n    h5: {\n      fontWeight: 200,\n    },\n  },\n}\n\nexport const LightTheme: ThemeOptions = {\n  ...overriddenTheme,\n  palette: {\n    primary: deepPurple,\n    secondary: green,\n    type: 'light'\n  },\n}\n\nexport const DarkTheme: ThemeOptions = {\n  ...overriddenTheme,\n  palette: {\n    primary: {\n      light: deepPurple[100],\n      main: deepPurple[200],\n      dark: deepPurple[300],\n      contrastText: '#F1F1F1'\n    },\n    secondary: green,\n    type: 'dark'\n  },\n\n}","import { MenuItem, Collapse, Tooltip, ListItemIcon, Typography, List } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ExpandMore } from '@material-ui/icons';\nimport React, { ReactElement, ReactNode } from 'react';\nimport { useSelector } from 'react-redux';\nimport { ReduxState } from 'react-admin';\n\nconst useStyles = makeStyles(theme => ({\n  icon: {\n    minWidth: theme.spacing(5)\n  },\n  sidebarIsOpen: {\n    '& a': {\n      transition: 'padding-left 195ms cubic-bezier(0.4, 0, 0.6, 1) 0ms',\n      paddingLeft: theme.spacing(4),\n    },\n  },\n  sidebarIsClosed: {\n    '& a': {\n      transition: 'padding-left 195ms cubic-bezier(0.4, 0, 0.6, 1) 0ms',\n      paddingLeft: theme.spacing(2),\n    },\n  },\n}));\n\ninterface SubMenuProps {\n  handleToggle: () => void\n  icon: ReactElement\n  isOpen: boolean\n  name: string\n  children: ReactNode\n}\n\nexport const SubMenu = (props: SubMenuProps) => {\n  const { handleToggle, icon, isOpen, name, children } = props\n  const sidebarOpen = useSelector((state: ReduxState) => state?.admin.ui.sidebarOpen)\n  const classes = useStyles()\n\n  const header = (\n    <MenuItem button onClick={handleToggle}>\n      <ListItemIcon className={classes.icon}>\n        {isOpen ? <ExpandMore /> : icon}\n      </ListItemIcon>\n      <Typography variant=\"inherit\" color=\"textSecondary\">\n        {name}\n      </Typography>\n    </MenuItem>\n  )\n\n  return (\n    <>\n      {sidebarOpen || isOpen ? (\n        header\n      ) : (\n        <Tooltip title={name} placement=\"right\">\n          {header}\n        </Tooltip>\n      )}\n      <Collapse in={isOpen} timeout=\"auto\" unmountOnExit>\n        <List\n          component=\"div\"\n          disablePadding\n          className={sidebarOpen ? classes.sidebarIsOpen : classes.sidebarIsClosed}>\n          {children}\n        </List>\n      </Collapse>\n    </>\n  )\n}\n","import * as React from 'react';\nimport createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M 23.921875 8.652344 L 20.859375 3.347656 L 19.09375 4.367188 L 18.816406 4.527344 C 18.292969 4.050781 17.71875 3.625 17.097656 3.261719 C 16.449219 2.882812 15.769531 2.582031 15.0625 2.355469 L 15.0625 0 L 8.9375 0 L 8.9375 2.355469 C 8.230469 2.582031 7.550781 2.882812 6.902344 3.261719 C 6.28125 3.625 5.707031 4.050781 5.183594 4.527344 L 4.90625 4.367188 L 3.140625 3.347656 L 0.078125 8.652344 L 1.84375 9.671875 L 2.117188 9.832031 C 1.960938 10.539062 1.882812 11.265625 1.882812 12 C 1.882812 12.734375 1.960938 13.460938 2.117188 14.167969 L 1.84375 14.328125 L 0.078125 15.347656 L 3.140625 20.652344 L 4.90625 19.632812 L 5.183594 19.472656 C 5.707031 19.949219 6.285156 20.375 6.902344 20.738281 C 7.550781 21.117188 8.230469 21.417969 8.9375 21.644531 L 8.9375 24 L 14.863281 24 C 13.722656 22.835938 13.019531 21.242188 13.019531 19.488281 C 13.019531 18.84375 13.117188 18.222656 13.289062 17.636719 C 12.875 17.734375 12.445312 17.785156 12 17.785156 C 8.808594 17.785156 6.214844 15.191406 6.214844 12 C 6.214844 8.808594 8.808594 6.214844 12 6.214844 C 15.191406 6.214844 17.785156 8.808594 17.785156 12 C 17.785156 12.445312 17.734375 12.875 17.636719 13.289062 C 18.222656 13.117188 18.84375 13.019531 19.488281 13.019531 C 20.378906 13.019531 21.226562 13.203125 22 13.53125 C 22.078125 13.027344 22.117188 12.515625 22.117188 12 C 22.117188 11.265625 22.039062 10.539062 21.882812 9.832031 L 22.15625 9.671875 Z M 23.921875 8.652344\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M 12 8.257812 C 9.9375 8.257812 8.257812 9.9375 8.257812 12 C 8.257812 14.0625 9.9375 15.742188 12 15.742188 C 14.0625 15.742188 15.742188 14.0625 15.742188 12 C 15.742188 9.9375 14.0625 8.257812 12 8.257812 Z M 12 8.257812\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M 19.488281 15.0625 C 17.046875 15.0625 15.0625 17.046875 15.0625 19.488281 C 15.0625 21.925781 17.046875 23.910156 19.488281 23.910156 C 21.925781 23.910156 23.910156 21.925781 23.910156 19.488281 C 23.910156 17.046875 21.925781 15.0625 19.488281 15.0625 Z M 19.011719 22.019531 L 16.925781 19.9375 L 18.371094 18.492188 L 19.011719 19.132812 L 21.011719 17.132812 L 22.453125 18.574219 Z M 19.011719 22.019531\"\n})), 'Ver');","import { makeStyles } from '@material-ui/core/styles'\nimport {\n  Event,\n  List,\n  Person,\n  PhoneAndroid,\n  Receipt,\n  Sort,\n  VideoLabel,\n  ViewComfy,\n} from '@material-ui/icons'\nimport React, { useState } from 'react'\nimport { getResources, ResourceDefinition } from 'ra-core'\nimport {\n  DashboardMenuItem,\n  MenuItemLink,\n  ReduxState,\n  useTranslate,\n} from 'react-admin'\nimport { useSelector } from 'react-redux'\nimport { SubMenu } from './AppSubmenu'\nimport { ResourceName } from '../../core/ResourceName'\nimport EngineDevice from '../../assets/icons/EngineDevice'\n\nconst useStyles = makeStyles({\n  open: {\n    width: '240px',\n  },\n  closed: {\n    width: '55px',\n  },\n})\n\nexport const AppMenu = () => {\n  const sidebarOpen = useSelector(\n    (state: ReduxState) => state.admin.ui.sidebarOpen,\n  )\n  const theme = useStyles()\n  const [open, setOpen] = useState({\n    menuStats: true,\n    menuDevices: true,\n  })\n\n  const availableResources = new Set(\n    useSelector<ReduxState, ResourceDefinition[]>(getResources).map(\n      (r) => r.name as ResourceName,\n    ),\n  )\n  const translate = useTranslate()\n\n  const handleToggle = (menu: 'menuStats' | 'menuDevices') =>\n    setOpen((state) => ({ ...state, [menu]: !state[menu] }))\n\n  const anyStatsResourcesAvailable = (avRes: Set<ResourceName>) =>\n    avRes.has(ResourceName.STATS_OVERALL_VIEW_LIST)\n\n  const anyDeviceResourcesAvailable = (avRes: Set<ResourceName>) =>\n    avRes.has(ResourceName.PALMS) || avRes.has(ResourceName.ENGINES)\n\n  return (\n    <div\n      style={{ userSelect: 'none' }}\n      className={sidebarOpen ? theme.open : theme.closed}\n    >\n      <DashboardMenuItem />\n      {availableResources.has(ResourceName.TICKET_INFO) && (\n        <MenuItemLink\n          to={`/${ResourceName.TICKET_INFO}`}\n          primaryText={translate('resources.ticket-info.name')}\n          leftIcon={<Receipt />}\n        />\n      )}\n      {availableResources.has(ResourceName.CUSTOMER_INFO) && (\n        <MenuItemLink\n          to={`/${ResourceName.CUSTOMER_INFO}`}\n          primaryText={translate('resources.customer-info.name')}\n          leftIcon={<Person />}\n        />\n      )}\n      {availableResources.has(ResourceName.LOGS) && (\n        <MenuItemLink\n          to={`/${ResourceName.LOGS}`}\n          primaryText={translate('resources.logs.name')}\n          leftIcon={<List />}\n        />\n      )}\n      {availableResources.has(ResourceName.EVENTS) && (\n        <MenuItemLink\n          to={`/${ResourceName.EVENTS}`}\n          primaryText={translate('resources.events.name')}\n          leftIcon={<Event />}\n        />\n      )}\n      {anyStatsResourcesAvailable(availableResources) && (\n        <SubMenu\n          handleToggle={() => handleToggle('menuStats')}\n          isOpen={open.menuStats}\n          name={translate('side-menu.stats.name')}\n          icon={<ViewComfy />}\n        >\n          {availableResources.has(ResourceName.STATS_OVERALL_VIEW_LIST) && (\n            <MenuItemLink\n              to={`/${ResourceName.STATS_OVERALL_VIEW_LIST}`}\n              primaryText={translate('side-menu.stats.overall-view')}\n              leftIcon={<Sort style={{ transform: 'scaleX(-1)' }} />}\n            />\n          )}\n        </SubMenu>\n      )}\n      {anyDeviceResourcesAvailable(availableResources) && (\n        <SubMenu\n          handleToggle={() => handleToggle('menuDevices')}\n          isOpen={open.menuDevices}\n          name={translate('side-menu.devices.name')}\n          icon={<VideoLabel />}\n        >\n          {availableResources.has(ResourceName.PALMS) && (\n            <MenuItemLink\n              to=\"/palms\"\n              primaryText={translate('resources.palms.name')}\n              leftIcon={<PhoneAndroid />}\n            />\n          )}\n          {availableResources.has(ResourceName.ENGINES) && (\n            <MenuItemLink\n              to=\"/engines\"\n              primaryText={translate('resources.engines.name')}\n              leftIcon={<EngineDevice />}\n            />\n          )}\n        </SubMenu>\n      )}\n    </div>\n  )\n}\n","import { Typography } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Settings } from '@material-ui/icons'\nimport React from 'react'\nimport { AppBar, AppBarProps, CoreLayoutProps, Layout, UserMenu, UserMenuProps, MenuItemLink, useTranslate } from 'react-admin'\nimport { useSelector } from 'react-redux'\nimport { DarkTheme, LightTheme } from '../../app.theme'\nimport { ThemeState } from '../../core/common/theme.reducer'\nimport { AppMenu } from './AppMenu'\n\nconst useStyles = makeStyles({\n  title: {\n    flex: 1,\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n  },\n})\n\nconst AppUserMenu = (props: UserMenuProps) => {\n  const translate = useTranslate()\n  return (\n    <UserMenu {...props}>\n      <MenuItemLink\n        to=\"/configuration\"\n        primaryText={translate(\"settings.name\")}\n        leftIcon={<Settings />} />\n    </UserMenu>\n  )\n}\n\nconst AppTopBar = (props: AppBarProps) => {\n  const classes = useStyles()\n  return (\n    <AppBar {...props} userMenu={<AppUserMenu />}>\n      <Typography\n        variant=\"h6\"\n        className={classes.title}\n        id=\"react-admin-title\"\n      />\n    </AppBar>\n  )\n}\n\nexport const AppLayout = (props: CoreLayoutProps) => {\n  const theme = useSelector((state: ThemeState) =>\n    state.theme.darkMode === 'dark' ? DarkTheme : LightTheme,\n  )\n\n  return (\n    <Layout\n      {...props}\n      menu={AppMenu}\n      appBar={AppTopBar}\n      theme={theme} />)\n}\n","import React, { ChangeEvent, FC, useState } from 'react'\nimport {\n  Box,\n  Button,\n  FormControl,\n  FormHelperText,\n  Input,\n  withStyles,\n} from '@material-ui/core'\nimport SearchIcon from '@material-ui/icons/Search'\nimport { useTranslate } from 'react-admin'\n\nconst RoundInputBox = withStyles({\n  root: {\n    borderRadius: 16,\n    width: '90%',\n    marginLeft: '5%',\n    display: 'flex',\n    flexDirection: 'row-reverse',\n    border: 'solid',\n    borderColor: '#673ab7',\n  },\n})(Box)\n\nconst RoundInputBoxBtn = withStyles({\n  root: {\n    background: '#673ab7',\n    variant: 'contained',\n    borderRadius: 11,\n    borderTopLeftRadius: 0,\n    borderBottomLeftRadius: 0,\n    margin: 0,\n    fontWeight: 'bold',\n    '&:hover': {\n      background: '#7e57c2',\n    },\n  },\n})(Button)\n\nconst RoundInputBoxFC = withStyles({\n  root: {\n    width: '100%',\n    marginLeft: 13,\n    marginTop: 2,\n  },\n})(FormControl)\n\nexport type SearchInputProps = {\n  label: string\n  onValue: (value: string) => void\n  disabled: boolean\n  error: string\n}\n\nconst SearchInput: FC<Readonly<SearchInputProps>> = ({\n  label,\n  onValue,\n  disabled,\n  error,\n}) => {\n  const [inputError, setInputError] = useState(false)\n  const [inputValue, setInputValue] = useState('')\n  const t = useTranslate()\n\n  const handleInput = (event: ChangeEvent<HTMLInputElement>) => {\n    setInputValue(event.target.value)\n  }\n\n  const handleClick = () => {\n    if (inputValue) {\n      setInputError(false)\n      onValue(inputValue)\n    } else {\n      setInputError(true)\n    }\n  }\n\n  return (\n    <RoundInputBox>\n      <RoundInputBoxBtn onClick={handleClick} disabled={disabled}>\n        <SearchIcon style={{ color: 'white' }} />\n      </RoundInputBoxBtn>\n      <RoundInputBoxFC disabled={disabled}>\n        <Input\n          disableUnderline\n          placeholder={t(label)}\n          onInput={handleInput}\n          onKeyDown={(ev) => ev.key === 'Enter' && handleClick()}\n          error={inputError || !!error}\n        />\n        {inputError && (\n          <FormHelperText error>{t('ra.validation.required')}</FormHelperText>\n        )}\n        {!!error && <FormHelperText error>{t(error)}</FormHelperText>}\n      </RoundInputBoxFC>\n    </RoundInputBox>\n  )\n}\n\nexport default SearchInput\n","import React, { useCallback, useState } from 'react'\nimport {\n  useNotify,\n  useMutation,\n  useTranslate,\n  sanitizeFetchType,\n  GetListResult,\n  GET_LIST,\n} from 'react-admin'\nimport { useHistory } from 'react-router'\nimport { stringify } from 'querystring'\nimport { CardContent, CardHeader } from '@material-ui/core'\nimport { ResourceName } from '../../core/ResourceName'\nimport { CustomerInfoFilter } from '../../core/customer-info/customer-info.params'\nimport { CustomerInfo } from '../../core/customer-info/customer-info'\nimport SearchInput from './SearchInput'\n\nexport const FindCustomerByInfo = () => {\n  const history = useHistory()\n  const notify = useNotify()\n  const [error, setError] = useState('')\n  const [mutate, { loading }] = useMutation()\n  const t = useTranslate()\n\n  const fetchCustomers = useCallback(\n    (info: string) =>\n      mutate(\n        {\n          type: sanitizeFetchType(GET_LIST),\n          resource: ResourceName.CUSTOMER_INFO,\n          payload: { filter: { info } } as CustomerInfoFilter,\n        },\n        { returnPromise: true },\n      ) as Promise<GetListResult<CustomerInfo>>,\n    [mutate],\n  )\n\n  const onValue = useCallback(\n    async (info: string) => {\n      if (info.replace(/\\s/g, '').length === 0) {\n        setError('common.find-customer-by-info.invalidQuery')\n      } else if (info.length < 2) {\n        setError('common.find-customer-by-info.tooShort')\n      } else {\n        setError('')\n        try {\n          const {\n            total,\n            data: [onlyCustomer],\n          } = await fetchCustomers(info)\n          if (!total) {\n            setError('common.find-customer-by-info.error')\n          } else if (total === 1) {\n            history.push({\n              pathname: `/${ResourceName.CUSTOMER_DETAILS}/${onlyCustomer.id}/show`,\n            })\n          } else {\n            history.push({\n              pathname: `/${ResourceName.CUSTOMER_INFO}`,\n              search: stringify({\n                filter: JSON.stringify({\n                  info,\n                } as CustomerInfoFilter['filter']),\n              }),\n            })\n          }\n        } catch (err) {\n          notify((err as Error)?.message, 'error')\n        }\n      }\n    },\n    [fetchCustomers, history, notify],\n  )\n\n  return (\n    <>\n      <CardHeader title={t('common.find-customer-by-info.title')} />\n      <CardContent>\n        <SearchInput\n          label=\"common.find-customer-by-info.input-label\"\n          onValue={onValue}\n          disabled={loading}\n          error={error}\n        />\n      </CardContent>\n    </>\n  )\n}\n","import { stringify } from 'querystring'\nimport * as React from 'react'\nimport { useCallback, useState } from 'react'\nimport {\n  GET_LIST,\n  GetListResult,\n  sanitizeFetchType,\n  useMutation,\n  useNotify,\n  useTranslate,\n} from 'react-admin'\nimport { CardContent, CardHeader } from '@material-ui/core'\nimport { useHistory } from 'react-router-dom'\nimport { TicketCodeFilter } from '../../core/common/ticket-code.filter'\nimport { TicketDto } from '../../core/dto/ticket.dto'\nimport { ResourceName } from '../../core/ResourceName'\nimport SearchInput from './SearchInput'\n\nexport const FindUserByTicket = () => {\n  const history = useHistory()\n  const notify = useNotify()\n  const [error, setError] = useState('')\n  const [mutate, { loading }] = useMutation()\n  const t = useTranslate()\n\n  const fetchTickets = useCallback(\n    (ticketCode: string) =>\n      mutate(\n        {\n          type: sanitizeFetchType(GET_LIST),\n          resource: ResourceName.TICKETS,\n          payload: { filter: { ticketCode } } as TicketCodeFilter,\n        },\n        { returnPromise: true },\n      ) as Promise<GetListResult<TicketDto>>,\n    [mutate],\n  )\n\n  const onValue = useCallback(\n    async (ticketCode: string) => {\n      setError('')\n      try {\n        const {\n          total,\n          data: [onlyTicket],\n        } = await fetchTickets(ticketCode)\n        if (!total) {\n          setError('common.find-user-by-ticket.error')\n        } else if (total === 1) {\n          history.push({\n            pathname: `/${ResourceName.TICKET_DETAILS}/${onlyTicket.bookingId}/show`,\n          })\n        } else {\n          history.push({\n            pathname: `/${ResourceName.TICKET_INFO}`,\n            search: stringify({\n              filter: JSON.stringify({\n                ticketCode,\n              } as TicketCodeFilter['filter']),\n            }),\n          })\n        }\n      } catch (err) {\n        notify((err as Error)?.message, 'error')\n      }\n    },\n    [fetchTickets, history, notify],\n  )\n\n  return (\n    <>\n      <CardHeader title={t('common.find-user-by-ticket.title')} />\n      <CardContent>\n        <SearchInput\n          label=\"common.find-user-by-ticket.input-label\"\n          onValue={onValue}\n          disabled={loading}\n          error={error}\n        />\n      </CardContent>\n    </>\n  )\n}\n","import { Authority } from './Authority'\n\nconst mapping: Record<Authority, string[]> = {\n  [Authority.VIEW_LOGS]: ['ViewItems_Logs'],\n  [Authority.VIEW_STATS_OVERALL_VIEW]: ['ViewItems_Stats_OverallView'],\n}\n\nexport const mapAuthorityToRequiredPermissions = (authority: Authority) => mapping[authority]","import { UPDATE_DASHBOARD } from '../constants/reducer.actions'\n\nconst identity = localStorage.getItem('username')\nexport const INACTIVE_COMPONENTS_KEY = `${identity}.inactiveComponents`\n\nexport enum DashboardItem {\n  TICKET_FINDER = 'ticket_finder',\n  LAST_LOGS = 'last_logs',\n  LAST_EVENTS = 'last_events',\n  CUSTOMER_FINDER = 'customer_finder'\n}\n\nexport type DashboardState = {\n  dashboard: {\n    inactiveComponents: DashboardItem[]\n  }\n}\n\nexport type DashboardAction = {\n  type: typeof UPDATE_DASHBOARD\n  payload: DashboardItem\n}\n","import { usePermissions } from 'react-admin'\nimport { Authority } from '../../core/auth/Authority'\nimport { mapAuthorityToRequiredPermissions } from '../../core/auth/authority.mapper'\n\nexport const hasAuthorityWithGivenPermissions = (authority: Authority, permissions: Set<string>) => {\n  const permissionSet = new Set(permissions)\n  const requiredPerms = mapAuthorityToRequiredPermissions(authority)\n  return requiredPerms.every(reqPerms => permissionSet.has(reqPerms))\n}\n\nexport const useHasAuthority = () => {\n  const { permissions, loaded } = usePermissions<Set<string>>()\n  return (authority: Authority) => {\n    if (loaded && !permissions) {\n      // eslint-disable-next-line no-console\n      console.error('\"useHasAuthority\" - No permissions or hook was used outside the react admin context')\n      return false\n    }\n    return hasAuthorityWithGivenPermissions(authority, permissions as Set<string>)\n  }\n}","import {\n  Datagrid,\n  DateField,\n  Filter,\n  FilterProps,\n  FunctionField,\n  Link,\n  List,\n  ListProps,\n  Pagination,\n  TextField,\n  TextInput,\n  useTranslate,\n} from 'react-admin'\nimport { useListContext } from 'ra-core'\nimport React from 'react'\nimport { IconButton, makeStyles } from '@material-ui/core'\nimport { Event as EventIcon, Sort } from '@material-ui/icons'\nimport { ResourceName } from '../../core/ResourceName'\nimport { EventDto } from '../../core/dto/event/event.dto'\nimport { useHasAuthority } from '../hooks/useHasAuthority'\nimport { Authority } from '../../core/auth/Authority'\n\nconst useStyles = makeStyles((theme) => ({\n  actionColumnsWithoutPadding: {\n    // applies always for last column\n    '& tr > td:last-child': {\n      padding: 0,\n      width: theme.spacing(6),\n    },\n    // only applies when there are four columns and targets the penultimate column\n    '& tr > td:first-child:nth-last-child(4) ~ td:nth-last-child(2)': {\n      padding: 0,\n      width: theme.spacing(6),\n    },\n  },\n}))\n\nconst ListFilters = (props: Omit<FilterProps, 'children'>) => (\n  <Filter {...props}>\n    <TextInput source=\"name\" alwaysOn />\n  </Filter>\n)\n\nconst LastEvents = () => {\n  const t = useTranslate()\n  const classes = useStyles()\n  const hasAuthority = useHasAuthority()\n  return (\n    <Datagrid className={classes.actionColumnsWithoutPadding}>\n      <FunctionField<EventDto>\n        label={t('resources.events.fields.name')}\n        render={(record?: EventDto) => {\n          const { id, name } = record as EventDto\n          return `${id}. ${name}`\n        }}\n      />\n      <FunctionField<EventDto>\n        label={t('resources.events.fields.status')}\n        render={(record?: EventDto) => {\n          const { status } = record as EventDto\n          return t(`resources.enums.eventStatus.${status.toLowerCase()}`)\n        }}\n      />\n      <FunctionField<EventDto>\n        render={(record?: EventDto) => {\n          const { id } = record as EventDto\n          return (\n            <Link to={`/${ResourceName.EVENTS}/${id}/show`}>\n              <IconButton>\n                <EventIcon />\n              </IconButton>\n            </Link>\n          )\n        }}\n      />\n      {hasAuthority(Authority.VIEW_STATS_OVERALL_VIEW) && (\n        <FunctionField<EventDto>\n          render={(record?: EventDto) => {\n            const { id } = record as EventDto\n            return (\n              <Link to={`/${ResourceName.STATS_OVERALL_VIEW}/${id}/show`}>\n                <IconButton>\n                  <Sort style={{ transform: 'scaleX(-1)' }} />\n                </IconButton>\n              </Link>\n            )\n          }}\n        />\n      )}\n    </Datagrid>\n  )\n}\n\nconst EventGrid = ({ compactMode }: { compactMode?: boolean }) => {\n  const { loading } = useListContext()\n  const t = useTranslate()\n  return (\n    <>\n      {compactMode ? (\n        <LastEvents />\n      ) : (\n        <Datagrid\n          size=\"small\"\n          loaded={!loading}\n          rowClick={(id) => `${ResourceName.EVENTS}/${id}/show`}\n        >\n          <TextField source=\"id\" label=\"ID\" />\n          <TextField source=\"name\" />\n          <DateField source=\"dateStart\" showTime />\n          <DateField source=\"dateEnd\" showTime />\n          <FunctionField<EventDto>\n            resource=\"events\"\n            label={t('resources.events.fields.status')}\n            render={(r?: EventDto) =>\n              t(`resources.enums.eventStatus.${r?.status.toLowerCase()}`)\n            }\n          />\n        </Datagrid>\n      )}\n    </>\n  )\n}\n\ninterface EventListProps extends ListProps {\n  compactMode?: boolean\n}\n\nexport const EventList = ({ compactMode = false, ...props }: EventListProps) =>\n  compactMode ? (\n    <List\n      {...props}\n      actions={false}\n      filters={undefined}\n      perPage={10}\n      pagination={false}\n    >\n      <EventGrid compactMode />\n    </List>\n  ) : (\n    <List\n      {...props}\n      exporter={false}\n      filters={<ListFilters />}\n      perPage={20}\n      pagination={<Pagination rowsPerPageOptions={[10, 20, 50]} />}\n    >\n      <EventGrid />\n    </List>\n  )\n","import * as React from 'react'\nimport { useListContext } from 'react-admin';\nimport { Button, Toolbar, Grid, Paper, ButtonGroup, Select, MenuItem } from '@material-ui/core';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\n\nexport const MobilePostPagination = () => {\n  const { page, perPage, total, setPage, setPerPage } = useListContext();\n  const nbPages = Math.ceil(total / perPage) || 1;\n  return (\n      nbPages > 1 ?\n        <Toolbar>\n          <Grid container>\n            <Grid item xs={3}>\n            <Paper elevation={0}\n              style={{height: '100%', display: 'flex', flexDirection: 'row', justifyContent: 'flex-end', alignItems: 'center'}}>\n              <Select value={perPage} style={{width: '100%', height: '70%', textAlign: 'center'}} variant='outlined'\n              onChange={e => setPerPage(parseInt(e.target.value as string, 10))}>\n                <MenuItem value={20}> 20 </MenuItem>\n                <MenuItem value={50}> 50 </MenuItem>\n                <MenuItem value={100}> 100 </MenuItem>\n              </Select>\n            </Paper>\n            </Grid>\n            <Grid item xs={4} />\n            <Grid item xs={5}>\n              <Paper elevation={0}\n              style={{height: '100%', display: 'flex', flexDirection: 'row', justifyContent: 'flex-end', alignItems: 'center'}}>\n                <ButtonGroup style={{height: '70%'}}>\n                  {page > 1 ?\n                    <Button variant=\"outlined\" color=\"primary\" key=\"prev\" onClick={() => setPage(page - 1)}>\n                      <ChevronLeft />\n                    </Button> :\n                    <Button variant=\"outlined\" color=\"primary\" disabled>\n                      <ChevronLeft />\n                    </Button> \n                  }\n                  <Button disabled variant=\"contained\"> {page} </Button>\n                  {page !== nbPages ?\n                    <Button variant=\"outlined\" color=\"primary\" key=\"next\" onClick={() => setPage(page + 1)}>\n                      <ChevronRight />\n                    </Button> :\n                    <Button variant=\"outlined\" color=\"primary\" disabled>\n                      <ChevronRight />\n                    </Button>\n                  }\n                </ButtonGroup>\n              </Paper>\n            </Grid>\n          </Grid>\n        </Toolbar> :\n        <div />\n  );\n}","import * as React from 'react'\nimport { TextField, makeStyles, Theme, createStyles } from '@material-ui/core'\nimport { useField } from 'react-final-form'\nimport ArrowRightAltIcon from '@material-ui/icons/ArrowRightAlt'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      display: 'flex',\n      justifyContent: 'center',\n      verticalAlign: 'center',\n      marginBottom: theme.spacing(1)\n    }\n  })\n)\n\nexport const DateFilterInput = ({ source }: { source: string }) => {\n  const classes = useStyles()\n  const defaultFromDate = React.useMemo(() => new Date(Date.now() - 2678400000), [])\n  defaultFromDate.setHours(0, 0, 0, 0)\n  const defaultToDate = new Date(Date.now())\n  defaultToDate.setHours(23, 59, 0, 0)\n  const [dateFrom, setDateFrom] = React.useState(\n    defaultFromDate.getTime().toString(),\n  )\n  const [dateTo, setDateTo] = React.useState(defaultToDate.getTime().toString())\n  const {\n    input: { onChange },\n    meta: { touched, error },\n  } = useField(source)\n\n  React.useEffect(() => {\n    onChange([\n      (parseInt(dateFrom, 10) - (defaultFromDate.getTimezoneOffset() * 60000)).toString(),\n      (parseInt(dateTo, 10) - (defaultFromDate.getTimezoneOffset() * 60000)).toString()].join(';'))\n  }, [dateFrom, dateTo, onChange, defaultFromDate])\n\n  const convertedDate = (date: Date) =>\n    new Date(date.getTime() - (defaultFromDate.getTimezoneOffset() * 60000)).toJSON().substring(0, 16)\n\n  return (\n    <span\n      key=\"date\"\n      className={classes.container}\n    >\n      <TextField\n        variant=\"filled\"\n        defaultValue={convertedDate(defaultFromDate)}\n        name={source}\n        type=\"datetime-local\"\n        onChange={(e) => setDateFrom(Date.parse(e.target.value).toString())}\n        error={!!(touched && error)}\n        helperText={touched && error}\n        style={{ alignSelf: 'center' }}\n        size=\"small\"\n      />\n      <ArrowRightAltIcon style={{ marginTop: '4%' }} />\n      <TextField\n        variant=\"filled\"\n        defaultValue={convertedDate(defaultToDate)}\n        name={source}\n        type=\"datetime-local\"\n        onChange={(e) => setDateTo(Date.parse(e.target.value).toString())}\n        error={!!(touched && error)}\n        helperText={touched && error}\n        size=\"small\"\n      />\n    </span>\n  )\n}\n","import { Button, Grid, TableCell, withStyles } from '@material-ui/core'\n\nexport const BookingButton = withStyles({\n  root: {\n    width: '100%',\n    backgroundColor: 'rgb(220, 220, 220)',\n    boxShadow: '0px 0px 3px',\n    '&:hover': {\n      backgroundColor: 'rgb(220, 230, 230)',\n    },\n  },\n})(Button)\n\nexport const FullWidthButton = withStyles({\n  root: {\n    width: '100%',\n  },\n})(Button)\n\nexport const CenterGrid = withStyles({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'column',\n  },\n})(Grid)\n\nexport const NoPaddingCell = withStyles({\n  root: {\n    paddingBottom: 0,\n    paddingTop: 0,\n  },\n})(TableCell)\n","import React, { CSSProperties, useEffect, useState } from 'react'\nimport {\n  Collapse,\n  Grid,\n  Hidden,\n  IconButton,\n  TableCell,\n  TableRow,\n} from '@material-ui/core'\nimport { DateField, TextField, useTranslate } from 'react-admin'\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown'\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp'\nimport { useHistory } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport { ResourceName } from '../../core/ResourceName'\nimport { BookingButton, CenterGrid, NoPaddingCell } from './LogsComponents'\nimport { ExtendedLog } from '../../core/logs/extended-log'\nimport { ThemeState } from '../../core/common/theme.reducer'\nimport { getContrastColor } from '../../core/common/visual.utils'\n\ninterface LogRowProps {\n  readonly compactMode: boolean\n  readonly noBooking: boolean\n  readonly data: ExtendedLog\n}\n\nexport const LogRow = (props: LogRowProps) => {\n  const { data, compactMode, noBooking } = props\n  const [open, setOpen] = useState(false)\n  const history = useHistory()\n  const isDarkMode = useSelector(\n    (state: ThemeState) => state.theme.darkMode === 'dark',\n  )\n  const t = useTranslate()\n\n  useEffect(() => {\n    setOpen(false)\n  }, [data])\n\n  const defineStyle = () => {\n    if (\n      (!isDarkMode && data.color === 'transparent') ||\n      getContrastColor(data.color) === 'black'\n    ) {\n      return { color: 'black', fontWeight: 'normal' } as CSSProperties\n    }\n    return { color: 'white', fontWeight: 'bold' } as CSSProperties\n  }\n\n  return (\n    <>\n      <TableRow style={{ backgroundColor: data.color }}>\n        <Hidden mdUp={!compactMode}>\n          <TableCell>\n            <IconButton onClick={() => setOpen((v) => !v)}>\n              {open ? (\n                <ArrowDropUpIcon style={defineStyle()} />\n              ) : (\n                <ArrowDropDownIcon style={defineStyle()} />\n              )}\n            </IconButton>\n          </TableCell>\n        </Hidden>\n        <TableCell>\n          <DateField\n            record={data}\n            source=\"date\"\n            showTime\n            style={defineStyle()}\n          />\n        </TableCell>\n        <TableCell>\n          <TextField record={data} source=\"deviceName\" style={defineStyle()} />\n        </TableCell>\n        <TableCell>\n          <TextField record={data} source=\"ticketCode\" style={defineStyle()} />\n        </TableCell>\n        <Hidden smDown xlDown={compactMode}>\n          <TableCell>\n            <TextField\n              record={data}\n              source=\"text\"\n              sortable={false}\n              style={defineStyle()}\n            />\n          </TableCell>\n        </Hidden>\n        <Hidden smDown xlDown={compactMode || noBooking}>\n          <TableCell>\n            {data.bookingId == null ? (\n              <div />\n            ) : (\n              <BookingButton\n                onClick={() =>\n                  history.push({\n                    pathname: `/${ResourceName.TICKET_DETAILS}/${data.bookingId}/show`,\n                  })\n                }\n              >\n                {data.bookingId}\n              </BookingButton>\n            )}\n          </TableCell>\n        </Hidden>\n      </TableRow>\n      <Hidden mdUp={!compactMode}>\n        <TableRow>\n          <NoPaddingCell colSpan={4}>\n            <Collapse in={open}>\n              <Grid\n                container\n                style={{ marginTop: '1%', marginBottom: '1%' }}\n                item\n              >\n                <Hidden xlDown={noBooking}>\n                  <CenterGrid item xs={5}>\n                    {`${t('resources.logs.fields.bookingId')}:`}\n                  </CenterGrid>\n                  <CenterGrid item xs={7}>\n                    {data.bookingId == null ? (\n                      <div />\n                    ) : (\n                      <BookingButton\n                        onClick={() =>\n                          history.push({\n                            pathname: `/${ResourceName.TICKET_DETAILS}/${data.bookingId}/show`,\n                          })\n                        }\n                      >\n                        {data.bookingId}\n                      </BookingButton>\n                    )}\n                  </CenterGrid>\n                  <hr\n                    style={{\n                      width: '90%',\n                      marginTop: '1%',\n                      marginBottom: '1%',\n                    }}\n                  />\n                </Hidden>\n                <CenterGrid item xs={5}>\n                  {`${t('resources.logs.fields.description')}:`}\n                </CenterGrid>\n                <CenterGrid item xs={7}>\n                  {data.text}\n                </CenterGrid>\n              </Grid>\n            </Collapse>\n          </NoPaddingCell>\n        </TableRow>\n      </Hidden>\n    </>\n  )\n}\n","export const getContrastColor = (hexcolor: string) => {\n    const r = parseInt(hexcolor.substr(1, 2), 16);\n    const g = parseInt(hexcolor.substr(3, 2), 16);\n    const b = parseInt(hexcolor.substr(5, 2), 16);\n    const yiq = ((r * 299) + (g * 587) + (b * 114)) / 1000;\n    return (yiq >= 128) ? 'black' : 'white';\n  }","import React from 'react'\nimport {\n  Hidden,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from '@material-ui/core'\nimport { useListContext, useListSortContext, useTranslate } from 'react-admin'\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward'\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward'\nimport { ExtendedLog } from '../../core/logs/extended-log'\nimport { FullWidthButton } from './LogsComponents'\nimport { LogRow } from './LogRow'\n\ninterface LogGridProps {\n  readonly compactMode: boolean\n  readonly noBooking: boolean\n}\n\nexport const LogGrid = (props: LogGridProps) => {\n  const { compactMode, noBooking } = props\n  const { ids, data } = useListContext()\n  const { currentSort, setSort } = useListSortContext()\n  const t = useTranslate()\n\n  const inverseOrder = (order: string) => (order === 'ASC' ? 'DESC' : 'ASC')\n\n  const handleSortChange = (sortBy: string) => {\n    setSort(\n      sortBy,\n      sortBy === currentSort.field ? inverseOrder(currentSort.order) : 'DESC',\n    )\n  }\n\n  const HeaderCell = (name: string, display: string) => (\n    <>\n      {currentSort.field === name ? (\n        <FullWidthButton\n          startIcon={\n            currentSort.order === 'ASC' ? (\n              <ArrowUpwardIcon />\n            ) : (\n              <ArrowDownwardIcon />\n            )\n          }\n        >\n          {t(display)}\n        </FullWidthButton>\n      ) : (\n        <FullWidthButton>{t(display)}</FullWidthButton>\n      )}\n    </>\n  )\n\n  return (\n    <TableContainer component={Paper}>\n      <Table\n        aria-label=\"a dense table\"\n        size=\"small\"\n        padding={compactMode ? 'none' : 'default'}\n      >\n        <TableHead>\n          <TableRow>\n            <Hidden mdUp={!compactMode}>\n              <TableCell style={{ width: '3%' }} />\n            </Hidden>\n            <TableCell\n              onClick={() => handleSortChange('date')}\n              style={{ width: '10%' }}\n            >\n              {HeaderCell('date', 'resources.logs.fields.date')}\n            </TableCell>\n            <TableCell\n              onClick={() => handleSortChange('deviceName')}\n              style={{ width: '15%' }}\n            >\n              {HeaderCell('deviceName', 'resources.logs.fields.deviceName')}\n            </TableCell>\n            <TableCell\n              onClick={() => handleSortChange('ticketCode')}\n              style={{ width: '25%' }}\n            >\n              {HeaderCell('ticketCode', 'resources.logs.fields.ticketCode')}\n            </TableCell>\n            <Hidden smDown xlDown={compactMode}>\n              <TableCell style={{ textAlign: 'center', width: '25%' }}>\n                {t('resources.logs.fields.description').toUpperCase()}\n              </TableCell>\n            </Hidden>\n            <Hidden smDown xlDown={compactMode || noBooking}>\n              <TableCell\n                onClick={() => handleSortChange('bookingId')}\n                style={{ width: '15%' }}\n              >\n                {HeaderCell('bookingId', 'resources.logs.fields.bookingId')}\n              </TableCell>\n            </Hidden>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {ids.map((id) => (\n            <LogRow\n              key={id}\n              data={data[id] as ExtendedLog}\n              compactMode={compactMode}\n              noBooking={noBooking}\n            />\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n","import { useMediaQuery, useTheme } from '@material-ui/core'\nimport React from 'react'\nimport {\n  Filter,\n  FilterProps,\n  List,\n  ListProps,\n  Pagination,\n  SelectInput,\n  TextInput,\n  useLocale,\n  useTranslate,\n} from 'react-admin'\nimport { MobilePostPagination } from '../common/Pagination'\nimport { DateFilterInput } from './DateFilterInput'\nimport { LogGrid } from './LogGrid'\n\ninterface LogListProps extends ListProps {\n  readonly compactMode?: boolean\n  readonly noBooking?: boolean\n}\n\nconst ListFilters = (props: Omit<FilterProps, 'children'>) => {\n  const t = useTranslate()\n  return (\n    <Filter {...props}>\n      <TextInput source=\"ticketCode\" alwaysOn />\n      <SelectInput\n        label={t('resources.logs.filters.deviceName')}\n        source=\"deviceName\"\n        choices={[\n          {\n            id: 'Czytnik',\n            name: t('resources.logs.fields.deviceNameChoices.reader'),\n          },\n          {\n            id: 'Przej\\u015Bcie',\n            name: t('resources.logs.fields.deviceNameChoices.gateway'),\n          },\n        ]}\n      />\n      <DateFilterInput source=\"date\" key=\"date\" />\n      <TextInput source=\"bookingId\" />\n      <TextInput source=\"event\" />\n    </Filter>\n  )\n}\n\nexport const LogList = ({\n  compactMode = false,\n  noBooking = false,\n  ...props\n}: LogListProps) => {\n  const { filter, ...listProps } = props\n  const theme = useTheme()\n  const smallScreen = useMediaQuery(theme.breakpoints.down('sm'))\n  const locale = useLocale()\n  return (\n    <List\n      perPage={20}\n      exporter={false}\n      pagination={\n        smallScreen ? (\n          <MobilePostPagination />\n        ) : (\n          <Pagination rowsPerPageOptions={[20, 50, 100]} />\n        )\n      }\n      filters={<ListFilters />}\n      filter={{ ...filter, locale }}\n      sort={{ field: 'date', order: 'DESC' }}\n      {...listProps}\n    >\n      <LogGrid compactMode={compactMode} noBooking={noBooking} />\n    </List>\n  )\n}","import {\n  Card,\n  CardContent,\n  CardHeader,\n  createStyles,\n  Grid,\n  makeStyles,\n  Theme,\n} from '@material-ui/core'\nimport React from 'react'\nimport { useSelector } from 'react-redux'\nimport { ResourceContextProvider, useTranslate } from 'react-admin'\nimport { ResourceName } from '../core/ResourceName'\nimport { FindCustomerByInfo } from './common/FindCustomerByInfo'\nimport { FindUserByTicket } from './common/FindUserByTicket'\nimport { EventList } from './events/EventList'\nimport { LogList } from './logs/LogList'\nimport { DashboardItem, DashboardState } from '../core/common/dashboard'\nimport { useHasAuthority } from './hooks/useHasAuthority'\nimport { Authority } from '../core/auth/Authority'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    header: {\n      textAlign: 'center',\n      letterSpacing: theme.spacing(0.2),\n    },\n    lastLogs: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'flex-end',\n      width: '10%',\n    },\n  }),\n)\n\nconst TicketFinder = () => (\n  <Card style={{ width: '100%', marginBottom: '5px' }}>\n    <FindUserByTicket />\n  </Card>\n)\n\nconst CustomerFinder = () => (\n  <Card style={{ width: '100%', marginBottom: '5px' }}>\n    <FindCustomerByInfo />\n  </Card>\n)\n\nconst LastLogs = () => {\n  const t = useTranslate()\n  return (\n    <Card style={{ width: '100%', marginBottom: '5px' }}>\n      <CardHeader title={t('dashboard.cards.last-logs.title')} />\n      <CardContent>\n        <ResourceContextProvider value={ResourceName.LOGS}>\n          <LogList\n            basePath=\"/\"\n            title=\" \"\n            compactMode\n            pagination={false}\n            perPage={10}\n            actions={false}\n            filters={undefined}\n          />\n        </ResourceContextProvider>\n      </CardContent>\n    </Card>\n  )\n}\n\nconst LastEvents = () => {\n  const t = useTranslate()\n  return (\n    <Card style={{ width: '100%', marginBottom: '5px' }}>\n      <CardHeader title={t('dashboard.cards.last-events.title')} />\n      <CardContent>\n        <ResourceContextProvider value={ResourceName.EVENTS}>\n          <EventList\n            sort={{ field: 'status', order: 'DESC' }}\n            compactMode\n            basePath=\"/\"\n            title=\" \"\n          />\n        </ResourceContextProvider>\n      </CardContent>\n    </Card>\n  )\n}\n\nexport const Dashboard = () => {\n  const classes = useStyles()\n  const t = useTranslate()\n  const hasAuthority = useHasAuthority()\n  const inactiveComponents = useSelector(\n    (state: DashboardState) => state.dashboard.inactiveComponents,\n  )\n  const isItemActive = (item: DashboardItem, inactiveItems: DashboardItem[]) =>\n    !inactiveItems.includes(item)\n\n  return (\n    <Grid container spacing={1}>\n      <Grid item xs={12}>\n        <Card>\n          <CardHeader\n            className={classes.header}\n            title={t('dashboard.welcome')}\n            titleTypographyProps={{ variant: 'h4' }}\n          />\n        </Card>\n      </Grid>\n      <Grid item sm={6} xs={12}>\n        {isItemActive(DashboardItem.TICKET_FINDER, inactiveComponents) && (\n          <TicketFinder />\n        )}\n        {isItemActive(DashboardItem.LAST_EVENTS, inactiveComponents) && (\n          <LastEvents />\n        )}\n      </Grid>\n      <Grid className={classes.lastLogs} item sm={6} xs={12}>\n        {isItemActive(DashboardItem.CUSTOMER_FINDER, inactiveComponents) && (\n          <CustomerFinder />\n        )}\n        {hasAuthority(Authority.VIEW_LOGS) &&\n          isItemActive(DashboardItem.LAST_LOGS, inactiveComponents) && (\n            <LastLogs />\n          )}\n      </Grid>\n    </Grid>\n  )\n}\n","export enum ToggleType {\n  BLOCK = 'BLOCK',\n  UNBLOCK = 'UNBLOCK',\n  DISABLED = 'DISABLED',\n}\n\nexport type ToggleButtonState = {\n  type: ToggleType\n  text: string\n}\n\nexport type ToggleButtonAction = { type: ToggleType }\n","import {\n  Button,\n  ButtonGroup,\n  Card,\n  CardContent,\n  createStyles,\n  FormControlLabel,\n  Grid,\n  makeStyles,\n  MenuItem,\n  Paper,\n  Select,\n  Switch,\n  Theme,\n  Typography,\n} from '@material-ui/core'\nimport React, { Dispatch, ReactElement } from 'react'\nimport { Title, useLocale, useSetLocale, useTranslate } from 'react-admin'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Event, List, Search, Person } from '@material-ui/icons'\nimport { ThemeState } from '../../core/common/theme.reducer'\nimport {\n  CHANGE_THEME,\n  UPDATE_DASHBOARD,\n} from '../../core/constants/reducer.actions'\nimport {\n  DashboardAction,\n  DashboardItem,\n  DashboardState,\n} from '../../core/common/dashboard'\nimport { useHasAuthority } from '../hooks/useHasAuthority'\nimport { Authority } from '../../core/auth/Authority'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    label: { width: '15vw', display: 'inline-block' },\n    button: { margin: theme.spacing(2) },\n    select: { width: '40vw', margin: theme.spacing(2) },\n    compsContainer: {\n      width: '40vw',\n      display: 'inline-block',\n      margin: theme.spacing(2),\n    },\n  }),\n)\n\ntype DashboardItemSwitchProps = {\n  dashboardItem: DashboardItem\n  label: string\n  icon: ReactElement\n}\n\nconst DashboardItemSwitch = ({\n  dashboardItem,\n  label,\n  icon,\n}: DashboardItemSwitchProps) => {\n  const t = useTranslate()\n  const dispatch = useDispatch<Dispatch<DashboardAction>>()\n  const inactiveComponents = useSelector(\n    (state: DashboardState) => state.dashboard.inactiveComponents,\n  )\n  const onSwitch = ({\n    target: { name },\n  }: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch({ type: UPDATE_DASHBOARD, payload: name as DashboardItem })\n  }\n  return (\n    <Grid item xs={6}>\n      <Paper>\n        {icon}\n        <FormControlLabel\n          control={\n            <Switch\n              checked={!inactiveComponents.includes(dashboardItem)}\n              name={dashboardItem}\n              onChange={onSwitch}\n            />\n          }\n          label={t(label)}\n          labelPlacement=\"top\"\n          style={{ margin: '5%', textAlign: 'center', width: '90%' }}\n        />\n      </Paper>\n    </Grid>\n  )\n}\n\nconst DashboardCustomization = () => {\n  const hasAuthority = useHasAuthority()\n  return (\n    <Grid container spacing={1}>\n      <DashboardItemSwitch\n        dashboardItem={DashboardItem.TICKET_FINDER}\n        label=\"dashboard.settings.ticket-finder-label\"\n        icon={<Search />}\n      />\n      {hasAuthority(Authority.VIEW_LOGS) && (\n        <DashboardItemSwitch\n          dashboardItem={DashboardItem.LAST_LOGS}\n          label=\"dashboard.settings.last-logs-label\"\n          icon={<List />}\n        />\n      )}\n      <DashboardItemSwitch\n        dashboardItem={DashboardItem.LAST_EVENTS}\n        label=\"dashboard.settings.last-events-label\"\n        icon={<Event />}\n      />\n      <DashboardItemSwitch\n        dashboardItem={DashboardItem.CUSTOMER_FINDER}\n        label=\"dashboard.settings.customer-finder-label\"\n        icon={<Person />}\n      />\n    </Grid>\n  )\n}\n\nexport const Configuration = () => {\n  const dispatch = useDispatch()\n  const theme = useSelector(\n    (state: ThemeState) => state.theme.darkMode === 'dark',\n  )\n  const classes = useStyles()\n  const locale = useLocale()\n  const setLocale = useSetLocale()\n  const t = useTranslate()\n\n  return (\n    <Card>\n      <Title title={t('settings.name')} />\n      <CardContent>\n        <Typography className={classes.label}>\n          {t('settings.darkMode.name')}\n        </Typography>\n        <ButtonGroup className={classes.button}>\n          <Button\n            size=\"large\"\n            variant=\"contained\"\n            color={!theme ? 'primary' : 'default'}\n            onClick={() => theme && dispatch({ type: CHANGE_THEME })}\n          >\n            {t('settings.darkMode.light')}\n          </Button>\n          <Button\n            size=\"large\"\n            variant=\"contained\"\n            color={theme ? 'primary' : 'default'}\n            onClick={() => !theme && dispatch({ type: CHANGE_THEME })}\n          >\n            {t('settings.darkMode.dark')}\n          </Button>\n        </ButtonGroup>\n      </CardContent>\n      <CardContent>\n        <Typography className={classes.label}>\n          {t('settings.language.name')}\n        </Typography>\n        <Select\n          value={locale}\n          onChange={(e) => setLocale(e.target.value as string)}\n          className={classes.select}\n          variant=\"outlined\"\n        >\n          <MenuItem value=\"pl\">{t('settings.language.pl')}</MenuItem>\n          <MenuItem value=\"en\">{t('settings.language.en')}</MenuItem>\n        </Select>\n      </CardContent>\n      <CardContent>\n        <Typography className={classes.label}>\n          {t('dashboard.settings.title')}\n        </Typography>\n        <div className={classes.compsContainer}>\n          <DashboardCustomization />\n        </div>\n      </CardContent>\n    </Card>\n  )\n}\n","import * as React from 'react';\nimport { Route } from 'react-router-dom';\nimport { Configuration } from './Configuration'\n\nexport default [\n    <Route exact path=\"/configuration\" render={() => <Configuration/>} />\n]","import * as React from 'react'\nimport { TextField, TextFieldProps, useRecordContext } from 'react-admin'\nimport { maskMiddlePart } from '../../core/common/mask.utils'\n\nexport const MaskField = ({ source, ...rest }: TextFieldProps) => {\n  const record = useRecordContext()\n  const properRecord = record[source as string]\n    ? {\n      ...record,\n      [source as string]: maskMiddlePart(record[source as string], 2),\n    }\n    : record\n  return <TextField {...rest} record={properRecord} source={source} />\n}\n","/**\n * @example\n * maskMiddlePart('importantValue', 3) === 'imp********lue'\n */\nexport const maskMiddlePart = (word: string, threshold: number) => {\n  const firstChars = word.substring(0, threshold)\n  const lastChars = word.slice(-threshold)\n  const restCharsLength = word.length - firstChars.length - lastChars.length\n  return `${firstChars}${'*'.repeat(\n    restCharsLength > 0 ? restCharsLength : 0,\n  )}${lastChars}`\n}\n","import { Box, Divider, Typography } from '@material-ui/core'\nimport * as React from 'react'\nimport {\n  Datagrid,\n  List,\n  ListProps,\n  TextField,\n  useListContext,\n  useTranslate,\n  FunctionField,\n  Record,\n  Pagination,\n  TextInput\n} from 'react-admin'\nimport { ResourceName } from '../../core/ResourceName'\nimport { MaskField } from '../common/MaskField'\n\nconst TicketInfoGrid = () => {\n  const {\n    loading,\n    filterValues: { ticketCode },\n    data\n  } = useListContext()\n  const t = useTranslate()\n  return (\n    <>\n      {ticketCode &&\n        <Box m={2} display=\"inline-flex\" height=\"40px\">\n          <Typography variant=\"h5\" paragraph>\n            {t('resources.ticket-info.search-list-title', { ticketCode })}\n          </Typography>\n        </Box>\n      }\n      <Divider />\n      <Datagrid\n        loaded={!loading}\n        rowClick={(id) => `${ResourceName.TICKET_DETAILS}/${data[id]?.bookingId}/show`}\n      >\n        <TextField source=\"firstname\" sortable={false} />\n        <TextField source=\"lastname\" sortable={false} />\n        <MaskField source=\"pesel\" sortable={false} />\n        <TextField source=\"ticketCode\" sortable />\n        <FunctionField\n          label='resources.ticket-info.fields.eventName'\n          render={(record: Record | undefined) => `${record?.eventName} ${record?.eventDate.replace(\"T\", \" \")} ${record?.eventId}`} />\n        <TextField source=\"bookingId\" sortable />\n      </Datagrid>\n    </>\n  )\n}\n\nexport const TicketInfoList = (props: ListProps) => (\n  <List exporter={false} perPage={20} sort={{ field: \"id\", order: \"DESC\" }}\n    pagination={<Pagination rowsPerPageOptions={[10, 20, 50]} />} {...props}\n    filters={[\n      <TextInput source=\"ticketCode\" alwaysOn />\n    ]}>\n    <TicketInfoGrid />\n  </List>\n)\n","import { TicketType } from '../enum/TicketType'\nimport { BookingType } from '../enum/BookingType'\n\nconst bookingTypeMapping: Record<BookingType, string> = {\n  [BookingType.NORMAL]: 'resources.enums.bookingType.normal',\n  [BookingType.ABO]: 'resources.enums.bookingType.abo',\n  [BookingType.INFIX]: 'resources.enums.bookingType.infix',\n  [BookingType.POINTS]: 'resources.enums.bookingType.points',\n  [BookingType.SERVICE]: 'resources.enums.bookingType.service',\n}\n\nconst ticketTypeMapping: Record<TicketType, string> = {\n  [TicketType.K]: 'resources.enums.ticketType.k',\n  [TicketType.M]: 'resources.enums.ticketType.m',\n  [TicketType.Z]: 'resources.enums.ticketType.z',\n  [TicketType.N]: 'resources.enums.ticketType.n',\n  [TicketType.P]: 'resources.enums.ticketType.p',\n  [TicketType.U]: 'resources.enums.ticketType.u',\n  [TicketType.R]: 'resources.enums.ticketType.r',\n}\n\nexport const mapFromBookingType = (bookingType: BookingType): string =>\n  bookingTypeMapping[bookingType]\n\nexport const mapFromTicketType = (ticketType: TicketType): string =>\n  ticketTypeMapping[ticketType]\n","import * as React from 'react'\nimport { useShowContext } from 'react-admin'\nimport {\n  Box,\n  createStyles,\n  makeStyles,\n  Theme,\n  Typography,\n} from '@material-ui/core'\nimport { TicketDetails } from '../../core/ticket-details/ticket-details'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    header: {\n      letterSpacing: theme.spacing(0.2),\n    },\n  }),\n)\nexport const TicketDetailsHeader = () => {\n  const classes = useStyles()\n  const { record } = useShowContext<TicketDetails>()\n  return (\n    <Box m={2}>\n      <Typography className={classes.header} variant=\"h5\" paragraph>\n        {record?.firstname} {record?.lastname}\n      </Typography>\n    </Box>\n  )\n}\n","import * as React from 'react'\nimport {\n  DateField,\n  Labeled,\n  TextField,\n  TextFieldProps,\n  useRecordContext,\n  useTranslate,\n} from 'react-admin'\nimport {\n  Box,\n  Chip,\n  createStyles,\n  makeStyles,\n  Paper,\n  Theme,\n} from '@material-ui/core'\nimport { mapFromTicketType } from '../../core/ticket-details/ticket-details-values.mapper'\nimport { TicketDetails } from '../../core/ticket-details/ticket-details'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ticketBox: {\n      display: 'flex',\n      flexDirection: 'column',\n      padding: theme.spacing(1),\n      marginLeft: theme.spacing(1),\n    },\n    ticketField: {\n      padding: theme.spacing(0),\n      margin: theme.spacing(0),\n      marginBottom: theme.spacing(0.5),\n    },\n  }),\n)\n\nexport const TicketDetailsTicketsField = ({ label }: TextFieldProps) => {\n  const classes = useStyles()\n  const t = useTranslate()\n  const record = useRecordContext<TicketDetails>()\n  const mappedRecords = (record.tickets || []).map(\n    ({ id, ticketType, createdAt, ticketCode }) => ({\n      id,\n      ticketCode,\n      ticketType: mapFromTicketType(ticketType),\n      createdAt,\n    }),\n  )\n  const fields = mappedRecords.map((mappedRecord) => (\n    <Paper\n      key={mappedRecord.id}\n      variant=\"elevation\"\n      className={classes.ticketBox}\n    >\n      <Labeled\n        className={classes.ticketField}\n        label=\"resources.ticket-details.fields.tickets.fields.id\"\n      >\n        <TextField\n          className={classes.ticketField}\n          record={mappedRecord}\n          source=\"id\"\n        />\n      </Labeled>\n      <Labeled\n        className={classes.ticketField}\n        label=\"resources.ticket-details.fields.tickets.fields.ticketCode\"\n      >\n        <TextField\n          className={classes.ticketField}\n          record={mappedRecord}\n          source=\"ticketCode\"\n        />\n      </Labeled>\n      <Labeled\n        className={classes.ticketField}\n        label=\"resources.ticket-details.fields.tickets.fields.ticketType\"\n      >\n        <Chip\n          label={t(mappedRecord.ticketType)}\n          className={classes.ticketField}\n        />\n      </Labeled>\n      <Labeled\n        className={classes.ticketField}\n        label=\"resources.ticket-details.fields.tickets.fields.createdAt\"\n      >\n        <DateField\n          className={classes.ticketField}\n          record={mappedRecord}\n          source=\"createdAt\"\n          showTime\n        />\n      </Labeled>\n    </Paper>\n  ))\n  return (\n    <Labeled label={label}>\n      <Box display=\"flex\" flexWrap=\"wrap\" flexDirection=\"row\">\n        {fields}\n      </Box>\n    </Labeled>\n  )\n}\n","import {\n  CREATE,\n  CreateParams,\n  sanitizeFetchType,\n  UPDATE_MANY,\n  UpdateManyParams,\n} from 'react-admin'\nimport { TicketDetails } from './ticket-details'\nimport { ResourceName } from '../ResourceName'\nimport { AccessUsingsCreateParams } from '../access-usings/access-usings-create.params'\nimport {\n  ToggleType,\n  ToggleButtonAction,\n  ToggleButtonState,\n} from './toggle-button'\n\ntype Mutation = {\n  type: string\n  resource: string\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  payload?: object\n}\n\nconst blockMutation = (ticketDetails: TicketDetails): Mutation => {\n  const { accessesIds, tickets } = ticketDetails\n  const ticketIds = tickets.map((t) => t.id)\n  return {\n    type: sanitizeFetchType(CREATE),\n    resource: ResourceName.ACCESS_USINGS,\n    payload: {\n      data: { ticketIds, accessIds: accessesIds },\n    } as CreateParams<AccessUsingsCreateParams>,\n  }\n}\n\nconst unblockMutation = ({ tickets }: TicketDetails): Mutation => {\n  const activeAccessUsingIds = tickets\n    .flatMap((t) => t.accessUsings)\n    .filter((au) => au.active)\n    .map((au) => au.id)\n  return {\n    type: sanitizeFetchType(UPDATE_MANY),\n    resource: ResourceName.ACCESS_USINGS,\n    payload: {\n      ids: activeAccessUsingIds,\n      data: {\n        active: false,\n      },\n    } as UpdateManyParams,\n  }\n}\n\ntype State = {\n  mutateQuery?: (ticketDetails: TicketDetails) => Mutation\n} & ToggleButtonState\n\nexport const blockAccessButtonInitialState = {\n  type: ToggleType.DISABLED,\n  text: 'resources.ticket-details.actions.blockAccessNA',\n}\n\nexport const toggleAccessButtonReducer = (\n  state: State,\n  { type }: ToggleButtonAction,\n): State => {\n  switch (type) {\n    case ToggleType.BLOCK: {\n      return {\n        type,\n        text: 'resources.ticket-details.actions.blockAccess',\n        mutateQuery: blockMutation,\n      }\n    }\n    case ToggleType.UNBLOCK: {\n      return {\n        type,\n        text: 'resources.ticket-details.actions.unblockAccess',\n        mutateQuery: unblockMutation,\n      }\n    }\n    case ToggleType.DISABLED: {\n      return blockAccessButtonInitialState\n    }\n    default:\n      throw new Error()\n  }\n}\n","export enum Multiplicities {\n  SINGLE = 'SINGLE',\n  MULTIPLE = 'MULTIPLE',\n  CHECK_ALL = 'CHECK_ALL'\n}","import * as React from 'react'\nimport { useEffect, useReducer } from 'react'\nimport {\n  useMutation,\n  useNotify,\n  useRecordContext,\n  useRefresh,\n  useShowContext,\n  useTranslate,\n} from 'react-admin'\nimport { Button, createStyles, makeStyles, Theme } from '@material-ui/core'\nimport { ToggleType } from '../../core/ticket-details/toggle-button'\nimport { TicketDetails } from '../../core/ticket-details/ticket-details'\nimport {\n  blockAccessButtonInitialState,\n  toggleAccessButtonReducer,\n} from '../../core/ticket-details/toggle-access-button.reducer'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    button: {\n      color: theme.palette.common.white,\n      marginLeft: theme.spacing(1),\n    },\n  }),\n)\n\nexport const ToggleAccessButton = () => {\n  const classes = useStyles()\n  const t = useTranslate()\n  const notify = useNotify()\n  const { loading } = useShowContext()\n  const [{ type, text, mutateQuery }, dispatch] = useReducer(\n    toggleAccessButtonReducer,\n    blockAccessButtonInitialState,\n  )\n  const ticketDetails = useRecordContext<TicketDetails>()\n  const [mutate, { loading: mutationLoading }] = useMutation()\n  const refresh = useRefresh()\n\n  const isActive = (td: TicketDetails) =>\n    td.tickets.some((ticket) => ticket.accessUsings.some((a) => a.active))\n\n  useEffect(() => {\n    if (isActive(ticketDetails)) {\n      dispatch({ type: ToggleType.UNBLOCK })\n    } else {\n      dispatch({ type: ToggleType.BLOCK })\n    }\n  }, [ticketDetails])\n\n  const onClick = async () => {\n    try {\n      const query = mutateQuery?.(ticketDetails)\n      await mutate(query, { returnPromise: true })\n      refresh()\n    } catch (err) {\n      notify((err as Error)?.message, 'error')\n    }\n  }\n\n  return (\n    <Button\n      disabled={type === ToggleType.DISABLED || loading || mutationLoading}\n      className={classes.button}\n      variant=\"contained\"\n      color=\"secondary\"\n      onClick={onClick}\n    >\n      {t(text)}\n    </Button>\n  )\n}\n","import {\n  ToggleType,\n  ToggleButtonAction,\n  ToggleButtonState,\n} from './toggle-button'\nimport { BookingUpdateRequest } from '../bookings/booking-update.request'\nimport { BookingDisabledOption } from '../enum/BookingDisabledOption'\n\ntype State = {\n  mutateParam?: BookingUpdateRequest['disabled']\n} & ToggleButtonState\n\nexport const blockTicketButtonInitialState = {\n  type: ToggleType.DISABLED,\n  text: 'resources.ticket-details.actions.blockTicketNA',\n}\n\nexport const toggleTicketButtonReducer = (\n  state: State,\n  { type }: ToggleButtonAction,\n): State => {\n  switch (type) {\n    case ToggleType.BLOCK: {\n      return {\n        type,\n        text: 'resources.ticket-details.actions.blockTicket',\n        mutateParam: BookingDisabledOption.ADMIN,\n      }\n    }\n    case ToggleType.UNBLOCK: {\n      return {\n        type,\n        text: 'resources.ticket-details.actions.unblockTicket',\n        mutateParam: null,\n      }\n    }\n    case ToggleType.DISABLED: {\n      return blockTicketButtonInitialState\n    }\n    default:\n      throw new Error()\n  }\n}\n","import * as React from 'react'\nimport { useEffect, useReducer } from 'react'\nimport {\n  sanitizeFetchType,\n  UPDATE,\n  UpdateParams,\n  useMutation,\n  useNotify,\n  useRecordContext,\n  useRefresh,\n  useShowContext,\n  useTranslate,\n} from 'react-admin'\nimport { Button, createStyles, makeStyles, Theme } from '@material-ui/core'\nimport { TicketDetails } from '../../core/ticket-details/ticket-details'\nimport { BookingUpdateRequest } from '../../core/bookings/booking-update.request'\nimport { BookingDisabledOption } from '../../core/enum/BookingDisabledOption'\nimport { ResourceName } from '../../core/ResourceName'\nimport {\n  blockTicketButtonInitialState,\n  toggleTicketButtonReducer,\n} from '../../core/ticket-details/toggle-ticket-button.reducer'\nimport { ToggleType } from '../../core/ticket-details/toggle-button'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    button: {\n      color: theme.palette.common.white,\n      marginLeft: theme.spacing(1),\n    },\n  }),\n)\n\nexport const ToggleTicketButton = () => {\n  const classes = useStyles()\n  const t = useTranslate()\n  const notify = useNotify()\n  const { loading } = useShowContext()\n  const [{ type, text, mutateParam }, dispatch] = useReducer(\n    toggleTicketButtonReducer,\n    blockTicketButtonInitialState,\n  )\n  const { id: bookingId, bookingDisabled } = useRecordContext<TicketDetails>()\n  const [mutate, { loading: mutationLoading }] = useMutation()\n  const refresh = useRefresh()\n\n  useEffect(() => {\n    if (bookingDisabled === null) {\n      dispatch({ type: ToggleType.BLOCK })\n    } else if (bookingDisabled === BookingDisabledOption.ADMIN) {\n      dispatch({ type: ToggleType.UNBLOCK })\n    } else {\n      dispatch({ type: ToggleType.DISABLED })\n    }\n  }, [bookingDisabled])\n\n  const onClick = async () => {\n    try {\n      await mutate(\n        {\n          type: sanitizeFetchType(UPDATE),\n          resource: ResourceName.BOOKINGS,\n          payload: {\n            data: { id: bookingId, disabled: mutateParam },\n          } as UpdateParams<BookingUpdateRequest>,\n        },\n        { returnPromise: true },\n      )\n      refresh()\n    } catch (err) {\n      notify((err as Error)?.message, 'error')\n    }\n  }\n\n  return (\n    <Button\n      disabled={type === ToggleType.DISABLED || loading || mutationLoading}\n      className={classes.button}\n      variant=\"contained\"\n      color=\"secondary\"\n      onClick={onClick}\n    >\n      {t(text)}\n    </Button>\n  )\n}\n","import React from 'react'\nimport {\n  useMediaQuery,\n  useTheme,\n  TableContainer,\n  Table,\n  TableHead,\n  TableBody,\n  TableRow,\n  TableCell,\n} from '@material-ui/core'\nimport { ListProps, List, Pagination, useListContext, useTranslate } from 'react-admin'\nimport { MobilePostPagination } from '../../common/Pagination'\n\ninterface AccessListProps extends ListProps {\n  setSelected: (prop: number | undefined) => void\n}\n\nconst AccessGrid = ({\n  setSelected,\n}: {\n  setSelected: (prop: number | undefined) => void\n}) => {\n  const translate = useTranslate()\n  const { data, ids } = useListContext()\n\n  return (\n    <>\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>ID</TableCell>\n              <TableCell>{translate('resources.access.fields.name')}</TableCell>\n              <TableCell>{translate('resources.access.fields.entranceId')}</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {ids.map((id) => (\n              <TableRow key={id} style={{ cursor: 'pointer' }} hover>\n                <TableCell onClick={() => setSelected(id as number)}>\n                  {data[id]?.id}\n                </TableCell>\n                <TableCell onClick={() => setSelected(id as number)}>\n                  {data[id]?.name}\n                </TableCell>\n                <TableCell onClick={() => setSelected(id as number)}>\n                  {data[id]?.entranceId}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  )\n}\n\nexport const AccessList = ({setSelected, ...props}: AccessListProps) => {\n  const theme = useTheme()\n\n  return (\n    <List\n      perPage={20}\n      exporter={false}\n      pagination={\n        useMediaQuery(theme.breakpoints.up('md')) ? (\n          <Pagination rowsPerPageOptions={[20, 50, 100]} />\n        ) : (\n          <MobilePostPagination />\n        )\n      }\n      {...props}\n    >\n      <AccessGrid setSelected={setSelected} />\n    </List>\n  )\n}\n","import { ButtonBase, Typography, withStyles } from '@material-ui/core'\n\nexport const FullWidthButton = withStyles({\n  root: {\n    width: '100%',\n    height: '52px',\n    fontSize: '17px',\n    marginBottom: '1px',\n    '&:hover': {\n      color: 'lightgrey',\n    }\n  },\n})(ButtonBase)\n\nexport const BackButton = withStyles({\n  root: {\n    height: '100%',\n    writingMode: 'vertical-lr',\n    textOrientation: 'mixed',\n    width: '100%',\n    '&:hover': {\n      color: 'lightgrey'\n    }\n  }\n})(ButtonBase)\n\nexport const BackButtonText = withStyles({\n  root: {\n    writingMode: 'vertical-lr',\n    textOrientation: 'mixed',\n  }\n})(Typography)","import {\n  List,\n  ListProps,\n  useListContext,\n  useTranslate,\n  useMutation,\n  sanitizeFetchType,\n  Record,\n  useRefresh,\n  UPDATE_MANY,\n  useListSortContext,\n  TextField,\n  DateField,\n  FunctionField,\n} from 'react-admin'\nimport React from 'react'\nimport {\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from '@material-ui/core'\nimport { ArrowDownward, ArrowUpward } from '@material-ui/icons'\nimport { AccessUsingDto } from '../../../core/dto/access-using.dto'\nimport { ResourceName } from '../../../core/ResourceName'\n\nconst AccessUsingsGrid = () => {\n  const translate = useTranslate()\n  const { data, ids } = useListContext()\n  const [mutate] = useMutation()\n  const refresh = useRefresh()\n  const { currentSort, setSort } = useListSortContext()\n\n  const patchAccess = async (access: AccessUsingDto) => {\n    await mutate(\n      {\n        type: sanitizeFetchType(UPDATE_MANY),\n        resource: ResourceName.ACCESS_USINGS,\n        payload: {\n          ids: [access.id],\n          data: {\n            active: !access.active,\n          },\n        },\n      },\n      { returnPromise: true },\n    )\n    refresh()\n  }\n\n  const inverseOrder = () => (currentSort.order === 'ASC' ? 'DESC' : 'ASC')\n\n  const handleSortChange = (field: string) => {\n    setSort(field, currentSort.field === field ? inverseOrder() : 'DESC')\n  }\n\n  const HeaderCell = (name: string, display: string) => (\n    <div style={{ display: 'flex', cursor: 'pointer', textAlign: 'center' }}>\n      {currentSort.field === name && (\n        <>{currentSort.order === 'ASC' ? <ArrowUpward /> : <ArrowDownward />}</>\n      )}\n      <div> {translate(display)} </div>\n    </div>\n  )\n\n  return (\n    <TableContainer>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell onClick={() => handleSortChange('date')}>\n              {HeaderCell('date', 'resources.access-usings.fields.date')}\n            </TableCell>\n            <TableCell onClick={() => handleSortChange('direction')}>\n              {HeaderCell('direction', 'resources.access-usings.fields.direction')}\n            </TableCell>\n            <TableCell onClick={() => handleSortChange('active')}>\n              {HeaderCell('active', 'resources.access-usings.fields.active')}\n            </TableCell>\n            <TableCell>\n              {translate('resources.access-usings.fields.ticketId')}\n            </TableCell>\n            <TableCell style={{ width: '20%' }} />\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {ids.map((id) => (\n            <TableRow key={id}>\n              <TableCell>\n                <DateField\n                  source=\"date\"\n                  record={data[id] as AccessUsingDto}\n                  showTime\n                />\n              </TableCell>\n              <TableCell>\n                <TextField\n                  source=\"direction\"\n                  record={data[id] as AccessUsingDto}\n                />\n              </TableCell>\n              <TableCell>\n                <FunctionField\n                  record={data[id]}\n                  render={(record: Record | undefined) =>\n                    record?.active\n                      ? translate('const.yes')\n                      : translate('const.no')\n                  }\n                />\n              </TableCell>\n              <TableCell>\n                <TextField\n                  source=\"ticketCode\"\n                  record={data[id] as AccessUsingDto}\n                />\n              </TableCell>\n              <TableCell>\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  style={{ width: '100%', fontSize: '13px' }}\n                  onClick={() => patchAccess(data[id] as AccessUsingDto)}\n                >\n                  {translate(\n                    `resources.access-usings.actions.${data[id].active ? `deactivate` : `activate`\n                    }`,\n                  )}\n                </Button>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n\nexport const AccessUsingsList = (props: ListProps) => (\n  <List\n    {...props}\n    exporter={false}\n    perPage={20}\n    sort={{ field: 'date', order: 'DESC' }}\n  >\n    <AccessUsingsGrid />\n  </List>\n)\n","import {\n  List,\n  ListProps,\n  useListContext,\n  useTranslate,\n  TextField,\n  DateField,\n  useListSortContext\n} from 'react-admin'\nimport React, { useState } from 'react'\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  IconButton,\n  Collapse,\n} from '@material-ui/core'\nimport { ArrowDropUp, ArrowDropDown, ArrowUpward, ArrowDownward } from '@material-ui/icons'\nimport { AccessDateDto } from '../../../core/dto/access-date.dto'\n\nconst AccessDatesRow = ({ record }: { record: AccessDateDto }) => {\n  const [open, setOpen] = useState(false)\n  const translate = useTranslate()\n  return (\n    <>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <IconButton\n            onClick={() => setOpen((state) => !state)}\n            style={{ width: 40, height: 40 }}\n          >\n            {open ? <ArrowDropUp /> : <ArrowDropDown />}\n          </IconButton>\n        </TableCell>\n        <TableCell>\n          <DateField record={record} source=\"activeFrom\" />\n        </TableCell>\n        <TableCell>\n          <DateField record={record} source=\"activeTo\" />\n        </TableCell>\n        <TableCell>\n          <TextField record={record} source=\"type\" />\n        </TableCell>\n        <TableCell>\n          <TextField record={record} source=\"priority\" />\n        </TableCell>\n      </TableRow>\n      {(record.dayOfWeek || record.timeFrom || record.timeTo) && (\n        <TableRow>\n          <TableCell colSpan={5} style={{ paddingBottom: 0, paddingTop: 0 }}>\n            <Collapse in={open}>\n              <TableContainer>\n                <Table>\n                  <TableBody>\n                    {record.dayOfWeek && (\n                      <TableRow>\n                        <TableCell>\n                          {translate('resources.access-dates.fields.dayOfWeek')}\n                        </TableCell>\n                        <TableCell style={{ textAlign: 'end' }}>\n                          <TextField\n                            record={record}\n                            source=\"dayOfWeek\"\n                            label=\" \"\n                          />\n                        </TableCell>\n                      </TableRow>\n                    )}\n                    {record.timeFrom && (\n                      <TableRow>\n                        <TableCell>\n                          {translate('resources.access-dates.fields.timeFrom')}\n                        </TableCell>\n                        <TableCell style={{ textAlign: 'end' }}>\n                          <DateField\n                            record={record}\n                            source=\"timeFrom\"\n                            label=\" \"\n                            showTime\n                          />\n                        </TableCell>\n                      </TableRow>\n                    )}\n                    {record.timeTo && (\n                      <TableRow>\n                        <TableCell>\n                          {translate('resources.access-dates.fields.timeTo')}\n                        </TableCell>\n                        <TableCell style={{ textAlign: 'end' }}>\n                          <DateField\n                            record={record}\n                            source=\"timeTo\"\n                            label=\" \"\n                            showTime\n                          />\n                        </TableCell>\n                      </TableRow>\n                    )}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n            </Collapse>\n          </TableCell>\n        </TableRow>\n      )}\n    </>\n  )\n}\n\nconst AccessDatesGrid = () => {\n  const translate = useTranslate()\n  const { data, ids } = useListContext()\n  const { currentSort, setSort } = useListSortContext()\n\n  const inverseOrder = () => (currentSort.order === 'ASC' ? 'DESC' : 'ASC')\n\n  const handleSortChange = (field: string) => {\n    setSort(field, currentSort.field === field ? inverseOrder() : 'DESC')\n  }\n\n  const HeaderCell = (name: string, display: string) => (\n    <div style={{ display: 'flex', cursor: 'pointer', textAlign: 'center' }}>\n      {currentSort.field === name && (\n        <>{currentSort.order === 'ASC' ? <ArrowUpward /> : <ArrowDownward />}</>\n      )}\n      <div> {translate(display)} </div>\n    </div>\n  )\n\n  return (\n    <TableContainer>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell style={{ width: '5%' }} />\n            <TableCell onClick={() => handleSortChange('activeFrom')}>\n              {HeaderCell('activeFrom', 'resources.access-dates.fields.activeFrom')}\n            </TableCell>\n            <TableCell onClick={() => handleSortChange('activeTo')}>\n              {HeaderCell('activeTo', 'resources.access-dates.fields.activeTo')}\n            </TableCell>\n            <TableCell onClick={() => handleSortChange('type')}>\n              {HeaderCell('type', 'resources.access-dates.fields.type')}\n            </TableCell>\n            <TableCell>\n              {translate('resources.access-dates.fields.priority')}\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {ids.map((id) => (\n            <AccessDatesRow key={id} record={data[id] as AccessDateDto} />\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n\nexport const AccessDatesList = (props: ListProps) => (\n  <List\n    {...props}\n    exporter={false}\n    perPage={20}\n    sort={{ field: 'id', order: 'DESC' }}\n  >\n    <AccessDatesGrid />\n  </List>\n)\n","import React, { useState } from 'react'\nimport {\n  ShowProps,\n  Show,\n  useShowContext,\n  ResourceContextProvider,\n  useTranslate,\n  TextField,\n  DateField,\n  FunctionField,\n  Record,\n  Pagination\n} from 'react-admin'\nimport {\n  TableContainer,\n  Table,\n  TableBody,\n  TableRow,\n  TableCell,\n  Grid,\n  Paper,\n  Box,\n} from '@material-ui/core'\nimport { Access } from '../../../core/accesses/access'\nimport { FullWidthButton } from '../TicketDetailsComponents'\nimport { ResourceName } from '../../../core/ResourceName'\nimport { AccessUsingsList } from './AccessUsingsList'\nimport { AccessDatesList } from './AccessDatesList'\nimport { AccessActivePeriodStartingOptions } from '../../../core/enum/AccessActivePeriodStartingOptions'\n\nconst TabButton = ({\n  value,\n  selected,\n  change,\n  children,\n}: {\n  value: number\n  selected: number\n  change: (prop: number) => void\n  children: any\n}) => (\n  <FullWidthButton\n    style={{\n      background: selected === value ? 'rgba(0,0,0,0.2)' : 'inherit',\n    }}\n    onClick={() => change(value)}\n  >\n    {children}\n  </FullWidthButton>\n)\n\nconst AccessDetails = () => {\n  const translate = useTranslate()\n  const { record: access } = useShowContext<Access>()\n  return (\n    <TableContainer>\n      <Table>\n        <TableBody>\n          <TableRow>\n            <TableCell style={{ width: '50%' }}>ID</TableCell>\n            <TableCell style={{ width: '50%' }}>\n              <TextField source=\"id\" />\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>{translate('resources.access.fields.name')}</TableCell>\n            <TableCell>\n              <TextField source=\"name\" />\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>{translate('resources.access.fields.bonus')}</TableCell>\n            <TableCell>\n              <FunctionField\n                render={(record: Record | undefined) =>\n                  translate(`resources.enums.bonus.${record?.bonus}`)\n                }\n              />\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              {translate('resources.access.fields.entranceId')}\n            </TableCell>\n            <TableCell>\n              <TextField source=\"entranceId\" />\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              {translate('resources.access.fields.modifiedById')}\n            </TableCell>\n            <TableCell>\n              <TextField source=\"modifiedByName\" />\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              {translate('resources.access.fields.createdById')}\n            </TableCell>\n            <TableCell>\n              <TextField source=\"createdByName\" />\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              {translate('resources.access.fields.allowReenter')}\n            </TableCell>\n            <TableCell>\n              <FunctionField\n                render={(record: Record | undefined) =>\n                  record?.allowReenter\n                    ? translate('const.yes')\n                    : translate('const.no')\n                }\n              />\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              {translate('resources.access.fields.multipleEntry')}\n            </TableCell>\n            <TableCell>\n              <FunctionField\n                render={(record: Record | undefined) =>\n                  record?.multipleEntry\n                    ? translate('const.yes')\n                    : translate('const.no')\n                }\n              />\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              {translate('resources.access.fields.multiple')}\n            </TableCell>\n            <TableCell>\n              <TextField source=\"multiple\" />\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              {translate('resources.access.fields.usePriority')}\n            </TableCell>\n            <TableCell>\n              <TextField source=\"usePriority\" />\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>{translate('resources.access.fields.delay')}</TableCell>\n            <TableCell>\n              <TextField source=\"delay\" />\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              {translate('resources.access.fields.releaseTime')}\n            </TableCell>\n            <TableCell>\n              <DateField source=\"releaseTime\" />\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              {translate('resources.access.fields.releaseDayOfMonth')}\n            </TableCell>\n            <TableCell>\n              <TextField source=\"releaseDayOfMonth\" />\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              {translate('resources.access.fields.releaseDayOfWeek')}\n            </TableCell>\n            <TableCell>\n              <TextField source=\"releaseDayOfWeek\" />\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              {translate('resources.access.fields.createdAt')}\n            </TableCell>\n            <TableCell>\n              <DateField source=\"createdAt\" />\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              {translate('resources.access.fields.modifiedAt')}\n            </TableCell>\n            <TableCell>\n              <DateField source=\"modifiedAt\" />\n            </TableCell>\n          </TableRow>\n          {access?.activePeriodStartingFrom !==\n            AccessActivePeriodStartingOptions.NO_LIMIT && (\n              <TableRow>\n                <TableCell>\n                  {translate('resources.access.fields.activePeriod')}\n                </TableCell>\n                <TableCell>\n                  <TextField source=\"activePeriod\" />\n                </TableCell>\n              </TableRow>\n            )}\n          <TableRow>\n            <TableCell>\n              {translate('resources.access.fields.activePeriodStartingFrom')}\n            </TableCell>\n            <TableCell>\n              <FunctionField\n                render={(record: Record | undefined) =>\n                  translate(\n                    `resources.enums.activePeriodStartingFrom.${record?.activePeriodStartingFrom}`,\n                  )\n                }\n              />\n            </TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n\nconst AccessDates = () => {\n  const { basePath, record } = useShowContext<Access>()\n  return (\n    <Box>\n      <ResourceContextProvider value={ResourceName.ACCESS_DATES}>\n        <AccessDatesList\n          title=\" \"\n          basePath={basePath}\n          filter={{\n            id: record?.accessDatesIds.join(','),\n          }}\n          actions={false}\n          perPage={20}\n          pagination={<Pagination rowsPerPageOptions={[20, 50, 100]} />}\n        />\n      </ResourceContextProvider>\n    </Box>\n  )\n}\n\nconst AccessUses = ({ id, tickets }: { id: string; tickets: number[] }) => {\n  const { basePath } = useShowContext<Access>()\n  return (\n    <Box>\n      <ResourceContextProvider value={ResourceName.ACCESS_USINGS}>\n        <AccessUsingsList\n          title=\" \"\n          basePath={basePath}\n          filter={{\n            ticketId: tickets.join(' '),\n            accessId: id,\n          }}\n          actions={false}\n          perPage={20}\n          pagination={<Pagination rowsPerPageOptions={[20, 50, 100]} />}\n        />\n      </ResourceContextProvider>\n    </Box>\n  )\n}\n\nexport const AccessShow = (props: ShowProps) => {\n  const translate = useTranslate()\n  const [selectedTab, setSelectedTab] = useState(0)\n  const { record } = useShowContext()\n  const { id } = props\n\n  const handleTabChange = (prop: number) => setSelectedTab(prop)\n\n  return (\n    <Show {...props}>\n      <>\n        <Grid container>\n          <Grid item xs={4}>\n            <Paper style={{ height: '100%' }}>\n              <TabButton\n                value={0}\n                selected={selectedTab}\n                change={handleTabChange}\n              >\n                {translate('resources.access.tabs.details')}\n              </TabButton>\n              <TabButton\n                value={1}\n                selected={selectedTab}\n                change={handleTabChange}\n              >\n                {translate('resources.access.tabs.dates')}\n              </TabButton>\n              <TabButton\n                value={2}\n                selected={selectedTab}\n                change={handleTabChange}\n              >\n                {translate('resources.access.tabs.uses')}\n              </TabButton>\n            </Paper>\n          </Grid>\n          <Grid item xs={8}>\n            <Paper style={{ height: '100%' }}>\n              {selectedTab === 0 && <AccessDetails />}\n              {selectedTab === 1 && <AccessDates />}\n              {selectedTab === 2 && (\n                <AccessUses\n                  id={id as string}\n                  tickets={\n                    record?.tickets.map((ticket: any) => ticket.id) as number[]\n                  }\n                />\n              )}\n            </Paper>\n          </Grid>\n        </Grid>\n      </>\n    </Show>\n  )\n}\n","import React, { useEffect } from 'react'\nimport {\n  ChipFieldProps,\n  DateField,\n  Labeled,\n  ResourceContextProvider,\n  Show,\n  ShowProps,\n  Tab,\n  TabbedShowLayout,\n  TextField,\n  useRecordContext,\n  useShowContext,\n  useTranslate,\n} from 'react-admin'\nimport { Box, Chip, Divider, Grid, Hidden, Typography } from '@material-ui/core'\nimport { TicketDetails } from '../../core/ticket-details/ticket-details'\nimport { mapFromBookingType } from '../../core/ticket-details/ticket-details-values.mapper'\nimport { TicketDetailsHeader } from './TicketDetailsHeader'\nimport { TicketDetailsTicketsField } from './TicketDetailsTicketsField'\nimport { ToggleAccessButton } from './ToggleAccessButton'\nimport { ToggleTicketButton } from './ToggleTicketButton'\nimport { ResourceName } from '../../core/ResourceName'\nimport { LogList } from '../logs/LogList'\nimport { AccessList } from './accesses/AccessList'\nimport { AccessShow } from './accesses/AccessShow'\nimport { BackButton, BackButtonText } from './TicketDetailsComponents'\nimport { useHasAuthority } from '../hooks/useHasAuthority'\nimport { Authority } from '../../core/auth/Authority'\n\nconst MappedChipField = <T extends unknown>({\n  mapper,\n  source,\n}: ChipFieldProps & { mapper: (value: T) => string }) => {\n  const record = useRecordContext<TicketDetails>()\n  const t = useTranslate()\n  const mappedValue = mapper(record[source as string])\n  return <Chip label={t(mappedValue)} />\n}\n\nconst AccessDetailsView = () => {\n  const { record, basePath } = useShowContext()\n  const translate = useTranslate()\n  const [selectedAccess, setSelectedAccess] = React.useState<\n    number | undefined\n  >(undefined)\n\n  const handleAccessChange = (prop: number | undefined) => {\n    setSelectedAccess(prop)\n  }\n\n  useEffect(() => {\n    if (record?.accessesIds && record.accessesIds.length === 1)\n      setSelectedAccess(record?.accessesIds.toString())\n  }, [record, setSelectedAccess])\n\n  return (\n    <>\n      <Divider />\n      <Hidden xlDown={!!selectedAccess && record?.accessesIds.length === 1}>\n        <Typography variant=\"h5\">\n          {translate('resources.access.actions.choose')}\n        </Typography>\n        <ResourceContextProvider value={ResourceName.ACCESSES}>\n          <AccessList\n            basePath={basePath}\n            actions={false}\n            filters={undefined}\n            filter={{ id: record?.accessesIds.toString() }}\n            title=\" \"\n            setSelected={handleAccessChange}\n          />\n        </ResourceContextProvider>\n      </Hidden>\n      {selectedAccess && (\n        <Box paddingY={2}>\n          <Grid container>\n            <Hidden xlDown={record?.accessesIds.length === 1}>\n              <Grid item xs={1}>\n                <BackButton onClick={() => setSelectedAccess(undefined)}>\n                  <BackButtonText>\n                    {translate('resources.access.actions.back')}\n                  </BackButtonText>\n                </BackButton>\n              </Grid>\n            </Hidden>\n            <Grid item xs={record?.accessesIds.length === 1 ? 12 : 11}>\n              <AccessShow\n                basePath={basePath}\n                actions={false}\n                id={selectedAccess.toString()}\n                resource={ResourceName.ACCESSES}\n                title=\" \"\n              />\n            </Grid>\n          </Grid>\n        </Box>\n      )}\n    </>\n  )\n}\n\nconst ProfileDetailsView = () => {\n  const { record } = useShowContext()\n  return (\n    <Tab label=\"resources.ticket-details.tabs.profile\">\n      {record?.documentType && (\n        <TextField\n          addLabel\n          label=\"resources.ticket-details.fields.documentType\"\n          source=\"documentType\"\n        />\n      )}\n      {record?.pesel && (\n        <TextField\n          label=\"resources.ticket-details.fields.pesel\"\n          source=\"pesel\"\n        />\n      )}\n      {record?.documentNumber && (\n        <TextField\n          label=\"resources.ticket-details.fields.documentNumber\"\n          source=\"documentNumber\"\n        />\n      )}\n      <TextField\n        label=\"resources.ticket-details.fields.firstname\"\n        source=\"firstname\"\n      />\n      <TextField\n        label=\"resources.ticket-details.fields.lastname\"\n        source=\"lastname\"\n      />\n      {record?.gender && (\n        <TextField\n          label=\"resources.ticket-details.fields.gender\"\n          source=\"gender\"\n        />\n      )}\n      {record?.birthdate && (\n        <DateField\n          label=\"resources.ticket-details.fields.birthdate\"\n          source=\"birthdate\"\n        />\n      )}\n      {record?.company && (\n        <TextField\n          label=\"resources.ticket-details.fields.company\"\n          source=\"company\"\n        />\n      )}\n      {record?.nationality && (\n        <TextField\n          label=\"resources.ticket-details.fields.nationality\"\n          source=\"nationality\"\n        />\n      )}\n    </Tab>\n  )\n}\n\nconst StatusButtons = () => (\n  <>\n    <Divider />\n    <Box p={1} display=\"flex\" justifyContent=\"flex-end\">\n      <ToggleAccessButton />\n      <ToggleTicketButton />\n    </Box>\n  </>\n)\n\nconst TicketMainView = () => {\n  const { record: ticketDetails } = useShowContext<TicketDetails>()\n  return (\n    <Tab label=\"resources.ticket-details.tabs.booking\">\n      <TextField\n        label=\"resources.ticket-details.fields.eventName\"\n        source=\"eventName\"\n      />\n      {ticketDetails?.seatId ? (\n        <TextField\n          label=\"resources.ticket-details.fields.seatId\"\n          source=\"seatId\"\n        />\n      ) : (\n        <TextField\n          label=\"resources.ticket-details.fields.bookingId\"\n          source=\"bookingId\"\n        />\n      )}\n      {ticketDetails?.objectName && (\n        <TextField\n          label=\"resources.ticket-details.fields.blockId\"\n          source=\"objectName\"\n        />\n      )}\n      {ticketDetails?.tribuneName && (\n        <TextField\n          label=\"resources.ticket-details.fields.tribuneName\"\n          source=\"tribuneName\"\n        />\n      )}\n      {ticketDetails?.blockName && (\n        <TextField\n          label=\"resources.ticket-details.fields.blockName\"\n          source=\"blockName\"\n        />\n      )}\n      {ticketDetails?.rowNumber && (\n        <TextField\n          label=\"resources.ticket-details.fields.rowNumber\"\n          source=\"rowNumber\"\n        />\n      )}\n      <Labeled label=\"resources.ticket-details.fields.bookingType\">\n        <MappedChipField source=\"bookingType\" mapper={mapFromBookingType} />\n      </Labeled>\n      {ticketDetails?.activeFrom && (\n        <DateField\n          label=\"resources.ticket-details.fields.activeFrom\"\n          source=\"activeFrom\"\n          showTime\n        />\n      )}\n      {ticketDetails?.activeTo && (\n        <DateField\n          label=\"resources.ticket-details.fields.activeTo\"\n          source=\"activeTo\"\n          showTime\n        />\n      )}\n      <TicketDetailsTicketsField label=\"resources.ticket-details.fields.tickets.name\" />\n      <DateField\n        label=\"resources.ticket-details.fields.createdAt\"\n        source=\"createdAt\"\n        showTime\n      />\n      <DateField\n        label=\"resources.ticket-details.fields.modifiedAt\"\n        source=\"modifiedAt\"\n        showTime\n      />\n      <StatusButtons />\n    </Tab>\n  )\n}\n\nconst TicketLogsView = () => {\n  const { record, basePath } = useShowContext()\n  return (\n    <ResourceContextProvider value={ResourceName.TICKET_LOGS}>\n      <LogList\n        basePath={basePath}\n        filter={{ bookingId: record?.id }}\n        filters={undefined}\n        actions={false}\n        title=\" \"\n        noBooking\n      />\n    </ResourceContextProvider>\n  )\n}\n\nexport const TicketDetailsView = (props: ShowProps) => {\n  const hasAuthority = useHasAuthority()\n  return (\n    <Show {...props}>\n      <>\n        <TicketDetailsHeader />\n        <Divider />\n        <TabbedShowLayout syncWithLocation={false}>\n          <Tab label=\"resources.ticket-details.tabs.booking\">\n            <TicketMainView />\n          </Tab>\n          {hasAuthority(Authority.VIEW_LOGS) && (\n            <Tab label=\"resources.ticket-details.tabs.logs\">\n              <TicketLogsView />\n            </Tab>\n          )}\n          <Tab label=\"resources.ticket-details.tabs.profile\">\n            <ProfileDetailsView />\n          </Tab>\n          <Tab label=\"resources.ticket-details.tabs.accesses\">\n            <TextField\n              label=\"resources.ticket-details.fields.variantName\"\n              source=\"variantName\"\n            />\n            <AccessDetailsView />\n          </Tab>\n        </TabbedShowLayout>\n      </>\n    </Show>\n  )\n}\n","import * as React from 'react'\nimport {\n  Datagrid,\n  DateField,\n  Filter,\n  FilterProps,\n  List,\n  ListProps,\n  TextField,\n  TextInput,\n  useListContext,\n} from 'react-admin'\nimport { ResourceName } from '../../../core/ResourceName'\nimport { useHasAuthority } from '../../hooks/useHasAuthority'\nimport { Authority } from '../../../core/auth/Authority'\n\nconst ListFilters = (props: Omit<FilterProps, 'children'>) => (\n  <Filter {...props}>\n    <TextInput source=\"name\" alwaysOn />\n  </Filter>\n)\n\nconst OverallViewGrid = () => {\n  const { loading } = useListContext()\n  const hasAuthority = useHasAuthority()\n  // TODO: header doesn't change color when theme value is switched\n  //  the reason is the need to change the theme at <Admin> level - not at <Layout> level\n  //  the solution is here - https://stackoverflow.com/a/63967145 -> after that customReducer needs to be removed\n  return (\n    <Datagrid\n      loaded={!loading}\n      rowClick={\n        hasAuthority(Authority.VIEW_STATS_OVERALL_VIEW)\n          ? (id) => `${ResourceName.STATS_OVERALL_VIEW}/${id}/show`\n          : undefined\n      }\n    >\n      <TextField source=\"id\" />\n      <TextField source=\"name\" />\n      <DateField source=\"dateStart\" showTime />\n      <DateField source=\"dateEnd\" showTime />\n    </Datagrid>\n  )\n}\n\nexport const OverallViewList = (props: ListProps) => (\n  <List\n    {...props}\n    actions={false}\n    filters={<ListFilters />}\n    sort={{ field: 'id', order: 'DESC' }}\n  >\n    <OverallViewGrid />\n  </List>\n)\n","import React from 'react'\nimport {\n  makeStyles,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from '@material-ui/core'\nimport { Show, ShowProps, useTranslate, ArrayField, Datagrid, TextField } from 'react-admin'\n\nconst useStyles = makeStyles({\n  noBottomBorder: {\n    borderBottom: 'none',\n  },\n  quarterWidth: {\n    width: '25%',\n  },\n})\n\nconst ViewTitle = (record: any) => {\n  const {\n    record: { eventName, date, id },\n  } = record\n  const t = useTranslate()\n  const description = `${eventName} ${date.replace('T', ' ')} ${id}`\n  return (\n    <span>{`${t('resources.stats-overall-view.name')}: ${description}`}</span>\n  )\n}\n\nconst BlockGrid = (props: any) => {\n  const {\n    record: {\n      soldAbo, soldInfix, soldNormal, soldPoints, soldService\n    }\n  } = props\n  const classes = useStyles()\n  const translate = useTranslate()\n\n  const firstColumnEntries = [\n    { label: \"abo\", value: soldAbo },\n    { label: \"infix\", value: soldInfix },\n    { label: \"normal\", value: soldNormal },\n    { label: \"points\", value: soldPoints },\n    { label: \"service\", value: soldService },\n  ].map(({ label, value }) => (\n    !!value && (\n      <div key={label}>{translate(`resources.stats-overall-view.fields.${label}`)}</div>\n    )\n  ))\n\n  const secondColumnEntries = [\n    { label: \"enteredAbo\", value: soldAbo },\n    { label: \"enteredInfix\", value: soldInfix },\n    { label: \"enteredNormal\", value: soldNormal },\n    { label: \"enteredPoints\", value: soldPoints },\n    { label: \"enteredService\", value: soldService },\n  ].map(({ label, value }) =>\n    !!value && (\n      <TextField key={label} source={label} label=\" \" />\n    ))\n\n  const thirdColumnEntries = [\n    { label: \"soldAbo\", value: soldAbo },\n    { label: \"soldInfix\", value: soldInfix },\n    { label: \"soldNormal\", value: soldNormal },\n    { label: \"soldPoints\", value: soldPoints },\n    { label: \"soldService\", value: soldService },\n  ].map(({ label, value }) => (\n    !!value && (\n      <TextField key={label} source={label} label=\" \" />\n    )\n  ))\n\n  return (\n    <TableContainer style={{ paddingTop: \"10px\", marginBottom: \"10px\" }}>\n      <Table padding=\"none\">\n        <TableBody>\n          <TableRow>\n            <TableCell style={{ width: \"15%\" }} className={classes.noBottomBorder} />\n            <TableCell style={{ width: \"40%\" }} className={classes.noBottomBorder}>{firstColumnEntries}</TableCell>\n            <TableCell style={{ width: \"15%\" }} className={classes.noBottomBorder}>{secondColumnEntries}</TableCell>\n            <TableCell style={{ width: \"15%\" }} className={classes.noBottomBorder}>{thirdColumnEntries}</TableCell>\n            <TableCell style={{ width: \"15%\" }} className={classes.noBottomBorder} />\n          </TableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n\nconst TribuneGrid = () => {\n  const translate = useTranslate()\n\n  const TribuneHeader = () => (\n    <TableHead>\n      <TableRow>\n        <TableCell style={{ width: \"15%\" }} />\n        <TableCell style={{ width: \"40%\" }}>{translate('resources.stats-overall-view.fields.block')}</TableCell>\n        <TableCell style={{ width: \"15%\" }} />\n        <TableCell style={{ width: \"15%\" }} />\n        <TableCell style={{ width: \"15%\" }} />\n      </TableRow>\n    </TableHead>\n  )\n\n  return (\n    <ArrayField source=\"blocks\">\n      <Datagrid expand={<BlockGrid />} padding=\"none\" header={<TribuneHeader />} isRowExpandable={record => !!record.sold}>\n        <TextField source=\"name\" label=\"Sektor\" />\n        <TextField source=\"entered\" label=\" \" />\n        <TextField source=\"sold\" label=\" \" />\n        <TextField source=\"capacity\" label=\" \" />\n      </Datagrid>\n    </ArrayField>\n  )\n}\n\nconst ObjectGrid = () => {\n  const translate = useTranslate()\n\n  const objectHeader = () => (\n    <TableHead>\n      <TableRow>\n        <TableCell style={{ width: \"10%\" }} />\n        <TableCell style={{ width: \"45%\" }}>{translate('resources.stats-overall-view.fields.tribune')}</TableCell>\n        <TableCell style={{ width: \"15%\" }} />\n        <TableCell style={{ width: \"15%\" }} />\n        <TableCell style={{ width: \"15%\" }} />\n      </TableRow>\n    </TableHead>\n  )\n\n  return (\n    <ArrayField source=\"tribunes\">\n      <Datagrid expand={<TribuneGrid />} padding=\"none\" header={objectHeader}>\n        <TextField source=\"name\" label=\"Trybuna\" />\n        <TextField source=\"entered\" label=\" \" />\n        <TextField source=\"sold\" label=\" \" />\n        <TextField source=\"capacity\" label=\" \" />\n      </Datagrid>\n    </ArrayField>\n  )\n}\n\nexport const OverallView = (props: ShowProps) => {\n  const translate = useTranslate()\n\n  const overallHeader = () => (\n    <TableHead>\n      <TableRow>\n        <TableCell style={{ width: \"5%\" }} />\n        <TableCell style={{ width: \"50%\" }}>{translate('resources.stats-overall-view.fields.name')}</TableCell>\n        <TableCell style={{ width: \"15%\" }}>{translate('resources.stats-overall-view.fields.entered')}</TableCell>\n        <TableCell style={{ width: \"15%\" }}>{translate('resources.stats-overall-view.fields.sold')}</TableCell>\n        <TableCell style={{ width: \"15%\" }}>{translate('resources.stats-overall-view.fields.capacity')}</TableCell>\n      </TableRow>\n    </TableHead>\n  )\n\n  return (\n    <Show title={<ViewTitle />} {...props}>\n      <ArrayField source=\"objects\">\n        <Datagrid expand={<ObjectGrid />} padding=\"none\" header={overallHeader}>\n          <TextField source=\"name\" label=\"Obiekt\" />\n          <TextField source=\"entered\" />\n          <TextField source=\"sold\" />\n          <TextField source=\"capacity\" />\n        </Datagrid>\n      </ArrayField>\n    </Show>\n  )\n}","import { Box, Button, ButtonGroup, Checkbox, Divider, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core'\nimport React, { useMemo } from \"react\"\nimport { DateField, EditButton, FunctionField, GET_LIST, List, Pagination, Record, ResourceContextProvider, sanitizeFetchType, Show, ShowProps, Tab, TabbedShowLayout, TextField, TextInput, useListContext, useMutation, useNotify, useQuery, useRefresh, useShowContext, useTranslate } from \"react-admin\"\nimport { CompanyDto } from '../../core/dto/company.dto'\nimport { EngineDto } from \"../../core/dto/device/engine/engine.dto\"\nimport { PalmDto } from \"../../core/dto/device/palm/palm.dto\"\nimport { EventCompaniesDto } from '../../core/dto/event/event-companies.dto'\nimport { EventDevicesDto } from '../../core/dto/event/event-devices.dto'\nimport { EventDto } from '../../core/dto/event/event.dto'\nimport { ObjectDto } from '../../core/dto/object.dto'\nimport { EventStatus } from \"../../core/enum/EventStatus\"\nimport { ResourceName } from \"../../core/ResourceName\"\n\nconst ShowTitle = (record: any) => {\n  const { record: { name, dateStart, id } } = record\n  const translate = useTranslate()\n  const date = useMemo(() => !(dateStart instanceof Date) ? dateStart.replace('T', ' ') : '', [dateStart])\n  return (\n    <span>{translate('resources.events.titles.show')}: {name} {date} {id}</span>\n  )\n}\n\nconst Attachments = ({ source }: { source: 'COMPANIES' | 'OBJECTS' | 'ENGINES' | 'PALMS' }) => {\n  const translate = useTranslate()\n  const [mutate] = useMutation()\n  const notify = useNotify()\n  const { data, ids, filterValues, currentSort, total, refetch: refetchList } = useListContext<CompanyDto | ObjectDto | EngineDto | PalmDto>()\n  const { record: event, refetch } = useShowContext<EventDto>()\n  const { data: allFiltered, refetch: refetchAllFiltered } = useQuery({\n    type: sanitizeFetchType(GET_LIST),\n    resource: source.toLocaleLowerCase(),\n    payload: {\n      filter: {\n        ...filterValues\n      },\n      sort: currentSort || {\n        field: \"id\",\n        order: \"DESC\"\n      },\n      pagination: {\n        page: 1,\n        perPage: total || 1\n      }\n    }\n  })\n\n  const getAttachmentsFetchType = () => {\n    switch (source) {\n      case 'COMPANIES':\n        return `getCompaniesList`\n      case 'ENGINES':\n      case 'PALMS':\n        return `getDevicesList`\n      default:\n        return ''\n    }\n  }\n\n  const { data: attachedDto, refetch: refetchAttachedIds } = useQuery({\n    type: sanitizeFetchType(getAttachmentsFetchType()),\n    resource: ResourceName.EVENTS,\n    payload: {\n      eventId: event?.id,\n    }\n  }, {\n    enabled: getAttachmentsFetchType() !== ''\n  })\n\n  const isAttached = (attachmentId: number) => {\n    switch (source) {\n      case 'COMPANIES':\n        return (attachedDto as EventCompaniesDto)?.companiesIds?.includes(attachmentId) === true\n      case 'OBJECTS':\n        return event?.objectsIds?.includes(attachmentId)\n      case 'ENGINES':\n      case 'PALMS':\n        return (attachedDto as EventDevicesDto)?.verifierDevicesIds?.includes(attachmentId) === true\n      default:\n        notify(`Source '${source}' is not implemented yet.`)\n        return false\n    }\n  }\n\n  const handleAttach = async (idsToAttach: number[]) => {\n    switch (source) {\n      case 'COMPANIES':\n        await mutate({\n          type: sanitizeFetchType(\"attachCompanies\"),\n          resource: ResourceName.EVENTS,\n          payload: {\n            eventId: event?.id,\n            companiesIds: idsToAttach\n          }\n        }, { returnPromise: true })\n        break;\n      case 'OBJECTS':\n        await mutate({\n          type: sanitizeFetchType(\"attachObjects\"),\n          resource: ResourceName.EVENTS,\n          payload: {\n            eventId: event?.id,\n            objectsIds: idsToAttach\n          }\n        }, { returnPromise: true })\n        break;\n      case 'ENGINES':\n      case 'PALMS':\n        await mutate({\n          type: sanitizeFetchType(\"attachDevices\"),\n          resource: ResourceName.EVENTS,\n          payload: {\n            eventId: event?.id,\n            verifierDevicesIds: idsToAttach\n          }\n        }, { returnPromise: true })\n        break;\n      default:\n        notify(`Source '${source}' is not implemented yet.`);\n    }\n    refetchList()\n    if (refetch) {\n      refetch()\n    }\n    refetchAttachedIds()\n  }\n\n  const handleDetach = async (idsToDetach: number[]) => {\n    switch (source) {\n      case 'COMPANIES':\n        await mutate({\n          type: sanitizeFetchType(\"detachCompanies\"),\n          resource: ResourceName.EVENTS,\n          payload: {\n            eventId: event?.id,\n            companiesIds: idsToDetach\n          }\n        }, { returnPromise: true })\n        break;\n      case 'OBJECTS':\n        await mutate({\n          type: sanitizeFetchType(\"detachObjects\"),\n          resource: ResourceName.EVENTS,\n          payload: {\n            eventId: event?.id,\n            objectsIds: idsToDetach\n          }\n        }, { returnPromise: true })\n        break;\n      case 'ENGINES':\n      case 'PALMS':\n        await mutate({\n          type: sanitizeFetchType(\"detachDevices\"),\n          resource: ResourceName.EVENTS,\n          payload: {\n            eventId: event && event.id,\n            verifierDevicesIds: idsToDetach\n          }\n        }, { returnPromise: true })\n        break;\n      default:\n        notify(`Source '${source}' is not implemented yet.`);\n    }\n    refetchList()\n    if (refetch) {\n      refetch()\n    }\n    refetchAttachedIds()\n  }\n\n  const handleAttachAll = () => {\n    refetchAllFiltered()\n    handleAttach(allFiltered.map((record: CompanyDto | EngineDto | PalmDto | ObjectDto) => record?.id))\n  }\n\n  const handleDetachAll = () => {\n    refetchAllFiltered()\n    handleDetach(allFiltered.map((record: CompanyDto | EngineDto | PalmDto | ObjectDto) => record?.id))\n  }\n\n  return (\n    <TableContainer>\n      <ButtonGroup>\n        <Button variant=\"contained\" onClick={() => handleAttachAll()}>\n          {translate('resources.events.actions.attachAll')}</Button>\n        <Button variant=\"contained\" onClick={() => handleDetachAll()}>\n          {translate('resources.events.actions.detachAll')}</Button>\n      </ButtonGroup>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>\n              {translate(`resources.events.fields.attachment.name`)}\n            </TableCell>\n            <TableCell style={{ width: \"10%\" }}>\n              {translate(`resources.events.fields.attachment.attached`)}\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {ids.map((id) => (\n            <TableRow key={id}>\n              <TableCell>\n                <TextField source=\"name\" record={data[id]} />\n              </TableCell>\n              <TableCell>\n                <Checkbox\n                  checked={isAttached(id as number)}\n                  onClick={\n                    isAttached(id as number)\n                      ? () => handleDetach([id as number])\n                      : () => handleAttach([id as number])\n                  }\n                />\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n\nconst GeneralEditButton = () => {\n  const { record } = useShowContext()\n  const [mutate] = useMutation()\n  const refresh = useRefresh()\n  const translate = useTranslate()\n\n  const handleActivation = async () => {\n    if (record?.status !== EventStatus.IN_TRANSITION) {\n      if (record?.status === EventStatus.ACTIVE) {\n        await mutate({\n          type: sanitizeFetchType(\"deactivate\"),\n          resource: ResourceName.EVENTS,\n          payload: {\n            eventId: record?.id\n          }\n        }, { returnPromise: false })\n      }\n      else {\n        await mutate({\n          type: sanitizeFetchType(\"activate\"),\n          resource: ResourceName.EVENTS,\n          payload: {\n            eventId: record?.id\n          }\n        }, { returnPromise: false })\n      }\n      refresh()\n    }\n  }\n\n  return (\n    <>\n      <Divider />\n      <Box p={1} display=\"flex\" justifyContent=\"flex-end\">\n        <Button variant=\"contained\" onClick={handleActivation}\n          color=\"primary\" style={{ marginRight: \"5px\" }}\n          disabled={record?.status === EventStatus.IN_TRANSITION}>\n          {record?.status === EventStatus.INACTIVE ?\n            translate('resources.events.actions.activate') :\n            translate('resources.events.actions.deactivate')}\n        </Button>\n        <EditButton basePath=\"/events\" record={record} variant=\"contained\" />\n      </Box>\n    </>\n  )\n}\n\nexport const EventShow = (props: ShowProps) => {\n  const translate = useTranslate()\n  const { basePath } = props\n  return (\n    <Show {...props} title={<ShowTitle />} actions={false}>\n      <TabbedShowLayout>\n        <Tab label={translate(\"resources.events.tabs.general\")}>\n          <TextField source=\"id\" label=\"ID\" />\n          <TextField source=\"name\" />\n          <DateField source=\"dateStart\" showTime />\n          <DateField source=\"dateEnd\" showTime />\n          <FunctionField resource=\"events\" label={translate(\"resources.events.fields.status\")}\n            render={(r: Record | undefined) =>\n              (translate(`resources.enums.eventStatus.${r?.status.toLowerCase()}`))} />\n          <GeneralEditButton />\n        </Tab>\n        <Tab label={translate(\"resources.events.tabs.palms\")}>\n          <>\n            <Box paddingY={2}>\n              <ResourceContextProvider value={ResourceName.PALMS} >\n                <List basePath={basePath} exporter={false} title=\" \"\n                  perPage={20} pagination={<Pagination rowsPerPageOptions={[10, 20, 50]} />}\n                  filters={[\n                    <TextInput source=\"name\" alwaysOn />,\n                    <TextInput source=\"categoryId\" />\n                  ]}>\n                  <Attachments source=\"PALMS\" />\n                </List>\n              </ResourceContextProvider>\n            </Box>\n          </>\n        </Tab>\n        <Tab label={translate(\"resources.events.tabs.engines\")}>\n          <>\n            <Box paddingY={2}>\n              <ResourceContextProvider value={ResourceName.ENGINES}>\n                <List basePath={basePath} exporter={false} title=\" \"\n                  perPage={20} pagination={<Pagination rowsPerPageOptions={[10, 20, 50]} />}\n                  filters={[\n                    <TextInput source=\"name\" alwaysOn />,\n                    <TextInput source=\"categoryId\" />\n                  ]}>\n                  <Attachments source=\"ENGINES\" />\n                </List>\n              </ResourceContextProvider>\n            </Box>\n          </>\n        </Tab>\n        <Tab label={translate(\"resources.events.tabs.objects\")}>\n          <>\n            <Box paddingY={2}>\n              <ResourceContextProvider value={ResourceName.OBJECTS}>\n                <List basePath={basePath} exporter={false} title=\" \"\n                  perPage={20} pagination={<Pagination rowsPerPageOptions={[10, 20, 50, 100]} />}\n                  filters={[\n                    <TextInput source=\"name\" alwaysOn />\n                  ]}>\n                  <Attachments source=\"OBJECTS\" />\n                </List>\n              </ResourceContextProvider>\n            </Box>\n          </>\n        </Tab>\n        <Tab label={translate(\"resources.events.tabs.companies\")}>\n          <>\n            <Box paddingY={2}>\n              <ResourceContextProvider value={ResourceName.COMPANIES}>\n                <List basePath={basePath} exporter={false} title=\" \"\n                  perPage={20} pagination={<Pagination rowsPerPageOptions={[10, 20, 50, 100]} />}\n                  filters={[\n                    <TextInput source=\"name\" alwaysOn />\n                  ]}>\n                  <Attachments source=\"COMPANIES\" />\n                </List>\n              </ResourceContextProvider>\n            </Box>\n          </>\n        </Tab>\n      </TabbedShowLayout>\n    </Show>\n  )\n}","import {\n  Edit, EditProps, TextField, TextInput, FunctionField, SaveButton, ShowButton,\n  DateTimeInput, useTranslate, SimpleForm, Record, Toolbar, ToolbarProps\n} from \"react-admin\"\nimport React, { useMemo } from \"react\"\nimport { Cancel } from \"@material-ui/icons\"\n\nconst EditTitle = (record: any) => {\n  const { record: { name, dateStart, id } } = record\n  const translate = useTranslate()\n  const date = useMemo(() => !(dateStart instanceof Date) ? dateStart.replace('T', ' ') : '', [dateStart])\n  return (\n    <span>{translate('resources.events.titles.edit')}: {name} {date} {id}</span>\n  )\n}\n\nconst EditToolbar = (props: ToolbarProps) => (\n  <Toolbar {...props}>\n    <SaveButton />\n    <ShowButton label='const.cancel' icon={<Cancel />} />\n  </Toolbar>\n)\n\nexport const EventEdit = (props: EditProps) => {\n  const translate = useTranslate()\n  return (\n    <Edit {...props} title={<EditTitle />} actions={false}>\n      <SimpleForm redirect=\"show\" toolbar={<EditToolbar />}>\n        <TextField source=\"id\" label=\"ID\" />\n        <TextInput source=\"name\" />\n        <DateTimeInput source=\"dateStart\" />\n        <DateTimeInput source=\"dateEnd\" />\n        <FunctionField resource=\"events\" label={translate(\"resources.events.fields.status\")}\n          render={(r: Record | undefined) =>\n            (translate(`resources.enums.eventStatus.${r?.status.toLowerCase()}`))} />\n      </SimpleForm>\n    </Edit>\n  )\n}","import { Box, Typography, Divider, useMediaQuery, useTheme } from '@material-ui/core'\nimport React from 'react'\nimport {\n  List,\n  ListProps,\n  useListContext,\n  useTranslate,\n  Datagrid,\n  TextField,\n  TextInput,\n  FunctionField\n} from 'react-admin'\nimport { CustomerInfo } from '../../core/customer-info/customer-info'\nimport { ResourceName } from '../../core/ResourceName'\nimport { MaskField } from '../common/MaskField'\n\nconst CustomerInfoGrid = () => {\n  const {\n    loading,\n    filterValues: { info },\n  } = useListContext()\n  const t = useTranslate()\n  const theme = useTheme()\n  const smallDevice = useMediaQuery(theme.breakpoints.down('sm'))\n  return (\n    <>\n      {info &&\n        <Box m={2}>\n          <Typography variant=\"h5\" paragraph>\n            {t('resources.customer-info.search-list-title', { info })}\n          </Typography>\n        </Box>}\n      <Divider />\n      <Datagrid\n        loaded={!loading}\n        rowClick={(id) => `${ResourceName.CUSTOMER_DETAILS}/${id}/show`}\n      >\n        <TextField source=\"firstname\" />\n        <TextField source=\"lastname\" />\n        {smallDevice &&\n          <FunctionField<CustomerInfo> label=\"resources.customer-info.fields.documentNumber\"\n            render={(record?: CustomerInfo) => (\n              record?.pesel ?\n                <MaskField source=\"pesel\" /> :\n                <MaskField source=\"documentNumber\" />\n            )} />}\n        {!smallDevice && <MaskField source=\"pesel\" />}\n        {!smallDevice && <MaskField source=\"documentNumber\" />}\n      </Datagrid>\n    </>\n  )\n}\n\nexport const CustomerInfoList = (props: ListProps) => (\n  <List\n    exporter={false}\n    {...props}\n    sort={{ field: 'lastname', order: 'ASC' }}\n    filters={[\n      <TextInput source=\"firstname\" />,\n      <TextInput source=\"lastname\" />,\n      <TextInput source=\"pesel\" />,\n      <TextInput source=\"documentNumber\" />,\n      <TextInput source=\"info\" />,\n    ]}\n  >\n    <CustomerInfoGrid />\n  </List>\n)\n","import React from \"react\"\nimport { ListProps, List, useListContext, Pagination, useTranslate, FunctionField, Record, TextField } from \"react-admin\"\nimport { TableContainer, Table, TableHead, TableBody, TableRow, TableCell, useMediaQuery, useTheme } from \"@material-ui/core\"\nimport { useHistory } from \"react-router\"\nimport { MobilePostPagination } from '../common/Pagination'\nimport { ResourceName } from \"../../core/ResourceName\"\n\nconst BookingGrid = () => {\n  const { data, ids } = useListContext()\n  const history = useHistory()\n  const translate = useTranslate()\n  return (\n    <TableContainer>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>{translate(`resources.bookings.fields.eventId`)}</TableCell>\n            <TableCell>{translate(`resources.bookings.fields.id`)}</TableCell>\n            <TableCell>{translate(`resources.bookings.fields.variantName`)}</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {ids.map(id =>\n            <TableRow key={id} style={{ cursor: \"pointer\" }}>\n              <TableCell onClick={() =>\n                history.push({ pathname: `/${ResourceName.TICKET_DETAILS}/${id}/show`, })\n              }>\n                <FunctionField record={data[id]} render={(record: Record | undefined) => (\n                  `${record?.eventId}. ${record?.eventName} ${record?.eventDateStart.replace(\"T\", \" \").substring(0, 19)}`\n                )} />\n              </TableCell>\n              <TableCell onClick={() =>\n                history.push({ pathname: `/${ResourceName.TICKET_DETAILS}/${id}/show`, })\n              }>\n                <TextField record={data[id]} source=\"id\" />\n              </TableCell>\n              <TableCell onClick={() =>\n                history.push({ pathname: `/${ResourceName.TICKET_DETAILS}/${id}/show`, })\n              }>\n                <TextField record={data[id]} source=\"variantName\" />\n              </TableCell>\n            </TableRow>\n          )}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n\nexport const BookingList = (props: ListProps) => {\n  const theme = useTheme()\n  return (\n    <List\n      perPage={20}\n      exporter={false}\n      pagination={\n        useMediaQuery(theme.breakpoints.up('md')) ? (\n          <Pagination rowsPerPageOptions={[20, 50, 100]} />\n        ) : (\n          <MobilePostPagination />\n        )\n      }\n      sort={{ field: 'id', order: 'DESC' }}\n      {...props}\n    >\n      <BookingGrid />\n    </List>\n  )\n}","import {\n  DateField,\n  FunctionField,\n  Record,\n  ResourceContextProvider,\n  Show,\n  ShowProps,\n  Tab,\n  TabbedShowLayout,\n  TextField,\n  useShowContext,\n  useTranslate,\n} from 'react-admin'\nimport React, { useMemo } from 'react'\nimport { Box } from '@material-ui/core'\nimport { LogList } from '../logs/LogList'\nimport { ResourceName } from '../../core/ResourceName'\nimport { BookingList } from './CustomerBookingsList'\nimport { useHasAuthority } from '../hooks/useHasAuthority'\nimport { Authority } from '../../core/auth/Authority'\n\nconst CustomerBookingsView = () => {\n  const { record, basePath } = useShowContext()\n  return (\n    <Box paddingY={2}>\n      <ResourceContextProvider value={ResourceName.BOOKINGS}>\n        <BookingList\n          basePath={basePath}\n          filter={{ id: record?.bookingsIds.join(',') }}\n          filters={undefined}\n          actions={false}\n          title=\" \"\n        />\n      </ResourceContextProvider>\n    </Box>\n  )\n}\n\nconst CustomerLogsView = () => {\n  const { record, basePath } = useShowContext()\n  return (\n    <Box paddingY={2}>\n      <ResourceContextProvider value={ResourceName.TICKET_LOGS}>\n        <LogList\n          basePath={basePath}\n          filter={{ bookingId: record?.bookingsIds.join(',') }}\n          filters={undefined}\n          actions={false}\n          title=\" \"\n        />\n      </ResourceContextProvider>\n    </Box>\n  )\n}\n\nconst CustomerTabs = () => {\n  const { record } = useShowContext()\n  const translate = useTranslate()\n  const hasAuthority = useHasAuthority()\n  const bookingPresent = useMemo(() => record?.bookingsIds.length > 0, [record])\n  return (\n    <TabbedShowLayout>\n      <Tab label={translate('resources.customer-details.tabs.profile')}>\n        <TextField\n          source=\"firstname\"\n          label=\"resources.customer-details.fields.firstname\"\n        />\n        <TextField\n          source=\"lastname\"\n          label=\"resources.customer-details.fields.lastname\"\n        />\n        {record?.company && (\n          <TextField\n            source=\"company\"\n            label=\"resources.customer-details.fields.company\"\n          />\n        )}\n        {record?.birthdate && (\n          <>\n            {record.birthdate.split('.')[0].length === 1 && 0}\n            <DateField\n              source=\"birthdate\"\n              label=\"resources.customer-details.fields.birthdate\"\n            />\n          </>\n        )}\n        {record?.documentType && (\n          <TextField\n            source=\"documentType\"\n            label=\"resources.customer-details.fields.documentType\"\n          />\n        )}\n        {record?.pesel ? (\n          <TextField\n            source=\"pesel\"\n            label=\"resources.customer-details.fields.pesel\"\n          />\n        ) : (\n          <TextField\n            source=\"documentNumber\"\n            label=\"resources.customer-details.fields.documentNumber\"\n          />\n        )}\n        {record?.nationality && (\n          <TextField\n            source=\"nationality\"\n            label=\"resources.customer-details.fields.nationality\"\n          />\n        )}\n        {record?.gender && (\n          <FunctionField\n            label=\"resources.customer-details.fields.gender\"\n            render={(r: Record | undefined) =>\n              r && translate(`resources.enums.gender.${r.gender}`)\n            }\n          />\n        )}\n      </Tab>\n      {bookingPresent && (\n        <Tab label={translate('resources.customer-details.tabs.bookings')}>\n          <CustomerBookingsView />\n        </Tab>\n      )}\n      {bookingPresent && hasAuthority(Authority.VIEW_LOGS) && (\n        <Tab label={translate('resources.customer-details.tabs.logs')}>\n          <CustomerLogsView />\n        </Tab>\n      )}\n    </TabbedShowLayout>\n  )\n}\n\nexport const CustomerDetailsView = (props: ShowProps) => (\n  <Show {...props}>\n    <CustomerTabs />\n  </Show>\n)\n","import React from 'react'\nimport { List, Datagrid, TextField, ListProps, Pagination, TextInput } from 'react-admin'\nimport { ResourceName } from '../../../core/ResourceName'\n\nexport const PalmList = (props: ListProps) => (\n  <List\n    {...props}\n    perPage={20}\n    pagination={<Pagination rowsPerPageOptions={[10, 20, 50]} />}\n    exporter={false}\n    filters={[\n      <TextInput source=\"name\" alwaysOn />,\n      <TextInput source=\"categoryId\" />\n    ]}\n  >\n    <>\n      <Datagrid\n        size=\"small\"\n        rowClick={(id) => `${ResourceName.PALMS}/${id}/show`}\n      >\n        <TextField source=\"id\" label=\"ID\" />\n        <TextField source=\"name\" />\n        <TextField source=\"categoryId\" sortable={false} />\n        <TextField source=\"disabled\" sortable={false} />\n        <TextField source=\"mobileDeviceId\" sortable={false} />\n      </Datagrid>\n    </>\n  </List>\n)\n","import React, { useState } from 'react'\nimport {\n  useTranslate,\n  useShowContext,\n  useMutation,\n  useRefresh,\n  sanitizeFetchType,\n} from 'react-admin'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  TextField,\n  ButtonGroup,\n} from '@material-ui/core'\nimport { ResourceName } from '../../../core/ResourceName'\nimport { PalmDto } from '../../../core/dto/device/palm/palm.dto'\n\nexport const ConfirmDialog = ({\n  confirm,\n  cancel,\n  source,\n  open,\n  action,\n}: {\n  confirm: () => void\n  cancel: () => void\n  source: 'deviceId' | 'lock'\n  open: boolean\n  action: 'set' | 'remove'\n}) => {\n  const translate = useTranslate()\n  return (\n    <Dialog open={open}>\n      <DialogTitle>\n        {translate(`resources.palms.dialogs.confirm.${source}.${action}`)}\n      </DialogTitle>\n      <DialogActions>\n        <Button variant=\"contained\" onClick={confirm}>\n          {translate('ra.action.save')}\n        </Button>\n        <Button variant=\"contained\" onClick={cancel}>\n          {translate('const.cancel')}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nexport const DeviceIdModal = ({\n  open,\n  close,\n}: {\n  open: boolean\n  close: () => void\n}) => {\n  const [value, setValue] = useState('')\n  const [error, setError] = useState(false)\n  const [errorText, setErrorText] = useState('')\n  const [confirmOpen, setConfirmOpen] = useState(false)\n  const { record: palm } = useShowContext<PalmDto>()\n  const [mutate] = useMutation()\n  const refresh = useRefresh()\n  const translate = useTranslate()\n\n  const handleClose = () => {\n    setValue('')\n    setError(false)\n    setErrorText('')\n    close()\n  }\n\n  const handleSetMobileDeviceId = async () => {\n    setConfirmOpen(false)\n    if (value.replace(/\\s/g, '').length === 0) {\n      setError(true)\n      setErrorText(\n        translate('resources.palms.dialogs.deviceId.error-bad-string'),\n      )\n    } else if (value.replace(/\\s/g, '').length !== value.length) {\n      setError(true)\n      setErrorText(\n        translate('resources.palms.dialogs.deviceId.error-no-spaces'),\n      )\n    } else {\n      await mutate(\n        {\n          type: sanitizeFetchType('setMobileDeviceId'),\n          resource: ResourceName.PALMS,\n          payload: {\n            palmId: palm?.id,\n            mobileDeviceId: value,\n          },\n        },\n        { returnPromise: true },\n      )\n      setValue('')\n      setError(false)\n      setErrorText('')\n      refresh()\n      close()\n    }\n  }\n\n  return (\n    <Dialog open={open} onClose={handleClose}>\n      <ConfirmDialog\n        open={confirmOpen}\n        cancel={() => setConfirmOpen(false)}\n        confirm={handleSetMobileDeviceId}\n        source=\"deviceId\"\n        action=\"set\"\n      />\n      <DialogTitle>\n        {translate('resources.palms.dialogs.deviceId.title')}\n      </DialogTitle>\n      <DialogContent>\n        <TextField\n          variant=\"outlined\"\n          value={value}\n          onChange={(e) => setValue(e.target.value)}\n          fullWidth\n          error={error}\n          helperText={errorText}\n        />\n      </DialogContent>\n      <DialogActions>\n        <ButtonGroup>\n          <Button variant=\"contained\" onClick={() => setConfirmOpen(true)}>\n            {translate('ra.action.save')}\n          </Button>\n          <Button variant=\"contained\" onClick={handleClose}>\n            {translate('const.cancel')}\n          </Button>\n        </ButtonGroup>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nexport const LockModal = ({\n  open,\n  close,\n}: {\n  open: boolean\n  close: () => void\n}) => {\n  const [value, setValue] = useState('')\n  const [error, setError] = useState(false)\n  const [errorText, setErrorText] = useState('')\n  const [confirmOpen, setConfirmOpen] = useState(false)\n  const { record: palm } = useShowContext<PalmDto>()\n  const [mutate] = useMutation()\n  const refresh = useRefresh()\n  const translate = useTranslate()\n\n  const handleClose = () => {\n    setValue('')\n    setError(false)\n    setErrorText('')\n    close()\n  }\n\n  const handleLock = async () => {\n    setConfirmOpen(false)\n    if (value.replace(/\\s/g, '').length === 0) {\n      setError(true)\n      setErrorText(translate('resources.palms.dialogs.lock.error-bad-string'))\n    } else if (value.replace(/\\s/g, '').length !== value.length) {\n      setError(true)\n      setErrorText(translate('resources.palms.dialogs.lock.error-no-spaces'))\n    } else {\n      await mutate(\n        {\n          type: sanitizeFetchType('lock'),\n          resource: ResourceName.PALMS,\n          payload: {\n            palmId: palm?.id,\n            lockName: value,\n          },\n        },\n        { returnPromise: true },\n      )\n      handleClose()\n      refresh()\n    }\n  }\n\n  return (\n    <Dialog open={open} onClose={handleClose}>\n      <ConfirmDialog\n        open={confirmOpen}\n        cancel={() => setConfirmOpen(false)}\n        confirm={handleLock}\n        source=\"lock\"\n        action=\"set\"\n      />\n      <DialogTitle>\n        {translate('resources.palms.dialogs.lock.title')}\n      </DialogTitle>\n      <DialogContent>\n        <TextField\n          variant=\"outlined\"\n          value={value}\n          onChange={(e) => setValue(e.target.value)}\n          fullWidth\n          error={error}\n          helperText={errorText}\n        />\n      </DialogContent>\n      <DialogActions>\n        <ButtonGroup>\n          <Button variant=\"contained\" onClick={() => setConfirmOpen(true)}>\n            {translate('ra.action.save')}\n          </Button>\n          <Button variant=\"contained\" onClick={handleClose}>\n            {translate('const.cancel')}\n          </Button>\n        </ButtonGroup>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","import {\n  Box,\n  Button, ButtonGroup, Checkbox, Divider, Table, TableBody, TableCell, TableContainer, TableHead,\n  TableRow\n} from '@material-ui/core'\nimport React, { useState } from 'react'\nimport {\n  DateField, EditButton, FunctionField, GET_LIST, List, Pagination, Record, ResourceContextProvider, sanitizeFetchType, Show,\n  ShowProps, Tab, TabbedShowLayout, TextField, TextInput,\n  TitleProps, useListContext, useMutation, useNotify, useQuery, useRefresh, useShowContext, useTranslate\n} from 'react-admin'\nimport { PalmDto } from '../../../core/dto/device/palm/palm.dto'\nimport { EntranceDto } from '../../../core/dto/entrance.dto'\nimport { EventDto } from '../../../core/dto/event/event.dto'\nimport { ResourceName } from '../../../core/ResourceName'\nimport { ConfirmDialog, DeviceIdModal, LockModal } from './PalmDialogs'\n\ninterface PalmTitleProps extends TitleProps {\n  record?: PalmDto\n}\n\nconst ShowTitle = (data: PalmTitleProps) => {\n  const {\n    record: palm,\n  } = data\n  const translate = useTranslate()\n  return (\n    <span>\n      {translate('resources.palms.titles.show')}: {palm?.id}. {palm?.name}\n    </span>\n  )\n}\n\nconst GeneralActions = () => {\n  const { record: palm } = useShowContext<PalmDto>()\n  const [deviceIdModalOpen, setDeviceIdModalOpen] = useState(false)\n  const [lockModalOpen, setLockModalOpen] = useState(false)\n  const [unlockDialogOpen, setUnlockDialogOpen] = useState(false)\n  const [resetIdDialogOpen, setResetIdDialogOpen] = useState(false)\n  const [mutate] = useMutation()\n  const refresh = useRefresh()\n  const translate = useTranslate()\n\n  const handleSetMobileDeviceId = async () => {\n    setResetIdDialogOpen(false)\n    await mutate(\n      {\n        type: sanitizeFetchType('resetMobileDeviceId'),\n        resource: ResourceName.PALMS,\n        payload: {\n          palmId: palm?.id,\n        },\n      },\n      { returnPromise: true },\n    )\n    refresh()\n  }\n\n  const handleSetMobileDeviceIdDialog = () => {\n    if (palm?.mobileDeviceId) setResetIdDialogOpen(true)\n    else setDeviceIdModalOpen(true)\n  }\n\n  const handleLock = async () => {\n    setUnlockDialogOpen(false)\n    await mutate(\n      {\n        type: sanitizeFetchType('unlock'),\n        resource: ResourceName.PALMS,\n        payload: {\n          palmId: palm?.id,\n        },\n      },\n      { returnPromise: true },\n    )\n    refresh()\n  }\n\n  const handleLockDialog = () => {\n    if (palm?.disabled) setUnlockDialogOpen(true)\n    else setLockModalOpen(true)\n  }\n\n  return (\n    <>\n      <Divider />\n      <DeviceIdModal\n        open={deviceIdModalOpen}\n        close={() => setDeviceIdModalOpen(false)}\n      />\n      <LockModal open={lockModalOpen} close={() => setLockModalOpen(false)} />\n      <ConfirmDialog\n        open={unlockDialogOpen}\n        confirm={handleLock}\n        source=\"lock\"\n        cancel={() => setUnlockDialogOpen(false)}\n        action=\"remove\"\n      />\n      <ConfirmDialog\n        open={resetIdDialogOpen}\n        confirm={handleSetMobileDeviceId}\n        source=\"deviceId\"\n        cancel={() => setResetIdDialogOpen(false)}\n        action=\"remove\"\n      />\n      <Box p={1} display=\"flex\" justifyContent=\"flex-end\">\n        <Button\n          variant=\"contained\"\n          onClick={handleSetMobileDeviceIdDialog}\n          color=\"primary\"\n          style={{ marginRight: '5px' }}\n        >\n          {palm?.mobileDeviceId\n            ? translate('resources.palms.actions.resetMobileDeviceId')\n            : translate('resources.palms.actions.setMobileDeviceId')}\n        </Button>\n        <Button\n          variant=\"contained\"\n          onClick={handleLockDialog}\n          color=\"primary\"\n          style={{ marginRight: '5px' }}\n        >\n          {palm?.disabled\n            ? translate('resources.palms.actions.unlock')\n            : translate('resources.palms.actions.lock')}\n        </Button>\n        <EditButton basePath=\"/palms\" record={palm} variant=\"contained\" />\n      </Box>\n    </>\n  )\n}\n\nconst Attachments = ({ source }: { source: 'EVENTS' | 'ENTRANCES' }) => {\n  const { data: attachedList, ids, filterValues, currentSort, total, refetch: refetchList } = useListContext<EventDto | EntranceDto>()\n  const { record: palm, refetch } = useShowContext<PalmDto>()\n  const { data: allFiltered, refetch: refetchAllFiltered } = useQuery({\n    type: sanitizeFetchType(GET_LIST),\n    resource: source.toLocaleLowerCase(),\n    payload: {\n      filter: {\n        ...filterValues\n      },\n      sort: currentSort || {\n        field: \"id\",\n        order: \"DESC\"\n      },\n      pagination: {\n        page: 1,\n        perPage: total || 1\n      }\n    }\n  })\n  const translate = useTranslate()\n  const [mutate] = useMutation()\n  const notify = useNotify()\n\n  const isAttached = (attachmentId: number) => {\n    switch (source) {\n      case 'EVENTS':\n        return palm?.eventsIds?.includes(attachmentId)\n      case 'ENTRANCES':\n        return palm?.entrancesIds?.includes(attachmentId)\n      default:\n        notify(`Source '${source}' is not implemented yet.`)\n        return false\n    }\n  }\n\n  const handleAttach = async (id: number[]) => {\n    switch (source) {\n      case 'EVENTS':\n        await mutate(\n          {\n            type: sanitizeFetchType('attachEvents'),\n            resource: ResourceName.PALMS,\n            payload: {\n              palmId: palm?.id,\n              eventsIds: id,\n            },\n          },\n          { returnPromise: true },\n        )\n        break\n      case 'ENTRANCES':\n        await mutate(\n          {\n            type: sanitizeFetchType('attachEntrances'),\n            resource: ResourceName.PALMS,\n            payload: {\n              palmId: palm?.id,\n              entrancesIds: id,\n            },\n          },\n          { returnPromise: true },\n        )\n        break\n      default:\n        notify(`Source '${source}' is not implemented yet.`)\n    }\n    refetchList()\n    if (refetch){\n      refetch()\n    }\n  }\n\n  const handleDetach = async (id: number[]) => {\n    switch (source) {\n      case 'EVENTS':\n        await mutate(\n          {\n            type: sanitizeFetchType('detachEvents'),\n            resource: ResourceName.PALMS,\n            payload: {\n              palmId: palm?.id,\n              eventsIds: id,\n            },\n          },\n          { returnPromise: true },\n        )\n        break\n      case 'ENTRANCES':\n        await mutate(\n          {\n            type: sanitizeFetchType('detachEntrances'),\n            resource: ResourceName.PALMS,\n            payload: {\n              palmId: palm?.id,\n              entrancesIds: id,\n            },\n          },\n          { returnPromise: true },\n        )\n        break\n      default:\n        notify(`Source '${source}' is not implemented yet.`)\n    }\n    refetchList()\n    if (refetch){\n      refetch()\n    }\n  }\n\n  const handleAttachAll = () => {\n    refetchAllFiltered()\n    handleAttach(allFiltered.map((record: EventDto | EntranceDto) => record?.id))\n  }\n\n  const handleDetachAll = () => {\n    refetchAllFiltered()\n    handleDetach(allFiltered.map((record: EventDto | EntranceDto) => record?.id))\n  }\n\n  return (\n    <TableContainer>\n      <ButtonGroup>\n        <Button\n          variant=\"contained\"\n          onClick={() => handleAttachAll()}\n        >\n          {translate('resources.palms.actions.attachAll')}\n        </Button>\n        <Button\n          variant=\"contained\"\n          onClick={() => handleDetachAll()}\n        >\n          {translate('resources.palms.actions.detachAll')}\n        </Button>\n      </ButtonGroup>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>\n              {source === 'ENTRANCES'\n                ? translate('resources.palms.fields.attachment.note')\n                : translate(`resources.palms.fields.attachment.name`)}\n            </TableCell>\n            <TableCell style={{ width: '10%' }}>\n              {translate(`resources.palms.fields.attachment.attached`)}\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {ids.map((id) => (\n            <TableRow key={id}>\n              <TableCell>\n                {source === 'ENTRANCES' && (\n                  <TextField source=\"note\" record={attachedList[id]} />\n                )}\n                {source === 'EVENTS' && (\n                  <TextField source=\"name\" record={attachedList[id]} />\n                )}\n              </TableCell>\n              <TableCell>\n                <Checkbox\n                  checked={isAttached(id as number)}\n                  onClick={\n                    isAttached(id as number)\n                      ? () => handleDetach([id as number])\n                      : () => handleAttach([id as number])\n                  }\n                />\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n\nconst PalmTabs = () => {\n  const translate = useTranslate()\n  const { record: palm, basePath } = useShowContext<PalmDto>()\n  return (\n    <TabbedShowLayout>\n      <Tab label={translate('resources.palms.tabs.general')}>\n        <TextField label=\"ID\" source=\"id\" />\n        <TextField label=\"resources.palms.fields.name\" source=\"name\" />\n        <FunctionField\n          label=\"resources.palms.fields.isWatched\"\n          source=\"isWatched\"\n          render={(record: Record | undefined) =>\n            record?.isWatched ? translate('const.yes') : translate('const.no')\n          }\n        />\n        <DateField\n          label=\"resources.palms.fields.lastRefresh\"\n          source=\"lastRefresh\"\n          showTime\n          options={{ day: \"2-digit\", month: \"2-digit\", year: \"numeric\", hour: \"2-digit\", minute: \"2-digit\" }}\n        />\n        <FunctionField\n          label=\"resources.palms.fields.direction\"\n          source=\"direction\"\n          render={(record: Record | undefined) => translate(`resources.enums.deviceDirection.${record?.direction}`)}\n        />\n        <TextField\n          label=\"resources.palms.fields.categoryId\"\n          source=\"categoryId\"\n        />\n        {palm?.disabled && (\n          <TextField\n            label=\"resources.palms.fields.disabled\"\n            source=\"disabled\"\n          />\n        )}\n        <FunctionField\n          label=\"resources.palms.fields.onlineInfixCeck\"\n          source=\"onlineInfixCeck\"\n          render={(record: Record | undefined) =>\n            record?.onlineInfixCeck\n              ? translate('const.yes')\n              : translate('const.no')\n          }\n        />\n        <FunctionField\n          label=\"resources.palms.fields.multiplicity\"\n          source=\"multiplicity\"\n          render={(record: Record | undefined) => translate(`resources.enums.multiplicities.${record?.multiplicity}`)}\n        />\n        {palm?.mobileDeviceId && (\n          <TextField\n            label=\"resources.palms.fields.mobileDeviceId\"\n            source=\"mobileDeviceId\"\n          />\n        )}\n        <GeneralActions />\n      </Tab>\n      <Tab label={translate('resources.palms.tabs.events')}>\n        <ResourceContextProvider value={ResourceName.EVENTS}>\n          <List\n            basePath={basePath}\n            filter={{ palmId: palm?.id }}\n            exporter={false}\n            title=\" \"\n            filters={[<TextInput source=\"name\" alwaysOn />]}\n            sort={{ field: 'dateStart', order: 'DESC' }}\n            pagination={<Pagination rowsPerPageOptions={[10, 20, 50, 100]} />}\n            perPage={20}\n          >\n            <Attachments source=\"EVENTS\" />\n          </List>\n        </ResourceContextProvider>\n      </Tab>\n      <Tab label={translate('resources.palms.tabs.entrances')}>\n        <ResourceContextProvider value={ResourceName.ENTRANCES}>\n          <List\n            basePath={basePath}\n            filter={{ palmId: palm?.id }}\n            exporter={false}\n            title=\" \"\n            filters={[<TextInput source=\"note\" alwaysOn />]}\n            pagination={<Pagination rowsPerPageOptions={[10, 20, 50, 100]} />}\n            perPage={20}\n          >\n            <Attachments source=\"ENTRANCES\" />\n          </List>\n        </ResourceContextProvider>\n      </Tab>\n    </TabbedShowLayout>\n  )\n}\n\nexport const PalmShow = (props: ShowProps) => (\n  <Show {...props} actions={false} title={<ShowTitle />}>\n    <PalmTabs />\n  </Show>\n)\n","import {\n  Edit,\n  EditProps,\n  SimpleForm,\n  TextField,\n  TextInput,\n  BooleanInput,\n  DateTimeInput,\n  SelectInput,\n  useTranslate,\n  Labeled,\n  useEditContext,\n  TitleProps,\n  Toolbar,\n  ToolbarProps,\n  SaveButton,\n  ShowButton\n} from 'react-admin'\nimport React from 'react'\nimport { Typography } from '@material-ui/core'\nimport { Cancel } from '@material-ui/icons'\nimport { DeviceDirection } from '../../../core/enum/DeviceDirection'\nimport { Multiplicities } from '../../../core/enum/Multiplicities'\nimport { PalmDto } from '../../../core/dto/device/palm/palm.dto'\n\ninterface PalmTitleProps extends TitleProps {\n  record?: PalmDto\n}\n\nconst EditTitle = (data: PalmTitleProps) => {\n  const {\n    record,\n  } = data\n  const translate = useTranslate()\n  return (\n    <span>\n      {translate('resources.palms.titles.edit')}: {record?.id}. {record?.name}{' '}\n    </span>\n  )\n}\n\nconst HidingField = ({ source }: { source: keyof PalmDto }) => {\n  const { record } = useEditContext<PalmDto>()\n  return (\n    <>\n      {record && record[source] && (\n        <Labeled label=\"resources.palms.fields.disabled\">\n          <Typography component=\"span\" color=\"textPrimary\">\n            {record[source]}\n          </Typography>\n        </Labeled>\n      )}\n    </>\n  )\n}\n\nconst EditToolbar = (props: ToolbarProps) => (\n  <Toolbar {...props}>\n    <SaveButton />\n    <ShowButton icon={<Cancel />} label=\"const.cancel\" />\n  </Toolbar>\n)\n\nexport const PalmEdit = (props: EditProps) => {\n  const translate = useTranslate()\n  return (\n    <Edit {...props} hasShow={false} title={<EditTitle />}>\n      <SimpleForm redirect=\"show\" toolbar={<EditToolbar />}>\n        <TextField source=\"id\" label=\"ID\" />\n        <TextInput source=\"name\" />\n        <BooleanInput source=\"isWatched\" />\n        <DateTimeInput source=\"lastRefresh\" />\n        <SelectInput\n          source=\"direction\"\n          choices={[\n            { id: DeviceDirection.IN, name: translate(`resources.enums.deviceDirection.IN`) },\n            { id: DeviceDirection.OUT, name: translate(`resources.enums.deviceDirection.OUT`) },\n            { id: DeviceDirection.INFO, name: translate(`resources.enums.deviceDirection.INFO`) }\n          ]}\n        />\n        <TextInput source=\"categoryId\" />\n        <HidingField source=\"disabled\" />\n        <BooleanInput source=\"onlineInfixCeck\" />\n        <SelectInput\n          source=\"multiplicity\"\n          choices={[\n            { id: Multiplicities.SINGLE, name: translate(`resources.enums.multiplicities.SINGLE`) },\n            { id: Multiplicities.MULTIPLE, name: translate(`resources.enums.multiplicities.MULTIPLE`) },\n            { id: Multiplicities.CHECK_ALL, name: translate(`resources.enums.multiplicities.CHECK_ALL`) }\n          ]}\n        />\n        <TextField source=\"mobileDeviceId\" />\n      </SimpleForm>\n    </Edit>\n  )\n}\n","export enum StanbyMode {\n  SENSOR = 'Sensor',\n  ALWAYS_ON = 'AlwaysOn',\n  ALWAYS_OFF = 'AlwaysOff'\n}","import React from 'react'\nimport { List, Datagrid, TextField, ListProps, Pagination, TextInput } from 'react-admin'\nimport { ResourceName } from '../../../core/ResourceName'\n\nexport const EngineList = (props: ListProps) => (\n  <List\n    {...props}\n    perPage={20}\n    pagination={<Pagination rowsPerPageOptions={[10, 20, 50]} />}\n    exporter={false}\n    filters={[\n      <TextInput source=\"name\" alwaysOn />,\n      <TextInput source=\"categoryId\" />\n    ]}\n  >\n    <>\n      <Datagrid\n        size=\"small\"\n        rowClick={(id) => `${ResourceName.ENGINES}/${id}/show`}\n      >\n        <TextField source=\"id\" label=\"ID\" />\n        <TextField source=\"name\" />\n        <TextField source=\"address\" />\n        <TextField source=\"categoryId\" sortable={false} />\n        <TextField source=\"disabled\" sortable={false} />\n      </Datagrid>\n    </>\n  </List>\n)\n","import {\n  Button, ButtonGroup, createStyles, Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle, makeStyles, MenuItem, Select, TextField, Theme\n} from '@material-ui/core'\nimport React, { useEffect, useState } from 'react'\nimport {\n  sanitizeFetchType, useMutation,\n  useRefresh, useShowContext, useTranslate\n} from 'react-admin'\nimport useStateRef from 'react-usestateref'\nimport { EngineDto } from '../../../core/dto/device/engine/engine.dto'\nimport { StanbyMode } from '../../../core/enum/StanbyMode'\nimport { ResourceName } from '../../../core/ResourceName'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    dialogProperty: {\n      marginBottom: theme.spacing(1)\n    }\n  })\n)\n\nexport const ConfirmDialog = ({\n  confirm,\n  cancel,\n  source,\n  open,\n  action,\n}: {\n  confirm: () => void\n  cancel: () => void\n  source: 'setStandbyMode' | 'lock' | 'setTSCanCredentials'\n  open: boolean\n  action: 'set' | 'remove'\n}) => {\n  const translate = useTranslate()\n  return (\n    <Dialog open={open}>\n      <DialogTitle>\n        {translate(`resources.engines.dialogs.confirm.${source}.${action}`)}\n      </DialogTitle>\n      <DialogActions>\n        <Button variant=\"contained\" onClick={confirm}>\n          {translate('ra.action.save')}\n        </Button>\n        <Button variant=\"contained\" onClick={cancel}>\n          {translate('const.cancel')}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nexport const SetTSCanCredentialsModal = ({\n  open,\n  close,\n}: {\n  open: boolean\n  close: () => void\n}) => {\n  const classes = useStyles()\n  const [loginValue, setLoginValue] = useState('')\n  const [loginError, setLoginError, loginErrorCurrentValue] = useStateRef(false)\n  const [loginErrorText, setLoginErrorText] = useState('')\n  const [passwordValue, setPasswordValue] = useState('')\n  const [passwordError, setPasswordError, passwordErrorCurrentValue] = useStateRef(false)\n  const [passwordErrorText, setPasswordErrorText] = useState('')\n  const [confirmOpen, setConfirmOpen] = useState(false)\n  const { record: engine } = useShowContext<EngineDto>()\n  const [mutate] = useMutation()\n  const refresh = useRefresh()\n  const translate = useTranslate()\n\n  const handleClose = () => {\n    setLoginValue('')\n    setPasswordValue('')\n    setLoginError(false)\n    setPasswordError(false)\n    setLoginErrorText('')\n    setPasswordErrorText('')\n    close()\n  }\n\n  const handleSetTSCanCredentials = async () => {\n    setConfirmOpen(false)\n    setLoginError(false)\n    setPasswordError(false)\n    setLoginErrorText('')\n    setPasswordErrorText('')\n    if (loginValue.replace(/\\s/g, '').length === 0) {\n      setLoginError(true)\n      setLoginErrorText(translate('resources.engines.dialogs.setTSCanCredentials.login.error-bad-string'))\n    } else if (loginValue.replace(/\\s/g, '').length !== loginValue.length) {\n      setLoginError(true)\n      setLoginErrorText(translate('resources.engines.dialogs.setTSCanCredentials.login.error-no-spaces'))\n    }\n    if (passwordValue.replace(/\\s/g, '').length === 0) {\n      setPasswordError(true)\n      setPasswordErrorText(translate('resources.engines.dialogs.setTSCanCredentials.password.error-bad-string'))\n    } else if (passwordValue.replace(/\\s/g, '').length !== passwordValue.length) {\n      setPasswordError(true)\n      setPasswordErrorText(translate('resources.engines.dialogs.setTSCanCredentials.password.error-no-spaces'))\n    }\n\n    if (!loginErrorCurrentValue.current && !passwordErrorCurrentValue.current) {\n      await mutate(\n        {\n          type: sanitizeFetchType('setTSCanCredentials'),\n          resource: ResourceName.ENGINES,\n          payload: {\n            engineId: engine?.id,\n            login: loginValue,\n            password: passwordValue\n          },\n        },\n        { returnPromise: true },\n      )\n      refresh()\n      handleClose()\n    }\n  }\n\n  return (\n    <Dialog open={open} onClose={handleClose}>\n      <ConfirmDialog\n        open={confirmOpen}\n        cancel={() => setConfirmOpen(false)}\n        confirm={handleSetTSCanCredentials}\n        source=\"setTSCanCredentials\"\n        action=\"set\"\n      />\n      <DialogTitle>\n        {translate('resources.engines.dialogs.setTSCanCredentials.title')}\n      </DialogTitle>\n      <DialogContent>\n        <TextField\n          className={classes.dialogProperty}\n          label={translate('resources.engines.dialogs.setTSCanCredentials.login.label')}\n          variant=\"outlined\"\n          value={loginValue}\n          onChange={(e) => setLoginValue(e.target.value)}\n          fullWidth\n          error={loginError}\n          helperText={loginErrorText}\n        />\n        <TextField\n          className={classes.dialogProperty}\n          label={translate('resources.engines.dialogs.setTSCanCredentials.password.label')}\n          variant=\"outlined\"\n          value={passwordValue}\n          onChange={(e) => setPasswordValue(e.target.value)}\n          fullWidth\n          type='password'\n          autoComplete=\"new-password\"\n          error={passwordError}\n          helperText={passwordErrorText}\n        />\n      </DialogContent>\n      <DialogActions>\n        <ButtonGroup>\n          <Button variant=\"contained\" onClick={() => setConfirmOpen(true)}>\n            {translate('ra.action.save')}\n          </Button>\n          <Button variant=\"contained\" onClick={handleClose}>\n            {translate('const.cancel')}\n          </Button>\n        </ButtonGroup>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nexport const SetStandbyModeModal = ({\n  open,\n  close,\n}: {\n  open: boolean\n  close: () => void\n}) => {\n  const classes = useStyles()\n  const [value, setValue] = useState('')\n  const [confirmOpen, setConfirmOpen] = useState(false)\n  const { record: engine } = useShowContext<EngineDto>()\n  const [mutate] = useMutation()\n  const refresh = useRefresh()\n  const translate = useTranslate()\n\n  const handleClose = () => {\n    setValue('')\n    close()\n  }\n\n  const handleSetStandbyMode = async () => {\n    setConfirmOpen(false)\n    await mutate(\n      {\n        type: sanitizeFetchType('setStandbyMode'),\n        resource: ResourceName.ENGINES,\n        payload: {\n          engineId: engine?.id,\n          stanbyMode: value,\n        },\n      },\n      { returnPromise: true },\n    )\n    setValue('')\n    refresh()\n    close()\n  }\n\n  useEffect(() => {\n    if (open && engine?.stanbyMode) {\n      setValue(engine?.stanbyMode as string)\n    }\n  }, [open, engine?.stanbyMode])\n\n  return (\n    <Dialog open={open} onClose={handleClose}>\n      <ConfirmDialog\n        open={confirmOpen}\n        cancel={() => setConfirmOpen(false)}\n        confirm={handleSetStandbyMode}\n        source=\"setStandbyMode\"\n        action=\"set\"\n      />\n      <DialogTitle>\n        {translate('resources.engines.dialogs.setStandbyMode.title')}\n      </DialogTitle>\n      <DialogContent>\n        <Select\n          className={classes.dialogProperty}\n          variant=\"outlined\"\n          value={value}\n          onChange={(e) => setValue(e.target.value as string)}\n          fullWidth>\n          <MenuItem value={StanbyMode.ALWAYS_ON}>{translate(`resources.enums.standbyMode.${StanbyMode.ALWAYS_ON}`)}</MenuItem>\n          <MenuItem value={StanbyMode.ALWAYS_OFF}>{translate(`resources.enums.standbyMode.${StanbyMode.ALWAYS_OFF}`)}</MenuItem>\n          <MenuItem value={StanbyMode.SENSOR}>{translate(`resources.enums.standbyMode.${StanbyMode.SENSOR}`)}</MenuItem>\n        </Select>\n      </DialogContent>\n      <DialogActions>\n        <ButtonGroup>\n          <Button variant=\"contained\" onClick={() => setConfirmOpen(true)}>\n            {translate('ra.action.save')}\n          </Button>\n          <Button variant=\"contained\" onClick={handleClose}>\n            {translate('const.cancel')}\n          </Button>\n        </ButtonGroup>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nexport const LockModal = ({\n  open,\n  close,\n}: {\n  open: boolean\n  close: () => void\n}) => {\n  const classes = useStyles()\n  const [value, setValue] = useState('')\n  const [error, setError] = useState(false)\n  const [errorText, setErrorText] = useState('')\n  const [confirmOpen, setConfirmOpen] = useState(false)\n  const { record: engine } = useShowContext<EngineDto>()\n  const [mutate] = useMutation()\n  const refresh = useRefresh()\n  const translate = useTranslate()\n\n  const handleClose = () => {\n    setValue('')\n    setError(false)\n    setErrorText('')\n    close()\n  }\n\n  const handleLock = async () => {\n    setConfirmOpen(false)\n    if (value.replace(/\\s/g, '').length === 0) {\n      setError(true)\n      setErrorText(translate('resources.engines.dialogs.lock.error-bad-string'))\n    } else if (value.replace(/\\s/g, '').length !== value.length) {\n      setError(true)\n      setErrorText(translate('resources.engines.dialogs.lock.error-no-spaces'))\n    } else {\n      await mutate(\n        {\n          type: sanitizeFetchType('lock'),\n          resource: ResourceName.ENGINES,\n          payload: {\n            engineId: engine?.id,\n            lockName: value,\n          },\n        },\n        { returnPromise: true },\n      )\n      handleClose()\n      refresh()\n    }\n  }\n\n  return (\n    <Dialog open={open} onClose={handleClose}>\n      <ConfirmDialog\n        open={confirmOpen}\n        cancel={() => setConfirmOpen(false)}\n        confirm={handleLock}\n        source=\"lock\"\n        action=\"set\"\n      />\n      <DialogTitle>\n        {translate('resources.engines.dialogs.lock.title')}\n      </DialogTitle>\n      <DialogContent>\n        <TextField\n          className={classes.dialogProperty}\n          variant=\"outlined\"\n          value={value}\n          onChange={(e) => setValue(e.target.value)}\n          fullWidth\n          error={error}\n          helperText={errorText}\n        />\n      </DialogContent>\n      <DialogActions>\n        <ButtonGroup>\n          <Button variant=\"contained\" onClick={() => setConfirmOpen(true)}>\n            {translate('ra.action.save')}\n          </Button>\n          <Button variant=\"contained\" onClick={handleClose}>\n            {translate('const.cancel')}\n          </Button>\n        </ButtonGroup>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","import {\n  Box,\n  Button, ButtonGroup, Checkbox, Divider, Table, TableBody, TableCell, TableContainer, TableHead,\n  TableRow\n} from '@material-ui/core'\nimport React, { useState } from 'react'\nimport {\n  DateField, EditButton, FunctionField, GET_LIST, List, Pagination, Record, ResourceContextProvider, sanitizeFetchType, Show,\n  ShowProps, Tab, TabbedShowLayout, TextField, TextInput,\n  TitleProps, useListContext, useMutation, useNotify, useQuery, useRefresh, useShowContext, useTranslate\n} from 'react-admin'\nimport { EngineDto } from '../../../core/dto/device/engine/engine.dto'\nimport { EntranceDto } from '../../../core/dto/entrance.dto'\nimport { EventDto } from '../../../core/dto/event/event.dto'\nimport { ResourceName } from '../../../core/ResourceName'\nimport { ConfirmDialog, LockModal, SetStandbyModeModal, SetTSCanCredentialsModal } from './EngineDialogs'\n\ninterface EngineTitleProps extends TitleProps {\n  record?: EngineDto\n}\n\nconst ShowTitle = (data: EngineTitleProps) => {\n  const {\n    record: engine,\n  } = data\n  const translate = useTranslate()\n  return (\n    <span>\n      {translate('resources.engines.titles.show')}: {engine?.id}. {engine?.name}\n    </span>\n  )\n}\n\nconst GeneralActions = () => {\n  const { record: engine } = useShowContext<EngineDto>()\n  const [lockModalOpen, setLockModalOpen] = useState(false)\n  const [unlockDialogOpen, setUnlockDialogOpen] = useState(false)\n  const [standbyModeModalOpen, setStandbyModeModalOpen] = useState(false)\n  const [removeTSCanCredentialsDialogOpen, setRemoveTSCanCredentialsDialogOpen] = useState(false)\n  const [tsCanCredentialsModalOpen, setTSCanCredentialsModalOpen] = useState(false)\n  const [mutate] = useMutation()\n  const refresh = useRefresh()\n  const translate = useTranslate()\n\n  const handleSetTSCanCredentialsDialog = () => {\n    setTSCanCredentialsModalOpen(true)\n  }\n\n  const handleRemoveTSCanCredentials = async () => {\n    setRemoveTSCanCredentialsDialogOpen(false)\n    await mutate(\n      {\n        type: sanitizeFetchType('removeTSCanCredentials'),\n        resource: ResourceName.ENGINES,\n        payload: {\n          engineId: engine?.id,\n        },\n      },\n      { returnPromise: true },\n    )\n    refresh()\n  }\n\n  const handleRemoveTSCanCredentialsDialog = () => {\n    setRemoveTSCanCredentialsDialogOpen(true)\n  }\n\n  const handleSetStandbyModeDialog = () => {\n    setStandbyModeModalOpen(true)\n  }\n\n  const handleLock = async () => {\n    setUnlockDialogOpen(false)\n    await mutate(\n      {\n        type: sanitizeFetchType('unlock'),\n        resource: ResourceName.ENGINES,\n        payload: {\n          engineId: engine?.id,\n        },\n      },\n      { returnPromise: true },\n    )\n    refresh()\n  }\n\n  const handleLockDialog = () => {\n    if (engine?.disabled) setUnlockDialogOpen(true)\n    else setLockModalOpen(true)\n  }\n\n  return (\n    <>\n      <Divider />\n      <SetTSCanCredentialsModal\n        open={tsCanCredentialsModalOpen}\n        close={() => setTSCanCredentialsModalOpen(false)}\n      />\n      <SetStandbyModeModal\n        open={standbyModeModalOpen}\n        close={() => setStandbyModeModalOpen(false)}\n      />\n      <LockModal open={lockModalOpen} close={() => setLockModalOpen(false)} />\n      <ConfirmDialog\n        open={unlockDialogOpen}\n        confirm={handleLock}\n        source=\"lock\"\n        cancel={() => setUnlockDialogOpen(false)}\n        action=\"remove\"\n      />\n      <ConfirmDialog\n        open={removeTSCanCredentialsDialogOpen}\n        confirm={handleRemoveTSCanCredentials}\n        source=\"setTSCanCredentials\"\n        cancel={() => setRemoveTSCanCredentialsDialogOpen(false)}\n        action=\"remove\"\n      />\n      <Box p={1} display=\"flex\" justifyContent=\"flex-end\">\n        <Button\n          variant=\"contained\"\n          onClick={handleSetTSCanCredentialsDialog}\n          color=\"primary\"\n          style={{ marginRight: '5px' }}\n        >\n          {translate('resources.engines.actions.setTSCanCredentials')}\n        </Button>\n        <Button\n          variant=\"contained\"\n          onClick={handleRemoveTSCanCredentialsDialog}\n          color=\"primary\"\n          style={{ marginRight: '5px' }}\n        >\n          {translate('resources.engines.actions.removeTSCanCredentials')}\n        </Button>\n        <Button\n          variant=\"contained\"\n          onClick={handleSetStandbyModeDialog}\n          color=\"primary\"\n          style={{ marginRight: '5px' }}\n        >\n          {translate('resources.engines.actions.setStandbyMode')}\n        </Button>\n        <Button\n          variant=\"contained\"\n          onClick={handleLockDialog}\n          color=\"primary\"\n          style={{ marginRight: '5px' }}\n        >\n          {engine?.disabled\n            ? translate('resources.engines.actions.unlock')\n            : translate('resources.engines.actions.lock')}\n        </Button>\n        <EditButton basePath=\"/engines\" record={engine} variant=\"contained\" />\n      </Box>\n    </>\n  )\n}\n\nconst Attachments = ({ source }: { source: 'EVENTS' | 'ENTRANCES' }) => {\n  const { data: attachedList, ids, filterValues, currentSort, total, refetch: refetchList } = useListContext<EventDto | EntranceDto>()\n  const { record: engine, refetch } = useShowContext<EngineDto>()\n  const { data: allFiltered, refetch: refetchAllFiltered } = useQuery({\n    type: sanitizeFetchType(GET_LIST),\n    resource: source.toLocaleLowerCase(),\n    payload: {\n      filter: {\n        ...filterValues\n      },\n      sort: currentSort || {\n        field: \"id\",\n        order: \"DESC\"\n      },\n      pagination: {\n        page: 1,\n        perPage: total || 1\n      }\n    }\n  })\n  const translate = useTranslate()\n  const [mutate] = useMutation()\n  const notify = useNotify()\n\n  const isAttached = (attachmentId: number) => {\n    switch (source) {\n      case 'EVENTS':\n        return engine?.eventsIds?.includes(attachmentId)\n      case 'ENTRANCES':\n        return engine?.entrancesIds?.includes(attachmentId)\n      default:\n        notify(`Source '${source}' is not implemented yet.`)\n        return false\n    }\n  }\n\n  const handleAttach = async (idsToAttach: number[]) => {\n    switch (source) {\n      case 'EVENTS':\n        await mutate(\n          {\n            type: sanitizeFetchType('attachEvents'),\n            resource: ResourceName.ENGINES,\n            payload: {\n              engineId: engine?.id,\n              eventsIds: idsToAttach,\n            },\n          },\n          { returnPromise: true },\n        )\n        break\n      case 'ENTRANCES':\n        await mutate(\n          {\n            type: sanitizeFetchType('attachEntrances'),\n            resource: ResourceName.ENGINES,\n            payload: {\n              engineId: engine?.id,\n              entrancesIds: idsToAttach,\n            },\n          },\n          { returnPromise: true },\n        )\n        break\n      default:\n        notify(`Source '${source}' is not implemented yet.`)\n    }\n    refetchList()\n    if (refetch) {\n      refetch()\n    }\n  }\n\n  const handleDetach = async (idsToDetach: number[]) => {\n    switch (source) {\n      case 'EVENTS':\n        await mutate(\n          {\n            type: sanitizeFetchType('detachEvents'),\n            resource: ResourceName.ENGINES,\n            payload: {\n              engineId: engine?.id,\n              eventsIds: idsToDetach,\n            },\n          },\n          { returnPromise: true },\n        )\n        break\n      case 'ENTRANCES':\n        await mutate(\n          {\n            type: sanitizeFetchType('detachEntrances'),\n            resource: ResourceName.ENGINES,\n            payload: {\n              engineId: engine?.id,\n              entrancesIds: idsToDetach,\n            },\n          },\n          { returnPromise: true },\n        )\n        break\n      default:\n        notify(`Source '${source}' is not implemented yet.`)\n    }\n    refetchList()\n    if (refetch) {\n      refetch()\n    }\n  }\n\n  const handleAttachAll = () => {\n    refetchAllFiltered()\n    handleAttach(allFiltered.map((record: EventDto | EntranceDto) => record?.id))\n  }\n\n  const handleDetachAll = () => {\n    refetchAllFiltered()\n    handleDetach(allFiltered.map((record: EventDto | EntranceDto) => record?.id))\n  }\n\n  return (\n    <TableContainer>\n      <ButtonGroup>\n        <Button\n          variant=\"contained\"\n          onClick={() => handleAttachAll()}\n        >\n          {translate('resources.engines.actions.attachAll')}\n        </Button>\n        <Button\n          variant=\"contained\"\n          onClick={() => handleDetachAll()}\n        >\n          {translate('resources.engines.actions.detachAll')}\n        </Button>\n      </ButtonGroup>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>\n              {source === 'ENTRANCES'\n                ? translate('resources.engines.fields.attachment.note')\n                : translate(`resources.engines.fields.attachment.name`)}\n            </TableCell>\n            <TableCell style={{ width: '10%' }}>\n              {translate(`resources.engines.fields.attachment.attached`)}\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {ids.map((id) => (\n            <TableRow key={id}>\n              <TableCell>\n                {source === 'ENTRANCES' && (\n                  <TextField source=\"note\" record={attachedList[id]} />\n                )}\n                {source === 'EVENTS' && (\n                  <TextField source=\"name\" record={attachedList[id]} />\n                )}\n              </TableCell>\n              <TableCell>\n                <Checkbox\n                  checked={isAttached(id as number)}\n                  onClick={\n                    isAttached(id as number)\n                      ? () => handleDetach([id as number])\n                      : () => handleAttach([id as number])\n                  }\n                />\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n\nconst EngineTabs = () => {\n  const translate = useTranslate()\n  const { record: engine, basePath } = useShowContext<EngineDto>()\n  return (\n    <TabbedShowLayout>\n      <Tab label={translate('resources.engines.tabs.general')}>\n        <TextField label=\"ID\" source=\"id\" />\n        <TextField label=\"resources.engines.fields.name\" source=\"name\" />\n        <FunctionField\n          label=\"resources.engines.fields.isWatched\"\n          source=\"isWatched\"\n          render={(record: Record | undefined) =>\n            record?.isWatched ? translate('const.yes') : translate('const.no')\n          }\n        />\n        <DateField\n          label=\"resources.engines.fields.lastRefresh\"\n          source=\"lastRefresh\"\n          showTime\n          options={{ day: \"2-digit\", month: \"2-digit\", year: \"numeric\", hour: \"2-digit\", minute: \"2-digit\" }}\n        />\n        <TextField\n          label=\"resources.engines.fields.address\"\n          source=\"address\"\n        />\n        <FunctionField\n          label=\"resources.engines.fields.direction\"\n          source=\"direction\"\n          render={(record: Record | undefined) => translate(`resources.enums.deviceDirection.${record?.direction}`)}\n        />\n        <TextField\n          label=\"resources.engines.fields.categoryId\"\n          source=\"categoryId\"\n        />\n        {engine?.disabled && (\n          <TextField\n            label=\"resources.engines.fields.disabled\"\n            source=\"disabled\"\n          />\n        )}\n        <FunctionField\n          label=\"resources.engines.fields.stanbyMode\"\n          source=\"stanbyMode\"\n          render={(record: Record | undefined) => translate(`resources.enums.standbyMode.${record?.stanbyMode}`)}\n        />\n        <FunctionField\n          label=\"resources.engines.fields.onlineInfixCeck\"\n          source=\"onlineInfixCeck\"\n          render={(record: Record | undefined) =>\n            record?.onlineInfixCeck\n              ? translate('const.yes')\n              : translate('const.no')\n          }\n        />\n        <FunctionField\n          label=\"resources.engines.fields.multiplicity\"\n          source=\"multiplicity\"\n          render={(record: Record | undefined) => translate(`resources.enums.multiplicities.${record?.multiplicity}`)}\n        />\n        <GeneralActions />\n      </Tab>\n      <Tab label={translate('resources.engines.tabs.events')}>\n        <ResourceContextProvider value={ResourceName.EVENTS}>\n          <List\n            basePath={basePath}\n            filter={{ engineId: engine?.id }}\n            exporter={false}\n            title=\" \"\n            filters={[<TextInput source=\"name\" alwaysOn />]}\n            sort={{ field: 'dateStart', order: 'DESC' }}\n            pagination={<Pagination rowsPerPageOptions={[10, 20, 50, 100]} />}\n            perPage={20}\n          >\n            <Attachments source=\"EVENTS\" />\n          </List>\n        </ResourceContextProvider>\n      </Tab>\n      <Tab label={translate('resources.engines.tabs.entrances')}>\n        <ResourceContextProvider value={ResourceName.ENTRANCES}>\n          <List\n            basePath={basePath}\n            filter={{ engineId: engine?.id }}\n            exporter={false}\n            title=\" \"\n            filters={[<TextInput source=\"note\" alwaysOn />]}\n            pagination={<Pagination rowsPerPageOptions={[10, 20, 50, 100]} />}\n            perPage={20}\n          >\n            <Attachments source=\"ENTRANCES\" />\n          </List>\n        </ResourceContextProvider>\n      </Tab>\n    </TabbedShowLayout>\n  )\n}\n\nexport const EngineShow = (props: ShowProps) => (\n  <Show {...props} actions={false} title={<ShowTitle />}>\n    <EngineTabs />\n  </Show>\n)\n","import { Typography } from '@material-ui/core'\nimport { Cancel } from '@material-ui/icons'\nimport React from 'react'\nimport {\n  BooleanInput,\n  DateTimeInput, Edit,\n  EditProps, FunctionField, Labeled, Record, SaveButton, SelectInput, ShowButton, SimpleForm,\n  TextField,\n  TextInput, TitleProps,\n  Toolbar,\n  ToolbarProps, useEditContext, useTranslate\n} from 'react-admin'\nimport { EngineDto } from '../../../core/dto/device/engine/engine.dto'\nimport { DeviceDirection } from '../../../core/enum/DeviceDirection'\nimport { Multiplicities } from '../../../core/enum/Multiplicities'\n\ninterface EngineTitleProps extends TitleProps {\n  record?: EngineDto\n}\n\nconst EditTitle = (data: EngineTitleProps) => {\n  const {\n    record,\n  } = data\n  const translate = useTranslate()\n  return (\n    <span>\n      {translate('resources.engines.titles.edit')}: {record?.id}. {record?.name}{' '}\n    </span>\n  )\n}\n\nconst HidingField = ({ source }: { source: keyof EngineDto }) => {\n  const { record } = useEditContext<EngineDto>()\n  return (\n    <>\n      {record && record[source] && (\n        <Labeled label=\"resources.engines.fields.disabled\">\n          <Typography component=\"span\" color=\"textPrimary\">\n            {record[source]}\n          </Typography>\n        </Labeled>\n      )}\n    </>\n  )\n}\n\nconst EditToolbar = (props: ToolbarProps) => (\n  <Toolbar {...props}>\n    <SaveButton />\n    <ShowButton icon={<Cancel />} label=\"const.cancel\" />\n  </Toolbar>\n)\n\nexport const EngineEdit = (props: EditProps) => {\n  const translate = useTranslate()\n  return (\n    <Edit {...props} hasShow={false} title={<EditTitle />}>\n      <SimpleForm redirect=\"show\" toolbar={<EditToolbar />}>\n        <TextField source=\"id\" label=\"ID\" />\n        <TextInput source=\"name\" />\n        <BooleanInput source=\"isWatched\" />\n        <DateTimeInput source=\"lastRefresh\" />\n        <TextInput source=\"address\" />\n        <SelectInput\n          source=\"direction\"\n          choices={[\n            { id: DeviceDirection.IN, name: translate(`resources.enums.deviceDirection.IN`) },\n            { id: DeviceDirection.OUT, name: translate(`resources.enums.deviceDirection.OUT`) },\n            { id: DeviceDirection.INFO, name: translate(`resources.enums.deviceDirection.INFO`) }\n          ]}\n        />\n        <TextInput source=\"categoryId\" />\n        <FunctionField source=\"stanbyMode\" render={(record: Record | undefined) => translate(`resources.enums.standbyMode.${record?.stanbyMode}`)} />\n        <HidingField source=\"disabled\" />\n        <BooleanInput source=\"onlineInfixCeck\" />\n        <SelectInput\n          source=\"multiplicity\"\n          choices={[\n            { id: Multiplicities.SINGLE, name: translate(`resources.enums.multiplicities.SINGLE`) },\n            { id: Multiplicities.MULTIPLE, name: translate(`resources.enums.multiplicities.MULTIPLE`) },\n            { id: Multiplicities.CHECK_ALL, name: translate(`resources.enums.multiplicities.CHECK_ALL`) }\n          ]}\n        />\n      </SimpleForm>\n    </Edit>\n  )\n}\n\n\n\n","import {\n  Create, CreateProps, TextInput, DateTimeInput, useTranslate, BooleanInput, required,\n  ResourceContextProvider, TabbedForm, useListContext, TextField,\n  useQuery, sanitizeFetchType, GET_LIST, List, Pagination, FormTab\n} from \"react-admin\"\nimport React from \"react\"\nimport { useField } from \"react-final-form\"\nimport { ButtonGroup, TableContainer, Button, Table, TableHead, TableRow, TableCell, TableBody, Checkbox } from \"@material-ui/core\"\nimport { EventDto } from \"../../core/dto/event/event.dto\"\nimport { ResourceName } from \"../../core/ResourceName\"\nimport { ObjectDto } from \"../../core/dto/object.dto\"\n\nconst CreateTitle = () => {\n  const translate = useTranslate()\n  return (\n    <span>{translate('resources.events.titles.create')}</span>\n  )\n}\n\nconst ObjectsInput = ({ source }: { source: keyof EventDto }) => {\n  const translate = useTranslate()\n\n  const {\n    input: { onChange, value }\n  } = useField(source)\n\n  const { data, ids, filterValues, currentSort, total } = useListContext<ObjectDto>()\n\n  const { data: allFiltered, refetch: refetchAllFiltered } = useQuery({\n    type: sanitizeFetchType(GET_LIST),\n    resource: ResourceName.OBJECTS,\n    payload: {\n      filter: {\n        ...filterValues\n      },\n      sort: currentSort || {\n        field: \"id\",\n        order: \"DESC\"\n      },\n      pagination: {\n        page: 1,\n        perPage: total || 1\n      }\n    }\n  })\n\n  const handleAttach = (objectIds: number[]) => {\n    onChange([...value, ...objectIds])\n  }\n\n  const handleDetach = (objectIds: number[]) => {\n    onChange(value.filter((objectId: number) => !(objectIds.includes(objectId))))\n  }\n\n  const handleAttachAll = () => {\n    refetchAllFiltered()\n    handleAttach(allFiltered)\n  }\n\n  const handleDetachAll = () => {\n    refetchAllFiltered()\n    handleDetach(allFiltered)\n  }\n\n  const isAttached = (id: number) => (\n    value.includes(id)\n  )\n\n  return (\n    <TableContainer>\n      <ButtonGroup>\n        <Button variant=\"contained\" onClick={() => handleAttachAll()}>\n          {translate('resources.events.actions.attachAll')}</Button>\n        <Button variant=\"contained\" onClick={() => handleDetachAll()}>\n          {translate('resources.events.actions.detachAll')}</Button>\n      </ButtonGroup>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>\n              {translate(`resources.events.fields.attachment.name`)}\n            </TableCell>\n            <TableCell style={{ width: \"10%\" }}>\n              {translate(`resources.events.fields.attachment.attached`)}\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {ids.map((id) => (\n            <TableRow key={id}>\n              <TableCell>\n                <TextField source=\"name\" record={data[id]} />\n              </TableCell>\n              <TableCell>\n                <Checkbox\n                  checked={isAttached(id as number)}\n                  onClick={\n                    isAttached(id as number)\n                      ? () => handleDetach([id as number])\n                      : () => handleAttach([id as number])\n                  }\n                />\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n\nexport const EventCreate = (props: CreateProps) => {\n  const { basePath } = props\n  const translate = useTranslate()\n  return (\n    <Create {...props} title={<CreateTitle />}>\n      <TabbedForm redirect=\"show\">\n        <FormTab label={translate(\"resources.events.tabs.general\")}>\n          <TextInput source=\"name\" isRequired validate={required()} />\n          <DateTimeInput source=\"dateStart\" isRequired validate={required()} />\n          <DateTimeInput source=\"dateEnd\" isRequired validate={required()} />\n          <TextInput source=\"externalId\" />\n          <TextInput source=\"infix\" />\n          <BooleanInput source=\"active\" />\n        </FormTab>\n        <FormTab label={translate(\"resources.events.tabs.objects\")}>\n          <ResourceContextProvider value={ResourceName.OBJECTS}>\n            <List basePath={basePath} title=\" \" actions={false}\n              perPage={20} pagination={<Pagination rowsPerPageOptions={[10, 20, 50]} />}>\n              <ObjectsInput source=\"objectsIds\" />\n            </List>\n          </ResourceContextProvider>\n        </FormTab>\n      </TabbedForm>\n    </Create>\n  )\n}","import ViewComfyIcon from '@material-ui/icons/ViewComfy'\nimport PersonIcon from '@material-ui/icons/Person'\nimport React from 'react'\nimport { Resource } from 'react-admin'\nimport ReceiptIcon from '@material-ui/icons/Receipt'\nimport { ResourceName } from '../core/ResourceName'\nimport { TicketInfoList } from './ticket-info/TicketInfoList'\nimport { TicketDetailsView } from './ticket-details/TicketDetailsView'\nimport { LogList } from './logs/LogList'\nimport { OverallViewList } from './stats/overall-view/OverallViewList'\nimport { OverallView } from './stats/overall-view/OverallView'\nimport { AccessUsingsList } from './ticket-details/accesses/AccessUsingsList'\nimport { EventList } from './events/EventList'\nimport { EventShow } from './events/EventShow'\nimport { EventEdit } from './events/EventEdit'\nimport { CustomerInfoList } from './customer-info/CustomerInfoList'\nimport { CustomerDetailsView } from './customer-details/CustomerDetailsView'\nimport { PalmList } from './devices/palms/PalmList'\nimport { PalmShow } from './devices/palms/PalmShow'\nimport { PalmEdit } from './devices/palms/PalmEdit'\nimport { Authority } from '../core/auth/Authority'\nimport { hasAuthorityWithGivenPermissions as hasAuthority } from './hooks/useHasAuthority'\nimport { EngineList } from './devices/engines/EngineList'\nimport { EngineShow } from './devices/engines/EngineShow'\nimport { EngineEdit } from './devices/engines/EngineEdit'\nimport { EventCreate } from './events/EventCreate'\n\nexport const generateResourcesBasedOnPermissions = (\n  permissions: Set<string>,\n) => [\n  <Resource\n    icon={ReceiptIcon}\n    name={ResourceName.TICKET_INFO}\n    list={TicketInfoList}\n  />,\n  <Resource name={ResourceName.TICKET_DETAILS} show={TicketDetailsView} />,\n  <Resource name={ResourceName.ACCESS_USINGS} list={AccessUsingsList} />,\n  <Resource\n    icon={PersonIcon}\n    name={ResourceName.CUSTOMER_INFO}\n    list={CustomerInfoList}\n  />,\n  <Resource name={ResourceName.CUSTOMER_DETAILS} show={CustomerDetailsView} />,\n  hasAuthority(Authority.VIEW_LOGS, permissions) && (\n    <Resource name={ResourceName.LOGS} list={LogList} />\n  ),\n  <Resource\n    name={ResourceName.EVENTS}\n    list={EventList}\n    show={EventShow}\n    edit={EventEdit}\n    create={EventCreate}\n  />,\n  hasAuthority(Authority.VIEW_STATS_OVERALL_VIEW, permissions) && (\n    <Resource\n      icon={ViewComfyIcon}\n      name={ResourceName.STATS_OVERALL_VIEW_LIST}\n      list={OverallViewList}\n    />\n  ),\n  hasAuthority(Authority.VIEW_STATS_OVERALL_VIEW, permissions) && (\n    <Resource\n      icon={ViewComfyIcon}\n      name={ResourceName.STATS_OVERALL_VIEW}\n      show={OverallView}\n    />\n  ),\n  <Resource\n    name={ResourceName.PALMS}\n    list={PalmList}\n    show={PalmShow}\n    edit={PalmEdit}\n  />,\n  <Resource name={ResourceName.ACCESS_DATES} />,\n  <Resource name={ResourceName.ACCESSES} />,\n  <Resource name={ResourceName.BOOKINGS} />,\n  <Resource name={ResourceName.COMPANIES} />,\n  <Resource\n    name={ResourceName.ENGINES}\n    list={EngineList}\n    show={EngineShow}\n    edit={EngineEdit}\n  />,\n  <Resource name={ResourceName.ENTRANCES} />,\n  <Resource name={ResourceName.OBJECTS} />,\n  <Resource name={ResourceName.TICKET_LOGS} />,\n]\n","import {\n  DashboardAction,\n  DashboardItem,\n  DashboardState,\n  INACTIVE_COMPONENTS_KEY,\n} from './dashboard'\nimport { UPDATE_DASHBOARD } from '../constants/reducer.actions'\n\nconst initialState: DashboardState['dashboard'] = {\n  inactiveComponents:\n    (localStorage\n      .getItem(INACTIVE_COMPONENTS_KEY)\n      ?.split(',') as DashboardItem[]) || [],\n}\n\nconst save = (state: DashboardState['dashboard']) => {\n  const { inactiveComponents } = state\n  if (inactiveComponents.length) {\n    localStorage.setItem(INACTIVE_COMPONENTS_KEY, inactiveComponents.join())\n  } else {\n    localStorage.removeItem(INACTIVE_COMPONENTS_KEY)\n  }\n  return state\n}\n\nexport const dashboardReducer = (\n  state = initialState,\n  { type, payload: dashboardItem }: DashboardAction,\n): DashboardState['dashboard'] => {\n  if (type === UPDATE_DASHBOARD) {\n    const { inactiveComponents } = state\n    if (inactiveComponents.includes(dashboardItem)) {\n      return save({\n        ...state,\n        inactiveComponents: inactiveComponents.filter(\n          (v) => v !== dashboardItem,\n        ),\n      })\n    }\n    return save({\n      ...state,\n      inactiveComponents: [...inactiveComponents, dashboardItem],\n    })\n  }\n  return state\n}\n","import React from 'react'\nimport { Admin } from 'react-admin'\nimport themeReducer from './core/common/theme.reducer'\nimport { providersFactory } from './core/providers.factory'\nimport { AppLayout } from './main/common/AppLayout'\nimport { Dashboard } from './main/Dashboard'\nimport routes from './main/common/routes'\nimport { generateResourcesBasedOnPermissions } from './main/Resources'\nimport { dashboardReducer } from './core/common/dashboard.reducer'\n\nconst App = () => {\n  const { authProvider, dataProvider, i18nProvider } = providersFactory(\n    process.env.NODE_ENV,\n  )\n  return (\n    <Admin\n      dashboard={Dashboard}\n      authProvider={authProvider}\n      dataProvider={dataProvider}\n      i18nProvider={i18nProvider}\n      customReducers={{\n        theme: themeReducer,\n        dashboard: dashboardReducer,\n      }}\n      customRoutes={routes}\n      layout={AppLayout}\n    >\n      {generateResourcesBasedOnPermissions}\n    </Admin>\n  )\n}\n\nexport default App\n","import { AuthProvider, DataProvider, I18nProvider, LegacyDataProvider } from 'react-admin'\nimport fakeDataProvider from './fake/fake-data.provider'\nimport fakeAuthProvider from './fake/providers/fake-auth.provider'\nimport authProvider from './auth/auth.provider'\nimport dataProvider from './data.provider'\nimport i18nProvider from './i18n.provider'\n\ninterface Providers {\n  readonly authProvider: AuthProvider\n  readonly dataProvider: DataProvider | LegacyDataProvider\n  readonly i18nProvider: I18nProvider\n}\n\nexport const providersFactory = (\n  env: 'development' | 'test' | 'production',\n): Providers => {\n  switch (env) {\n    case 'production':\n      return {\n        authProvider,\n        dataProvider,\n        i18nProvider,\n      }\n    case 'development':\n      return {\n        authProvider,\n        dataProvider,\n        i18nProvider,\n      }\n    default:\n      return {\n        authProvider: fakeAuthProvider,\n        dataProvider: fakeDataProvider,\n        i18nProvider,\n      }\n  }\n}\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import { initReactI18next } from 'react-i18next'\nimport i18n from 'i18next'\nimport plTranslation from './locales/pl/translation.json'\nimport enTranslation from './locales/en/translation.json'\n\nconst identity = localStorage.getItem('username')\nconst lng = identity && localStorage.getItem(`${identity}.lng`)\n\ni18n.use(initReactI18next)\n  .init({\n    lng: lng || 'pl',\n    fallbackLng: 'pl',\n    debug: false,\n    interpolation: {\n      escapeValue: false, // not needed for react as it escapes by default\n    },\n    resources: {\n      pl: { translation: plTranslation },\n      en: { translation: enTranslation },\n    },\n  })\n\nexport default i18n\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport './i18n.init'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}