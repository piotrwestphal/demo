{"version":3,"sources":["core/constants/reducer.actions.ts","core/common/theme.reducer.ts","core/ResourceName.ts","core/enum/TicketType.ts","core/enum/BookingType.ts","core/enum/BookingDisabledOption.ts","core/enum/CustomerDocumentType.ts","core/enum/Gender.ts","core/fake/providers/fake-access-usings.provider.ts","core/fake/providers/fake-bookings.provider.ts","core/fake/providers/fake-logs.provider.ts","core/fake/providers/fake-stats-overall-view-list.provider.ts","core/fake/providers/fake-stats-overall-view.provider.ts","core/fake/providers/fake-ticket-details.provider.ts","core/enum/AccessActivePeriodStartingOptions.ts","core/enum/AccessBonuses.ts","core/enum/DayOfWeek.ts","core/fake/providers/fake-ticket-info.provider.ts","core/fake/providers/fake-tickets.provider.ts","core/fake/providers/fake-accesses.provider.ts","core/enum/EventStatus.ts","core/fake/providers/fake-events.provider.ts","core/enum/DeviceDirection.ts","core/fake/providers/fake-customer-details.provider.ts","core/fake/providers/fake-customer-info.provider.ts","core/fake/fake-data.provider.ts","core/fake/providers/fake-auth.provider.ts","core/common/header.parser.ts","core/common/fetch.utils.ts","core/api-urls.ts","core/auth/auth.provider.ts","core/access-usings/access-usings-sort.mapper.ts","core/ticket-details/toggle-button.ts","core/access-usings/access-usings-filter.mapper.ts","core/access-usings/access-usings.provider.ts","core/bookings/booking-filter.mapper.ts","core/bookings/booking-sort.mapper.ts","core/bookings/bookings.mapper.ts","core/bookings/bookings.provider.ts","core/logs/log-filter.mapper.ts","core/logs/log-sort.mapper.ts","core/logs/extended-logs.mapper.ts","core/logs/extended-logs.provider.ts","core/common/filter.values.ts","core/stats/overall-view/overall-view-list-sort.mapper.ts","core/stats/overall-view/overall-view-list.mapper.ts","core/stats/overall-view/overall-view-list.provider.ts","core/stats/overall-view/overall-view.mapper.ts","core/stats/overall-view/overall-view.provider.ts","core/common/condition.builder.ts","core/common/mapper.utils.ts","core/ticket-details/ticket-details.mapper.ts","core/ticket-details/ticket-details.provider.ts","core/ticket-info/ticket-info.mapper.ts","core/ticket-info/ticket-info.provider.ts","core/tickets/tickets.provider.ts","core/accesses/access-filter.mapper.ts","core/accesses/access-sort.mapper.ts","core/accesses/access.provider.ts","core/events/event-sort.mapper.ts","core/events/event.provider.ts","core/customer-details/customer-details.provider.ts","core/customer-info/customer-info-sort.mapper.ts","core/customer-info/customer-info.provider.ts","core/data.provider.ts","core/i18n.provider.ts","app.theme.ts","main/common/AppSubmenu.tsx","main/common/AppMenu.tsx","main/common/AppLayout.tsx","main/common/Pagination.tsx","main/logs/DateFilterInput.tsx","main/logs/LogsComponents.ts","main/logs/LogRow.tsx","core/common/visual.utils.ts","main/logs/LogGrid.tsx","main/logs/LogList.tsx","main/customer-details/CustomerBookingsList.tsx","main/customer-details/CustomerDetailsView.tsx","main/common/common-styles.ts","main/common/SearchInput.tsx","main/common/FindCustomerByInfo.tsx","main/customer-info/CustomerInfoList.tsx","main/common/FindUserByTicket.tsx","main/Dashboard.tsx","main/events/AttachmentSelect.tsx","main/events/StatusSelect.tsx","main/events/EventEdit.tsx","main/events/EventList.tsx","main/events/EventShow.tsx","main/stats/overall-view/OverallView.tsx","main/stats/overall-view/OverallViewList.tsx","main/ticket-details/accesses/AccessUsingsList.tsx","core/ticket-details/ticket-details-values.mapper.ts","main/ticket-details/TicketDetailsHeader.tsx","main/ticket-details/TicketDetailsTicketsField.tsx","core/ticket-details/toggle-access-button.reducer.ts","main/ticket-details/ToggleAccessButton.tsx","core/ticket-details/toggle-ticket-button.reducer.ts","main/ticket-details/ToggleTicketButton.tsx","main/ticket-details/accesses/AccessList.tsx","main/ticket-details/TicketDetailsComponents.tsx","main/ticket-details/accesses/AccessShow.tsx","main/ticket-details/TicketDetailsView.tsx","main/common/MaskField.tsx","core/common/mask.utils.ts","main/ticket-info/TicketInfoList.tsx","main/common/Configuration.tsx","main/common/routes.tsx","App.tsx","core/providers.factory.ts","reportWebVitals.ts","i18n.init.ts","index.tsx"],"names":["CHANGE_THEME","identity","localStorage","getItem","initialState","darkMode","themeReducer","ResourceName","state","action","type","setItem","TicketType","BookingType","BookingDisabledOption","CustomerDocumentType","Gender","provider","updateMany","resource","params","a","Promise","resolve","data","create","id","update","fakeLogs","date","ticketCode","bookingId","deviceName","text","color","getList","total","length","fakeStatsOverallViewList","name","dateStart","dateEnd","eventName","capacity","sold","entered","objects","getOne","found","find","v","reject","Error","AccessActivePeriodStartingOptions","AccessBonuses","DayOfWeek","fakeTicketDetailsList","firstname","lastname","pesel","variantName","accessesIds","bookingType","NORMAL","activeFrom","activeTo","tickets","ticketType","K","accessUsings","createdAt","M","modifiedAt","bookingDisabled","STORNO","company","birthdate","documentType","ID_CARD","documentNumber","nationality","gender","MALE","seatId","blockId","accesses","fakeTicketInfoList","eventId","eventDate","fakeTickets","active","accessUsingsIds","EventStatus","fakeAccesses","bonus","N","entranceId","allowReenter","multipleEntry","multiple","usePriority","isTicketUnlockWithNextDay","releaseTime","releaseDayOfWeek","FRIDAY","releaseDayOfMonth","delay","activePeriod","activePeriodStartingFrom","FIRST_USE","variantsIds","accessDatesIds","createdById","modifiedById","DeviceDirection","fakeEvents","status","INACTIVE","fakeCustomerDetailsList","bookingsIds","c","fakeCustomerInfoList","dataProviders","ACCESSES","fakeAccessesProvider","ACCESS_USINGS","fakeAccessUsingsProvider","BOOKINGS","fakeBookingsProvider","CUSTOMER_DETAILS","fakeCustomerDetailsProvider","CUSTOMER_INFO","fakeCustomerInfoProvider","EVENTS","fakeEventsProvider","LOGS","fakeLogsProvider","TICKETS","fakeTicketsProvider","TICKET_INFO","fakeTicketInfoProvider","TICKET_DETAILS","fakeTicketDetailsProvider","TICKET_LOGS","STATS_OVERALL_VIEW","fakeStatsOverallViewProvider","STATS_OVERALL_VIEW_LIST","fakeStatsOverallViewListProvider","fetchType","sanitizeFetchType","authProvider","login","logout","checkError","checkAuth","getPermissions","getIdentity","fullName","contentRangeParser","headerValue","split","rangeFrom","summarySecondPartSplit","rangeTo","parseInt","baseHeaders","authHeaders","Authorization","postWithHeaders","url","body","headers","fetchUtils","fetchJson","method","JSON","stringify","Headers","then","json","get","baseUrl","path","getWithPagination","range","getByConditions","pathParam","patch","put","API_V1","process","ACCESSES_URL","AUTH_URL","BOOKINGS_URL","CUSTOMERS_URL","EVENTS_URL","EXTENDED_LOGS_URL","TICKETS_URL","VARIANTS_URL","SEATS_URL","BLOCKS_URL","TRIBUNES_URL","OBJECTS_URL","ENGINES_URL","PALMS_URL","COMPANIES_URL","username","password","token","removeItem","Access","mapping","direction","ticketId","accessId","lambdaParameter","value","getFilterParams","filter","Object","keys","entries","map","key","getFilterMapper","mapper","reduce","p","ids","pendingUpdates","auId","req","all","au","ticketIds","accessIds","request","flatMap","Date","toISOString","IN","verifierDeviceId","sort","field","order","pagination","page","perPage","filterParams","toString","queryParams","push","pathParams","mapToBookings","events","disabled","customerId","variantId","ticketsIds","foundEvent","event","eventDateStart","booking","eventIds","join","mapToExtendedLog","locale","scheme","device","logEntry","language","includes","partialValues","partialFilterValues","extendedLogs","dto","ALL_RESULTS","mapToEventOverallView","overallViewList","calculateCapacity","seats","bookings","b","mapToTribuneOverallView","tribune","blocks","enteredBookingIds","blocksIds","block","filteredSeats","s","filteredBookingIds","concat","filteredBookings","book","filteredEnteredBookingIds","enteredBookingId","filteredEnteredBookings","enteredBookings","soldNormal","enteredNormal","soldAbo","ABO","enteredAbo","soldInfix","INFIX","enteredInfix","soldService","SERVICE","enteredService","soldPoints","POINTS","enteredPoints","mapToBlockOverallView","mapToOverallView","selectedEvent","tribunes","o","objectsIds","object","filteredTribunes","t","objectId","filteredBlocks","filteredSeatIds","seatsIds","tribunesIds","tribuneId","mapToObjectOverallView","pendingSelectedEvent","pendingObjects","pendingTribunes","pendingBlocks","pendingSeats","bookingsCondition","pendingBookings","pendingEnteredBookings","overallViewData","buildFilterByIdsCondition","firstId","prev","curr","toMapById","values","Map","toUniqueValues","Array","from","Set","mapToTicketDetails","accessUsingById","mapToTicket","fetchTicketsWithAccessUsings","accessUsingIds","pendingCustomer","pendingEvent","pendingVariant","pendingTicketsWithAccessUsings","customer","variant","mapToTicketBaseInfoList","customers","bookingById","customerById","eventById","ticket","mapToTicketBaseInfo","getByUniqueIds","uniqueIds","filterByTicketCodeCondition","bookingIds","customerIds","pendingCustomers","pendingEvents","ticketBaseInfoList","access","palms","engines","companies","linkedDevices","linkedCompanies","devices","palm","linked","verifierDevicesIds","categoryId","engine","companiesIds","previousData","previousStatus","previousDevices","previousObjects","previousCompanies","pendingUpdate","getTime","getTimezoneOffset","toJSON","ACTIVE","undefined","filterByCustomerInfoCondition","info","q","accessesProvider","accessUsingsProvider","bookingsProvider","customersDetailsProvider","customersInfoProvider","eventsProvider","logsProvider","ticketsProvider","ticketInfoProvider","ticketDetailsProvider","statsOverallViewProvider","statsOverallViewListProvider","translate","options","i18n","changeLocale","changeLanguage","getLocale","overriddenTheme","defaultTheme","typography","fontFamily","body1","fontWeight","body2","h5","LightTheme","palette","primary","deepPurple","secondary","green","DarkTheme","light","main","dark","contrastText","useStyles","makeStyles","theme","icon","minWidth","spacing","sidebarIsOpen","transition","paddingLeft","sidebarIsClosed","SubMenu","props","handleToggle","isOpen","children","sidebarOpen","useSelector","admin","ui","classes","header","MenuItem","button","onClick","ListItemIcon","className","ExpandMore","Typography","Tooltip","title","placement","Collapse","in","timeout","unmountOnExit","component","disablePadding","open","width","closed","AppMenu","useState","menuStats","setOpen","useTranslate","style","userSelect","DashboardMenuItem","MenuItemLink","to","primaryText","leftIcon","List","Event","menu","Sort","transform","flex","textOverflow","whiteSpace","overflow","AppUserMenu","UserMenu","Settings","AppTopBar","AppBar","userMenu","AppLayout","Layout","appBar","MobilePostPagination","useListContext","setPage","setPerPage","nbPages","Math","ceil","Toolbar","Grid","container","item","xs","Paper","elevation","height","display","flexDirection","justifyContent","alignItems","Select","textAlign","onChange","e","target","ButtonGroup","Button","createStyles","verticalAlign","marginBottom","DateFilterInput","source","defaultFromDate","React","now","setHours","defaultToDate","dateFrom","setDateFrom","dateTo","setDateTo","useField","input","meta","touched","error","convertedDate","substring","defaultValue","parse","helperText","alignSelf","size","marginTop","BookingButton","withStyles","root","backgroundColor","boxShadow","FullWidthButton","CenterGrid","NoPaddingCell","paddingBottom","paddingTop","TableCell","LogRow","compactMode","noBooking","history","useHistory","isDarkMode","useEffect","defineStyle","hexcolor","substr","TableRow","Hidden","mdUp","IconButton","DateField","record","showTime","TextField","smDown","xlDown","sortable","pathname","colSpan","LogGrid","useListSortContext","currentSort","setSort","handleSortChange","sortBy","HeaderCell","startIcon","TableContainer","Table","padding","TableHead","toUpperCase","TableBody","ListFilters","Filter","TextInput","alwaysOn","SelectInput","choices","LogList","useTheme","smallScreen","useMediaQuery","breakpoints","down","exporter","Pagination","rowsPerPageOptions","filters","BookingGrid","cursor","replace","BookingList","up","CustomerBookingsView","useShowContext","basePath","Box","paddingY","ResourceContextProvider","actions","CustomerLogsView","CustomerTabs","bookingPresent","useMemo","TabbedShowLayout","Tab","label","CustomerDetailsView","Show","useCommonStyles","textCentered","RoundInputBox","borderRadius","marginLeft","border","borderColor","RoundInputBoxBtn","background","borderTopLeftRadius","borderBottomLeftRadius","margin","RoundInputBoxFC","FormControl","SearchInput","onValue","inputError","setInputError","inputValue","setInputValue","handleClick","Input","disableUnderline","placeholder","onInput","onKeyDown","ev","FormHelperText","FindCustomerByInfo","titleCentered","notify","useNotify","setError","useMutation","mutate","loading","commonClasses","fetchCustomers","useCallback","GET_LIST","payload","returnPromise","onlyCustomer","search","message","CardHeader","clsx","CardContent","CustomerInfoGrid","filterValues","m","paragraph","Divider","Datagrid","loaded","rowClick","CustomerInfoList","useLocation","Card","FindUserByTicket","fetchTickets","onlyTicket","letterSpacing","TicketFinder","LastLogs","Dashboard","useGetIdentity","titleTypographyProps","sm","NoResult","HelpOutline","fontSize","AttachmentSelect","useInput","orgValue","setPagination","category","anchor","setFilter","arr","dispArr","dev","toLowerCase","displayWithPagination","slice","onLinked","onMenuClick","currentTarget","marginRight","FilterList","Menu","anchorEl","onClose","onFilterSubmit","closeButton","onFilterClose","Close","InputLabel","displayFilters","index","Checkbox","checked","TablePagination","count","rowsPerPage","onChangePage","window","scrollTo","onChangeRowsPerPage","labelRowsPerPage","labelDisplayedRows","box","borderBottom","borderTopRightRadius","StatusSelect","FunctionField","IN_TRANSITION","render","EditTitle","EditToolbar","SaveButton","EventEdit","Edit","TabbedForm","toolbar","FormTab","DateTimeInput","EventGrid","r","EventList","ShowTitle","LinkRow","AttachmentShow","attachment","EventShow","noBottomBorder","quarterWidth","ViewTitle","description","BlockGrid","firstColumnEntries","secondColumnEntries","thirdColumnEntries","TribuneGrid","TribuneHeader","ArrayField","expand","isRowExpandable","ObjectGrid","OverallView","OverallViewGrid","OverallViewList","AccessUsingsGrid","refresh","useRefresh","patchAccess","UPDATE_MANY","ButtonBase","AccessUsingsList","bookingTypeMapping","ticketTypeMapping","Z","P","U","R","mapFromBookingType","mapFromTicketType","TicketDetailsHeader","ticketBox","ticketField","TicketDetailsTicketsField","fields","useRecordContext","mappedRecord","Labeled","Chip","flexWrap","blockMutation","ticketDetails","CREATE","unblockMutation","activeAccessUsingIds","blockAccessButtonInitialState","DISABLED","toggleAccessButtonReducer","BLOCK","mutateQuery","UNBLOCK","common","white","ToggleAccessButton","useReducer","dispatch","mutationLoading","some","query","blockTicketButtonInitialState","toggleTicketButtonReducer","mutateParam","ADMIN","ToggleTicketButton","UPDATE","AccessGrid","setSelected","hover","AccessList","BackButton","writingMode","textOrientation","BackButtonText","TabButton","selected","change","AccessDetails","AccessDates","AccessUses","AccessShow","selectedTab","setSelectedTab","handleTabChange","prop","overflowY","MappedChipField","mappedValue","AccessDetailsView","selectedAccess","setSelectedAccess","ProfileDetailsView","addLabel","StatusButtons","TicketDetailsView","ticketLogsBookingFilter","syncWithLocation","emptyText","MaskField","rest","recordWithMappedValue","word","threshold","firstChars","lastChars","restCharsLength","repeat","maskMiddlePart","TicketInfoGrid","TicketInfoList","select","compsContainer","DashboardCustomization","ticketfinder","dashlogs","componentsOpen","setComponentsOpen","componentsChange","FormControlLabel","control","Switch","labelPlacement","Configuration","useDispatch","useLocale","setLocale","useSetLocale","Title","exact","App","env","dataProvider","i18nProvider","fakeAuthProvider","fakeDataProvider","providersFactory","Admin","dashboard","customReducers","customRoutes","routes","layout","Resource","ReceiptIcon","list","show","ViewComfyIcon","edit","PersonIcon","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","lng","use","initReactI18next","init","fallbackLng","debug","interpolation","escapeValue","resources","pl","translation","plTranslation","en","enTranslation","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e47ef07a.chunk.js","sourcesContent":["export const CHANGE_THEME = 'change-theme'","import { Action } from 'redux'\nimport { CHANGE_THEME } from '../constants/reducer.actions'\n\nconst identity = localStorage.getItem('username')\n\nexport type ThemeState = {\n  theme: {\n    darkMode: 'light' | 'dark'\n  }\n}\n\nconst initialState = {\n  darkMode: localStorage.getItem(`${identity}.darkMode`) === 'dark' ? 'dark' : 'light',\n}\n\nfunction themeReducer(state = initialState, action: Action<any>) {\n    if (action.type === CHANGE_THEME) {\n        if (state.darkMode === 'dark') localStorage.setItem(`${identity}.darkMode`, 'light')\n        else localStorage.setItem(`${identity}.darkMode`, 'dark')\n        return {\n            ...state,\n            darkMode: state.darkMode === 'dark' ? 'light' : 'dark'\n        }\n    }\n    return state\n}\n\nexport default themeReducer","export enum ResourceName {\n  ACCESSES = 'accesses',\n  ACCESS_USINGS = 'access-usings',\n  BOOKINGS = 'bookings',\n  EVENTS = 'events',\n  CUSTOMER_DETAILS = 'customer-details',\n  CUSTOMER_INFO = 'customer-info',\n  LOGS = 'logs',\n  TICKETS = 'tickets',\n  TICKET_DETAILS = 'ticket-details',\n  TICKET_INFO = 'ticket-info',\n  TICKET_LOGS = 'ticket-logs',\n  STATS_OVERALL_VIEW_LIST = \"stats-overall-view-list\",\n  STATS_OVERALL_VIEW = \"stats-overall-view\"\n}\n","export enum TicketType {\n  K = 'K',\n  M = 'M',\n  Z = 'Z',\n  N = 'N',\n  P = 'P',\n  U = 'U',\n  R = 'R',\n}\n","export enum BookingType {\n  NORMAL = 'NORMAL',\n  ABO = 'ABO',\n  INFIX = 'INFIX',\n  SERVICE = 'SERVICE',\n  POINTS = 'POINTS',\n}\n","export enum BookingDisabledOption {\n  ADMIN = 'ADMIN',\n  BAN = 'BAN',\n  STORNO = 'STORNO',\n  MISTAKE = 'MISTAKE',\n}\n","export enum CustomerDocumentType {\n  OTHER = 'OTHER',\n  ID_CARD = 'ID_CARD',\n  PASSPORT = 'PASSPORT',\n  STUDENT_CARD = 'STUDENT_CARD',\n  SCHOOL_ID = 'SCHOOL_ID',\n  DRIVING_LICENSE = 'DRIVING_LICENSE',\n}\n","export enum Gender {\n  MALE = 'MALE',\n  FEMALE = 'FEMALE',\n}\n","import { CreateResult, DataProvider, UpdateManyResult } from 'react-admin'\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  updateMany: async (resource, params): Promise<UpdateManyResult> =>\n    Promise.resolve({\n      data: [1],\n    }),\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  create: async (resource, params): Promise<CreateResult<unknown>> =>\n    Promise.resolve({\n      data: { id: 1 },\n    }),\n} as DataProvider\n\nexport default provider\n","import { DataProvider, UpdateResult } from 'react-admin'\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  update: async (resource, params): Promise<UpdateResult<unknown>> =>\n    Promise.resolve({\n      data: { id: 1 },\n    }),\n} as DataProvider\n\nexport default provider\n","import { DataProvider } from 'react-admin'\nimport { ExtendedLog } from '../../logs/extended-log'\n\nconst fakeLogs: ExtendedLog[] = [\n  {\n    id: 1,\n    date: '2021-07-15T08:50:27.2054',\n    ticketCode: 'A',\n    bookingId: 52815,\n    deviceName: 'Device name',\n    text: 'MF',\n    color: 'transparent',\n  },\n  {\n    id: 2,\n    date: '2021-07-15T08:50:27.2054',\n    ticketCode: 'A',\n    bookingId: 52816,\n    deviceName: 'Device name',\n    text: 'MF',\n    color: 'transparent',\n  },\n  {\n    id: 3,\n    date: '2021-07-15T08:50:27.2054',\n    ticketCode: 'A',\n    bookingId: 1111,\n    deviceName: 'Device name',\n    text: 'MF',\n    color: 'transparent',\n  },\n  {\n    id: 4,\n    date: '2021-07-15T08:50:27.2054',\n    ticketCode: 'A',\n    bookingId: 11112,\n    deviceName: 'Device name',\n    text: 'MF',\n    color: 'transparent',\n  },\n  {\n    id: 5,\n    date: '2021-07-15T08:50:27.2054',\n    ticketCode: 'A',\n    bookingId: 16612,\n    deviceName: 'Device name',\n    text: 'MF',\n    color: 'transparent',\n  },\n  {\n    id: 6,\n    date: '2021-07-15T08:50:27.2054',\n    ticketCode: 'A',\n    bookingId: 167782,\n    deviceName: 'Device name',\n    text: 'MF',\n    color: 'transparent',\n  },\n  {\n    id: 7,\n    date: '2021-07-15T08:50:27.2054',\n    ticketCode: 'A',\n    bookingId: 122782,\n    deviceName: 'Device name',\n    text: 'MF',\n    color: 'transparent',\n  },\n  {\n    id: 8,\n    date: '2021-07-15T08:50:27.2054',\n    ticketCode: 'A',\n    bookingId: 189782,\n    deviceName: 'Device name',\n    text: 'MF',\n    color: 'transparent',\n  },\n  {\n    id: 9,\n    date: '2021-07-15T08:50:27.2054',\n    ticketCode: 'A',\n    bookingId: 183332,\n    deviceName: 'Device name',\n    text: 'MF',\n    color: 'transparent',\n  },\n  {\n    id: 10,\n    date: '2021-07-15T08:50:27.2054',\n    ticketCode: 'A',\n    bookingId: 656565,\n    deviceName: 'Device name',\n    text: 'MF',\n    color: 'transparent',\n  },\n]\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getList: (resource, params) =>\n    Promise.resolve({ data: fakeLogs, total: fakeLogs.length }),\n} as DataProvider\n\nexport default provider\n","import { DataProvider } from 'react-admin'\nimport { EventOverallView } from '../../stats/overall-view/event-overall-view'\n\nconst fakeStatsOverallViewList: EventOverallView[] = [\n  {\n    id: 1,\n    name: \"\",\n    dateStart: '2021-07-13T15:11:06.771267',\n    dateEnd: '2021-07-13T15:11:06.771267'\n  },\n  {\n    id: 2,\n    name: \"\",\n    dateStart: '2021-07-13T15:11:06.771267',\n    dateEnd: '2021-07-13T15:11:06.771267'\n  },\n  {\n    id: 3,\n    name: \"\",\n    dateStart: '2021-07-13T15:11:06.771267',\n    dateEnd: '2021-07-13T15:11:06.771267'\n  },\n  {\n    id: 4,\n    name: \"\",\n    dateStart: '2021-07-13T15:11:06.771267',\n    dateEnd: '2021-07-13T15:11:06.771267'\n  },\n  {\n    id: 5,\n    name: \"\",\n    dateStart: '2021-07-13T15:11:06.771267',\n    dateEnd: '2021-07-13T15:11:06.771267'\n  },\n]\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getList: (resource, params) =>\n    Promise.resolve({ data: fakeStatsOverallViewList, total: fakeStatsOverallViewList.length }),\n} as DataProvider\n\nexport default provider","import { DataProvider } from 'react-admin'\nimport { DateTime } from '../../common/date-time'\nimport { OverallView } from '../../stats/overall-view/overall-view'\n\nconst fakeStatsOverallViewList: OverallView[] = [\n  {\n    id: 1,\n    eventName: \"\",\n    capacity: 0,\n    sold: 0,\n    entered: 0,\n    objects: [],\n    date: \"01-01-2021T00:00.00\" as DateTime\n  },\n  {\n    id: 2,\n    eventName: \"\",\n    capacity: 0,\n    sold: 0,\n    entered: 0,\n    objects: [],\n    date: \"01-01-2021T00:00.00\" as DateTime\n  },\n  {\n    id: 3,\n    eventName: \"\",\n    capacity: 0,\n    sold: 0,\n    entered: 0,\n    objects: [],\n    date: \"01-01-2021T00:00.00\" as DateTime\n  },\n  {\n    id: 4,\n    eventName: \"\",\n    capacity: 0,\n    sold: 0,\n    entered: 0,\n    objects: [],\n    date: \"01-01-2021T00:00.00\" as DateTime\n  },\n  {\n    id: 5,\n    eventName: \"\",\n    capacity: 0,\n    sold: 0,\n    entered: 0,\n    objects: [],\n    date: \"01-01-2021T00:00.00\" as DateTime\n  },\n]\n\nconst provider = {\n  getOne: (resource, { id }: { id: string }) => {\n    const found = fakeStatsOverallViewList.find((v) => `${v.id}` === id)\n    if (found) {\n      return Promise.resolve({\n        data: found,\n      })\n    }\n    return Promise.reject(new Error())\n  },\n} as DataProvider\n\nexport default provider","import { DataProvider } from 'react-admin'\nimport { TicketType } from '../../enum/TicketType'\nimport { TicketDetails } from '../../ticket-details/ticket-details'\nimport { BookingType } from '../../enum/BookingType'\nimport { BookingDisabledOption } from '../../enum/BookingDisabledOption'\nimport { CustomerDocumentType } from '../../enum/CustomerDocumentType'\nimport { Gender } from '../../enum/Gender'\n\nconst fakeTicketDetailsList: TicketDetails[] = [\n  {\n    id: 1,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    accessesIds: [10],\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56424,\n        ticketCode: '060000020917',\n        ticketType: TicketType.K,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n      {\n        id: 56425,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.M,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    bookingDisabled: BookingDisabledOption.STORNO,\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    documentNumber: \"12345678901\",\n    nationality: \"Poland\",\n    gender: Gender.MALE,\n    seatId: null,\n    blockId: null,\n    accesses: []\n  },\n  {\n    id: 2,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    accessesIds: [10],\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56424,\n        ticketCode: '060000020917',\n        ticketType: TicketType.K,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n      {\n        id: 56425,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.M,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    bookingDisabled: BookingDisabledOption.STORNO,\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    documentNumber: \"12345678901\",\n    nationality: \"Poland\",\n    gender: Gender.MALE,\n    seatId: null,\n    blockId: null,\n    accesses: []\n  },\n  {\n    id: 3,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    accessesIds: [10],\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56424,\n        ticketCode: '060000020917',\n        ticketType: TicketType.K,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n      {\n        id: 56425,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.M,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    bookingDisabled: null,\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    documentNumber: \"12345678901\",\n    nationality: \"Poland\",\n    gender: Gender.MALE,\n    seatId: null,\n    blockId: null,\n    accesses: []\n  },\n  {\n    id: 4,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    accessesIds: [10],\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56424,\n        ticketCode: '060000020917',\n        ticketType: TicketType.K,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n      {\n        id: 56425,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.M,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    bookingDisabled: null,\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    documentNumber: \"12345678901\",\n    nationality: \"Poland\",\n    gender: Gender.MALE,\n    seatId: null,\n    blockId: null,\n    accesses: []\n  },\n  {\n    id: 5,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    accessesIds: [10],\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56424,\n        ticketCode: '060000020917',\n        ticketType: TicketType.K,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n      {\n        id: 56425,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.M,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    bookingDisabled: null,\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    documentNumber: \"12345678901\",\n    nationality: \"Poland\",\n    gender: Gender.MALE,\n    seatId: null,\n    blockId: null,\n    accesses: []\n  },\n  {\n    id: 6,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    accessesIds: [10],\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56424,\n        ticketCode: '060000020917',\n        ticketType: TicketType.K,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n      {\n        id: 56425,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.M,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    bookingDisabled: null,\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    documentNumber: \"12345678901\",\n    nationality: \"Poland\",\n    gender: Gender.MALE,\n    seatId: null,\n    blockId: null,\n    accesses: []\n  },\n  {\n    id: 7,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    accessesIds: [10],\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56424,\n        ticketCode: '060000020917',\n        ticketType: TicketType.K,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n      {\n        id: 56425,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.M,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    bookingDisabled: null,\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    documentNumber: \"12345678901\",\n    nationality: \"Poland\",\n    gender: Gender.MALE,\n    seatId: null,\n    blockId: null,\n    accesses: []\n  },\n  {\n    id: 8,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    accessesIds: [10],\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56424,\n        ticketCode: '060000020917',\n        ticketType: TicketType.K,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n      {\n        id: 56425,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.M,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    bookingDisabled: null,\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    documentNumber: \"12345678901\",\n    nationality: \"Poland\",\n    gender: Gender.MALE,\n    seatId: null,\n    blockId: null,\n    accesses: []\n  },\n  {\n    id: 9,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    accessesIds: [10],\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56424,\n        ticketCode: '060000020917',\n        ticketType: TicketType.K,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n      {\n        id: 56425,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.M,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    bookingDisabled: null,\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    documentNumber: \"12345678901\",\n    nationality: \"Poland\",\n    gender: Gender.MALE,\n    seatId: null,\n    blockId: null,\n    accesses: []\n  },\n  {\n    id: 10,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    accessesIds: [10],\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56424,\n        ticketCode: '060000020917',\n        ticketType: TicketType.K,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n      {\n        id: 56425,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.M,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    bookingDisabled: null,\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    documentNumber: \"12345678901\",\n    nationality: \"Poland\",\n    gender: Gender.MALE,\n    seatId: null,\n    blockId: null,\n    accesses: []\n  },\n]\n\nconst provider = {\n  getOne: (resource, { id }: { id: string }) => {\n    const found = fakeTicketDetailsList.find((v) => `${v.id}` === id)\n    if (found) {\n      return Promise.resolve({\n        data: found,\n      })\n    }\n    return Promise.reject(new Error())\n  },\n} as DataProvider\n\nexport default provider\n","export enum AccessActivePeriodStartingOptions {\n  NO_LIMIT = 'NO_LIMIT',\n  PURCHASE_DATE = 'PURCHASE_DATE',\n  FIRST_USE = 'FIRST_USE',\n}\n","export enum AccessBonuses {\n  N = 'N',\n  Y = 'Y',\n  Z = 'Z',\n  D = 'D',\n}\n","export enum DayOfWeek {\n  SUNDAY = 'Sunday',\n  MONDAY = 'Monday',\n  TUESDAY = 'Tuesday',\n  WEDNESDAY = 'Wednesday',\n  THURSDAY = 'Thursday',\n  FRIDAY = 'Friday',\n  SATURDAY = 'Saturday',\n}\n","import { DataProvider } from 'react-admin'\nimport { TicketType } from '../../enum/TicketType'\nimport { TicketInfo } from '../../ticket-info/ticket-info'\n\nconst fakeTicketInfoList: TicketInfo[] = [\n  {\n    id: 1,\n    firstname: 'Marek',\n    lastname: 'Pies',\n    pesel: '47120554776',\n    eventId: 0,\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    eventDate: '2021-07-15T08:50:27.2054',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n  },\n  {\n    id: 2,\n    firstname: 'Janek',\n    lastname: 'Krużganek',\n    pesel: '47120554776',\n    eventId: 0,\n    eventName: 'POGOŃ SZCZECIN 20/21',\n    eventDate: '2021-07-15T08:50:27.2054',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n  },\n  {\n    id: 3,\n    firstname: 'Wacław',\n    lastname: 'Rymski',\n    pesel: '9988711225',\n    eventId: 0,\n    eventName: 'POGOŃ SZCZECIN 20/21',\n    eventDate: '2021-07-15T08:50:27.2054',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n  },\n  {\n    id: 4,\n    firstname: 'Mirka',\n    lastname: 'Korzeń',\n    pesel: '56483978659',\n    eventId: 0,\n    eventName: 'POGOŃ SZCZECIN 20/21',\n    eventDate: '2021-07-15T08:50:27.2054',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n  },\n  {\n    id: 5,\n    firstname: 'Tis',\n    lastname: 'Lomasz',\n    pesel: '47120554776',\n    eventId: 0,\n    eventName: 'POGOŃ SZCZECIN 20/21',\n    eventDate: '2021-07-15T08:50:27.2054',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n  },\n  {\n    id: 6,\n    firstname: 'Bogdana',\n    lastname: 'Jaruzelska',\n    pesel: '47120554776',\n    eventId: 0,\n    eventName: 'POGOŃ SZCZECIN 20/21',\n    eventDate: '2021-07-15T08:50:27.2054',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n  },\n  {\n    id: 7,\n    firstname: 'Jeremi',\n    lastname: 'Pomidor',\n    pesel: '12345678900',\n    eventId: 0,\n    eventName: 'POGOŃ SZCZECIN 20/21',\n    eventDate: '2021-07-15T08:50:27.2054',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n  },\n  {\n    id: 8,\n    firstname: 'Roman',\n    lastname: 'Zoman',\n    pesel: '13243567890',\n    eventId: 0,\n    eventName: 'POGOŃ SZCZECIN 20/21',\n    eventDate: '2021-07-15T08:50:27.2054',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n  },\n  {\n    id: 9,\n    firstname: 'Bacha',\n    lastname: 'Kaszalot',\n    pesel: '98097612678',\n    eventId: 0,\n    eventName: 'POGOŃ SZCZECIN 20/21',\n    eventDate: '2021-07-15T08:50:27.2054',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n  },\n  {\n    id: 10,\n    firstname: 'Jadwiga',\n    lastname: 'Ogórek',\n    pesel: '47120554776',\n    eventId: 0,\n    eventName: 'POGOŃ SZCZECIN 20/21',\n    eventDate: '2021-07-15T08:50:27.2054',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n  },\n]\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getList: (resource, params) =>\n    Promise.resolve({\n      data: fakeTicketInfoList,\n      total: fakeTicketInfoList.length,\n    }),\n} as DataProvider\n\nexport default provider\n","import { DataProvider } from 'react-admin'\nimport { TicketDto } from '../../dto/ticket.dto'\nimport { TicketType } from '../../enum/TicketType'\n\nconst fakeTickets: TicketDto[] = [\n  {\n    id: 1,\n    ticketCode: 'A',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52815,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n  {\n    id: 2,\n    ticketCode: 'A',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52816,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n  {\n    id: 3,\n    ticketCode: '010000011492',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52817,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n  {\n    id: 4,\n    ticketCode: '411000006572',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52818,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n  {\n    id: 5,\n    ticketCode: '871000006824',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52819,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n  {\n    id: 6,\n    ticketCode: '370000011495',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52820,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n  {\n    id: 7,\n    ticketCode: '450000011501',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52821,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n  {\n    id: 8,\n    ticketCode: '630000011502',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52822,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n  {\n    id: 9,\n    ticketCode: '020000011503',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52823,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n  {\n    id: 10,\n    ticketCode: '310000011504',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52824,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n]\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getList: (resource, params) =>\n    Promise.resolve({ data: fakeTickets, total: fakeTickets.length }),\n} as DataProvider\n\nexport default provider\n","import { DataProvider } from 'react-admin'\nimport { Access } from '../../accesses/access'\nimport { AccessActivePeriodStartingOptions } from '../../enum/AccessActivePeriodStartingOptions'\nimport { AccessBonuses } from '../../enum/AccessBonuses'\nimport { DayOfWeek } from '../../enum/DayOfWeek'\n\nconst fakeAccesses: Access[] = [\n  {\n    id: 1,\n    name: 'access1',\n    bonus: AccessBonuses.N,\n    entranceId: 0,\n    allowReenter: false,\n    multipleEntry: false,\n    multiple: 0,\n    usePriority: 0,\n    isTicketUnlockWithNextDay: false,\n    releaseTime: '2021-07-15T08:50:27.2054',\n    releaseDayOfWeek: DayOfWeek.FRIDAY,\n    releaseDayOfMonth: 1,\n    delay: '',\n    activePeriod: '',\n    activePeriodStartingFrom: AccessActivePeriodStartingOptions.FIRST_USE,\n    variantsIds: [],\n    accessDatesIds: [],\n    createdById: 0,\n    modifiedById: 0,\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n  {\n    id: 2,\n    name: 'access2',\n    bonus: AccessBonuses.N,\n    entranceId: 0,\n    allowReenter: false,\n    multipleEntry: false,\n    multiple: 0,\n    usePriority: 0,\n    isTicketUnlockWithNextDay: false,\n    releaseTime: '2021-07-15T08:50:27.2054',\n    releaseDayOfWeek: DayOfWeek.FRIDAY,\n    releaseDayOfMonth: 1,\n    delay: '',\n    activePeriod: '',\n    activePeriodStartingFrom: AccessActivePeriodStartingOptions.FIRST_USE,\n    variantsIds: [],\n    accessDatesIds: [],\n    createdById: 0,\n    modifiedById: 0,\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n  {\n    id: 3,\n    name: 'access3',\n    bonus: AccessBonuses.N,\n    entranceId: 0,\n    allowReenter: false,\n    multipleEntry: false,\n    multiple: 0,\n    usePriority: 0,\n    isTicketUnlockWithNextDay: false,\n    releaseTime: '2021-07-15T08:50:27.2054',\n    releaseDayOfWeek: DayOfWeek.FRIDAY,\n    releaseDayOfMonth: 1,\n    delay: '',\n    activePeriod: '',\n    activePeriodStartingFrom: AccessActivePeriodStartingOptions.FIRST_USE,\n    variantsIds: [],\n    accessDatesIds: [],\n    createdById: 0,\n    modifiedById: 0,\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n  {\n    id: 4,\n    name: 'access4',\n    bonus: AccessBonuses.N,\n    entranceId: 0,\n    allowReenter: false,\n    multipleEntry: false,\n    multiple: 0,\n    usePriority: 0,\n    isTicketUnlockWithNextDay: false,\n    releaseTime: '2021-07-15T08:50:27.2054',\n    releaseDayOfWeek: DayOfWeek.FRIDAY,\n    releaseDayOfMonth: 1,\n    delay: '',\n    activePeriod: '',\n    activePeriodStartingFrom: AccessActivePeriodStartingOptions.FIRST_USE,\n    variantsIds: [],\n    accessDatesIds: [],\n    createdById: 0,\n    modifiedById: 0,\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n  {\n    id: 5,\n    name: 'access5',\n    bonus: AccessBonuses.N,\n    entranceId: 0,\n    allowReenter: false,\n    multipleEntry: false,\n    multiple: 0,\n    usePriority: 0,\n    isTicketUnlockWithNextDay: false,\n    releaseTime: '2021-07-15T08:50:27.2054',\n    releaseDayOfWeek: DayOfWeek.FRIDAY,\n    releaseDayOfMonth: 1,\n    delay: '',\n    activePeriod: '',\n    activePeriodStartingFrom: AccessActivePeriodStartingOptions.FIRST_USE,\n    variantsIds: [],\n    accessDatesIds: [],\n    createdById: 0,\n    modifiedById: 0,\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n  {\n    id: 6,\n    name: 'access6',\n    bonus: AccessBonuses.N,\n    entranceId: 0,\n    allowReenter: false,\n    multipleEntry: false,\n    multiple: 0,\n    usePriority: 0,\n    isTicketUnlockWithNextDay: false,\n    releaseTime: '2021-07-15T08:50:27.2054',\n    releaseDayOfWeek: DayOfWeek.FRIDAY,\n    releaseDayOfMonth: 1,\n    delay: '',\n    activePeriod: '',\n    activePeriodStartingFrom: AccessActivePeriodStartingOptions.FIRST_USE,\n    variantsIds: [],\n    accessDatesIds: [],\n    createdById: 0,\n    modifiedById: 0,\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n  {\n    id: 7,\n    name: 'access7',\n    bonus: AccessBonuses.N,\n    entranceId: 0,\n    allowReenter: false,\n    multipleEntry: false,\n    multiple: 0,\n    usePriority: 0,\n    isTicketUnlockWithNextDay: false,\n    releaseTime: '2021-07-15T08:50:27.2054',\n    releaseDayOfWeek: DayOfWeek.FRIDAY,\n    releaseDayOfMonth: 1,\n    delay: '',\n    activePeriod: '',\n    activePeriodStartingFrom: AccessActivePeriodStartingOptions.FIRST_USE,\n    variantsIds: [],\n    accessDatesIds: [],\n    createdById: 0,\n    modifiedById: 0,\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n  {\n    id: 8,\n    name: 'access8',\n    bonus: AccessBonuses.N,\n    entranceId: 0,\n    allowReenter: false,\n    multipleEntry: false,\n    multiple: 0,\n    usePriority: 0,\n    isTicketUnlockWithNextDay: false,\n    releaseTime: '2021-07-15T08:50:27.2054',\n    releaseDayOfWeek: DayOfWeek.FRIDAY,\n    releaseDayOfMonth: 1,\n    delay: '',\n    activePeriod: '',\n    activePeriodStartingFrom: AccessActivePeriodStartingOptions.FIRST_USE,\n    variantsIds: [],\n    accessDatesIds: [],\n    createdById: 0,\n    modifiedById: 0,\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n  {\n    id: 9,\n    name: 'access9',\n    bonus: AccessBonuses.N,\n    entranceId: 0,\n    allowReenter: false,\n    multipleEntry: false,\n    multiple: 0,\n    usePriority: 0,\n    isTicketUnlockWithNextDay: false,\n    releaseTime: '2021-07-15T08:50:27.2054',\n    releaseDayOfWeek: DayOfWeek.FRIDAY,\n    releaseDayOfMonth: 1,\n    delay: '',\n    activePeriod: '',\n    activePeriodStartingFrom: AccessActivePeriodStartingOptions.FIRST_USE,\n    variantsIds: [],\n    accessDatesIds: [],\n    createdById: 0,\n    modifiedById: 0,\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n  {\n    id: 10,\n    name: 'access10',\n    bonus: AccessBonuses.N,\n    entranceId: 0,\n    allowReenter: false,\n    multipleEntry: false,\n    multiple: 0,\n    usePriority: 0,\n    isTicketUnlockWithNextDay: false,\n    releaseTime: '2021-07-15T08:50:27.2054',\n    releaseDayOfWeek: DayOfWeek.FRIDAY,\n    releaseDayOfMonth: 1,\n    delay: '',\n    activePeriod: '',\n    activePeriodStartingFrom: AccessActivePeriodStartingOptions.FIRST_USE,\n    variantsIds: [],\n    accessDatesIds: [],\n    createdById: 0,\n    modifiedById: 0,\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n]\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getList: (resource, params) =>\n    Promise.resolve({ data: fakeAccesses, total: fakeAccesses.length }),\n} as DataProvider\n\nexport default provider\n","export enum EventStatus {\n  INACTIVE = 'INACTIVE',\n  ACTIVE = 'ACTIVE',\n  IN_TRANSITION = 'IN_TRANSITION',\n}\n","import { DataProvider } from 'react-admin'\nimport { EventStatus } from '../../enum/EventStatus'\nimport { Event } from '../../events/event'\n\nconst fakeEvents: Event[] = [\n  {\n    id: 1,\n    name: \"Event1\",\n    dateStart: '2021-07-15T08:50:27.2054',\n    dateEnd: '2021-07-15T08:50:27.2054',\n    status: EventStatus.INACTIVE\n  },\n  {\n    id: 2,\n    name: \"Event2\",\n    dateStart: '2021-07-15T08:50:27.2054',\n    dateEnd: '2021-07-15T08:50:27.2054',\n    status: EventStatus.INACTIVE\n  },\n  {\n    id: 3,\n    name: \"Event3\",\n    dateStart: '2021-07-15T08:50:27.2054',\n    dateEnd: '2021-07-15T08:50:27.2054',\n    status: EventStatus.INACTIVE\n  },\n  {\n    id: 4,\n    name: \"Event4\",\n    dateStart: '2021-07-15T08:50:27.2054',\n    dateEnd: '2021-07-15T08:50:27.2054',\n    status: EventStatus.INACTIVE\n  },\n  {\n    id: 5,\n    name: \"Event5\",\n    dateStart: '2021-07-15T08:50:27.2054',\n    dateEnd: '2021-07-15T08:50:27.2054',\n    status: EventStatus.INACTIVE\n  },\n  {\n    id: 6,\n    name: \"Event6\",\n    dateStart: '2021-07-15T08:50:27.2054',\n    dateEnd: '2021-07-15T08:50:27.2054',\n    status: EventStatus.INACTIVE\n  },\n  {\n    id: 7,\n    name: \"Event7\",\n    dateStart: '2021-07-15T08:50:27.2054',\n    dateEnd: '2021-07-15T08:50:27.2054',\n    status: EventStatus.INACTIVE\n  },\n  {\n    id: 8,\n    name: \"Event8\",\n    dateStart: '2021-07-15T08:50:27.2054',\n    dateEnd: '2021-07-15T08:50:27.2054',\n    status: EventStatus.INACTIVE\n  },\n  {\n    id: 9,\n    name: \"Event9\",\n    dateStart: '2021-07-15T08:50:27.2054',\n    dateEnd: '2021-07-15T08:50:27.2054',\n    status: EventStatus.INACTIVE\n  },\n  {\n    id: 10,\n    name: \"Event10\",\n    dateStart: '2021-07-15T08:50:27.2054',\n    dateEnd: '2021-07-15T08:50:27.2054',\n    status: EventStatus.INACTIVE\n  },\n]\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getList: (resource, params) =>\n    Promise.resolve({ data: fakeEvents, total: fakeEvents.length })\n} as DataProvider\n\nexport default provider","export enum DeviceDirection {\n  IN = 'IN',\n  OUT = 'OUT',\n  INFO = 'INFO',\n}\n","import { DataProvider } from 'react-admin'\nimport { CustomerDetails } from \"../../customer-details/customer-details\";\nimport { CustomerDocumentType } from '../../enum/CustomerDocumentType'\nimport { Gender } from '../../enum/Gender'\n\nconst fakeCustomerDetailsList: CustomerDetails[] = [\n  {\n    id: 1,\n    type: \"MANUAL\",\n    firstname: \"Jan\",\n    lastname: \"Kowalski\",\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    pesel: \"12345678901\",\n    documentNumber: null,\n    nationality: \"PL\",\n    gender: Gender.MALE,\n    bookingsIds: []\n  },\n  {\n    id: 2,\n    type: \"MANUAL\",\n    firstname: \"Jan\",\n    lastname: \"Kowalski\",\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    pesel: \"12345678901\",\n    documentNumber: null,\n    nationality: \"PL\",\n    gender: Gender.MALE,\n    bookingsIds: []\n  },\n  {\n    id: 3,\n    type: \"MANUAL\",\n    firstname: \"Jan\",\n    lastname: \"Kowalski\",\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    pesel: \"12345678901\",\n    documentNumber: null,\n    nationality: \"PL\",\n    gender: Gender.MALE,\n    bookingsIds: []\n  },\n  {\n    id: 4,\n    type: \"MANUAL\",\n    firstname: \"Jan\",\n    lastname: \"Kowalski\",\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    pesel: \"12345678901\",\n    documentNumber: null,\n    nationality: \"PL\",\n    gender: Gender.MALE,\n    bookingsIds: []\n  },\n  {\n    id: 5,\n    type: \"MANUAL\",\n    firstname: \"Jan\",\n    lastname: \"Kowalski\",\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    pesel: \"12345678901\",\n    documentNumber: null,\n    nationality: \"PL\",\n    gender: Gender.MALE,\n    bookingsIds: []\n  },\n  {\n    id: 6,\n    type: \"MANUAL\",\n    firstname: \"Jan\",\n    lastname: \"Kowalski\",\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    pesel: \"12345678901\",\n    documentNumber: null,\n    nationality: \"PL\",\n    gender: Gender.MALE,\n    bookingsIds: []\n  },\n  {\n    id: 7,\n    type: \"MANUAL\",\n    firstname: \"Jan\",\n    lastname: \"Kowalski\",\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    pesel: \"12345678901\",\n    documentNumber: null,\n    nationality: \"PL\",\n    gender: Gender.MALE,\n    bookingsIds: []\n  },\n  {\n    id: 8,\n    type: \"MANUAL\",\n    firstname: \"Jan\",\n    lastname: \"Kowalski\",\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    pesel: \"12345678901\",\n    documentNumber: null,\n    nationality: \"PL\",\n    gender: Gender.MALE,\n    bookingsIds: []\n  },\n  {\n    id: 9,\n    type: \"MANUAL\",\n    firstname: \"Jan\",\n    lastname: \"Kowalski\",\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    pesel: \"12345678901\",\n    documentNumber: null,\n    nationality: \"PL\",\n    gender: Gender.MALE,\n    bookingsIds: []\n  },\n  {\n    id: 10,\n    type: \"MANUAL\",\n    firstname: \"Jan\",\n    lastname: \"Kowalski\",\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    pesel: \"12345678901\",\n    documentNumber: null,\n    nationality: \"PL\",\n    gender: Gender.MALE,\n    bookingsIds: []\n  },\n]\n\nconst provider = {\n  getOne: (resource, { id }: { id: string }) => {\n    const found = fakeCustomerDetailsList.find((c) => `${c.id}` === id)\n    if(found) {\n      return Promise.resolve({\n        data: found\n      })\n    }\n    return Promise.reject(new Error())\n  }\n} as DataProvider\n\nexport default provider","import { DataProvider } from 'react-admin'\nimport { CustomerInfo } from '../../customer-info/customer-info'\n\nconst fakeCustomerInfoList: CustomerInfo[] = [\n  {\n    id: 1,\n    firstname: \"jan\",\n    lastname: \"kowalski\",\n    pesel: \"12345678901\",\n    documentNumber: \"12345678901\"\n  },\n  {\n    id: 2,\n    firstname: \"jan\",\n    lastname: \"kowalski\",\n    pesel: \"12345678901\",\n    documentNumber: \"12345678901\"\n  },\n  {\n    id: 3,\n    firstname: \"jan\",\n    lastname: \"kowalski\",\n    pesel: \"12345678901\",\n    documentNumber: \"12345678901\"\n  },\n  {\n    id: 4,\n    firstname: \"jan\",\n    lastname: \"kowalski\",\n    pesel: \"12345678901\",\n    documentNumber: \"12345678901\"\n  },\n  {\n    id: 5,\n    firstname: \"jan\",\n    lastname: \"kowalski\",\n    pesel: \"12345678901\",\n    documentNumber: \"12345678901\"\n  },\n  {\n    id: 6,\n    firstname: \"jan\",\n    lastname: \"kowalski\",\n    pesel: \"12345678901\",\n    documentNumber: \"12345678901\"\n  },\n  {\n    id: 7,\n    firstname: \"jan\",\n    lastname: \"kowalski\",\n    pesel: \"12345678901\",\n    documentNumber: \"12345678901\"\n  },\n  {\n    id: 8,\n    firstname: \"jan\",\n    lastname: \"kowalski\",\n    pesel: \"12345678901\",\n    documentNumber: \"12345678901\"\n  },\n  {\n    id: 9,\n    firstname: \"jan\",\n    lastname: \"kowalski\",\n    pesel: \"12345678901\",\n    documentNumber: \"12345678901\"\n  },\n  {\n    id: 10,\n    firstname: \"jan\",\n    lastname: \"kowalski\",\n    pesel: \"12345678901\",\n    documentNumber: \"12345678901\"\n  },\n]\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getList: (resource, params) =>\n    Promise.resolve({ data: fakeCustomerInfoList, total: fakeCustomerInfoList.length })\n} as DataProvider\n\nexport default provider","import { DataProvider, sanitizeFetchType } from 'react-admin'\nimport { ResourceName } from '../ResourceName'\nimport fakeAccessUsingsProvider from './providers/fake-access-usings.provider'\nimport fakeBookingsProvider from './providers/fake-bookings.provider'\nimport fakeLogsProvider from './providers/fake-logs.provider'\nimport fakeStatsOverallViewListProvider from './providers/fake-stats-overall-view-list.provider'\nimport fakeStatsOverallViewProvider from './providers/fake-stats-overall-view.provider'\nimport fakeTicketDetailsProvider from './providers/fake-ticket-details.provider'\nimport fakeTicketInfoProvider from './providers/fake-ticket-info.provider'\nimport fakeTicketsProvider from './providers/fake-tickets.provider'\nimport fakeAccessesProvider from './providers/fake-accesses.provider'\nimport fakeEventsProvider from './providers/fake-events.provider'\nimport fakeCustomerDetailsProvider from './providers/fake-customer-details.provider'\nimport fakeCustomerInfoProvider from './providers/fake-customer-info.provider'\n\nconst dataProviders: Record<ResourceName, DataProvider> = {\n  [ResourceName.ACCESSES]: fakeAccessesProvider,\n  [ResourceName.ACCESS_USINGS]: fakeAccessUsingsProvider,\n  [ResourceName.BOOKINGS]: fakeBookingsProvider,\n  [ResourceName.CUSTOMER_DETAILS]: fakeCustomerDetailsProvider,\n  [ResourceName.CUSTOMER_INFO]: fakeCustomerInfoProvider,\n  [ResourceName.EVENTS]: fakeEventsProvider,\n  [ResourceName.LOGS]: fakeLogsProvider,\n  [ResourceName.TICKETS]: fakeTicketsProvider,\n  [ResourceName.TICKET_INFO]: fakeTicketInfoProvider,\n  [ResourceName.TICKET_DETAILS]: fakeTicketDetailsProvider,\n  [ResourceName.TICKET_LOGS]: fakeLogsProvider,\n  [ResourceName.STATS_OVERALL_VIEW]: fakeStatsOverallViewProvider,\n  [ResourceName.STATS_OVERALL_VIEW_LIST]: fakeStatsOverallViewListProvider,\n}\n\nexport default (\n  fetchType: string,\n  resource: string,\n  params: unknown,\n): Promise<unknown> => {\n  const selectedProvider = dataProviders[resource as ResourceName]\n  const type = sanitizeFetchType(fetchType)\n  return selectedProvider[type](resource, params)\n}\n","import { AuthProvider } from 'react-admin'\n\nconst authProvider: AuthProvider = {\n  login: () => Promise.resolve(),\n  logout: () => Promise.resolve(),\n  checkError: () => Promise.resolve(),\n  checkAuth: () => Promise.resolve(),\n  getPermissions: () => Promise.resolve(),\n  getIdentity: () =>\n    Promise.resolve({\n      id: 'no-auth',\n      fullName: 'no-auth',\n    }),\n}\n\nexport default authProvider\n","export type ContentRangeHeaderValue = `bytes ${number}-${number}/${number}`\n\nexport const contentRangeParser = (headerValue: ContentRangeHeaderValue) => {\n  if (!headerValue) {\n    // 'content-range' header should exist otherwise pagination doesn't work\n    return {\n      total: 0,\n    }\n  }\n  const summary = headerValue.split(' ')[1]\n  const split = summary.split('-')\n  const rangeFrom = split[0]\n  const summarySecondPartSplit = split[1].split('/')\n  const rangeTo = summarySecondPartSplit[0]\n  const total = summarySecondPartSplit[1]\n  return {\n    rangeFrom: parseInt(rangeFrom, 10),\n    rangeTo: parseInt(rangeTo, 10),\n    total: parseInt(total, 10),\n  }\n}\n","import { fetchUtils } from 'react-admin'\nimport { ContentRangeHeaderValue, contentRangeParser } from './header.parser'\n\nconst getToken = () => localStorage.getItem('token') as string\n\nconst baseHeaders: HeadersInit = {\n  'Content-Type': 'application/json',\n}\n\nconst authHeaders = (): HeadersInit => ({\n  ...baseHeaders,\n  Authorization: `Bearer ${getToken()}`,\n})\n\nconst postWithHeaders = <T, K>(url: string, body: T, headers: HeadersInit) =>\n  fetchUtils\n    .fetchJson(url, {\n      method: 'POST',\n      body: JSON.stringify(body),\n      headers: new Headers(headers),\n    })\n    .then(({ json }) => json as Promise<K>)\n\nexport const get = <T>(baseUrl: string, path: string) =>\n  fetchUtils\n    .fetchJson(`${baseUrl}${path}`, {\n      method: 'GET',\n      headers: new Headers(authHeaders()),\n    })\n    .then(({ json }) => json as Promise<T>)\n\nexport const getWithPagination = <T>(baseUrl: string, path: string) =>\n  fetchUtils\n    .fetchJson(`${baseUrl}${path}`, {\n      method: 'GET',\n      headers: new Headers(authHeaders()),\n    })\n    .then(({ json, headers }) =>\n      Promise.resolve({\n        data: json as T,\n        range: contentRangeParser(\n          headers.get('content-range') as ContentRangeHeaderValue,\n        ),\n      }),\n    )\n\nexport const getByConditions = <T>(\n  baseUrl: string,\n  pathParam: string,\n): Promise<T[]> => get<T[]>(baseUrl, `/GetByConditions/${pathParam}`)\n\nexport const authPost = <T, K>(url: string, body: T) =>\n  postWithHeaders<T, K>(url, body, baseHeaders)\n\nexport const post = <T, K>(url: string, body: T) =>\n  postWithHeaders<T, K>(url, body, authHeaders())\n\nexport const patch = <T, K>(baseUrl: string, body: T) =>\n  fetchUtils\n    .fetchJson(baseUrl, {\n      method: 'PATCH',\n      body: JSON.stringify(body),\n      headers: new Headers(authHeaders()),\n    })\n    .then(({ json }) => json as Promise<K>)\n\nexport const put = <T, K>(baseUrl: string, body: T) =>\n  fetchUtils\n    .fetchJson(baseUrl, {\n      method: 'PUT',\n      body: JSON.stringify(body),\n      headers: new Headers(authHeaders()),\n    })\n    .then(({ json }) => json as Promise<K>)","const API_V1 = `${process.env.REACT_APP_API_BASE_URL}/api/v1`\nexport const ACCESS_USINGS = `${API_V1}/ticketManagement/AccessUsings`\nexport const ACCESSES_URL = `${API_V1}/ticketManagement/Accesses`\nexport const AUTH_URL = `${API_V1}/Authorization/Authenticate`\nexport const BOOKINGS_URL = `${API_V1}/ticketManagement/Bookings`\nexport const CUSTOMERS_URL = `${API_V1}/ticketManagement/Customers`\nexport const EVENTS_URL = `${API_V1}/ticketManagement/Events`\nexport const EXTENDED_LOGS_URL = `${API_V1}/ticketManagement/Logs/GetExtendedLogByConditions`\nexport const TICKETS_URL = `${API_V1}/ticketManagement/Tickets`\nexport const VARIANTS_URL = `${API_V1}/ticketManagement/Variants`\nexport const SEATS_URL = `${API_V1}/ticketManagement/Seats`\nexport const BLOCKS_URL = `${API_V1}/ticketManagement/Blocks`\nexport const TRIBUNES_URL = `${API_V1}/ticketManagement/Tribunes`\nexport const OBJECTS_URL = `${API_V1}/ticketManagement/Objects`\nexport const ENGINES_URL = `${API_V1}/deviceManagement/Engines`\nexport const PALMS_URL = `${API_V1}/deviceManagement/Palms`\nexport const COMPANIES_URL = `${API_V1}/Administrator/GetCompaniesByConditions`","import { AuthProvider } from 'react-admin'\nimport { authPost } from '../common/fetch.utils'\nimport { AuthDto } from '../dto/auth.dto'\nimport { AUTH_URL } from '../api-urls'\nimport { AuthRequest } from './auth.request'\n\nconst authProvider: AuthProvider = {\n  login: ({ username, password }) =>\n    authPost<AuthRequest, AuthDto>(AUTH_URL, {\n      login: username,\n      password,\n    }).then(({ token }) => {\n      localStorage.setItem('username', username)\n      localStorage.setItem('token', token)\n    }),\n  logout: () => {\n    localStorage.removeItem('username')\n    localStorage.removeItem('token')\n    return Promise.resolve()\n  },\n  checkError: ({ status }) => {\n    if (status === 401 || status === 403) {\n      localStorage.removeItem('username')\n      localStorage.removeItem('token')\n      return Promise.reject()\n    }\n    return Promise.resolve()\n  },\n  checkAuth: () =>\n    localStorage.getItem('token') ? Promise.resolve() : Promise.reject(),\n  getPermissions: () => Promise.resolve(),\n  getIdentity: () =>\n    Promise.resolve({\n      id: 'user',\n      fullName: localStorage.getItem('username') as string,\n    }),\n}\n\nexport default authProvider\n","import { AccessUsingDto } from \"../dto/access-using.dto\"\n\nconst mapping: Partial<Record<keyof AccessUsingDto, string>> = {\n  id: 'au=>au.Id',\n  date: 'au=>au.Date',\n  direction: 'au=>au.Direction',\n  active: 'au=>au.Active',\n  ticketId: 'au=>au.TicketId',\n  accessId: 'au=>au.AccessId'\n}\n\nexport const mapSortAccessUsingsParam = (key: keyof AccessUsingDto) => mapping[key]","export enum Access {\n  BLOCK = 'BLOCK',\n  UNBLOCK = 'UNBLOCK',\n  DISABLED = 'DISABLED',\n}\n\nexport type ToggleButtonState = {\n  type: Access\n  text: string\n}\n\nexport type Action = { type: Access }\n","import { AccessUsingDto } from \"../dto/access-using.dto\"\n\nconst mapping: Partial<\n  Record<keyof AccessUsingDto, (lambdaParameter: string, value: string | number) => string>\n> = {\n  id: (lambdaParameter, value) => `${(lambdaParameter)}.Id.ToString().Contains(\"${value}\")`,\n  ticketId: (lambdaParameter, value) => `\"${value}\".Contains(${(lambdaParameter)}.TicketId.ToString())`,\n  accessId: (lambdaParameter, value) => `${(lambdaParameter)}.AccessId.ToString().Contains(\"${value}\")`,\n}\n\nexport const getFilterMapper = (key: keyof AccessUsingDto) =>\n  mapping[key] as (lambdaParameter: string, value: string | number) => string\n","import {\n  CreateParams,\n  CreateResult,\n  DataProvider,\n  UpdateManyParams,\n  UpdateManyResult,\n  GetListResult\n} from 'react-admin'\nimport { AccessUsingsCreateParams } from './access-usings-create.params'\nimport { AccessUsingDto } from '../dto/access-using.dto'\nimport { DeviceDirection } from '../enum/DeviceDirection'\nimport { DateTime } from '../common/date-time'\nimport { getWithPagination, patch, post } from '../common/fetch.utils'\nimport { ACCESS_USINGS } from '../api-urls'\nimport { AccessUsingsListParams } from './access-usings-list.params'\nimport { mapSortAccessUsingsParam } from './access-usings-sort.mapper'\nimport { getFilterMapper } from './access-usings-filter.mapper'\n\nconst getFilterParams = (filter: Partial<AccessUsingDto>) => {\n  if (Object.keys(filter).length) {\n    const filterParams = Object.entries(filter).map(([key, value]) => {\n      const mapper = getFilterMapper(key as keyof AccessUsingDto)\n      return mapper(\"au\", value as string)\n    })\n    return filterParams.reduce((p, c) => `${p}&&${c}`)\n  }\n  return \"true\"\n}\n\ntype CreateAccessUsingRequest = Array<\n  Omit<AccessUsingDto, 'id' | 'verifierDeviceId'> & { verifierDeviceId: null }\n>\ntype UpdateAccessUsingRequest = Pick<AccessUsingDto, 'id'> & { active: false }\n\nconst provider = {\n  updateMany: async (\n    resource,\n    { ids, data: { active = false } }: UpdateManyParams,\n  ): Promise<UpdateManyResult> => {\n    const pendingUpdates = ids\n      .map((auId) => ({ id: auId, active } as UpdateAccessUsingRequest))\n      .map((req) =>\n        patch<UpdateAccessUsingRequest, AccessUsingDto>(ACCESS_USINGS, req),\n      )\n    const accessUsings = await Promise.all(pendingUpdates)\n    return Promise.resolve({\n      data: accessUsings.map((au) => au.id),\n    })\n  },\n  create: async (\n    resource,\n    { data }: CreateParams<AccessUsingsCreateParams>,\n  ): Promise<CreateResult> => {\n    const { ticketIds, accessIds } = data\n    const request: CreateAccessUsingRequest = accessIds.flatMap((accessId) =>\n      ticketIds.map((ticketId) => ({\n        date: new Date().toISOString() as DateTime,\n        direction: DeviceDirection.IN,\n        active: true,\n        accessId,\n        ticketId,\n        verifierDeviceId: null,\n      })),\n    )\n    await post<CreateAccessUsingRequest, AccessUsingDto[]>(\n      ACCESS_USINGS,\n      request,\n    )\n    return Promise.resolve({\n      data: { id: 0 }, // need to return something\n    })\n  },\n  getList: async (\n    resource: string,\n    {\n      filter,\n      sort: { field, order },\n      pagination: { page, perPage }\n    }: AccessUsingsListParams\n  ): Promise<GetListResult<AccessUsingDto>> => {\n    const filterParams = `au=>${getFilterParams(filter).toString()}`\n    const queryParams: string[] = []\n    queryParams.push(`sortBy=${mapSortAccessUsingsParam(field)}`)\n    queryParams.push(`sortOrder=${order}`)\n    queryParams.push(`rangeFrom=${page * perPage - perPage}`)\n    queryParams.push(`rangeTo=${page * perPage}`)\n\n    const pathParams = queryParams.reduce((p, c) => `${p}&${c}`)\n    const path = `/${filterParams}?${pathParams}`\n\n    const {\n      data,\n      range: {total}\n    } = await getWithPagination<AccessUsingDto[]>(`${ACCESS_USINGS}/GetByConditions`, path)\n\n    const accessUsings = data.map(({\n      id, date, direction, active, ticketId, accessId, verifierDeviceId\n    }) => ({\n      id, date, direction, active, ticketId, accessId, verifierDeviceId\n    } as AccessUsingDto))\n\n    return Promise.resolve({\n      data: accessUsings,\n      total\n    })\n  }\n} as DataProvider\n\nexport default provider\n","import { BookingDto } from '../dto/booking.dto'\n\nconst mapping: Partial<\n  Record<keyof BookingDto, (lambdaParameter: string, value: string | number) => string>\n> = {\n  id: (lambdaParameter, value) => value?.toString().split(\",\").length > 1 ?\n    `\"${value}\".Contains(${(lambdaParameter)}.Id.ToString())` :\n    `${(lambdaParameter)}.Id==${value}`,\n}\n\nexport const getFilterMapper = (key: keyof BookingDto) =>\n  mapping[key] as (lambdaParameters: string, value: string | number) => string","import { BookingDto } from \"../dto/booking.dto\"\n\nconst mapping: Partial<Record<keyof BookingDto, string>> = {\n  id: 'l=>l.Id',\n}\n\nexport const mapSortBookingParam = (key: keyof BookingDto) => mapping[key]\n","import { BookingDto } from \"../dto/booking.dto\";\nimport { EventDto } from \"../dto/event.dto\";\nimport { Booking } from \"./booking\";\n\nexport const mapToBookings = (\n  {\n    id,\n    type,\n    disabled,\n    activeFrom,\n    activeTo,\n    eventId,\n    seatId,\n    blockId,\n    customerId,\n    variantId,\n    ticketsIds,\n    createdAt,\n    modifiedAt\n  }: BookingDto,\n  events: EventDto[]\n): Booking => {\n  const foundEvent = events.find((event) => event.id === eventId)\n  return({\n    id,\n    type,\n    disabled,\n    activeFrom,\n    activeTo,\n    eventId,\n    seatId,\n    blockId,\n    customerId,\n    variantId,\n    ticketsIds,\n    createdAt,\n    modifiedAt,\n    eventName: foundEvent?.name,\n    eventDateStart: foundEvent?.dateStart\n  })\n}","import { DataProvider, UpdateParams, UpdateResult, GetListResult } from 'react-admin'\nimport { getByConditions, getWithPagination, patch } from '../common/fetch.utils'\nimport { BOOKINGS_URL, EVENTS_URL } from '../api-urls'\nimport { BookingUpdateRequest } from './booking-update.request'\nimport { BookingDto } from '../dto/booking.dto'\nimport { BookingListParams } from './booking-list.params'\nimport { getFilterMapper } from './booking-filter.mapper'\nimport { mapSortBookingParam } from './booking-sort.mapper'\nimport { Booking } from './booking'\nimport { EventDto } from '../dto/event.dto'\nimport { mapToBookings } from './bookings.mapper'\n\nconst getFilterParams = (filter: Partial<BookingDto>) => {\n  if (Object.keys(filter).length) {\n    const filterParams = Object.entries(filter).map(([key, value]) => {\n      const mapper = getFilterMapper(key as keyof BookingDto)\n      return mapper(\"b\", value as string)\n    })\n    return filterParams.reduce((p, c) => `${p}&&${c}`)\n  }\n  return \"true\"\n}\n\nconst provider = {\n  update: async (\n    resource: string,\n    { data }: UpdateParams<BookingUpdateRequest>,\n  ): Promise<UpdateResult<BookingDto>> => {\n    const booking = await patch<BookingUpdateRequest, BookingDto>(\n      BOOKINGS_URL,\n      data,\n    )\n    return Promise.resolve({\n      data: booking,\n    })\n  },\n  getList: async (\n    resource: string,\n    {\n      filter,\n      sort: { field, order },\n      pagination: { page, perPage },\n    }: BookingListParams\n  ): Promise<GetListResult<Booking>> => {\n    const filterParams = `b=>${getFilterParams(filter).toString()}`\n    const queryParams: string [] = []\n    queryParams.push(`sortBy=${mapSortBookingParam(field)}`)\n    queryParams.push(`sortOrder=${order}`)\n    queryParams.push(`rangeFrom=${page * perPage - perPage}`)\n    queryParams.push(`rangeTo=${page * perPage}`)\n\n    const pathParams = queryParams.reduce((p, c) => `${p}&${c}`)\n    const path = `/${filterParams}?${pathParams}`\n\n    const {\n      data,\n    } = await getWithPagination<BookingDto[]>(`${BOOKINGS_URL}/GetByConditions`, path)\n\n    const eventIds = data.map((booking) => booking.eventId)\n    const events = await getByConditions<EventDto>(EVENTS_URL, `e=>\"${eventIds.join()}\".Contains(e.Id.ToString())`)\n\n    return {\n      data: data.map((booking) => mapToBookings(booking, events)),\n      total: data.length\n    }\n  }\n} as DataProvider\n\nexport default provider\n","import { ExtendedLogFilterValues } from './extended-log'\n\nconst mapping: Partial<\n  Record<\n    keyof ExtendedLogFilterValues,\n    (lambdaParameter: string, value: string | number) => string\n  >\n> = {\n  ticketCode: (lambdaParameter, value) => `${(lambdaParameter)}.TicketCode.Contains(\"${value}\")`,\n  bookingId: (lambdaParameter, value) => value?.toString().split(\",\").length > 1 ?\n    `\"${value}\".Contains(${(lambdaParameter)}.BookingId.ToString())` :\n    `${(lambdaParameter)}.BookingId.ToString().Contains(\"${value}\")`,\n  date: (lambdaParameter, value) => `${(lambdaParameter)}.Date > DateTimeOffset.FromUnixTimeMilliseconds(${value.toString().split(';')[0]}).DateTime && l.Date < DateTimeOffset.FromUnixTimeMilliseconds(${value.toString().split(';')[1]}).DateTime`,\n  deviceName: (lambdaParameter, value) => `${(lambdaParameter)}.Device.Name.Contains(\"${value}\")`,\n  text: (lambdaParameter, value) => `${(lambdaParameter)}.Data.Text.Contains(\"${value}\")`,\n  event: (lambdaParameter, value) => `${(lambdaParameter)}.Booking.Event.Name.Contains(\"${value}\")`\n}\n\nexport const getFilterMapper = (key: keyof ExtendedLogFilterValues) =>\n  mapping[key] as (lambdaParameter: string, value: string | number) => string\n","import { ExtendedLog } from './extended-log'\n\nconst mapping: Partial<Record<keyof ExtendedLog, string>> = {\n  id: 'l=>l.Id',\n  date: 'l=>l.Date',\n  deviceName: 'l=>l.Device.Name',\n  ticketCode: 'l=>l.TicketCode',\n  bookingId: 'l=>l.BookingId',\n}\n\nexport const mapSortLogParam = (key: keyof ExtendedLog) => mapping[key]\n","import { ExtendedLog } from './extended-log'\nimport { ExtendedLogDto } from '../dto/extended-log.dto'\n\nexport const mapToExtendedLog = (\n  {\n    id,\n    date,\n    ticketCode,\n    bookingId,\n    scheme,\n    device: { name: deviceName },\n    data,\n  }: ExtendedLogDto,\n  locale: string,\n): ExtendedLog => {\n  const logEntry = data.filter(({ language }) => language.includes(locale))[0]\n  return {\n    id,\n    date,\n    deviceName,\n    ticketCode,\n    text: logEntry?.text || scheme,\n    color: data[0].color || 'transparent',\n    bookingId,\n  }\n}\n","import { DataProvider, GetListResult } from 'react-admin'\nimport { EXTENDED_LOGS_URL } from '../api-urls'\nimport { getWithPagination } from '../common/fetch.utils'\nimport { ExtendedLogDto } from '../dto/extended-log.dto'\nimport { ExtendedLog, ExtendedLogFilterValues } from './extended-log'\nimport { LogListParams } from './log-list.params'\nimport { getFilterMapper } from './log-filter.mapper'\nimport { mapSortLogParam } from './log-sort.mapper'\nimport { mapToExtendedLog } from './extended-logs.mapper'\n\nconst getFilterParams = (\n  partialValues: Partial<ExtendedLogFilterValues>,\n): string => {\n  if (Object.keys(partialValues).length) {\n    const filterParams = Object.entries(partialValues).map(([key, value]) => {\n      const mapper = getFilterMapper(key as keyof ExtendedLogFilterValues)\n      return mapper('l', value as string)\n    })\n    return filterParams.reduce((p, c) => `${p}&&${c}`)\n  }\n  return 'true'\n}\n\nconst provider = {\n  getList: async (\n    resource: string,\n    {\n      filter: { ...partialFilterValues },\n      sort: { field, order },\n      pagination: { page, perPage },\n    }: LogListParams,\n  ): Promise<GetListResult<ExtendedLog>> => {\n    const locale = localStorage.getItem(`${localStorage.getItem('username') as string}.lng`)\n    const filterParams = `l=>${getFilterParams(partialFilterValues)}`\n    const queryParams: string[] = []\n    queryParams.push(`sortBy=${mapSortLogParam(field)}`)\n    queryParams.push(`sortOrder=${order}`)\n    queryParams.push(`rangeFrom=${page * perPage - perPage}`)\n    queryParams.push(`rangeTo=${page * perPage}`)\n\n    const pathParams = queryParams.reduce((p, c) => `${p}&${c}`)\n    const path = `/${filterParams}?${pathParams}`\n\n    const {\n      data,\n      range: { total },\n    } = await getWithPagination<ExtendedLogDto[]>(EXTENDED_LOGS_URL, path)\n    const extendedLogs = data.map((dto) => mapToExtendedLog(dto, locale as string))\n\n    return Promise.resolve({\n      data: extendedLogs,\n      total,\n    })\n  },\n} as DataProvider\n\nexport default provider\n","export const ALL_RESULTS = 'l=>true'\n","import { EventOverallView } from \"./event-overall-view\"\n\nconst mapping: Partial<Record<keyof EventOverallView, string>> = {\n  id: 'e=>e.Id',\n  name: 'e=>e.Name',\n  dateStart: 'e=>e.DateStart',\n  dateEnd: 'e=>e.DateEnd'\n}\n\nexport const mapSortOverallViewParam = (key: keyof EventOverallView) => mapping[key]","import { EventDto } from \"../../dto/event.dto\"\nimport { EventOverallView } from \"./event-overall-view\"\n\nexport const mapToEventOverallView = (\n  event: EventDto\n): EventOverallView => ({\n  id: event.id,\n  name: event.name,\n  dateStart: event.dateStart,\n  dateEnd: event.dateEnd\n})","import { DataProvider, GetListResult } from \"react-admin\"\nimport { EVENTS_URL } from '../../api-urls'\nimport { getWithPagination } from '../../common/fetch.utils'\nimport { ALL_RESULTS } from \"../../common/filter.values\"\nimport { NameFilter } from \"../../common/name.filter\"\nimport { EventDto } from \"../../dto/event.dto\"\nimport { EventOverallView } from \"./event-overall-view\"\nimport { mapSortOverallViewParam } from \"./overall-view-list-sort.mapper\"\nimport { mapToEventOverallView } from \"./overall-view-list.mapper\"\n\nconst provider = {\n  getList: async (\n    resource: string,\n    { filter, sort: { order, field }, pagination: { page, perPage } }: NameFilter,\n  ): Promise<GetListResult<EventOverallView>> => {\n    const queryParams: string[] = []\n    queryParams.push(`sortBy=${mapSortOverallViewParam(field)}`)\n    queryParams.push(`sortOrder=${order}`)\n    queryParams.push(`rangeFrom=${page * perPage - perPage}`)\n    queryParams.push(`rangeTo=${page * perPage}`)\n\n    const pathParams = queryParams.reduce((p, c) => `${p}&${c}`)\n    const path = `${filter.name ? `e=>e.Name.Contains(\"${filter.name}\")` : ALL_RESULTS}?${pathParams}`\n\n    const { data, range: { total } } = await getWithPagination<EventDto[]>(\n      `${EVENTS_URL}/GetByConditions/`, path)\n\n    const overallViewList = data.map((event) => mapToEventOverallView(event))\n\n    return {\n      data: overallViewList,\n      total\n    }\n  },\n} as DataProvider\n\nexport default provider","import { BlockDto } from \"../../dto/block.dto\"\nimport { BookingDto } from \"../../dto/booking.dto\"\nimport { EventDto } from \"../../dto/event.dto\"\nimport { ObjectDto } from \"../../dto/object.dto\"\nimport { SeatDto } from \"../../dto/seat.dto\"\nimport { TribuneDto } from \"../../dto/tribune.dto\"\nimport { BookingType } from \"../../enum/BookingType\"\nimport { BlockOverallView, ObjectOverallView, OverallView, TribuneOverallView } from \"./overall-view\"\n\nconst calculateCapacity = (seats: SeatDto[], bookings: BookingDto[]) => (\n  seats.length + bookings.filter(b => b.seatId == null).length\n)\n\nconst mapToBlockOverallView = (\n  block: BlockDto,\n  seats: SeatDto[],\n  bookings: BookingDto[],\n  enteredBookings: BookingDto[]\n): BlockOverallView => ({\n  id: block.id,\n  name: block.name,\n  capacity: calculateCapacity(seats, bookings),\n  sold: bookings.length,\n  entered: enteredBookings.length,\n  soldNormal: bookings.filter(b => b.type === BookingType.NORMAL).length,\n  enteredNormal: enteredBookings.filter(b => b.type === BookingType.NORMAL).length,\n  soldAbo: bookings.filter(b => b.type === BookingType.ABO).length,\n  enteredAbo: enteredBookings.filter(b => b.type === BookingType.ABO).length,\n  soldInfix: bookings.filter(b => b.type === BookingType.INFIX).length,\n  enteredInfix: enteredBookings.filter(b => b.type === BookingType.INFIX).length,\n  soldService: bookings.filter(b => b.type === BookingType.SERVICE).length,\n  enteredService: enteredBookings.filter(b => b.type === BookingType.SERVICE).length,\n  soldPoints: bookings.filter(b => b.type === BookingType.POINTS).length,\n  enteredPoints: enteredBookings.filter(b => b.type === BookingType.POINTS).length,\n})\n\nconst mapToTribuneOverallView = (\n  tribune: TribuneDto,\n  blocks: BlockDto[],\n  seats: SeatDto[],\n  bookings: BookingDto[],\n  enteredBookingIds: number[]\n): TribuneOverallView => ({\n  id: tribune.id,\n  name: tribune.name,\n  capacity: calculateCapacity(seats, bookings),\n  sold: bookings.length,\n  entered: enteredBookingIds.length,\n  blocks: blocks.filter(b => tribune.blocksIds.includes(b.id))\n    .map((block) => {\n      const filteredSeats = seats.filter((s) => s.blockId === block.id)\n      const filteredBookingIds = block.bookingsIds.concat(filteredSeats.flatMap((s) => s.bookingsIds))\n      const filteredBookings = bookings.filter((book) => filteredBookingIds.includes(book.id))\n      const filteredEnteredBookingIds = enteredBookingIds.filter((enteredBookingId) => filteredBookingIds.includes(enteredBookingId))\n      const filteredEnteredBookings = bookings.filter((book) => filteredEnteredBookingIds.includes(book.id))\n      return mapToBlockOverallView(\n        block,\n        filteredSeats,\n        filteredBookings,\n        filteredEnteredBookings\n      )\n    })\n})\n\nconst mapToObjectOverallView = (\n  object: ObjectDto,\n  tribunes: TribuneDto[],\n  blocks: BlockDto[],\n  seats: SeatDto[],\n  bookings: BookingDto[],\n  enteredBookingIds: number[]\n): ObjectOverallView => ({\n  id: object.id,\n  name: object.name,\n  capacity: calculateCapacity(seats, bookings),\n  sold: bookings.length,\n  entered: enteredBookingIds.length,\n  tribunes: tribunes.filter(t => object.tribunesIds.includes(t.id))\n    .map((tribune) => {\n      const filteredBlocks = blocks.filter((b) => b.tribuneId === tribune.id)\n      const filteredSeatIds = filteredBlocks.flatMap((b) => b.seatsIds)\n      const filteredSeats = seats.filter((s) => filteredSeatIds.includes(s.id))\n      const filteredBookingIds = filteredBlocks.flatMap((b) => b.bookingsIds).concat(filteredSeats.flatMap((s) => s.bookingsIds))\n      const filteredBookings = bookings.filter((book) => filteredBookingIds.includes(book.id))\n      const filteredEnteredBookingIds = enteredBookingIds.filter((enteredBookingId) => filteredBookingIds.includes(enteredBookingId))\n      return mapToTribuneOverallView(\n        tribune,\n        filteredBlocks,\n        filteredSeats,\n        filteredBookings,\n        filteredEnteredBookingIds\n      )\n    })\n})\n\nexport const mapToOverallView = (\n  selectedEvent: EventDto,\n  objects: ObjectDto[],\n  tribunes: TribuneDto[],\n  blocks: BlockDto[],\n  seats: SeatDto[],\n  bookings: BookingDto[],\n  enteredBookingIds: number[]\n): OverallView => ({\n  id: selectedEvent.id,\n  eventName: selectedEvent.name,\n  capacity: calculateCapacity(seats, bookings),\n  sold: bookings.length,\n  entered: enteredBookingIds.length,\n  date: selectedEvent.dateStart,\n  objects: objects.filter(o => selectedEvent.objectsIds.includes(o.id))\n    .map((object) => {\n      const filteredTribunes = tribunes.filter((t) => t.objectId === object.id)\n      const filteredBlocks = blocks.filter((b) => filteredTribunes.flatMap((t) => t.blocksIds).includes(b.id))\n      const filteredSeatIds = filteredBlocks.flatMap((b) => b.seatsIds)\n      const filteredSeats = seats.filter((s) => filteredSeatIds.includes(s.id))\n      const filteredBookingIds = filteredBlocks.flatMap((b) => b.bookingsIds).concat(filteredSeats.flatMap((s) => s.bookingsIds))\n      const filteredBookings = bookings.filter((book) => filteredBookingIds.includes(book.id))\n      const filteredEnteredBookingIds = enteredBookingIds.filter((enteredBookingId) => filteredBookingIds.includes(enteredBookingId))\n      return mapToObjectOverallView(\n        object,\n        filteredTribunes,\n        filteredBlocks,\n        filteredSeats,\n        filteredBookings,\n        filteredEnteredBookingIds\n      )\n    })\n})","import { DataProvider, GetOneParams, GetOneResult } from \"react-admin\"\nimport {\n  BLOCKS_URL,\n  BOOKINGS_URL, EVENTS_URL, OBJECTS_URL, SEATS_URL, TRIBUNES_URL\n} from '../../api-urls'\nimport { get, getByConditions } from '../../common/fetch.utils'\nimport { BlockDto } from \"../../dto/block.dto\"\nimport { BookingDto } from \"../../dto/booking.dto\"\nimport { EventDto } from \"../../dto/event.dto\"\nimport { ObjectDto } from \"../../dto/object.dto\"\nimport { SeatDto } from \"../../dto/seat.dto\"\nimport { TribuneDto } from \"../../dto/tribune.dto\"\nimport { OverallView } from \"./overall-view\"\nimport { mapToOverallView } from \"./overall-view.mapper\"\n\nconst provider = {\n  getOne: async (\n    resource: string,\n    { id: eventId }: GetOneParams\n  ): Promise<GetOneResult<OverallView>> => {\n    const pendingSelectedEvent = get<EventDto>(EVENTS_URL, `/${eventId}`)\n    const pendingObjects = getByConditions<ObjectDto>(OBJECTS_URL, `o=>o.Events.Any(e => e.Id.Equals(${eventId}))?sortBy=o=>o.Name&sortOrder=ASC`)\n    const pendingTribunes = getByConditions<TribuneDto>(TRIBUNES_URL, `t=>t.Object.Events.Any(e => e.Id.Equals(${eventId}))?sortBy=t=>t.Name&sortOrder=ASC`)\n    const pendingBlocks = getByConditions<BlockDto>(BLOCKS_URL, `b=>b.Tribune.Object.Events.Any(e => e.Id.Equals(${eventId}))?sortBy=b=>b.Name&sortOrder=ASC`)\n    const pendingSeats = getByConditions<SeatDto>(SEATS_URL, `s=>s.Block.Tribune.Object.Events.Any(e => e.Id.Equals(${eventId}))`)\n    const bookingsCondition = `b=>b.EventId.Equals(${eventId}) && b.Disabled != TicketAPI.Models.Enums.TicketManagement.BookingDisabledOptions.STORNO`\n    const pendingBookings = getByConditions<BookingDto>(BOOKINGS_URL, bookingsCondition)\n    const pendingEnteredBookings = getByConditions<BookingDto>(BOOKINGS_URL,\n      `${bookingsCondition} && b.Tickets.SelectMany(t => t.AccessUsings).Any(au => au.Active == true && au.Direction.Equals(TicketAPI.Models.Enums.DeviceManagement.DeviceDirections.IN))`)\n\n    const [selectedEvent, objects, tribunes, blocks, seats, bookings, enteredBookingIds] =\n      await Promise.all([\n        pendingSelectedEvent,\n        pendingObjects,\n        pendingTribunes,\n        pendingBlocks,\n        pendingSeats,\n        pendingBookings,\n        Promise.all((await Promise.resolve(pendingEnteredBookings)).map(book => book.id))\n      ])\n\n    const overallViewData =\n      Promise.resolve(\n        mapToOverallView(\n          selectedEvent,\n          objects,\n          tribunes,\n          blocks,\n          seats,\n          bookings,\n          enteredBookingIds\n        ))\n\n    return {\n      data: await overallViewData\n    }\n  },\n} as DataProvider\n\nexport default provider","export const buildFilterByIdsCondition = (ids: number[]): string => {\n  const [firstId, ...restIds] = ids\n  return (restIds || []).reduce(\n    (prev, curr) => `${prev as string}||v.Id==${curr}`,\n    `v=>v.Id==${firstId}`,\n  )\n}\n","export const toMapById = <T extends { id: number }>(values: T[]) =>\n  new Map(values.map((v): [number, T] => [v.id, v]))\n\nexport const toUniqueValues = (values: number[]) => Array.from(new Set(values))\n","import { CustomerDto } from '../dto/customer.dto'\nimport { EventDto } from '../dto/event.dto'\nimport { TicketDto } from '../dto/ticket.dto'\nimport { VariantDto } from '../dto/variant.dto'\nimport { TicketDetails } from './ticket-details'\nimport { BookingDto } from '../dto/booking.dto'\nimport { AccessUsingDto } from '../dto/access-using.dto'\nimport { Ticket } from './ticket'\nimport { toMapById } from '../common/mapper.utils'\n\nconst mapToTicket = (\n  { id, ticketCode, ticketType, createdAt, accessUsingsIds }: TicketDto,\n  accessUsingById: Map<number, AccessUsingDto>,\n): Ticket => ({\n  id,\n  ticketCode,\n  ticketType,\n  createdAt,\n  accessUsings: accessUsingsIds.map(\n    (auId) => accessUsingById.get(auId) as AccessUsingDto,\n  ),\n})\n\nexport const mapToTicketDetails = (\n  {\n    id: bookingId,\n    disabled: bookingDisabled,\n    type: bookingType,\n    activeFrom,\n    activeTo,\n    createdAt,\n    modifiedAt,\n    seatId,\n    blockId\n  }: BookingDto,\n  {\n    firstname,\n    lastname,\n    pesel,\n    company,\n    birthdate,\n    documentType,\n    documentNumber,\n    nationality,\n    gender\n  }: CustomerDto,\n  { name: eventName }: EventDto,\n  { name: variantName, accessesIds }: VariantDto,\n  tickets: TicketDto[],\n  accessUsings: AccessUsingDto[],\n): TicketDetails => {\n  const accessUsingById = toMapById(accessUsings)\n  return {\n    id: bookingId,\n    firstname,\n    lastname,\n    eventName,\n    pesel,\n    variantName,\n    accessesIds,\n    bookingType,\n    activeFrom,\n    activeTo,\n    tickets: tickets.map((t) => mapToTicket(t, accessUsingById)),\n    createdAt,\n    modifiedAt,\n    bookingDisabled,\n    company,\n    birthdate,\n    documentType,\n    documentNumber,\n    nationality,\n    gender,\n    seatId,\n    blockId\n  }\n}\n","import { DataProvider, GetOneParams, GetOneResult } from 'react-admin'\nimport {\n  ACCESS_USINGS,\n  BOOKINGS_URL,\n  CUSTOMERS_URL,\n  EVENTS_URL,\n  TICKETS_URL,\n  VARIANTS_URL,\n} from '../api-urls'\nimport { get, getByConditions } from '../common/fetch.utils'\nimport { BookingDto } from '../dto/booking.dto'\nimport { TicketDto } from '../dto/ticket.dto'\nimport { CustomerDto } from '../dto/customer.dto'\nimport { EventDto } from '../dto/event.dto'\nimport { buildFilterByIdsCondition } from '../common/condition.builder'\nimport { mapToTicketDetails } from './ticket-details.mapper'\nimport { VariantDto } from '../dto/variant.dto'\nimport { TicketDetails } from './ticket-details'\nimport { toUniqueValues } from '../common/mapper.utils'\nimport { AccessUsingDto } from '../dto/access-using.dto'\n\nconst fetchTicketsWithAccessUsings = async (ticketIds: number[]) => {\n  const tickets = await getByConditions<TicketDto>(\n    TICKETS_URL,\n    buildFilterByIdsCondition(ticketIds),\n  )\n  const accessUsingIds = tickets.flatMap((t) => t.accessUsingsIds)\n  const accessUsings = accessUsingIds.length\n    ? await getByConditions<AccessUsingDto>(\n      ACCESS_USINGS,\n      buildFilterByIdsCondition(toUniqueValues(accessUsingIds)),\n    )\n    : []\n  return {\n    tickets,\n    accessUsings,\n  }\n}\n\nconst provider = {\n  getOne: async (\n    resource: string,\n    { id: bookingId }: GetOneParams,\n  ): Promise<GetOneResult<TicketDetails>> => {\n    const booking = await get<BookingDto>(BOOKINGS_URL, `/${bookingId}`)\n    const { customerId, eventId, variantId } = booking\n    const pendingCustomer = get<CustomerDto>(CUSTOMERS_URL, `/${customerId}`)\n    const pendingEvent = get<EventDto>(EVENTS_URL, `/${eventId}`)\n    const pendingVariant = get<VariantDto>(VARIANTS_URL, `/${variantId}`)\n    const pendingTicketsWithAccessUsings = fetchTicketsWithAccessUsings(\n      booking.ticketsIds,\n    )\n    const [customer, event, variant, { tickets, accessUsings }] =\n      await Promise.all([\n        pendingCustomer,\n        pendingEvent,\n        pendingVariant,\n        pendingTicketsWithAccessUsings,\n      ])\n\n    return {\n      data: mapToTicketDetails(\n        booking,\n        customer,\n        event,\n        variant,\n        tickets,\n        accessUsings,\n      ),\n    }\n  },\n} as DataProvider\n\nexport default provider\n","import { CustomerDto } from '../dto/customer.dto'\nimport { EventDto } from '../dto/event.dto'\nimport { TicketDto } from '../dto/ticket.dto'\nimport { TicketInfo } from './ticket-info'\nimport { BookingDto } from '../dto/booking.dto'\nimport { toMapById } from '../common/mapper.utils'\n\nexport const mapToTicketBaseInfo = (\n  { firstname, lastname, pesel }: CustomerDto,\n  { id: eventId, name: eventName, dateStart: eventDate }: EventDto,\n  { bookingId, ticketCode, ticketType }: TicketDto,\n): TicketInfo => ({\n  id: bookingId,\n  firstname,\n  lastname,\n  pesel,\n  eventId,\n  eventName,\n  eventDate,\n  ticketCode,\n  ticketType,\n})\n\nexport const mapToTicketBaseInfoList = (\n  bookings: BookingDto[],\n  customers: CustomerDto[],\n  events: EventDto[],\n  tickets: TicketDto[],\n): TicketInfo[] => {\n  const bookingById = toMapById(bookings)\n  const customerById = toMapById(customers)\n  const eventById = toMapById(events)\n  return tickets.map((ticket) => {\n    const { customerId, eventId } = bookingById.get(\n      ticket.bookingId,\n    ) as BookingDto\n    const customer = customerById.get(customerId) as CustomerDto\n    const event = eventById.get(eventId) as EventDto\n    return mapToTicketBaseInfo(customer, event, ticket)\n  })\n}\n","import { DataProvider, GetListResult } from 'react-admin'\nimport {\n  BOOKINGS_URL,\n  CUSTOMERS_URL,\n  EVENTS_URL,\n  TICKETS_URL,\n} from '../api-urls'\nimport { getByConditions } from '../common/fetch.utils'\nimport { BookingDto } from '../dto/booking.dto'\nimport { TicketInfo } from './ticket-info'\nimport { TicketDto } from '../dto/ticket.dto'\nimport { CustomerDto } from '../dto/customer.dto'\nimport { EventDto } from '../dto/event.dto'\nimport { mapToTicketBaseInfoList } from './ticket-info.mapper'\nimport { buildFilterByIdsCondition } from '../common/condition.builder'\nimport { TicketCodeFilter } from '../common/ticket-code.filter'\nimport { toUniqueValues } from '../common/mapper.utils'\n\nconst getByUniqueIds = <T>(baseUrl: string, ids: number[]): Promise<T[]> => {\n  const uniqueIds = toUniqueValues(ids)\n  return getByConditions<T>(baseUrl, buildFilterByIdsCondition(uniqueIds))\n}\n\nconst provider = {\n  getList: async (\n    resource: string,\n    { filter }: TicketCodeFilter,\n  ): Promise<GetListResult<TicketInfo>> => {\n    const filterByTicketCodeCondition = `t=>t.TicketCode==\"${filter.ticketCode}\"`\n    const tickets = await getByConditions<TicketDto>(\n      TICKETS_URL,\n      filterByTicketCodeCondition,\n    )\n\n    const bookingIds = tickets.map((v) => v.bookingId)\n    const bookings = await getByUniqueIds<BookingDto>(BOOKINGS_URL, bookingIds)\n\n    const customerIds = bookings.map((v) => v.customerId)\n    const eventIds = bookings.map((v) => v.eventId)\n\n    const pendingCustomers = getByUniqueIds<CustomerDto>(\n      CUSTOMERS_URL,\n      customerIds,\n    )\n    const pendingEvents = getByUniqueIds<EventDto>(EVENTS_URL, eventIds)\n    const [customers, events] = await Promise.all([\n      pendingCustomers,\n      pendingEvents,\n    ])\n\n    const ticketBaseInfoList = mapToTicketBaseInfoList(\n      bookings,\n      customers,\n      events,\n      tickets,\n    )\n    return Promise.resolve({\n      data: ticketBaseInfoList,\n      total: ticketBaseInfoList.length,\n    })\n  },\n} as DataProvider\n\nexport default provider\n","import { DataProvider, GetListResult } from 'react-admin'\nimport { getByConditions } from '../common/fetch.utils'\nimport { TICKETS_URL } from '../api-urls'\nimport { TicketCodeFilter } from '../common/ticket-code.filter'\nimport { TicketDto } from '../dto/ticket.dto'\n\nconst provider = {\n  getList: async (\n    resource: string,\n    { filter }: TicketCodeFilter,\n  ): Promise<GetListResult<TicketDto>> => {\n    const filterByTicketCodeCondition = `t=>t.TicketCode==\"${filter.ticketCode}\"`\n    const tickets = await getByConditions<TicketDto>(\n      TICKETS_URL,\n      filterByTicketCodeCondition,\n    )\n    return Promise.resolve({\n      data: tickets,\n      total: tickets.length,\n    })\n  },\n} as DataProvider\n\nexport default provider\n","import { Access } from './access'\n\nconst mapping: Partial<\n  Record<\n    keyof Access,\n    (lambdaParameter: string, value: string | number) => string\n  >\n> = {\n  id: (lambdaParameter, value) => {\n    if (value.toString().split(',').length > 1)\n      return `[${value}].Contains(${lambdaParameter}.Id)`\n    return `${lambdaParameter}.Id==${value}`\n  },\n}\n\nexport const getFilterMapper = (key: keyof Access) =>\n  mapping[key] as (lambdaParameter: string, value: string | number) => string\n","import { Access } from './access'\n\nconst mapping: Partial<Record<keyof Access, string>> = {\n  id: 'a=>a.Id',\n}\n\nexport const mapSortAccessParam = (key: keyof Access) => mapping[key]\n","import {\n  DataProvider,\n  GetListResult,\n  GetOneParams,\n  GetOneResult,\n} from 'react-admin'\nimport { ACCESSES_URL } from '../api-urls'\nimport { getWithPagination, get } from '../common/fetch.utils'\nimport { AccessDto } from '../dto/access.dto'\nimport { Access } from './access'\nimport { getFilterMapper } from './access-filter.mapper'\nimport { mapSortAccessParam } from './access-sort.mapper'\nimport { AccessParams } from './access.params'\n\nconst getFilterParams = (filter: Partial<Access>) => {\n  if (Object.keys(filter).length) {\n    const filterParams = Object.entries(filter).map(([key, value]) => {\n      const mapper = getFilterMapper(key as keyof Access)\n      return mapper('a', value as string)\n    })\n    return filterParams.reduce((p, c) => `${p}&&${c}`)\n  }\n  return 'true'\n}\n\nconst provider = {\n  getList: async (\n    resource: string,\n    {\n      filter,\n      sort: { field, order },\n      pagination: { page, perPage },\n    }: AccessParams,\n  ): Promise<GetListResult<Access>> => {\n    const filterParams = `a=>${getFilterParams(filter).toString()}`\n    const queryParams: string[] = []\n    queryParams.push(`sortBy=${mapSortAccessParam(field)}`)\n    queryParams.push(`sortOrder=${order}`)\n    queryParams.push(`rangeFrom=${page * perPage - perPage}`)\n    queryParams.push(`rangeTo=${page * perPage}`)\n\n    const pathParams = queryParams.reduce((p, c) => `${p}&${c}`)\n    const path = `/${filterParams}?${pathParams}`\n\n    const { data } = await getWithPagination<AccessDto[]>(\n      `${ACCESSES_URL}/GetByConditions`,\n      path,\n    )\n    const accesses = data.map(\n      ({\n        id,\n        name,\n        bonus,\n        entranceId,\n        allowReenter,\n        multipleEntry,\n        multiple,\n        usePriority,\n        isTicketUnlockWithNextDay,\n        releaseTime,\n        releaseDayOfWeek,\n        releaseDayOfMonth,\n        delay,\n        activePeriod,\n        activePeriodStartingFrom,\n        variantsIds,\n        accessDatesIds,\n        createdById,\n        modifiedById,\n        createdAt,\n        modifiedAt,\n      }) =>\n        ({\n          id,\n          name,\n          bonus,\n          entranceId,\n          allowReenter,\n          multipleEntry,\n          multiple,\n          usePriority,\n          isTicketUnlockWithNextDay,\n          releaseTime,\n          releaseDayOfWeek,\n          releaseDayOfMonth,\n          delay,\n          activePeriod,\n          activePeriodStartingFrom,\n          variantsIds,\n          accessDatesIds,\n          createdById,\n          modifiedById,\n          createdAt,\n          modifiedAt,\n        } as Access),\n    )\n\n    return Promise.resolve({\n      data: accesses,\n      total: accesses.length,\n    })\n  },\n  getOne: async (\n    resource: string,\n    { id }: GetOneParams,\n  ): Promise<GetOneResult<Access>> => {\n    const access = await get<AccessDto>(ACCESSES_URL, `/${id}`)\n    return {\n      data: access,\n    }\n  },\n} as DataProvider\n\nexport default provider\n","import { Event } from './event'\n\nconst mapping: Partial<Record<keyof Event, string>> = {\n  id: 'e=>e.Id',\n  name: 'e=>e.Name',\n  dateStart: 'e=>e.DateStart',\n  dateEnd: 'e=>e.DateEnd'\n}\n\nexport const mapSortEventParam = (key: keyof Event) => mapping[key]\n","import { DataProvider, GetListResult, GetOneParams, GetOneResult, UpdateParams, UpdateResult, GetListParams } from \"react-admin\"\nimport { COMPANIES_URL, ENGINES_URL, EVENTS_URL, OBJECTS_URL, PALMS_URL } from \"../api-urls\"\nimport { get, patch, put, getWithPagination, getByConditions } from \"../common/fetch.utils\"\nimport { ALL_RESULTS } from \"../common/filter.values\"\nimport { EventDto } from \"../dto/event.dto\"\nimport { Event } from \"./event\"\nimport { Attachment, ShowEvent } from \"./event-show\"\nimport { PalmDto } from '../dto/palm.dto'\nimport { EngineDto } from \"../dto/engine.dto\"\nimport { ObjectDto } from \"../dto/object.dto\"\nimport { CompanyDto } from \"../dto/company.dto\"\nimport { EventDevices } from \"../dto/event-devices.dto\"\nimport { EventCompanies } from \"../dto/event-companies.dto\"\nimport { DateTime } from \"../common/date-time\"\nimport { EventStatus } from \"../enum/EventStatus\"\nimport { mapSortEventParam } from './event-sort.mapper'\n\ntype EventUpdateRequest = {\n  id: number,\n  name?: string,\n  dateStart?: DateTime,\n  dateEnd?: DateTime,\n  status?: EventStatus\n}\n\ninterface EventListParams extends GetListParams {\n  readonly sort: {\n    readonly field: keyof Event\n    readonly order: 'ASC' | 'DESC'\n  }\n  readonly filter:\n  {\n    readonly name: string\n  }\n}\n\nconst provider = {\n  getList: async (\n    resource: string,\n    {\n      filter: { name },\n      sort: { field, order },\n      pagination: { page, perPage }\n    }: EventListParams,\n  ): Promise<GetListResult<Event>> => {\n    const queryParams: string[] = []\n    queryParams.push(`sortBy=${mapSortEventParam(field)}`)\n    queryParams.push(`sortOrder=${order}`)\n    queryParams.push(`rangeFrom=${page * perPage - perPage}`)\n    queryParams.push(`rangeTo=${page * perPage}`)\n    const pathParams = queryParams.reduce((p, c) => `${p}&${c}`)\n    const { data: events, range: { total } } = await getWithPagination<EventDto[]>(`${EVENTS_URL}/GetByConditions/`, `${name ? `e=>e.Name.Contains(\"${name}\")` : ALL_RESULTS}?${pathParams}`)\n\n    const data = events.map((event) => ({\n      id: event.id,\n      name: event.name,\n      dateStart: event.dateStart,\n      dateEnd: event.dateEnd,\n      status: event.status\n    }))\n\n    return Promise.resolve({\n      data,\n      total\n    })\n  },\n  getOne: async (\n    resource: string,\n    { id }: GetOneParams\n  ): Promise<GetOneResult<ShowEvent>> => {\n    const event = await get<EventDto>(EVENTS_URL, `/${id}`)\n\n    const palms = await getByConditions<PalmDto>(PALMS_URL, `p=>true`)\n    const engines = await getByConditions<EngineDto>(ENGINES_URL, `e=>true`)\n    const objects = await getByConditions<ObjectDto>(OBJECTS_URL, `o=>true`)\n    const companies = await get<CompanyDto[]>(COMPANIES_URL, `/c=>true`)\n\n    const linkedDevices = await get<EventDevices>(EVENTS_URL, `/GetDevices/${event.id}`)\n    const linkedCompanies = await get<EventCompanies>(EVENTS_URL, `/GetCompanies/${event.id}`)\n\n    return {\n      data: {\n        id: event.id,\n        name: event.name,\n        dateStart: event.dateStart,\n        dateEnd: event.dateEnd,\n        status: event.status,\n        devices: palms.map((palm) =>\n        ({\n          id: palm.id,\n          name: palm.name,\n          linked: linkedDevices.verifierDevicesIds.includes(palm.id),\n          categoryId: palm.categoryId,\n          type: 'palm' as 'palm' | 'engine'\n        })).concat(engines.map((engine) =>\n        ({\n          id: engine.id,\n          name: engine.name,\n          linked: linkedDevices.verifierDevicesIds.includes(engine.id),\n          categoryId: engine.categoryId,\n          type: 'engine' as 'palm' | 'engine'\n        }))),\n        objects: objects.map((object) => ({ id: object.id, name: object.name, linked: event.objectsIds.includes(object.id) })),\n        companies: companies.map((company) => ({ id: company.id, name: company.name, linked: linkedCompanies.companiesIds.includes(company.id) }))\n      }\n    }\n  },\n  update: async (\n    resource,\n    { id, data, previousData }: UpdateParams\n  ): Promise<UpdateResult> => {\n    const { status: previousStatus, devices: previousDevices, objects: previousObjects, companies: previousCompanies } = previousData\n    const { name, dateStart, dateEnd, status, devices, objects, companies } = data\n\n    const pendingUpdate = patch<EventUpdateRequest, EventDto>(EVENTS_URL, {\n      id: parseInt(id as string, 10),\n      name,\n      dateStart: new Date(new Date(dateStart).getTime() - (new Date(dateStart).getTimezoneOffset() * 60000)).toJSON() as DateTime,\n      dateEnd: new Date(new Date(dateEnd).getTime() - (new Date(dateEnd).getTimezoneOffset() * 60000)).toJSON() as DateTime\n    })\n\n    if (previousStatus !== status) {\n      if (status === EventStatus.ACTIVE) put<undefined, { \"jobId\": string }>\n        (`${EVENTS_URL}/ActivateAsyncJob/${id}`, undefined)\n      else put<undefined, { \"jobId\": string }>\n        (`${EVENTS_URL}/DeactivateAsyncJob/${id}`, undefined)\n    }\n\n    if (previousDevices.filter((device: Attachment) => device.linked).length !== devices.filter((device: Attachment) => device.linked).length)\n      put<{ \"eventId\": number, \"verifierDevicesIds\": number[] }, { \"eventId\": number, \"verifierDevicesIds\": number[] }>\n        (`${EVENTS_URL}/SetDevices`, { \"eventId\": id as number, \"verifierDevicesIds\": devices.filter((device: Attachment) => device.linked).map((device: Attachment) => device.id) })\n\n    if (previousObjects.filter((object: Attachment) => object.linked).length !== objects.filter((object: Attachment) => object.linked).length)\n      put<{ \"eventId\": number, \"objectsIds\": number[] }, { \"eventId\": number, \"objectsIds\": number[] }>\n        (`${EVENTS_URL}/SetObjects`, { \"eventId\": id as number, \"objectsIds\": objects.filter((object: Attachment) => object.linked).map((object: Attachment) => object.id) })\n\n    if (previousCompanies.filter((company: Attachment) => company.linked).length !== companies.filter((company: Attachment) => company.linked).length)\n      put<{ \"eventId\": number, \"companiesIds\": number[] }, { \"eventId\": number, \"companiesIds\": number[] }>\n        (`${EVENTS_URL}/SetCompanies`, { \"eventId\": id as number, \"companiesIds\": companies.filter((company: Attachment) => company.linked).map((company: Attachment) => company.id) })\n\n    const event = await pendingUpdate\n    return Promise.resolve({\n      data: event\n    })\n  }\n} as DataProvider\n\nexport default provider","import { DataProvider, GetOneParams, GetOneResult } from \"react-admin\"\nimport { CustomerDetails } from \"./customer-details\"\nimport { CustomerDto } from \"../dto/customer.dto\"\nimport { CUSTOMERS_URL } from \"../api-urls\"\nimport { get } from '../common/fetch.utils'\n\nconst provider = {\n  getOne: async (\n    resource: string,\n    { id: customerId }: GetOneParams,\n  ): Promise<GetOneResult<CustomerDetails>> => {\n    const customer = await get<CustomerDto>(CUSTOMERS_URL, `/${customerId}`)\n    return {\n      data: customer as CustomerDetails\n    }\n  }\n} as DataProvider\n\nexport default provider","import { CustomerInfo } from './customer-info'\n\nconst mapping: Partial<Record<keyof CustomerInfo, string>> = {\n  id: 'c=>c.Id',\n  firstname: 'c=>c.Firstname',\n  lastname: 'c=>c.Lastname',\n  pesel: 'c=>c.Pesel',\n  documentNumber: 'c=>c.DocumentNumber'\n}\n\nexport const mapSortCustomerParams = (key: keyof CustomerInfo) => mapping[key]","import { GetListResult, DataProvider } from \"react-admin\";\nimport { CUSTOMERS_URL } from \"../api-urls\";\nimport { getWithPagination } from \"../common/fetch.utils\";\nimport { CustomerDto } from \"../dto/customer.dto\";\nimport { CustomerInfo } from \"./customer-info\";\nimport { mapSortCustomerParams } from \"./customer-info-sort.mapper\";\nimport { CustomerInfoFilter } from \"./customer-info.params\";\n\nconst provider = {\n  getList: async (\n    resource: string,\n    { filter, sort, pagination }: CustomerInfoFilter\n  ): Promise<GetListResult<CustomerInfo>> => {\n    const queryParams: string[] = []\n    if (!!pagination && !!sort) {\n      queryParams.push(`sortBy=${mapSortCustomerParams(sort.field)}`)\n      queryParams.push(`sortOrder=${sort.order}`)\n      queryParams.push(`rangeFrom=${pagination.page * pagination.perPage - pagination.perPage}`)\n      queryParams.push(`rangeTo=${pagination.page * pagination.perPage}`)\n    }\n    else queryParams.push('')\n    const pathParams = queryParams.reduce((p, c) => `${p}&${c}`)\n\n    const filterByCustomerInfoCondition = `c=>${filter.info.split(\" \").map((q) =>\n      `(c.Firstname+c.Lastname+c.Pesel+c.DocumentNumber).Contains(\"${q}\")`).join(\"&&\")}`\n\n    const { data, range: { total } } = await getWithPagination<CustomerDto[]>(\n      `${CUSTOMERS_URL}/GetByConditions/`,\n      `${filterByCustomerInfoCondition}?${pathParams}`\n    )\n\n    return Promise.resolve({\n      data,\n      total\n    })\n  }\n} as DataProvider\n\nexport default provider","import { DataProvider, sanitizeFetchType } from 'react-admin'\nimport accessUsingsProvider from './access-usings/access-usings.provider'\nimport bookingsProvider from './bookings/bookings.provider'\nimport logsProvider from './logs/extended-logs.provider'\nimport { ResourceName } from './ResourceName'\nimport statsOverallViewListProvider from './stats/overall-view/overall-view-list.provider'\nimport statsOverallViewProvider from './stats/overall-view/overall-view.provider'\nimport ticketDetailsProvider from './ticket-details/ticket-details.provider'\nimport ticketInfoProvider from './ticket-info/ticket-info.provider'\nimport ticketsProvider from './tickets/tickets.provider'\nimport accessesProvider from './accesses/access.provider'\nimport eventsProvider from './events/event.provider'\nimport customersDetailsProvider from './customer-details/customer-details.provider'\nimport customersInfoProvider from './customer-info/customer-info.provider'\n\nconst dataProviders: Record<ResourceName, DataProvider> = {\n  [ResourceName.ACCESSES]: accessesProvider,\n  [ResourceName.ACCESS_USINGS]: accessUsingsProvider,\n  [ResourceName.BOOKINGS]: bookingsProvider,\n  [ResourceName.CUSTOMER_DETAILS]: customersDetailsProvider,\n  [ResourceName.CUSTOMER_INFO]: customersInfoProvider,\n  [ResourceName.EVENTS]: eventsProvider,\n  [ResourceName.LOGS]: logsProvider,\n  [ResourceName.TICKETS]: ticketsProvider,\n  [ResourceName.TICKET_INFO]: ticketInfoProvider,\n  [ResourceName.TICKET_DETAILS]: ticketDetailsProvider,\n  [ResourceName.TICKET_LOGS]: logsProvider,\n  [ResourceName.STATS_OVERALL_VIEW]: statsOverallViewProvider,\n  [ResourceName.STATS_OVERALL_VIEW_LIST]: statsOverallViewListProvider,\n}\n\nexport default (\n  fetchType: string,\n  resource: string,\n  params: unknown,\n): Promise<unknown> => {\n  const selectedProvider = dataProviders[resource as ResourceName]\n  const type = sanitizeFetchType(fetchType)\n  return selectedProvider[type](resource, params)\n}\n","import i18n from 'i18next'\n\nconst provider = {\n  translate: (key: string, options: any): string => i18n.t(key, options),\n  changeLocale: async (locale: string): Promise<void> => {\n    const identity = localStorage.getItem('username') as string\n    localStorage.setItem(`${identity}.lng`, locale)\n    await i18n.changeLanguage(locale)\n  },\n  getLocale: (): string => i18n.language,\n}\n\nexport default provider","import { defaultTheme } from 'react-admin'\nimport { deepPurple, green } from '@material-ui/core/colors'\nimport { ThemeOptions } from '@material-ui/core'\n\nconst overriddenTheme: ThemeOptions = {\n  ...defaultTheme,\n  typography: {\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Arial',\n      'sans-serif',\n    ].join(','),\n    body1: {\n      fontWeight: 300,\n    },\n    body2: {\n      fontWeight: 300,\n    },\n    h5: {\n      fontWeight: 200,\n    },\n  },\n}\n\nexport const LightTheme: ThemeOptions = {\n  ...overriddenTheme,\n  palette: {\n    primary: deepPurple,\n    secondary: green,\n    type: 'light'\n  },\n}\n\nexport const DarkTheme: ThemeOptions = {\n  ...overriddenTheme,\n  palette: {\n    primary: {\n      light: deepPurple[100],\n      main: deepPurple[200],\n      dark: deepPurple[300],\n      contrastText: '#F1F1F1'\n    },\n    secondary: green,\n    type: 'dark'\n  },\n\n}","import { MenuItem, Collapse, Tooltip, ListItemIcon, Typography, List } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ExpandMore } from '@material-ui/icons';\nimport React, { ReactElement, ReactNode } from 'react';\nimport { useSelector } from 'react-redux';\nimport { ReduxState } from 'react-admin';\n\nconst useStyles = makeStyles(theme => ({\n  icon: {\n    minWidth: theme.spacing(5)\n  },\n  sidebarIsOpen: {\n    '& a': {\n      transition: 'padding-left 195ms cubic-bezier(0.4, 0, 0.6, 1) 0ms',\n      paddingLeft: theme.spacing(4),\n    },\n  },\n  sidebarIsClosed: {\n    '& a': {\n      transition: 'padding-left 195ms cubic-bezier(0.4, 0, 0.6, 1) 0ms',\n      paddingLeft: theme.spacing(2),\n    },\n  },\n}));\n\ninterface SubMenuProps {\n  handleToggle: () => void\n  icon: ReactElement\n  isOpen: boolean\n  name: string\n  children: ReactNode\n}\n\nexport const SubMenu = (props: SubMenuProps) => {\n  const { handleToggle, icon, isOpen, name, children } = props\n  const sidebarOpen = useSelector((state: ReduxState) => state?.admin.ui.sidebarOpen)\n  const classes = useStyles()\n\n  const header = (\n    <MenuItem button onClick={handleToggle}>\n      <ListItemIcon className={classes.icon}>\n        {isOpen ? <ExpandMore /> : icon}\n      </ListItemIcon>\n      <Typography variant=\"inherit\" color=\"textSecondary\">\n        {name}\n      </Typography>\n    </MenuItem>\n  )\n\n  return (\n    <>\n      {sidebarOpen || isOpen ? (\n        header\n      ) : (\n        <Tooltip title={name} placement=\"right\">\n          {header}\n        </Tooltip>\n      )}\n      <Collapse in={isOpen} timeout=\"auto\" unmountOnExit>\n        <List\n          component=\"div\"\n          disablePadding\n          className={sidebarOpen ? classes.sidebarIsOpen : classes.sidebarIsClosed}>\n          {children}\n        </List>\n      </Collapse>\n    </>\n  )\n}\n","import { makeStyles } from '@material-ui/core/styles';\nimport { ViewComfy, Receipt, List, Sort, Person, Event } from '@material-ui/icons';\nimport React, { useState } from 'react';\nimport { DashboardMenuItem, MenuItemLink, useTranslate, ReduxState } from 'react-admin';\nimport { useSelector } from 'react-redux';\nimport { SubMenu } from './AppSubmenu';\n\nconst useStyles = makeStyles({\n  open: {\n    width: \"240px\",\n  },\n  closed: {\n    width: \"55px\"\n  },\n});\n\nexport const AppMenu = () => {\n  const sidebarOpen = useSelector((state: ReduxState) => state.admin.ui.sidebarOpen)\n  const theme = useStyles()\n  const [open, setOpen] = useState({\n    menuStats: true\n  })\n  const translate = useTranslate()\n\n  const handleToggle = (menu: \"menuStats\") => setOpen(state => ({ ...state, [menu]: !state[menu] }))\n\n  return (\n    <div\n      style={{ userSelect: \"none\" }}\n      className={sidebarOpen ? theme.open : theme.closed}>\n      <DashboardMenuItem />\n      <MenuItemLink\n        to=\"/ticket-info\"\n        primaryText={translate('resources.ticket-info.name')}\n        leftIcon={<Receipt />} />\n      <MenuItemLink\n        to=\"/customer-info\"\n        primaryText={translate('resources.customer-info.name')}\n        leftIcon={<Person />} />\n      <MenuItemLink\n        to=\"/logs\"\n        primaryText={translate('resources.logs.name')}\n        leftIcon={<List />} />\n      <MenuItemLink\n        to=\"/events\"\n        primaryText={translate('resources.events.name')}\n        leftIcon={<Event />} />\n      <SubMenu\n        handleToggle={() => handleToggle(\"menuStats\")}\n        isOpen={open.menuStats}\n        name={translate('side-menu.stats.name')}\n        icon={<ViewComfy />}>\n        <MenuItemLink\n          to=\"/stats-overall-view-list\"\n          primaryText={translate('side-menu.stats.overall-view')}\n          leftIcon={<Sort style={{ transform: \"scaleX(-1)\" }} />} />\n      </SubMenu>\n    </div>\n  )\n}","import { Typography } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Settings } from '@material-ui/icons'\nimport React from 'react'\nimport { AppBar, AppBarProps, CoreLayoutProps, Layout, UserMenu, UserMenuProps, MenuItemLink, useTranslate } from 'react-admin'\nimport { useSelector } from 'react-redux'\nimport { DarkTheme, LightTheme } from '../../app.theme'\nimport { ThemeState } from '../../core/common/theme.reducer'\nimport { AppMenu } from './AppMenu'\n\nconst useStyles = makeStyles({\n  title: {\n    flex: 1,\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n  },\n})\n\nconst AppUserMenu = (props: UserMenuProps) => {\n  const translate = useTranslate()\n  return (\n    <UserMenu {...props}>\n      <MenuItemLink\n        to=\"/configuration\"\n        primaryText={translate(\"settings.name\")}\n        leftIcon={<Settings />} />\n    </UserMenu>\n  )\n}\n\nconst AppTopBar = (props: AppBarProps) => {\n  const classes = useStyles()\n  return (\n    <AppBar {...props} userMenu={<AppUserMenu />}>\n      <Typography\n        variant=\"h6\"\n        className={classes.title}\n        id=\"react-admin-title\"\n      />\n    </AppBar>\n  )\n}\n\nexport const AppLayout = (props: CoreLayoutProps) => {\n  const theme = useSelector((state: ThemeState) =>\n    state.theme.darkMode === 'dark' ? DarkTheme : LightTheme,\n  )\n\n  return (\n    <Layout\n      {...props}\n      menu={AppMenu}\n      appBar={AppTopBar}\n      theme={theme} />)\n}\n","import * as React from 'react'\nimport { useListContext } from 'react-admin';\nimport { Button, Toolbar, Grid, Paper, ButtonGroup, Select, MenuItem } from '@material-ui/core';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\n\nexport const MobilePostPagination = () => {\n  const { page, perPage, total, setPage, setPerPage } = useListContext();\n  const nbPages = Math.ceil(total / perPage) || 1;\n  return (\n      nbPages > 1 ?\n        <Toolbar>\n          <Grid container>\n            <Grid item xs={3}>\n            <Paper elevation={0}\n              style={{height: '100%', display: 'flex', flexDirection: 'row', justifyContent: 'flex-end', alignItems: 'center'}}>\n              <Select value={perPage} style={{width: '100%', height: '70%', textAlign: 'center'}} variant='outlined'\n              onChange={e => setPerPage(parseInt(e.target.value as string, 10))}>\n                <MenuItem value={20}> 20 </MenuItem>\n                <MenuItem value={50}> 50 </MenuItem>\n                <MenuItem value={100}> 100 </MenuItem>\n              </Select>\n            </Paper>\n            </Grid>\n            <Grid item xs={4} />\n            <Grid item xs={5}>\n              <Paper elevation={0}\n              style={{height: '100%', display: 'flex', flexDirection: 'row', justifyContent: 'flex-end', alignItems: 'center'}}>\n                <ButtonGroup style={{height: '70%'}}>\n                  {page > 1 ?\n                    <Button variant=\"outlined\" color=\"primary\" key=\"prev\" onClick={() => setPage(page - 1)}>\n                      <ChevronLeft />\n                    </Button> :\n                    <Button variant=\"outlined\" color=\"primary\" disabled>\n                      <ChevronLeft />\n                    </Button> \n                  }\n                  <Button disabled variant=\"contained\"> {page} </Button>\n                  {page !== nbPages ?\n                    <Button variant=\"outlined\" color=\"primary\" key=\"next\" onClick={() => setPage(page + 1)}>\n                      <ChevronRight />\n                    </Button> :\n                    <Button variant=\"outlined\" color=\"primary\" disabled>\n                      <ChevronRight />\n                    </Button>\n                  }\n                </ButtonGroup>\n              </Paper>\n            </Grid>\n          </Grid>\n        </Toolbar> :\n        <div />\n  );\n}","import * as React from 'react'\nimport { TextField, makeStyles, Theme, createStyles } from '@material-ui/core'\nimport { useField } from 'react-final-form'\nimport ArrowRightAltIcon from '@material-ui/icons/ArrowRightAlt'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      display: 'flex',\n      justifyContent: 'center',\n      verticalAlign: 'center',\n      marginBottom: theme.spacing(1)\n    }\n  })\n)\n\nexport const DateFilterInput = ({ source }: { source: string }) => {\n  const classes = useStyles()\n  const defaultFromDate = React.useMemo(() => new Date(Date.now() - 2678400000), [])\n  defaultFromDate.setHours(0, 0, 0, 0)\n  const defaultToDate = new Date(Date.now())\n  defaultToDate.setHours(23, 59, 0, 0)\n  const [dateFrom, setDateFrom] = React.useState(\n    defaultFromDate.getTime().toString(),\n  )\n  const [dateTo, setDateTo] = React.useState(defaultToDate.getTime().toString())\n  const {\n    input: { onChange },\n    meta: { touched, error },\n  } = useField(source)\n\n  React.useEffect(() => {\n    onChange([\n      (parseInt(dateFrom, 10) - (defaultFromDate.getTimezoneOffset() * 60000)).toString(),\n      (parseInt(dateTo, 10) - (defaultFromDate.getTimezoneOffset() * 60000)).toString()].join(';'))\n  }, [dateFrom, dateTo, onChange, defaultFromDate])\n\n  const convertedDate = (date: Date) =>\n    new Date(date.getTime() - (defaultFromDate.getTimezoneOffset() * 60000)).toJSON().substring(0, 16)\n\n  return (\n    <span\n      key=\"date\"\n      className={classes.container}\n    >\n      <TextField\n        variant=\"filled\"\n        defaultValue={convertedDate(defaultFromDate)}\n        name={source}\n        type=\"datetime-local\"\n        onChange={(e) => setDateFrom(Date.parse(e.target.value).toString())}\n        error={!!(touched && error)}\n        helperText={touched && error}\n        style={{ alignSelf: 'center' }}\n        size=\"small\"\n      />\n      <ArrowRightAltIcon style={{ marginTop: '4%' }} />\n      <TextField\n        variant=\"filled\"\n        defaultValue={convertedDate(defaultToDate)}\n        name={source}\n        type=\"datetime-local\"\n        onChange={(e) => setDateTo(Date.parse(e.target.value).toString())}\n        error={!!(touched && error)}\n        helperText={touched && error}\n        size=\"small\"\n      />\n    </span>\n  )\n}\n","import { Button, Grid, TableCell, withStyles } from '@material-ui/core'\n\nexport const BookingButton = withStyles({\n  root: {\n    width: '100%',\n    backgroundColor: 'rgb(220, 220, 220)',\n    boxShadow: '0px 0px 3px',\n    '&:hover': {\n      backgroundColor: 'rgb(220, 230, 230)',\n    },\n  },\n})(Button)\n\nexport const FullWidthButton = withStyles({\n  root: {\n    width: '100%',\n  },\n})(Button)\n\nexport const CenterGrid = withStyles({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'column',\n  },\n})(Grid)\n\nexport const NoPaddingCell = withStyles({\n  root: {\n    paddingBottom: 0,\n    paddingTop: 0,\n  },\n})(TableCell)\n","import React, { CSSProperties, useEffect, useState } from 'react'\nimport {\n  Collapse,\n  Grid,\n  Hidden,\n  IconButton,\n  TableCell,\n  TableRow,\n} from '@material-ui/core'\nimport { DateField, TextField, useTranslate } from 'react-admin'\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown'\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp'\nimport { useHistory } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport { ResourceName } from '../../core/ResourceName'\nimport { BookingButton, CenterGrid, NoPaddingCell } from './LogsComponents'\nimport { ExtendedLog } from '../../core/logs/extended-log'\nimport { ThemeState } from '../../core/common/theme.reducer'\nimport { getContrastColor } from '../../core/common/visual.utils'\n\ninterface LogRowProps {\n  readonly compactMode: boolean\n  readonly noBooking: boolean\n  readonly data: ExtendedLog\n}\n\nexport const LogRow = (props: LogRowProps) => {\n  const { data, compactMode, noBooking } = props\n  const [open, setOpen] = useState(false)\n  const history = useHistory()\n  const isDarkMode = useSelector(\n    (state: ThemeState) => state.theme.darkMode === 'dark',\n  )\n  const t = useTranslate()\n\n  useEffect(() => {\n    setOpen(false)\n  }, [data])\n\n  const defineStyle = () => {\n    if (\n      (!isDarkMode && data.color === 'transparent') ||\n      getContrastColor(data.color) === 'black'\n    ) {\n      return { color: 'black', fontWeight: 'normal' } as CSSProperties\n    }\n    return { color: 'white', fontWeight: 'bold' } as CSSProperties\n  }\n\n  return (\n    <>\n      <TableRow style={{ backgroundColor: data.color }}>\n        <Hidden mdUp={!compactMode}>\n          <TableCell>\n            <IconButton onClick={() => setOpen((v) => !v)}>\n              {open ? (\n                <ArrowDropUpIcon style={defineStyle()} />\n              ) : (\n                <ArrowDropDownIcon style={defineStyle()} />\n              )}\n            </IconButton>\n          </TableCell>\n        </Hidden>\n        <TableCell>\n          <DateField\n            record={data}\n            source=\"date\"\n            showTime\n            style={defineStyle()}\n          />\n        </TableCell>\n        <TableCell>\n          <TextField record={data} source=\"deviceName\" style={defineStyle()} />\n        </TableCell>\n        <TableCell>\n          <TextField record={data} source=\"ticketCode\" style={defineStyle()} />\n        </TableCell>\n        <Hidden smDown xlDown={compactMode}>\n          <TableCell>\n            <TextField\n              record={data}\n              source=\"text\"\n              sortable={false}\n              style={defineStyle()}\n            />\n          </TableCell>\n        </Hidden>\n        <Hidden smDown xlDown={compactMode || noBooking}>\n          <TableCell>\n            {data.bookingId == null ? (\n              <div />\n            ) : (\n              <BookingButton\n                onClick={() =>\n                  history.push({\n                    pathname: `/${ResourceName.TICKET_DETAILS}/${data.bookingId}/show`,\n                  })\n                }\n              >\n                {data.bookingId}\n              </BookingButton>\n            )}\n          </TableCell>\n        </Hidden>\n      </TableRow>\n      <Hidden mdUp={!compactMode}>\n        <TableRow>\n          <NoPaddingCell colSpan={4}>\n            <Collapse in={open}>\n              <Grid\n                container\n                style={{ marginTop: '1%', marginBottom: '1%' }}\n                item\n              >\n                <Hidden xlDown={noBooking}>\n                  <CenterGrid item xs={5}>\n                    {`${t('resources.logs.fields.bookingId')}:`}\n                  </CenterGrid>\n                  <CenterGrid item xs={7}>\n                    {data.bookingId == null ? (\n                      <div />\n                    ) : (\n                      <BookingButton\n                        onClick={() =>\n                          history.push({\n                            pathname: `/${ResourceName.TICKET_DETAILS}/${data.bookingId}/show`,\n                          })\n                        }\n                      >\n                        {data.bookingId}\n                      </BookingButton>\n                    )}\n                  </CenterGrid>\n                  <hr\n                    style={{\n                      width: '90%',\n                      marginTop: '1%',\n                      marginBottom: '1%',\n                    }}\n                  />\n                </Hidden>\n                <CenterGrid item xs={5}>\n                  {`${t('resources.logs.fields.description')}:`}\n                </CenterGrid>\n                <CenterGrid item xs={7}>\n                  {data.text}\n                </CenterGrid>\n              </Grid>\n            </Collapse>\n          </NoPaddingCell>\n        </TableRow>\n      </Hidden>\n    </>\n  )\n}\n","export const getContrastColor = (hexcolor: string) => {\n    const r = parseInt(hexcolor.substr(1, 2), 16);\n    const g = parseInt(hexcolor.substr(3, 2), 16);\n    const b = parseInt(hexcolor.substr(5, 2), 16);\n    const yiq = ((r * 299) + (g * 587) + (b * 114)) / 1000;\n    return (yiq >= 128) ? 'black' : 'white';\n  }","import React from 'react'\nimport {\n  Hidden,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from '@material-ui/core'\nimport { useListContext, useListSortContext, useTranslate } from 'react-admin'\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward'\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward'\nimport { ExtendedLog } from '../../core/logs/extended-log'\nimport { FullWidthButton } from './LogsComponents'\nimport { LogRow } from './LogRow'\n\ninterface LogGridProps {\n  readonly compactMode: boolean\n  readonly noBooking: boolean\n}\n\nexport const LogGrid = (props: LogGridProps) => {\n  const { compactMode, noBooking } = props\n  const { ids, data } = useListContext()\n  const { currentSort, setSort } = useListSortContext()\n  const t = useTranslate()\n\n  const inverseOrder = (order: string) => (order === 'ASC' ? 'DESC' : 'ASC')\n\n  const handleSortChange = (sortBy: string) => {\n    setSort(\n      sortBy,\n      sortBy === currentSort.field ? inverseOrder(currentSort.order) : 'DESC',\n    )\n  }\n\n  const HeaderCell = (name: string, display: string) => (\n    <>\n      {currentSort.field === name ? (\n        <FullWidthButton\n          startIcon={\n            currentSort.order === 'ASC' ? (\n              <ArrowUpwardIcon />\n            ) : (\n              <ArrowDownwardIcon />\n            )\n          }\n        >\n          {t(display)}\n        </FullWidthButton>\n      ) : (\n        <FullWidthButton>{t(display)}</FullWidthButton>\n      )}\n    </>\n  )\n\n  return (\n    <TableContainer component={Paper}>\n      <Table\n        aria-label=\"a dense table\"\n        size=\"small\"\n        padding={compactMode ? 'none' : 'default'}\n      >\n        <TableHead>\n          <TableRow>\n            <Hidden mdUp={!compactMode}>\n              <TableCell style={{ width: '3%' }} />\n            </Hidden>\n            <TableCell\n              onClick={() => handleSortChange('date')}\n              style={{ width: '10%' }}\n            >\n              {HeaderCell('date', 'resources.logs.fields.date')}\n            </TableCell>\n            <TableCell\n              onClick={() => handleSortChange('deviceName')}\n              style={{ width: '15%' }}\n            >\n              {HeaderCell('deviceName', 'resources.logs.fields.deviceName')}\n            </TableCell>\n            <TableCell\n              onClick={() => handleSortChange('ticketCode')}\n              style={{ width: '25%' }}\n            >\n              {HeaderCell('ticketCode', 'resources.logs.fields.ticketCode')}\n            </TableCell>\n            <Hidden smDown xlDown={compactMode}>\n              <TableCell style={{ textAlign: 'center', width: '25%' }}>\n                {t('resources.logs.fields.description').toUpperCase()}\n              </TableCell>\n            </Hidden>\n            <Hidden smDown xlDown={compactMode || noBooking}>\n              <TableCell\n                onClick={() => handleSortChange('bookingId')}\n                style={{ width: '15%' }}\n              >\n                {HeaderCell('bookingId', 'resources.logs.fields.bookingId')}\n              </TableCell>\n            </Hidden>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {ids.map((id) => (\n            <LogRow\n              key={id}\n              data={data[id] as ExtendedLog}\n              compactMode={compactMode}\n              noBooking={noBooking}\n            />\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n","import { useMediaQuery, useTheme } from '@material-ui/core'\nimport React from 'react'\nimport {\n  Filter,\n  FilterProps,\n  List,\n  Pagination,\n  SelectInput,\n  TextInput,\n  ListProps,\n  useTranslate,\n} from 'react-admin'\nimport { MobilePostPagination } from '../common/Pagination'\nimport { DateFilterInput } from './DateFilterInput'\nimport { LogGrid } from './LogGrid'\n\ninterface LogListProps extends ListProps {\n  readonly compactMode?: boolean\n  readonly noBooking?: boolean\n}\n\nconst ListFilters = (props: Omit<FilterProps, 'children'>) => {\n  const t = useTranslate()\n  return (\n    <Filter {...props}>\n      <TextInput source=\"ticketCode\" alwaysOn />\n      <SelectInput\n        source=\"deviceName\"\n        choices={[\n          {\n            id: 'Czytnik',\n            name: t('resources.logs.fields.deviceNameChoices.reader'),\n          },\n          {\n            id: 'Przej\\u015Bcie',\n            name: t('resources.logs.fields.deviceNameChoices.gateway'),\n          },\n        ]}\n      />\n      <DateFilterInput source=\"date\" key=\"date\" />\n      <TextInput source=\"bookingId\" />\n      <TextInput source=\"event\" />\n    </Filter>\n  )\n}\n\nexport const LogList = ({\n  compactMode = false,\n  noBooking = false,\n  ...props\n}: LogListProps) => {\n  const theme = useTheme()\n  const smallScreen = useMediaQuery(theme.breakpoints.down('sm'))\n  return (\n    <List\n      perPage={20}\n      exporter={false}\n      pagination={\n        smallScreen ? (\n          <MobilePostPagination />\n        ) : (\n          <Pagination rowsPerPageOptions={[20, 50, 100]} />\n        )\n      }\n      filters={<ListFilters />}\n      sort={{ field: 'date', order: 'DESC' }}\n      {...props}\n    >\n      <LogGrid compactMode={compactMode} noBooking={noBooking} />\n    </List>\n  )\n}","import React from \"react\"\nimport { ListProps, List, useListContext, Pagination } from \"react-admin\"\nimport { TableContainer, Table, TableHead, TableBody, TableRow, TableCell, useMediaQuery, useTheme } from \"@material-ui/core\"\nimport { useHistory } from \"react-router\"\nimport { MobilePostPagination } from '../common/Pagination'\nimport { ResourceName } from \"../../core/ResourceName\"\n\nconst BookingGrid = () => {\n  const { data, ids } = useListContext()\n  const history = useHistory()\n  return (\n    <TableContainer>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>Wydarzenie</TableCell>\n            <TableCell>Rezerwacja</TableCell>\n            <TableCell>Wariant</TableCell>\n            <TableCell>Status</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {ids.map(id =>\n            <TableRow key={id} style={{ cursor: \"pointer\" }}>\n              <TableCell onClick={() =>\n                history.push({ pathname: `/${ResourceName.TICKET_DETAILS}/${id}/show`, })\n              }>\n                {`${data[id]?.eventId}. ${data[id]?.eventName} ${data[id]?.eventDateStart.replace(\"T\", \" \").substring(0, 19)}`}\n              </TableCell>\n              <TableCell onClick={() =>\n                history.push({ pathname: `/${ResourceName.TICKET_DETAILS}/${id}/show`, })\n              }>{data[id]?.id}</TableCell>\n              <TableCell onClick={() =>\n                history.push({ pathname: `/${ResourceName.TICKET_DETAILS}/${id}/show`, })\n              }>{data[id]?.variantId}</TableCell>\n              <TableCell onClick={() =>\n                history.push({ pathname: `/${ResourceName.TICKET_DETAILS}/${id}/show`, })\n              }>{data[id]?.disabled}</TableCell>\n            </TableRow>\n          )}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n\nexport const BookingList = (props: ListProps) => {\n  const theme = useTheme()\n  return (\n    <List\n      perPage={20}\n      exporter={false}\n      pagination={\n        useMediaQuery(theme.breakpoints.up('md')) ? (\n          <Pagination rowsPerPageOptions={[20, 50, 100]} />\n        ) : (\n          <MobilePostPagination />\n        )\n      }\n      sort={{ field: 'id', order: 'DESC' }}\n      {...props}\n    >\n      <BookingGrid />\n    </List>\n  )\n}","import { ResourceContextProvider, ShowProps, Show, TabbedShowLayout, Tab, TextField, useShowContext, DateField } from \"react-admin\"\nimport React, { useMemo } from \"react\"\nimport { Box } from \"@material-ui/core\"\nimport { LogList } from '../logs/LogList'\nimport { ResourceName } from \"../../core/ResourceName\"\nimport { BookingList } from \"./CustomerBookingsList\"\n\nconst CustomerBookingsView = () => {\n  const { record, basePath } = useShowContext()\n  return (\n    <Box paddingY={2}>\n      <ResourceContextProvider value={ResourceName.BOOKINGS}>\n        <BookingList\n          basePath={basePath}\n          filter={{ id: record?.bookingsIds.join(\",\") }}\n          filters={undefined}\n          actions={false}\n          title=\" \"\n        />\n      </ResourceContextProvider>\n    </Box>\n  )\n}\n\nconst CustomerLogsView = () => {\n  const { record, basePath } = useShowContext()\n  return (\n    <Box paddingY={2}>\n      <ResourceContextProvider value={ResourceName.TICKET_LOGS}>\n        <LogList\n          basePath={basePath}\n          filter={{ bookingId: record?.bookingsIds.join(\",\") }}\n          filters={undefined}\n          actions={false}\n          title=\" \"\n        />\n      </ResourceContextProvider>\n    </Box>\n  )\n}\n\nconst CustomerTabs = () => {\n  const { record } = useShowContext()\n  const bookingPresent = useMemo(() => record?.bookingsIds.length > 0, [record])\n  return (\n    <TabbedShowLayout>\n      <Tab label=\"Profil\">\n        <TextField source=\"firstname\" label=\"resources.customer-details.fields.firstname\" />\n        <TextField source=\"lastname\" label=\"resources.customer-details.fields.lastname\" />\n        {record?.company && <TextField source=\"company\" label=\"resources.customer-details.fields.company\" />}\n        {record?.birthdate && <DateField source=\"birthdate\" label=\"resources.customer-details.fields.birthdate\" />}\n        {record?.documentType && <TextField source=\"documentType\" label=\"resources.customer-details.fields.documentType\" />}\n        {record?.pesel ?\n          <TextField source=\"pesel\" label=\"resources.customer-details.fields.pesel\" /> :\n          <TextField source=\"documentNumber\" label=\"resources.customer-details.fields.documentNumber\" />\n        }\n        {record?.nationality && <TextField source=\"nationality\" label=\"resources.customer-details.fields.nationality\" />}\n        {record?.gender && <TextField source=\"gender\" label=\"resources.customer-details.fields.gender\" />}\n      </Tab>\n      {bookingPresent &&\n        <Tab label=\"Rezerwacje\">\n          <CustomerBookingsView />\n        </Tab>\n      }\n      {bookingPresent &&\n        <Tab label=\"Logi\">\n          <CustomerLogsView />\n        </Tab>\n      }\n    </TabbedShowLayout>\n  )\n}\n\nexport const CustomerDetailsView = (props: ShowProps) => (\n  <Show {...props}>\n    <CustomerTabs />\n  </Show>\n)","import { createStyles, makeStyles } from '@material-ui/core'\n\nexport const useCommonStyles = makeStyles(() =>\n  createStyles({\n    textCentered: {\n      textAlign: 'center',\n    },\n  }),\n)\n","import React, { ChangeEvent, FC, useState } from 'react'\nimport {\n  Box,\n  Button,\n  FormControl,\n  FormHelperText,\n  Input,\n  withStyles,\n} from '@material-ui/core'\nimport SearchIcon from '@material-ui/icons/Search'\nimport { useTranslate } from 'react-admin'\n\nconst RoundInputBox = withStyles({\n  root: {\n    borderRadius: 16,\n    width: '90%',\n    marginLeft: '5%',\n    display: 'flex',\n    flexDirection: 'row-reverse',\n    border: 'solid',\n    borderColor: '#673ab7',\n  },\n})(Box)\n\nconst RoundInputBoxBtn = withStyles({\n  root: {\n    background: '#673ab7',\n    variant: 'contained',\n    borderRadius: 11,\n    borderTopLeftRadius: 0,\n    borderBottomLeftRadius: 0,\n    margin: 0,\n    fontWeight: 'bold',\n    '&:hover': {\n      background: '#7e57c2',\n    },\n  },\n})(Button)\n\nconst RoundInputBoxFC = withStyles({\n  root: {\n    width: '100%',\n    marginLeft: 13,\n    marginTop: 2,\n  },\n})(FormControl)\n\nexport type SearchInputProps = {\n  label: string\n  onValue: (value: string) => void\n  disabled: boolean\n  error: string\n}\n\nconst SearchInput: FC<Readonly<SearchInputProps>> = ({\n  label,\n  onValue,\n  disabled,\n  error,\n}) => {\n  const [inputError, setInputError] = useState(false)\n  const [inputValue, setInputValue] = useState('')\n  const t = useTranslate()\n\n  const handleInput = (event: ChangeEvent<HTMLInputElement>) => {\n    setInputValue(event.target.value)\n  }\n\n  const handleClick = () => {\n    if (inputValue) {\n      setInputError(false)\n      onValue(inputValue)\n    } else {\n      setInputError(true)\n    }\n  }\n\n  return (\n    <RoundInputBox>\n      <RoundInputBoxBtn onClick={handleClick} disabled={disabled}>\n        <SearchIcon style={{ color: 'white' }} />\n      </RoundInputBoxBtn>\n      <RoundInputBoxFC disabled={disabled}>\n        <Input\n          disableUnderline\n          placeholder={t(label)}\n          onInput={handleInput}\n          onKeyDown={(ev) => ev.key === 'Enter' && handleClick()}\n          error={inputError || !!error}\n        />\n        {inputError && (\n          <FormHelperText error>{t('ra.validation.required')}</FormHelperText>\n        )}\n        {!!error && <FormHelperText error>{t(error)}</FormHelperText>}\n      </RoundInputBoxFC>\n    </RoundInputBox>\n  )\n}\n\nexport default SearchInput\n","import React, { useCallback, useState } from \"react\"\nimport { useNotify, useMutation, useTranslate, sanitizeFetchType, GetListResult, GET_LIST } from \"react-admin\"\nimport { useHistory } from \"react-router\"\nimport { stringify } from \"querystring\"\nimport { CardContent, CardHeader } from \"@material-ui/core\"\nimport clsx from \"clsx\"\nimport { ResourceName } from \"../../core/ResourceName\"\nimport { useCommonStyles } from \"./common-styles\"\nimport { CustomerInfoFilter } from '../../core/customer-info/customer-info.params'\nimport { CustomerInfo } from \"../../core/customer-info/customer-info\"\nimport SearchInput from './SearchInput'\n\ntype FindCustomerByInfoProps = Readonly<{ titleCentered?: boolean }>\n\nexport const FindCustomerByInfo = ({\n  titleCentered = false\n}: FindCustomerByInfoProps) => {\n  const history = useHistory()\n  const notify = useNotify()\n  const [error, setError] = useState(\"\")\n  const [mutate, { loading }] = useMutation()\n  const commonClasses = useCommonStyles()\n  const t = useTranslate()\n\n  const fetchCustomers = useCallback(\n    (info: string) =>\n      mutate({\n        type: sanitizeFetchType(GET_LIST),\n        resource: ResourceName.CUSTOMER_INFO,\n        payload: { filter: { info } } as CustomerInfoFilter\n      },\n        { returnPromise: true },\n      ) as Promise<GetListResult<CustomerInfo>>,\n    [mutate]\n  )\n\n  const onValue = useCallback(\n    async (info: string) => {\n      setError('')\n      try {\n        const {\n          total,\n          data: [onlyCustomer],\n        } = await fetchCustomers(info)\n        if (!total) {\n          setError('common.find-customer-by-info.error')\n        } else if (total === 1) {\n          history.push({\n            pathname: `/${ResourceName.CUSTOMER_DETAILS}/${onlyCustomer.id}/show`\n          })\n        } else {\n          history.push({\n            pathname: `/${ResourceName.CUSTOMER_INFO}`,\n            search: stringify({\n              filter: JSON.stringify({\n                info\n              } as CustomerInfoFilter['filter'])\n            })\n          })\n        }\n      } catch (err) {\n        notify((err as Error)?.message, 'error')\n      }\n    },\n    [fetchCustomers, history, notify]\n  )\n\n  return (\n    <>\n      <CardHeader\n        className={clsx({ [commonClasses.textCentered]: titleCentered })}\n        title={t('common.find-customer-by-info.title')} />\n      <CardContent>\n        <SearchInput\n          label=\"common.find-customer-by-info.input-label\"\n          onValue={onValue}\n          disabled={loading}\n          error={error}\n        />\n      </CardContent>\n    </>\n  )\n}","import { Card, Box, Typography, Divider } from \"@material-ui/core\"\nimport React from \"react\"\nimport { useLocation } from \"react-router\"\nimport { List, ListProps, useListContext, useTranslate, Datagrid, TextField } from 'react-admin'\nimport { FindCustomerByInfo } from \"../common/FindCustomerByInfo\"\nimport { ResourceName } from \"../../core/ResourceName\"\n\nconst CustomerInfoGrid = () => {\n  const {\n    loading,\n    filterValues: { info }\n  } = useListContext()\n  const t = useTranslate()\n  return (\n    <>\n      <Box m={2}>\n        <Typography variant=\"h5\" paragraph>\n          {t('resources.customer-info.search-list-title', { info })}\n        </Typography>\n      </Box>\n      <Divider />\n      <Datagrid\n        loaded={!loading}\n        rowClick={(id) => `${ResourceName.CUSTOMER_DETAILS}/${id}/show`}>\n        <TextField source=\"firstname\" />\n        <TextField source=\"lastname\" />\n        <TextField source=\"pesel\" />\n      </Datagrid>\n    </>\n  )\n}\n\nexport const CustomerInfoList = (props: ListProps) => {\n  const { search } = useLocation()\n  return (\n    <>\n      <Card>\n        <FindCustomerByInfo titleCentered />\n      </Card>\n      {!!search && (\n        <List actions={false} {...props}>\n          <CustomerInfoGrid />\n        </List>\n      )}\n    </>\n  )\n}","import { stringify } from 'querystring'\nimport * as React from 'react'\nimport { useCallback, useState } from 'react'\nimport clsx from 'clsx'\nimport {\n  GET_LIST,\n  GetListResult,\n  sanitizeFetchType,\n  useMutation,\n  useNotify,\n  useTranslate,\n} from 'react-admin'\nimport { CardContent, CardHeader } from '@material-ui/core'\nimport { useHistory } from 'react-router-dom'\nimport { TicketCodeFilter } from '../../core/common/ticket-code.filter'\nimport { TicketDto } from '../../core/dto/ticket.dto'\nimport { ResourceName } from '../../core/ResourceName'\nimport SearchInput from './SearchInput'\nimport { useCommonStyles } from './common-styles'\n\ntype FindUserByTicketProps = Readonly<{ titleCentered?: boolean }>\n\nexport const FindUserByTicket = ({\n  titleCentered = false,\n}: FindUserByTicketProps) => {\n  const history = useHistory()\n  const notify = useNotify()\n  const [error, setError] = useState('')\n  const [mutate, { loading }] = useMutation()\n  const commonClasses = useCommonStyles()\n  const t = useTranslate()\n\n  const fetchTickets = useCallback(\n    (ticketCode: string) =>\n      mutate(\n        {\n          type: sanitizeFetchType(GET_LIST),\n          resource: ResourceName.TICKETS,\n          payload: { filter: { ticketCode } } as TicketCodeFilter,\n        },\n        { returnPromise: true },\n      ) as Promise<GetListResult<TicketDto>>,\n    [mutate],\n  )\n\n  const onValue = useCallback(\n    async (ticketCode: string) => {\n      setError('')\n      try {\n        const {\n          total,\n          data: [onlyTicket],\n        } = await fetchTickets(ticketCode)\n        if (!total) {\n          setError('common.find-user-by-ticket.error')\n        } else if (total === 1) {\n          history.push({\n            pathname: `/${ResourceName.TICKET_DETAILS}/${onlyTicket.bookingId}/show`,\n          })\n        } else {\n          history.push({\n            pathname: `/${ResourceName.TICKET_INFO}`,\n            search: stringify({\n              filter: JSON.stringify({\n                ticketCode,\n              } as TicketCodeFilter['filter']),\n            }),\n          })\n        }\n      } catch (err) {\n        notify((err as Error)?.message, 'error')\n      }\n    },\n    [fetchTickets, history, notify],\n  )\n\n  return (\n    <>\n      <CardHeader\n        className={clsx({ [commonClasses.textCentered]: titleCentered })}\n        title={t('common.find-user-by-ticket.title')}\n      />\n      <CardContent>\n        <SearchInput\n          label=\"common.find-user-by-ticket.input-label\"\n          onValue={onValue}\n          disabled={loading}\n          error={error}\n        />\n      </CardContent>\n    </>\n  )\n}\n","import { Card, CardContent, CardHeader, createStyles, Grid, makeStyles, Theme } from '@material-ui/core'\nimport React, { useEffect } from 'react'\nimport { ResourceContextProvider, useGetIdentity, useTranslate } from 'react-admin'\nimport { ResourceName } from '../core/ResourceName'\nimport { FindUserByTicket } from './common/FindUserByTicket'\nimport { LogList } from './logs/LogList'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    header: {\n      textAlign: 'center',\n      letterSpacing: theme.spacing(0.2),\n    },\n  }),\n)\n\nconst TicketFinder = () => (\n  <Card style={{ width: '100%', marginBottom: '5px' }}>\n    <FindUserByTicket />\n  </Card>\n)\n\nconst LastLogs = () => {\n  const t = useTranslate()\n  return (\n    <Card style={{ width: '100%', marginBottom: '5px' }}>\n      <CardHeader title={t('dashboard.cards.last-logs.title')} />\n      <CardContent>\n        <ResourceContextProvider value={ResourceName.LOGS}>\n          <LogList\n            basePath=\"/\"\n            title=\" \"\n            compactMode\n            pagination={false}\n            perPage={10}\n            actions={false}\n            filters={undefined}\n          />\n        </ResourceContextProvider>\n      </CardContent>\n    </Card>\n  )\n}\n\nexport const Dashboard = () => {\n  const { identity } = useGetIdentity()\n  const classes = useStyles()\n  const t = useTranslate()\n\n  useEffect(() => {\n    ;['dashlogs', 'ticketfinder'].map((component) => {\n      if (!localStorage.getItem(`${identity?.id}.${component}`))\n        localStorage.setItem(`${identity?.id}.${component}`, '1')\n      return component\n    })\n  }, [identity])\n\n  return (\n    <Grid container spacing={1}>\n      <Grid item xs={12}>\n        <Card>\n          <CardHeader\n            className={classes.header}\n            title={t('dashboard.welcome')}\n            titleTypographyProps={{ variant: 'h4' }}\n          />\n        </Card>\n      </Grid>\n      <Grid item sm={6} xs={12}>\n        {localStorage.getItem(`${identity?.id}.ticketfinder`) === '1' && (\n          <TicketFinder />\n        )}\n      </Grid>\n      <Grid\n        item\n        sm={6}\n        xs={12}\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'flex-end',\n          width: '10%',\n        }}\n      >\n        {localStorage.getItem(`${identity?.id}.dashlogs`) === '1' && (\n          <LastLogs />\n        )}\n      </Grid>\n    </Grid>\n  )\n}","import { useInput, useTranslate, InputProps } from \"react-admin\"\nimport React, { useMemo, useState } from \"react\"\nimport {\n  TableCell, TableContainer, TableHead, TableRow, Table, TableBody, Box, FormControl, InputLabel,\n  Checkbox, Button, TablePagination, TextField, ButtonGroup, Select, MenuItem, Menu, IconButton\n} from \"@material-ui/core\"\nimport { HelpOutline, FilterList, Close } from \"@material-ui/icons\"\nimport { Device } from '../../core/events/event-show'\n\nconst NoResult = () => {\n  const translate = useTranslate()\n  return (\n    <Box style={{\n      width: \"100%\", display: \"flex\", flexDirection: \"column\",\n      alignItems: \"center\", paddingTop: \"10px\", paddingBottom: \"10px\"\n    }}>\n      <HelpOutline fontSize=\"large\" style={{ margin: \"5px\" }} />\n      <div>{translate('const.noResults')}</div>\n    </Box>\n  )\n}\n\nexport const AttachmentSelect = (props: InputProps) => {\n  const { source } = props\n  const translate = useTranslate()\n\n  const {\n    input: { onChange, value }\n  } = useInput(props)\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const orgValue = useMemo<Device[]>(() => value, [])\n\n  //page and number of rows per page for pagination\n  const [pagination, setPagination] = useState\n    <{ page: number, perPage: number }>\n    ({ page: 0, perPage: 20 })\n\n  //object containing most variables associated with filtering\n  const [filter, setFilter] = useState<{\n    display: { name: boolean, category: boolean, type: boolean },\n    values: { name: string, category: string, type: 'palm' | 'engine' | '' },\n    menu: {\n      open: boolean,\n      anchor: any\n    }\n  }>({\n    display: { name: true, category: false, type: false },\n    values: { name: '', category: '', type: '' },\n    menu: {\n      open: false,\n      anchor: null\n    }\n  })\n\n  const onChangePage = (event: React.MouseEvent<HTMLButtonElement> | null, p: number) => {\n    setPagination({ ...pagination, page: p })\n    window.scrollTo(0, 130)\n  }\n\n  const onChangeRowsPerPage = (event: any) => {\n    setPagination({ perPage: event?.target.value, page: 0 })\n    window.scrollTo(0, 130)\n  }\n\n  //function filtering the displayed data\n  const display = (arr: Device[]) => {\n    let dispArr = arr.filter((dev) => dev.name.toLowerCase()\n      .includes(filter.values.name.toLowerCase()))\n    if (filter.values.category !== '')\n      dispArr = dispArr.filter((dev) =>\n        dev.categoryId === parseInt(filter.values.category, 10))\n    if (filter.values.type !== '')\n      dispArr = dispArr.filter((dev) =>\n        dev.type === filter.values.type)\n    return dispArr\n  }\n\n  const displayWithPagination = (arr: Device[]) =>\n    display(arr).slice(pagination.page * pagination.perPage, (pagination.page + 1) * pagination.perPage)\n\n  //filters displayed above table\n  const displayFilters = () => {\n    const onFilterClose = (type: 'type' | 'category') => {\n      setFilter({\n        ...filter,\n        display: {\n          ...filter.display,\n          [type]: false\n        },\n        values: {\n          ...filter.values,\n          [type]: ''\n        }\n      })\n      setPagination({ ...pagination, page: 0 })\n    }\n\n    const onFilterSubmit = (type: 'name' | 'type' | 'category', payload: any) => {\n      setFilter({\n        ...filter,\n        values: {\n          ...filter.values,\n          [type]: payload\n        }\n      })\n      setPagination({ ...pagination, page: 0 })\n    }\n\n    const closeButton = (type: 'type' | 'category') => (\n      <span style={{\n        display: \"inline-flex\", height: \"100%\",\n        justifyContent: \"center\", alignItems: \"center\"\n      }}>\n        <IconButton onClick={() => onFilterClose(type)}>\n          <Close style={{ border: \"solid thin\", borderRadius: \"50%\" }}\n            fontSize=\"small\" />\n        </IconButton>\n      </span>\n    )\n\n    return (\n      <Box padding={1}>\n        {filter.display.name &&\n          <TextField label={translate('resources.events.fields.name')} variant=\"filled\"\n            onChange={e => onFilterSubmit('name', e.target.value)} />}\n\n        {source === 'devices' &&\n          <>\n            {filter.display.category &&\n              <span style={{ padding: \"5px\", whiteSpace: \"nowrap\" }}>\n                {closeButton('category')}\n                <TextField label={translate('resources.events.fields.category')} variant=\"filled\"\n                  onChange={e => onFilterSubmit('category', e.target.value)} />\n              </span>}\n\n            {filter.display.type &&\n              <span style={{ padding: \"5px\", whiteSpace: \"nowrap\" }}>\n                {closeButton('type')}\n                <FormControl variant=\"filled\">\n                  <InputLabel>\n                    {translate('resources.events.fields.type')}\n                  </InputLabel>\n                  <Select value={filter.values.type} style={{ width: \"219px\" }}\n                    onChange={e => onFilterSubmit('type', e.target.value)}>\n                    <MenuItem value=''>\n                      {translate('resources.events.fields.type')}\n                    </MenuItem>\n                    <MenuItem value='palm'>\n                      {translate('resources.enums.deviceType.palm')}\n                    </MenuItem>\n                    <MenuItem value='engine'>\n                      {translate('resources.enums.deviceType.engine')}\n                    </MenuItem>\n                  </Select>\n                </FormControl>\n              </span>}\n          </>}\n      </Box>\n    )\n  }\n\n  //actions displayed on top of page (select all, deselect all, filter menu)\n  const actions = () => {\n    const onLinked = (state: boolean) => {\n      onChange(value.map((device: Device) => {\n        if (displayWithPagination(value).includes(device))\n          return { ...device, linked: state }\n        return device\n      }))\n    }\n\n    const onMenuOpen = (e: any) => setFilter({\n      ...filter,\n      menu: {\n        open: true,\n        anchor: e?.currentTarget\n      }\n    })\n\n    const onMenuClose = () => setFilter({\n      ...filter,\n      menu: {\n        open: false,\n        anchor: null\n      }\n    })\n\n    const onMenuClick = (type: 'category' | 'type') => setFilter({\n      ...filter,\n      display: {\n        ...filter.display,\n        [type]: true\n      },\n      menu: {\n        open: false,\n        anchor: null\n      }\n    })\n\n    return (\n      <Box style={{ height: \"48px\", display: \"flex\" }}>\n        <Box style={{ width: \"70%\", display: \"inline-flex\" }}>\n          <ButtonGroup>\n            <Button\n              onClick={() => onLinked(true)}>\n              {translate('const.selectAll')}\n            </Button>\n            <Button\n              onClick={() => onLinked(false)}>\n              {translate('const.deselectAll')}\n            </Button>\n          </ButtonGroup>\n        </Box>\n        <Box style={{ width: \"30%\", display: \"inline-flex\", flexDirection: \"row-reverse\" }}>\n          {source === 'devices' && Object.values(filter.display).includes(false) &&\n            <IconButton onClick={onMenuOpen}\n              style={{ alignSelf: \"flex-end\", marginRight: \"0px\" }}>\n              <FilterList />\n            </IconButton>}\n          <Menu anchorEl={filter.menu.anchor} open={filter.menu.open} onClose={onMenuClose}>\n            {!filter.display.category &&\n              <MenuItem onClick={() => onMenuClick('category')}>\n                {translate('resources.events.fields.category')}\n              </MenuItem>}\n            {!filter.display.type &&\n              <MenuItem onClick={() => onMenuClick('type')}>\n                {translate('resources.events.fields.type')}\n              </MenuItem>\n            }\n          </Menu>\n        </Box>\n      </Box>\n    )\n  }\n\n  return (\n    <>\n      {actions()}\n      <br />\n      {displayFilters()}\n      {display(value).length > 0 ?\n        <>\n          <TableContainer>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell style={source === 'devices' ? { width: \"45%\" } : { width: \"90%\" }}>\n                    {translate(`resources.events.fields.${source}`)}\n                  </TableCell>\n                  {source === 'devices' && <TableCell style={{ width: \"45%\" }}>\n                    {translate('resources.events.fields.type')}\n                  </TableCell>}\n                  <TableCell style={{ width: \"10%\" }}>\n                    {translate('resources.events.fields.status')}\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {displayWithPagination(value).map((device: Device, index: number) => (\n                  <TableRow key={device.id}\n                    style={displayWithPagination(orgValue)[index].linked ? { background: \"green\" } : {}}>\n                    <TableCell>{device.name}</TableCell>\n                    {source === 'devices' &&\n                      <TableCell>\n                        {translate(`resources.enums.deviceType.${device.type}`)}\n                      </TableCell>}\n                    <TableCell>\n                      <Checkbox checked={device.linked}\n                        onClick={() => onChange(value.map((dev: Device) => {\n                          if (dev.name === device.name)\n                            return ({ ...dev, linked: !dev.linked })\n                          return dev\n                        }))} />\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <TablePagination\n            component=\"div\"\n            rowsPerPageOptions={[10, 20, 50]}\n            count={display(value).length}\n            page={pagination.page}\n            rowsPerPage={pagination.perPage}\n            onChangePage={onChangePage}\n            onChangeRowsPerPage={onChangeRowsPerPage}\n            labelRowsPerPage={translate('ra.navigation.rows_per_page')}\n            labelDisplayedRows={\n              ({ from, to, count }) => `${from}-${to} // ${count}`\n            }\n          />\n        </> :\n        <NoResult />\n      }\n    </>\n  )\n}","import { InputProps, useTranslate, useInput, FunctionField, Record } from \"react-admin\"\nimport React from \"react\"\nimport { Button, Box, Typography, makeStyles, createStyles } from \"@material-ui/core\"\nimport { useSelector } from \"react-redux\"\nimport { EventStatus } from \"../../core/enum/EventStatus\"\nimport { ThemeState } from \"../../core/common/theme.reducer\"\n\nconst useStyles = makeStyles(() => {\n  const darkMode = useSelector((state: ThemeState) => state.theme.darkMode === 'dark')\n  return (\n    createStyles({\n      box: {\n        display: \"flex\",\n        flexDirection: 'column',\n        width: '234px',\n        alignItems: 'center',\n        padding: '12px',\n        paddingBottom: '5px',\n        borderBottom: 'solid 1px',\n        borderColor: darkMode ? '#c6c6c6' : '#8e8e8e',\n        background: darkMode ? '#3f3f3f' : '#f5f5f5', borderTopLeftRadius: '5px', borderTopRightRadius: '5px',\n        paddingTop: '4px'\n      },\n    })\n  )\n}\n)\n\nexport const StatusSelect = (props: InputProps) => {\n  const {\n    input: { onChange, value }\n  } = useInput(props)\n  const translate = useTranslate()\n  const classes = useStyles()\n  return (\n    <Box className={classes.box} >\n      <Typography color='textSecondary' variant='caption' style={{ alignSelf: 'end' }}>\n        {translate('resources.events.fields.status')}\n      </Typography>\n      <FunctionField label=\"resources.events.fields.status\" variant=\"body1\"\n        style={{ margin: '5px', color: value === EventStatus.IN_TRANSITION ? 'red' : 'inherit' }}\n        render={(record: Record | undefined) =>\n          `${translate(`resources.enums.eventStatus.${value.toLowerCase()}`)}\n            ${record?.status === value ? '' : `(${translate('const.changed')})`}`} />\n      {value === EventStatus.IN_TRANSITION ?\n        <Button disabled variant='contained' style={{ width: \"100%\" }}>\n          {translate(`resources.events.actions.activate`)}\n        </Button> :\n        <Button variant='outlined' style={{ width: \"100%\" }}\n          onClick={() => onChange(value === EventStatus.ACTIVE ? EventStatus.INACTIVE : EventStatus.ACTIVE)} >\n          {translate(`resources.events.actions.${value === EventStatus.INACTIVE ? 'activate' : 'deactivate'}`)}\n        </Button>\n      }\n    </Box>\n  )\n}","import {\n  Edit, EditProps, TabbedForm, TextField, FormTab, TextInput,\n  DateTimeInput, useTranslate, Toolbar, SaveButton, ToolbarProps\n} from \"react-admin\"\nimport React, { useMemo } from \"react\"\nimport { AttachmentSelect } from \"./AttachmentSelect\"\nimport { StatusSelect } from \"./StatusSelect\"\n\nconst EditTitle = (record: any) => {\n  const { record: { name, dateStart, id } } = record\n  const translate = useTranslate()\n  const date = useMemo(() => !(dateStart instanceof Date) ? dateStart.replace('T', ' ') : '', [dateStart])\n  return (\n    <span>{translate('resources.events.titles.edit')}: {name} {date} {id}</span>\n  )\n}\n\nconst EditToolbar = (props: ToolbarProps) => (\n  <Toolbar {...props}>\n    <SaveButton />\n  </Toolbar>\n)\n\nexport const EventEdit = (props: EditProps) => {\n  const translate = useTranslate()\n  return (\n    <Edit {...props} title={<EditTitle />}>\n      <TabbedForm toolbar={<EditToolbar />}>\n        <FormTab label={translate(\"resources.events.tabs.general\")}>\n          <TextField source=\"id\" label=\"ID\" />\n          <TextInput source=\"name\" />\n          <DateTimeInput source=\"dateStart\" />\n          <DateTimeInput source=\"dateEnd\" />\n          <StatusSelect source=\"status\" />\n        </FormTab>\n        <FormTab label={translate(\"resources.events.tabs.devices\")}>\n          <AttachmentSelect source=\"devices\" label=\" \" />\n        </FormTab>\n        <FormTab label={translate(\"resources.events.tabs.objects\")}>\n          <AttachmentSelect source=\"objects\" label=\" \" />\n        </FormTab>\n        <FormTab label={translate(\"resources.events.tabs.companies\")}>\n          <AttachmentSelect source=\"companies\" label=\" \" />\n        </FormTab>\n      </TabbedForm>\n    </Edit>\n  )\n}","import {\n  List, ListProps, FilterProps, Filter, TextInput, useListContext, Datagrid,\n  TextField, DateField, FunctionField, useTranslate, Record, Pagination\n} from \"react-admin\"\nimport React from \"react\"\nimport { ResourceName } from \"../../core/ResourceName\"\n\nconst ListFilters = (props: Omit<FilterProps, 'children'>) => (\n  <Filter {...props}>\n    <TextInput source=\"name\" alwaysOn />\n  </Filter>\n)\n\nconst EventGrid = () => {\n  const { loading } = useListContext()\n  const translate = useTranslate()\n  return (\n    <Datagrid size=\"small\" loaded={!loading} rowClick={(id) => `${ResourceName.EVENTS}/${id}/show`}>\n      <TextField source=\"id\" label=\"ID\" />\n      <TextField source=\"name\" />\n      <DateField source=\"dateStart\" showTime />\n      <DateField source=\"dateEnd\" showTime />\n      <FunctionField resource=\"events\" label={translate(\"resources.events.fields.status\")}\n        render={(r: Record | undefined) =>\n          (translate(`resources.enums.eventStatus.${r?.status.toLowerCase()}`))} />\n    </Datagrid>\n  )\n}\n\nexport const EventList = (props: ListProps) => (\n  <List {...props} actions={false} pagination={<Pagination rowsPerPageOptions={[10, 20, 50]} />} filters={<ListFilters />} perPage={20}>\n    <EventGrid />\n  </List>\n)","import React, { useState } from \"react\"\nimport {\n  Show, ShowProps, TabbedShowLayout, Tab, TextField, DateField,\n  useShowContext, useTranslate, FunctionField, Record\n} from \"react-admin\"\nimport {\n  Checkbox, TableContainer, Table, TablePagination,\n  TableHead, TableBody, TableRow, TableCell\n} from '@material-ui/core'\nimport { Attachment, ShowEvent, Device } from \"../../core/events/event-show\"\n\nconst ShowTitle = (record: any) => {\n  const { record: { name, dateStart, id } } = record\n  const translate = useTranslate()\n  return (\n    <span>{translate('resources.events.titles.show')}: {!!name && name} {dateStart.replace(\"T\", \" \")} {!!id && id}</span>\n  )\n}\n\nconst LinkRow = ({ record }: { record: Device }) => {\n  const translate = useTranslate()\n  return (\n    <TableRow>\n      <TableCell>{record.name}</TableCell>\n      {!!record.type &&\n        <TableCell>{translate(`resources.enums.deviceType.${record.type}`)}</TableCell>}\n      <TableCell>\n        <Checkbox checked={record.linked} disabled />\n      </TableCell>\n    </TableRow>\n  )\n}\n\nconst AttachmentShow = ({ type }: { type: 'devices' | 'objects' | 'companies' }) => {\n  const { record } = useShowContext<ShowEvent>()\n  const translate = useTranslate()\n  const [page, setPage] = useState(0)\n  const [perPage, setPerPage] = useState(10)\n\n  const handlePageChange = (e: any, p: number) => setPage(p)\n  const handlePerPageChange = (e: any) => {\n    setPerPage(e?.target.value)\n    setPage(0)\n  }\n\n  return (\n    <>\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell style={type === 'devices' ? { width: \"45%\" } : { width: \"90%\" }}>{translate(`resources.events.fields.${type}`)}</TableCell>\n              {type === 'devices' &&\n                <TableCell style={{ width: \"45%\" }}>{translate(`resources.events.fields.type`)}</TableCell>}\n              <TableCell style={{ width: \"10%\" }}>{translate(`resources.events.fields.status`)}</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {!!record && record[type] !== undefined && record[type].slice(page * perPage, (page + 1) * perPage).map((attachment: Attachment) => (\n              <LinkRow record={attachment as Device} key={attachment.id} />\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination component=\"div\" count={!!record && record[type] ? record[type].length as number : 0}\n        rowsPerPage={perPage} page={page} onChangePage={handlePageChange}\n        onChangeRowsPerPage={handlePerPageChange} rowsPerPageOptions={[10, 20, 50]}\n        labelRowsPerPage={translate('ra.navigation.rows_per_page')}\n        labelDisplayedRows={({ from, to, count }) => `${from}-${to} // ${count}`} />\n    </>\n  )\n}\n\nexport const EventShow = (props: ShowProps) => {\n  const translate = useTranslate()\n  return (\n    <Show {...props} title={<ShowTitle />}>\n      <TabbedShowLayout>\n        <Tab label={translate(\"resources.events.tabs.general\")}>\n          <TextField source=\"id\" label=\"ID\" />\n          <TextField source=\"name\" />\n          <DateField source=\"dateStart\" showTime />\n          <DateField source=\"dateEnd\" showTime />\n          <FunctionField resource=\"events\" label={translate(\"resources.events.fields.status\")}\n            render={(r: Record | undefined) =>\n              (translate(`resources.enums.eventStatus.${r?.status.toLowerCase()}`))} />\n        </Tab>\n        <Tab label={translate(\"resources.events.tabs.devices\")}>\n          <AttachmentShow type=\"devices\" />\n        </Tab>\n        <Tab label={translate(\"resources.events.tabs.objects\")}>\n          <AttachmentShow type=\"objects\" />\n        </Tab>\n        <Tab label={translate(\"resources.events.tabs.companies\")}>\n          <AttachmentShow type=\"companies\" />\n        </Tab>\n      </TabbedShowLayout>\n    </Show>\n  )\n}","import React from 'react'\nimport {\n  makeStyles,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from '@material-ui/core'\nimport { Show, ShowProps, useTranslate, ArrayField, Datagrid, TextField } from 'react-admin'\n\nconst useStyles = makeStyles({\n  noBottomBorder: {\n    borderBottom: 'none',\n  },\n  quarterWidth: {\n    width: '25%',\n  },\n})\n\nconst ViewTitle = (record: any) => {\n  const {\n    record: { eventName, date, id },\n  } = record\n  const t = useTranslate()\n  const description = `${eventName} ${date.replace('T', ' ')} ${id}`\n  return (\n    <span>{`${t('resources.stats-overall-view.name')}: ${description}`}</span>\n  )\n}\n\nconst BlockGrid = (props: any) => {\n  const {\n    record: {\n      soldAbo, soldInfix, soldNormal, soldPoints, soldService\n    }\n  } = props\n  const classes = useStyles()\n  const translate = useTranslate()\n\n  const firstColumnEntries = [\n    { label: \"abo\", value: soldAbo },\n    { label: \"infix\", value: soldInfix },\n    { label: \"normal\", value: soldNormal },\n    { label: \"points\", value: soldPoints },\n    { label: \"service\", value: soldService },\n  ].map(({ label, value }) => (\n    !!value && (\n      <div key={label}>{translate(`resources.stats-overall-view.fields.${label}`)}</div>\n    )\n  ))\n\n  const secondColumnEntries = [\n    { label: \"enteredAbo\", value: soldAbo },\n    { label: \"enteredInfix\", value: soldInfix },\n    { label: \"enteredNormal\", value: soldNormal },\n    { label: \"enteredPoints\", value: soldPoints },\n    { label: \"enteredService\", value: soldService },\n  ].map(({ label, value }) =>\n    !!value && (\n      <TextField key={label} source={label} label=\" \" />\n    ))\n\n  const thirdColumnEntries = [\n    { label: \"soldAbo\", value: soldAbo },\n    { label: \"soldInfix\", value: soldInfix },\n    { label: \"soldNormal\", value: soldNormal },\n    { label: \"soldPoints\", value: soldPoints },\n    { label: \"soldService\", value: soldService },\n  ].map(({ label, value }) => (\n    !!value && (\n      <TextField key={label} source={label} label=\" \" />\n    )\n  ))\n\n  return (\n    <TableContainer style={{ paddingTop: \"10px\", marginBottom: \"10px\" }}>\n      <Table padding=\"none\">\n        <TableBody>\n          <TableRow>\n            <TableCell style={{ width: \"15%\" }} className={classes.noBottomBorder} />\n            <TableCell style={{ width: \"40%\" }} className={classes.noBottomBorder}>{firstColumnEntries}</TableCell>\n            <TableCell style={{ width: \"15%\" }} className={classes.noBottomBorder}>{secondColumnEntries}</TableCell>\n            <TableCell style={{ width: \"15%\" }} className={classes.noBottomBorder}>{thirdColumnEntries}</TableCell>\n            <TableCell style={{ width: \"15%\" }} className={classes.noBottomBorder} />\n          </TableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n\nconst TribuneGrid = () => {\n  const translate = useTranslate()\n\n  const TribuneHeader = () => (\n    <TableHead>\n      <TableRow>\n        <TableCell style={{ width: \"15%\" }} />\n        <TableCell style={{ width: \"40%\" }}>{translate('resources.stats-overall-view.fields.block')}</TableCell>\n        <TableCell style={{ width: \"15%\" }} />\n        <TableCell style={{ width: \"15%\" }} />\n        <TableCell style={{ width: \"15%\" }} />\n      </TableRow>\n    </TableHead>\n  )\n\n  return (\n    <ArrayField source=\"blocks\">\n      <Datagrid expand={<BlockGrid />} padding=\"none\" header={<TribuneHeader />} isRowExpandable={record => !!record.sold}>\n        <TextField source=\"name\" label=\"Sektor\" />\n        <TextField source=\"entered\" label=\" \" />\n        <TextField source=\"sold\" label=\" \" />\n        <TextField source=\"capacity\" label=\" \" />\n      </Datagrid>\n    </ArrayField>\n  )\n}\n\nconst ObjectGrid = () => {\n  const translate = useTranslate()\n\n  const objectHeader = () => (\n    <TableHead>\n      <TableRow>\n        <TableCell style={{ width: \"10%\" }} />\n        <TableCell style={{ width: \"45%\" }}>{translate('resources.stats-overall-view.fields.tribune')}</TableCell>\n        <TableCell style={{ width: \"15%\" }} />\n        <TableCell style={{ width: \"15%\" }} />\n        <TableCell style={{ width: \"15%\" }} />\n      </TableRow>\n    </TableHead>\n  )\n\n  return (\n    <ArrayField source=\"tribunes\">\n      <Datagrid expand={<TribuneGrid />} padding=\"none\" header={objectHeader}>\n        <TextField source=\"name\" label=\"Trybuna\" />\n        <TextField source=\"entered\" label=\" \" />\n        <TextField source=\"sold\" label=\" \" />\n        <TextField source=\"capacity\" label=\" \" />\n      </Datagrid>\n    </ArrayField>\n  )\n}\n\nexport const OverallView = (props: ShowProps) => {\n  const translate = useTranslate()\n\n  const overallHeader = () => (\n    <TableHead>\n      <TableRow>\n        <TableCell style={{ width: \"5%\" }} />\n        <TableCell style={{ width: \"50%\" }}>{translate('resources.stats-overall-view.fields.name')}</TableCell>\n        <TableCell style={{ width: \"15%\" }}>{translate('resources.stats-overall-view.fields.entered')}</TableCell>\n        <TableCell style={{ width: \"15%\" }}>{translate('resources.stats-overall-view.fields.sold')}</TableCell>\n        <TableCell style={{ width: \"15%\" }}>{translate('resources.stats-overall-view.fields.capacity')}</TableCell>\n      </TableRow>\n    </TableHead>\n  )\n\n  return (\n    <Show title={<ViewTitle />} {...props}>\n      <ArrayField source=\"objects\">\n        <Datagrid expand={<ObjectGrid />} padding=\"none\" header={overallHeader}>\n          <TextField source=\"name\" label=\"Obiekt\" />\n          <TextField source=\"entered\" />\n          <TextField source=\"sold\" />\n          <TextField source=\"capacity\" />\n        </Datagrid>\n      </ArrayField>\n    </Show>\n  )\n}","import * as React from 'react'\nimport {\n  Datagrid,\n  DateField,\n  Filter,\n  FilterProps,\n  List,\n  ListProps,\n  TextField,\n  TextInput,\n  useListContext,\n} from 'react-admin'\nimport { ResourceName } from '../../../core/ResourceName'\n\nconst ListFilters = (props: Omit<FilterProps, 'children'>) => (\n  <Filter {...props}>\n    <TextInput source=\"name\" alwaysOn />\n  </Filter>\n)\n\nconst OverallViewGrid = () => {\n  const { loading } = useListContext()\n  // TODO: header doesn't change color when theme value is switched\n  //  the reason is the need to change the theme at <Admin> level - not at <Layout> level\n  //  the solution is here - https://stackoverflow.com/a/63967145 -> after that customReducer needs to be removed\n  return (\n    <Datagrid\n      loaded={!loading}\n      rowClick={(id) => `${ResourceName.STATS_OVERALL_VIEW}/${id}/show`}\n    >\n      <TextField source=\"id\" />\n      <TextField source=\"name\" />\n      <DateField source=\"dateStart\" showTime />\n      <DateField source=\"dateEnd\" showTime />\n    </Datagrid>\n  )\n}\n\nexport const OverallViewList = (props: ListProps) => (\n  <List {...props} actions={false} filters={<ListFilters />} sort={{ field: 'id', order: 'DESC'}} >\n    <OverallViewGrid />\n  </List>\n)\n","import {\n  List, ListProps, useListContext, useTranslate, useMutation, sanitizeFetchType,\n  useRefresh, UPDATE_MANY, useListSortContext\n} from \"react-admin\"\nimport React from \"react\";\nimport { ButtonBase, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from \"@material-ui/core\"\nimport { ArrowDownward, ArrowUpward } from \"@material-ui/icons\"\nimport { AccessUsingDto } from \"../../../core/dto/access-using.dto\"\nimport { ResourceName } from \"../../../core/ResourceName\"\nimport { MobilePostPagination } from \"../../common/Pagination\";\n\nconst AccessUsingsGrid = () => {\n  const translate = useTranslate()\n  const { data, ids, } = useListContext()\n  const [mutate] = useMutation()\n  const refresh = useRefresh()\n  const { currentSort, setSort } = useListSortContext()\n\n  const patchAccess = async (access: AccessUsingDto) => {\n    await mutate({\n      type: sanitizeFetchType(UPDATE_MANY),\n      resource: ResourceName.ACCESS_USINGS,\n      payload: {\n        ids: [access.id],\n        data: {\n          active: !access.active\n        }\n      }\n    }, { returnPromise: true })\n    refresh()\n  }\n\n  const inverseOrder = () => (currentSort.order === 'ASC' ? 'DESC' : 'ASC')\n\n  const handleSortChange = (field: string) => {\n    setSort(field, currentSort.field === field ? inverseOrder() : 'DESC')\n  }\n\n  const HeaderCell = (name: string, display: string) => (\n    <div style={{ display: \"flex\", cursor: \"pointer\", textAlign: \"center\" }}>\n      {currentSort.field === name &&\n        <>\n          {currentSort.order === 'ASC' ? <ArrowUpward /> : <ArrowDownward />}\n        </>}\n      <div> {translate(display)} </div>\n    </div>\n  )\n\n  return (\n    <TableContainer>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell\n              onClick={() => handleSortChange('date')}>\n              {HeaderCell('date', 'resources.access-using.fields.date')}</TableCell>\n            <TableCell>\n              {translate('resources.access-using.fields.direction')}</TableCell>\n            <TableCell>\n              {translate('resources.access-using.fields.active')}</TableCell>\n            <TableCell>\n              {translate('resources.access-using.fields.ticketId')}</TableCell>\n            <TableCell style={{ width: \"20%\" }} />\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {ids.map((id) => (\n            <TableRow key={id}>\n              <TableCell>{data[id]?.date.replace(\"T\", \" \").substring(0, 19)}</TableCell>\n              <TableCell>{data[id]?.direction}</TableCell>\n              <TableCell>{data[id]?.active ? translate('const.yes') : translate('const.no')}</TableCell>\n              <TableCell>{data[id]?.ticketId}</TableCell>\n              <TableCell>\n                <ButtonBase\n                  style={{ width: \"100%\", fontSize: \"13px\" }}\n                  onClick={() => patchAccess(data[id] as AccessUsingDto)}>\n                  {translate(`resources.access-using.actions.${data[id].active ? `deactivate` : `activate`}`)}\n                </ButtonBase>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n\nexport const AccessUsingsList = (props: ListProps) => (\n  <List {...props} exporter={false} pagination={<MobilePostPagination />} perPage={20} sort={{ field: \"date\", order: \"DESC\" }}>\n    <AccessUsingsGrid />\n  </List>\n)","import { TicketType } from '../enum/TicketType'\nimport { BookingType } from '../enum/BookingType'\n\nconst bookingTypeMapping: Record<BookingType, string> = {\n  [BookingType.NORMAL]: 'resources.enums.bookingType.normal',\n  [BookingType.ABO]: 'resources.enums.bookingType.abo',\n  [BookingType.INFIX]: 'resources.enums.bookingType.infix',\n  [BookingType.POINTS]: 'resources.enums.bookingType.points',\n  [BookingType.SERVICE]: 'resources.enums.bookingType.service',\n}\n\nconst ticketTypeMapping: Record<TicketType, string> = {\n  [TicketType.K]: 'resources.enums.ticketType.k',\n  [TicketType.M]: 'resources.enums.ticketType.m',\n  [TicketType.Z]: 'resources.enums.ticketType.z',\n  [TicketType.N]: 'resources.enums.ticketType.n',\n  [TicketType.P]: 'resources.enums.ticketType.p',\n  [TicketType.U]: 'resources.enums.ticketType.u',\n  [TicketType.R]: 'resources.enums.ticketType.r',\n}\n\nexport const mapFromBookingType = (bookingType: BookingType): string =>\n  bookingTypeMapping[bookingType]\n\nexport const mapFromTicketType = (ticketType: TicketType): string =>\n  ticketTypeMapping[ticketType]\n","import * as React from 'react'\nimport { useShowContext } from 'react-admin'\nimport {\n  Box,\n  createStyles,\n  makeStyles,\n  Theme,\n  Typography,\n} from '@material-ui/core'\nimport { TicketDetails } from '../../core/ticket-details/ticket-details'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    header: {\n      letterSpacing: theme.spacing(0.2),\n    },\n  }),\n)\nexport const TicketDetailsHeader = () => {\n  const classes = useStyles()\n  const { record } = useShowContext<TicketDetails>()\n  return (\n    <Box m={2}>\n      <Typography className={classes.header} variant=\"h5\" paragraph>\n        {record?.firstname} {record?.lastname}\n      </Typography>\n    </Box>\n  )\n}\n","import * as React from 'react'\nimport {\n  DateField,\n  Labeled,\n  TextField,\n  TextFieldProps,\n  useRecordContext,\n  useTranslate,\n} from 'react-admin'\nimport {\n  Box,\n  Chip,\n  createStyles,\n  makeStyles,\n  Paper,\n  Theme,\n} from '@material-ui/core'\nimport { mapFromTicketType } from '../../core/ticket-details/ticket-details-values.mapper'\nimport { TicketDetails } from '../../core/ticket-details/ticket-details'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ticketBox: {\n      display: 'flex',\n      flexDirection: 'column',\n      padding: theme.spacing(1),\n      marginLeft: theme.spacing(1),\n    },\n    ticketField: {\n      padding: theme.spacing(0),\n      margin: theme.spacing(0),\n      marginBottom: theme.spacing(0.5),\n    },\n  }),\n)\n\nexport const TicketDetailsTicketsField = ({ label }: TextFieldProps) => {\n  const classes = useStyles()\n  const t = useTranslate()\n  const record = useRecordContext<TicketDetails>()\n  const mappedRecords = (record.tickets || []).map(\n    ({ id, ticketType, createdAt, ticketCode }) => ({\n      id,\n      ticketCode,\n      ticketType: mapFromTicketType(ticketType),\n      createdAt,\n    }),\n  )\n  const fields = mappedRecords.map((mappedRecord) => (\n    <Paper\n      key={mappedRecord.id}\n      variant=\"elevation\"\n      className={classes.ticketBox}\n    >\n      <Labeled\n        className={classes.ticketField}\n        label=\"resources.ticket-details.fields.tickets.fields.id\"\n      >\n        <TextField\n          className={classes.ticketField}\n          record={mappedRecord}\n          source=\"id\"\n        />\n      </Labeled>\n      <Labeled\n        className={classes.ticketField}\n        label=\"resources.ticket-details.fields.tickets.fields.ticketCode\"\n      >\n        <TextField\n          className={classes.ticketField}\n          record={mappedRecord}\n          source=\"ticketCode\"\n        />\n      </Labeled>\n      <Labeled\n        className={classes.ticketField}\n        label=\"resources.ticket-details.fields.tickets.fields.ticketType\"\n      >\n        <Chip\n          label={t(mappedRecord.ticketType)}\n          className={classes.ticketField}\n        />\n      </Labeled>\n      <Labeled\n        className={classes.ticketField}\n        label=\"resources.ticket-details.fields.tickets.fields.createdAt\"\n      >\n        <DateField\n          className={classes.ticketField}\n          record={mappedRecord}\n          source=\"createdAt\"\n          showTime\n        />\n      </Labeled>\n    </Paper>\n  ))\n  return (\n    <Labeled label={label}>\n      <Box display=\"flex\" flexWrap=\"wrap\" flexDirection=\"row\">\n        {fields}\n      </Box>\n    </Labeled>\n  )\n}\n","import {\n  CREATE,\n  CreateParams,\n  sanitizeFetchType,\n  UPDATE_MANY,\n  UpdateManyParams,\n} from 'react-admin'\nimport { TicketDetails } from './ticket-details'\nimport { ResourceName } from '../ResourceName'\nimport { AccessUsingsCreateParams } from '../access-usings/access-usings-create.params'\nimport { Access, Action, ToggleButtonState } from './toggle-button'\n\ntype Mutation = {\n  type: string\n  resource: string\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  payload?: object\n}\n\nconst blockMutation = (ticketDetails: TicketDetails): Mutation => {\n  const { accessesIds, tickets } = ticketDetails\n  const ticketIds = tickets.map((t) => t.id)\n  return {\n    type: sanitizeFetchType(CREATE),\n    resource: ResourceName.ACCESS_USINGS,\n    payload: {\n      data: { ticketIds, accessIds: accessesIds },\n    } as CreateParams<AccessUsingsCreateParams>,\n  }\n}\n\nconst unblockMutation = ({ tickets }: TicketDetails): Mutation => {\n  const activeAccessUsingIds = tickets\n    .flatMap((t) => t.accessUsings)\n    .filter((au) => au.active)\n    .map((au) => au.id)\n  return {\n    type: sanitizeFetchType(UPDATE_MANY),\n    resource: ResourceName.ACCESS_USINGS,\n    payload: {\n      ids: activeAccessUsingIds,\n      data: {\n        active: false\n      }\n    } as UpdateManyParams,\n  }\n}\n\ntype State = {\n  mutateQuery?: (ticketDetails: TicketDetails) => Mutation\n} & ToggleButtonState\n\nexport const blockAccessButtonInitialState = {\n  type: Access.DISABLED,\n  text: 'resources.ticket-details.actions.blockAccessNA',\n}\n\nexport const toggleAccessButtonReducer = (\n  state: State,\n  { type }: Action,\n): State => {\n  switch (type) {\n    case Access.BLOCK: {\n      return {\n        type,\n        text: 'resources.ticket-details.actions.blockAccess',\n        mutateQuery: blockMutation,\n      }\n    }\n    case Access.UNBLOCK: {\n      return {\n        type,\n        text: 'resources.ticket-details.actions.unblockAccess',\n        mutateQuery: unblockMutation,\n      }\n    }\n    case Access.DISABLED: {\n      return blockAccessButtonInitialState\n    }\n    default:\n      throw new Error()\n  }\n}\n","import * as React from 'react'\nimport { useEffect, useReducer } from 'react'\nimport {\n  useMutation,\n  useNotify,\n  useRecordContext,\n  useRefresh,\n  useShowContext,\n  useTranslate,\n} from 'react-admin'\nimport { Button, createStyles, makeStyles, Theme } from '@material-ui/core'\nimport { Access } from '../../core/ticket-details/toggle-button'\nimport { TicketDetails } from '../../core/ticket-details/ticket-details'\nimport {\n  blockAccessButtonInitialState,\n  toggleAccessButtonReducer,\n} from '../../core/ticket-details/toggle-access-button.reducer'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    button: {\n      color: theme.palette.common.white,\n      marginLeft: theme.spacing(1),\n    },\n  }),\n)\n\nexport const ToggleAccessButton = () => {\n  const classes = useStyles()\n  const t = useTranslate()\n  const notify = useNotify()\n  const { loading } = useShowContext()\n  const [{ type, text, mutateQuery }, dispatch] = useReducer(\n    toggleAccessButtonReducer,\n    blockAccessButtonInitialState,\n  )\n  const ticketDetails = useRecordContext<TicketDetails>()\n  const [mutate, { loading: mutationLoading }] = useMutation()\n  const refresh = useRefresh()\n\n  const isActive = (td: TicketDetails) =>\n    td.tickets.some((ticket) => ticket.accessUsings.some((a) => a.active))\n\n  useEffect(() => {\n    if (isActive(ticketDetails)) {\n      dispatch({ type: Access.UNBLOCK })\n    } else {\n      dispatch({ type: Access.BLOCK })\n    }\n  }, [ticketDetails])\n\n  const onClick = async () => {\n    try {\n      const query = mutateQuery?.(ticketDetails)\n      await mutate(query, { returnPromise: true })\n      refresh()\n    } catch (err) {\n      notify((err as Error)?.message, 'error')\n    }\n  }\n\n  return (\n    <Button\n      disabled={type === Access.DISABLED || loading || mutationLoading}\n      className={classes.button}\n      variant=\"contained\"\n      color=\"secondary\"\n      onClick={onClick}\n    >\n      {t(text)}\n    </Button>\n  )\n}\n","import { Access, Action, ToggleButtonState } from './toggle-button'\nimport { BookingUpdateRequest } from '../bookings/booking-update.request'\nimport { BookingDisabledOption } from '../enum/BookingDisabledOption'\n\ntype State = {\n  mutateParam?: BookingUpdateRequest['disabled']\n} & ToggleButtonState\n\nexport const blockTicketButtonInitialState = {\n  type: Access.DISABLED,\n  text: 'resources.ticket-details.actions.blockTicketNA',\n}\n\nexport const toggleTicketButtonReducer = (\n  state: State,\n  { type }: Action,\n): State => {\n  switch (type) {\n    case Access.BLOCK: {\n      return {\n        type,\n        text: 'resources.ticket-details.actions.blockTicket',\n        mutateParam: BookingDisabledOption.ADMIN,\n      }\n    }\n    case Access.UNBLOCK: {\n      return {\n        type,\n        text: 'resources.ticket-details.actions.unblockTicket',\n        mutateParam: null,\n      }\n    }\n    case Access.DISABLED: {\n      return blockTicketButtonInitialState\n    }\n    default:\n      throw new Error()\n  }\n}\n","import * as React from 'react'\nimport { useEffect, useReducer } from 'react'\nimport {\n  sanitizeFetchType,\n  UPDATE,\n  UpdateParams,\n  useMutation,\n  useNotify,\n  useRecordContext,\n  useRefresh,\n  useShowContext,\n  useTranslate,\n} from 'react-admin'\nimport { Button, createStyles, makeStyles, Theme } from '@material-ui/core'\nimport { TicketDetails } from '../../core/ticket-details/ticket-details'\nimport { BookingUpdateRequest } from '../../core/bookings/booking-update.request'\nimport { BookingDisabledOption } from '../../core/enum/BookingDisabledOption'\nimport { ResourceName } from '../../core/ResourceName'\nimport {\n  blockTicketButtonInitialState,\n  toggleTicketButtonReducer,\n} from '../../core/ticket-details/toggle-ticket-button.reducer'\nimport { Access } from '../../core/ticket-details/toggle-button'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    button: {\n      color: theme.palette.common.white,\n      marginLeft: theme.spacing(1),\n    },\n  }),\n)\n\nexport const ToggleTicketButton = () => {\n  const classes = useStyles()\n  const t = useTranslate()\n  const notify = useNotify()\n  const { loading } = useShowContext()\n  const [{ type, text, mutateParam }, dispatch] = useReducer(\n    toggleTicketButtonReducer,\n    blockTicketButtonInitialState,\n  )\n  const { id: bookingId, bookingDisabled } = useRecordContext<TicketDetails>()\n  const [mutate, { loading: mutationLoading }] = useMutation()\n  const refresh = useRefresh()\n\n  useEffect(() => {\n    if (bookingDisabled === null) {\n      dispatch({ type: Access.BLOCK })\n    } else if (bookingDisabled === BookingDisabledOption.ADMIN) {\n      dispatch({ type: Access.UNBLOCK })\n    } else {\n      dispatch({ type: Access.DISABLED })\n    }\n  }, [bookingDisabled])\n\n  const onClick = async () => {\n    try {\n      await mutate(\n        {\n          type: sanitizeFetchType(UPDATE),\n          resource: ResourceName.BOOKINGS,\n          payload: {\n            data: { id: bookingId, disabled: mutateParam },\n          } as UpdateParams<BookingUpdateRequest>,\n        },\n        { returnPromise: true },\n      )\n      refresh()\n    } catch (err) {\n      notify((err as Error)?.message, 'error')\n    }\n  }\n\n  return (\n    <Button\n      disabled={type === Access.DISABLED || loading || mutationLoading}\n      className={classes.button}\n      variant=\"contained\"\n      color=\"secondary\"\n      onClick={onClick}\n    >\n      {t(text)}\n    </Button>\n  )\n}\n","import React from 'react'\nimport {\n  useMediaQuery,\n  useTheme,\n  TableContainer,\n  Table,\n  TableHead,\n  TableBody,\n  TableRow,\n  TableCell,\n} from '@material-ui/core'\nimport { ListProps, List, Pagination, useListContext, useTranslate } from 'react-admin'\nimport { MobilePostPagination } from '../../common/Pagination'\n\ninterface AccessListProps extends ListProps {\n  setSelected: (prop: number | undefined) => void\n}\n\nconst AccessGrid = ({\n  setSelected,\n}: {\n  setSelected: (prop: number | undefined) => void\n}) => {\n  const translate = useTranslate()\n  const { data, ids } = useListContext()\n\n  return (\n    <>\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>ID</TableCell>\n              <TableCell>{translate('resources.access.fields.name')}</TableCell>\n              <TableCell>{translate('resources.access.fields.entranceId')}</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {ids.map((id) => (\n              <TableRow key={id} style={{ cursor: 'pointer' }} hover>\n                <TableCell onClick={() => setSelected(id as number)}>\n                  {data[id]?.id}\n                </TableCell>\n                <TableCell onClick={() => setSelected(id as number)}>\n                  {data[id]?.name}\n                </TableCell>\n                <TableCell onClick={() => setSelected(id as number)}>\n                  {data[id]?.entranceId}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  )\n}\n\nexport const AccessList = ({setSelected, ...props}: AccessListProps) => {\n  const theme = useTheme()\n\n  return (\n    <List\n      perPage={20}\n      exporter={false}\n      pagination={\n        useMediaQuery(theme.breakpoints.up('md')) ? (\n          <Pagination rowsPerPageOptions={[20, 50, 100]} />\n        ) : (\n          <MobilePostPagination />\n        )\n      }\n      {...props}\n    >\n      <AccessGrid setSelected={setSelected} />\n    </List>\n  )\n}\n","import { ButtonBase, Typography, withStyles } from '@material-ui/core'\n\nexport const FullWidthButton = withStyles({\n  root: {\n    width: '100%',\n    height: '52px',\n    fontSize: '17px',\n    marginBottom: '1px',\n    '&:hover': {\n      color: 'lightgrey',\n    }\n  },\n})(ButtonBase)\n\nexport const BackButton = withStyles({\n  root: {\n    height: '100%',\n    writingMode: 'vertical-lr',\n    textOrientation: 'mixed',\n    width: '100%',\n    '&:hover': {\n      color: 'lightgrey'\n    }\n  }\n})(ButtonBase)\n\nexport const BackButtonText = withStyles({\n  root: {\n    writingMode: 'vertical-lr',\n    textOrientation: 'mixed',\n  }\n})(Typography)","import React, { useState } from 'react'\nimport { ShowProps, Show, useShowContext, ResourceContextProvider, useTranslate } from 'react-admin'\nimport {\n  TableContainer,\n  Table,\n  TableBody,\n  TableRow,\n  TableCell,\n  Grid,\n  Paper,\n  Box\n} from '@material-ui/core'\nimport { Access } from '../../../core/accesses/access'\nimport { FullWidthButton } from '../TicketDetailsComponents'\nimport { ResourceName } from '../../../core/ResourceName'\nimport { AccessUsingsList } from './AccessUsingsList'\n\nconst TabButton = ({\n  value,\n  selected,\n  change,\n  children,\n}: {\n  value: number\n  selected: number\n  change: (prop: number) => void\n  children: any\n}) => (\n  <FullWidthButton\n    style={{\n      background: selected === value ? 'rgba(0,0,0,0.2)' : 'inherit',\n    }}\n    onClick={() => change(value)}\n  >\n    {children}\n  </FullWidthButton>\n)\n\nconst AccessDetails = () => {\n  const translate = useTranslate()\n  const { record } = useShowContext<Access>()\n  return (\n    <TableContainer>\n      <Table>\n        <TableBody>\n          <TableRow>\n            <TableCell style={{ width: '50%' }}>ID</TableCell>\n            <TableCell style={{ width: '50%' }}>{record?.id}</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              {translate('resources.access.fields.name')}\n            </TableCell>\n            <TableCell>{record?.name}</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              {translate('resources.access.fields.bonus')}\n            </TableCell>\n            <TableCell>{record?.bonus}</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              {translate('resources.access.fields.entranceId')}\n            </TableCell>\n            <TableCell>{record?.entranceId}</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              {translate('resources.access.fields.modifiedById')}\n            </TableCell>\n            <TableCell>{record?.modifiedById}</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              {translate('resources.access.fields.createdById')}\n            </TableCell>\n            <TableCell>{record?.createdById}</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              {translate('resources.access.fields.allowReenter')}\n            </TableCell>\n            <TableCell>\n              {record?.allowReenter ? translate('const.yes') : translate('const.no')}\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              {translate('resources.access.fields.multipleEntry')}\n            </TableCell>\n            <TableCell>{record?.multipleEntry ? translate('const.yes') : translate('const.no')}</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              {translate('resources.access.fields.multiple')}\n            </TableCell>\n            <TableCell>{record?.multiple}</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              {translate('resources.access.fields.usePriority')}\n            </TableCell>\n            <TableCell>{record?.usePriority}</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              {translate('resources.access.fields.delay')}\n            </TableCell>\n            <TableCell>{record?.delay}</TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n\nconst AccessDates = () => {\n  const translate = useTranslate()\n  const { record } = useShowContext<Access>()\n  return (\n    <TableContainer>\n      <Table>\n        <TableBody>\n          <TableRow>\n            <TableCell style={{ width: '50%' }}>\n              {translate('resources.access.fields.releaseTime')}\n            </TableCell>\n            <TableCell style={{ width: '50%' }}>\n              {record?.releaseTime &&\n                record.releaseTime.replace('T', ' ').substring(0, 19)}\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              {translate('resources.access.fields.releaseDayOfMonth')}\n            </TableCell>\n            <TableCell>{record?.releaseDayOfMonth}</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              {translate('resources.access.fields.releaseDayOfWeek')}\n            </TableCell>\n            <TableCell>{record?.releaseDayOfWeek}</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              {translate('resources.access.fields.createdAt')}\n            </TableCell>\n            <TableCell>\n              {record?.createdAt &&\n                record.createdAt.replace('T', ' ').substring(0, 19)}\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              {translate('resources.access.fields.modifiedAt')}\n            </TableCell>\n            <TableCell>\n              {record?.createdAt &&\n                record.modifiedAt.replace('T', ' ').substring(0, 19)}\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              {translate('resources.access.fields.activePeriod')}\n            </TableCell>\n            <TableCell>{record?.activePeriod}</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              {translate('resources.access.fields.activePeriodStartingFrom')}\n            </TableCell>\n            <TableCell>{record?.activePeriodStartingFrom}</TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n\nconst AccessUses = ({ id, tickets }: { id: string, tickets: number[] }) => {\n  const { basePath } = useShowContext<Access>()\n  return (\n    <Box height=\"50vh\">\n      <ResourceContextProvider value={ResourceName.ACCESS_USINGS}>\n        <AccessUsingsList\n          title=\" \"\n          basePath={basePath}\n          filter={{\n            ticketId: tickets.join(\" \"),\n            accessId: id\n          }}\n          actions={false}\n          pagination={false} />\n      </ResourceContextProvider>\n    </Box>\n  )\n}\n\nexport const AccessShow = (props: ShowProps) => {\n  const translate = useTranslate()\n  const [selectedTab, setSelectedTab] = useState(0)\n  const { record } = useShowContext()\n  const { id } = props\n\n  const handleTabChange = (prop: number) => setSelectedTab(prop)\n\n  return (\n    <Show {...props}>\n      <>\n        <Grid container style={{ height: \"50vh\" }}>\n          <Grid item xs={4}>\n            <Paper style={{ height: '100%' }}>\n              <TabButton\n                value={0}\n                selected={selectedTab}\n                change={handleTabChange}\n              >\n                {translate('resources.access.tabs.details')}\n              </TabButton>\n              <TabButton\n                value={1}\n                selected={selectedTab}\n                change={handleTabChange}\n              >\n                {translate('resources.access.tabs.dates')}\n              </TabButton>\n              <TabButton\n                value={2}\n                selected={selectedTab}\n                change={handleTabChange}\n              >\n                {translate('resources.access.tabs.uses')}\n              </TabButton>\n            </Paper>\n          </Grid>\n          <Grid item xs={8} style={{ overflowY: \"auto\" }}>\n            <Paper style={{ height: '100%' }}>\n              {selectedTab === 0 && <AccessDetails />}\n              {selectedTab === 1 && <AccessDates />}\n              {selectedTab === 2 && <AccessUses id={id as string} tickets={record?.tickets.map((ticket: any) => ticket.id) as number[]} />}\n            </Paper>\n          </Grid>\n        </Grid>\n      </>\n    </Show>\n  )\n}\n","import React, { useEffect } from 'react'\nimport {\n  ChipFieldProps,\n  DateField,\n  Labeled,\n  ResourceContextProvider,\n  Show,\n  ShowProps,\n  Tab,\n  TabbedShowLayout,\n  TextField,\n  useRecordContext,\n  useTranslate,\n  useShowContext,\n} from 'react-admin'\nimport {\n  Box,\n  Chip,\n  Divider,\n  Hidden,\n  Grid,\n  Typography,\n} from '@material-ui/core'\nimport { TicketDetails } from '../../core/ticket-details/ticket-details'\nimport { mapFromBookingType } from '../../core/ticket-details/ticket-details-values.mapper'\nimport { TicketDetailsHeader } from './TicketDetailsHeader'\nimport { TicketDetailsTicketsField } from './TicketDetailsTicketsField'\nimport { ToggleAccessButton } from './ToggleAccessButton'\nimport { ToggleTicketButton } from './ToggleTicketButton'\nimport { ResourceName } from '../../core/ResourceName'\nimport { LogList } from '../logs/LogList'\nimport { AccessList } from './accesses/AccessList'\nimport { AccessShow } from './accesses/AccessShow'\nimport { BackButton, BackButtonText } from './TicketDetailsComponents'\n\nconst MappedChipField = <T extends unknown>({\n  mapper,\n  source,\n}: ChipFieldProps & { mapper: (value: T) => string }) => {\n  const record = useRecordContext<TicketDetails>()\n  const t = useTranslate()\n  const mappedValue = mapper(record[source as string])\n  return <Chip label={t(mappedValue)} />\n}\n\nconst AccessDetailsView = () => {\n  const { record, basePath } = useShowContext()\n  const translate = useTranslate()\n  const [selectedAccess, setSelectedAccess] = React.useState<\n    number | undefined\n  >(undefined)\n\n  const handleAccessChange = (prop: number | undefined) => {\n    setSelectedAccess(prop)\n  }\n\n  useEffect(() => {\n    if (record?.accessesIds && record.accessesIds.length === 1) setSelectedAccess(record?.accessesIds.toString())\n  }, [record, setSelectedAccess])\n\n  return (\n    <>\n      <Divider />\n      <Hidden xlDown={!!selectedAccess && record?.accessesIds.length === 1}>\n        <Typography variant=\"h5\">{translate('resources.access.actions.choose')}</Typography>\n        <ResourceContextProvider value={ResourceName.ACCESSES}>\n          <AccessList\n            basePath={basePath}\n            actions={false}\n            filters={undefined}\n            filter={{ id: record?.accessesIds.toString() }}\n            title=\" \"\n            setSelected={handleAccessChange}\n          />\n        </ResourceContextProvider>\n      </Hidden>\n      {selectedAccess && (\n        <Grid container>\n          <Hidden xlDown={record?.accessesIds.length === 1}>\n            <Grid item xs={1}>\n              <BackButton onClick={() => setSelectedAccess(undefined)}>\n                <BackButtonText>\n                  {translate('resources.access.actions.back')}\n                </BackButtonText>\n              </BackButton>\n            </Grid>\n          </Hidden>\n          <Grid item xs={record?.accessesIds.length === 1 ? 12 : 11}>\n            <AccessShow\n              basePath={basePath}\n              actions={false}\n              id={selectedAccess.toString()}\n              resource={ResourceName.ACCESSES}\n              title=\" \"\n            />\n          </Grid>\n        </Grid>\n      )}\n    </>\n  )\n}\n\nconst ProfileDetailsView = () => {\n  const { record } = useShowContext()\n  return (\n    <Tab label=\"resources.ticket-details.tabs.profile\">\n      {record?.documentType &&\n        <TextField\n          addLabel\n          label=\"resources.ticket-details.fields.documentType\"\n          source=\"documentType\"\n        />}\n      {record?.pesel &&\n        <TextField\n          label=\"resources.ticket-details.fields.pesel\"\n          source=\"pesel\"\n        />}\n      {record?.documentNumber &&\n        <TextField\n          label=\"resources.ticket-details.fields.documentNumber\"\n          source=\"documentNumber\"\n        />}\n      <TextField\n        label=\"resources.ticket-details.fields.firstname\"\n        source=\"firstname\"\n      />\n      <TextField\n        label=\"resources.ticket-details.fields.lastname\"\n        source=\"lastname\"\n      />\n      {record?.gender &&\n        <TextField\n          label=\"resources.ticket-details.fields.gender\"\n          source=\"gender\"\n        />}\n      {record?.birthdate &&\n        <DateField\n          label=\"resources.ticket-details.fields.birthdate\"\n          source=\"birthdate\"\n        />}\n      {record?.company &&\n        <TextField\n          label=\"resources.ticket-details.fields.company\"\n          source=\"company\"\n        />}\n      {record?.nationality &&\n        <TextField\n          label=\"resources.ticket-details.fields.nationality\"\n          source=\"nationality\"\n        />}\n    </Tab>\n  )\n}\n\nconst StatusButtons = () => (\n  <>\n    <Divider />\n    <Box p={1} display=\"flex\" justifyContent=\"flex-end\">\n      <ToggleAccessButton />\n      <ToggleTicketButton />\n    </Box>\n  </>\n)\n\nexport const TicketDetailsView = (props: ShowProps) => {\n  const { id: ticketLogsBookingFilter, basePath } = props\n  return (\n    <Show {...props}>\n      <>\n        <TicketDetailsHeader />\n        <Divider />\n        <TabbedShowLayout syncWithLocation={false}>\n          <Tab label=\"resources.ticket-details.tabs.booking\">\n            <TextField\n              label=\"resources.ticket-details.fields.eventName\"\n              source=\"eventName\"\n            />\n            <TextField\n              label=\"resources.ticket-details.fields.seatId\"\n              source=\"seatId\"\n            />\n            <TextField\n              label=\"resources.ticket-details.fields.blockId\"\n              source=\"bookingId\"\n            />\n            <Labeled label=\"resources.ticket-details.fields.bookingType\">\n              <MappedChipField\n                source=\"bookingType\"\n                mapper={mapFromBookingType}\n              />\n            </Labeled>\n            <DateField\n              label=\"resources.ticket-details.fields.activeFrom\"\n              source=\"activeFrom\"\n              emptyText=\"N/A\"\n              showTime\n            />\n            <DateField\n              label=\"resources.ticket-details.fields.activeTo\"\n              source=\"activeTo\"\n              emptyText=\"N/A\"\n              showTime\n            />\n            <TicketDetailsTicketsField label=\"resources.ticket-details.fields.tickets.name\" />\n            <DateField\n              label=\"resources.ticket-details.fields.createdAt\"\n              source=\"createdAt\"\n              showTime\n            />\n            <DateField\n              label=\"resources.ticket-details.fields.modifiedAt\"\n              source=\"modifiedAt\"\n              showTime\n            />\n            <StatusButtons />\n          </Tab>\n          <Tab label=\"resources.ticket-details.tabs.logs\">\n            <Box paddingY={2}>\n              <ResourceContextProvider value={ResourceName.TICKET_LOGS}>\n                <LogList\n                  basePath={basePath}\n                  filter={{ bookingId: ticketLogsBookingFilter }}\n                  filters={undefined}\n                  actions={false}\n                  title=\" \"\n                  noBooking />\n              </ResourceContextProvider>\n            </Box>\n          </Tab>\n          <Tab label=\"resources.ticket-details.tabs.profile\">\n            <ProfileDetailsView />\n          </Tab>\n          <Tab label=\"resources.ticket-details.tabs.accesses\">\n            <TextField\n              label=\"resources.ticket-details.fields.variantName\"\n              source=\"variantName\"\n            />\n            <AccessDetailsView />\n          </Tab>\n        </TabbedShowLayout>\n      </>\n    </Show>\n  )\n}\n","import * as React from 'react'\nimport { TextField, TextFieldProps, useRecordContext } from 'react-admin'\nimport { maskMiddlePart } from '../../core/common/mask.utils'\n\nexport const MaskField = ({ source, ...rest }: TextFieldProps) => {\n  const record = useRecordContext()\n  const recordWithMappedValue = {\n    ...record,\n    [source as string]: maskMiddlePart(record[source as string], 2),\n  }\n  return <TextField {...rest} record={recordWithMappedValue} source={source} />\n}\n","/**\n * @example\n * maskMiddlePart('importantValue', 3) === 'imp********lue'\n */\nexport const maskMiddlePart = (word: string, threshold: number) => {\n  const firstChars = word.substring(0, threshold)\n  const lastChars = word.slice(-threshold)\n  const restCharsLength = word.length - firstChars.length - lastChars.length\n  return `${firstChars}${'*'.repeat(\n    restCharsLength > 0 ? restCharsLength : 0,\n  )}${lastChars}`\n}\n","import { Box, Card, Divider, Typography } from '@material-ui/core'\nimport * as React from 'react'\nimport {\n  Datagrid,\n  List,\n  ListProps,\n  TextField,\n  useListContext,\n  useTranslate,\n  FunctionField,\n  Record\n} from 'react-admin'\nimport { useLocation } from 'react-router-dom'\nimport { ResourceName } from '../../core/ResourceName'\nimport { FindUserByTicket } from '../common/FindUserByTicket'\nimport { MaskField } from '../common/MaskField'\n\nconst TicketInfoGrid = () => {\n  const {\n    loading,\n    filterValues: { ticketCode },\n  } = useListContext()\n  const t = useTranslate()\n  return (\n    <>\n      <Box m={2}>\n        <Typography variant=\"h5\" paragraph>\n          {t('resources.ticket-info.search-list-title', { ticketCode })}\n        </Typography>\n      </Box>\n      <Divider />\n      <Datagrid\n        loaded={!loading}\n        rowClick={(id) => `${ResourceName.TICKET_DETAILS}/${id}/show`}\n      >\n        <TextField source=\"firstname\" sortable={false} />\n        <TextField source=\"lastname\" sortable={false} />\n        <MaskField source=\"pesel\" sortable={false} />\n        <TextField source=\"ticketCode\" sortable={false} />\n        <FunctionField\n          label='resources.ticket-info.fields.eventName'\n          render={(record: Record | undefined) => `${record?.eventName} ${record?.eventDate.replace(\"T\", \" \")} ${record?.eventId}`} />\n        <TextField source=\"id\" sortable={false} />\n      </Datagrid>\n    </>\n  )\n}\n\nexport const TicketInfoList = (props: ListProps) => {\n  const { search } = useLocation()\n  return (\n    <>\n      <Card style={{ marginTop: '2%' }}>\n        <FindUserByTicket titleCentered />\n      </Card>\n      {!!search && (\n        <List actions={false} pagination={false} {...props}>\n          <TicketInfoGrid />\n        </List>\n      )}\n    </>\n  )\n}\n","import {\n  Typography, Card, CardContent, Button, makeStyles, ButtonGroup,\n  Select, MenuItem, Grid, Paper, FormControlLabel, Switch, Theme, createStyles\n} from '@material-ui/core'\nimport React, { useEffect, useState } from 'react'\nimport { Title, useLocale, useSetLocale, useTranslate, useGetIdentity } from 'react-admin'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { List, Search } from '@material-ui/icons'\nimport { ThemeState } from '../../core/common/theme.reducer'\nimport { CHANGE_THEME } from '../../core/constants/reducer.actions'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    label: { width: '15vw', display: 'inline-block' },\n    button: { margin: theme.spacing(2) },\n    select: { width: '40vw', margin: theme.spacing(2) },\n    compsContainer: { width: '40vw', display: 'inline-block', margin: theme.spacing(2) }\n  }))\n\nconst DashboardCustomization = () => {\n  const { identity } = useGetIdentity()\n  const [componentsOpen, setComponentsOpen] = useState({\n    ticketfinder: localStorage.getItem(`${identity?.id}.ticketfinder`) === '1',\n    dashlogs: localStorage.getItem(`${identity?.id}.dashlogs`) === '1',\n  })\n  const translate = useTranslate()\n\n  const componentsChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setComponentsOpen({\n      ...componentsOpen,\n      [event.target.name]: event.target.checked,\n    })\n    localStorage.setItem(`${identity?.id}.${event.target.name}`, event.target.checked ? '1' : '0')\n  }\n\n  useEffect(() => {\n    setComponentsOpen({\n      ticketfinder: localStorage.getItem(`${identity?.id}.ticketfinder`) === '1',\n      dashlogs: localStorage.getItem(`${identity?.id}.dashlogs`) === '1',\n    })\n  }, [identity])\n\n  return (\n    <Grid container spacing={1}>\n      <Grid item xs={6}>\n        <Paper>\n          <Search />\n          <FormControlLabel\n            control={\n              <Switch\n                checked={componentsOpen.ticketfinder}\n                name='ticketfinder'\n                onChange={componentsChange} />}\n            label={translate('dashboard.settings.ticket-finder-label')}\n            labelPlacement=\"top\"\n            style={{ margin: '5%', textAlign: 'center', width: '90%' }}\n          />\n        </Paper>\n      </Grid>\n      <Grid item xs={6}>\n        <Paper>\n          <List />\n          <FormControlLabel\n            control={\n              <Switch\n                checked={componentsOpen.dashlogs}\n                name='dashlogs'\n                onChange={componentsChange} />}\n            label={translate('dashboard.settings.last-logs-label')}\n            labelPlacement=\"top\"\n            style={{ margin: '5%', textAlign: 'center', width: '90%' }}\n          />\n        </Paper>\n      </Grid>\n    </Grid>\n  )\n}\n\nexport const Configuration = () => {\n  const dispatch = useDispatch()\n  const theme = useSelector((state: ThemeState) => state.theme.darkMode === 'dark')\n  const classes = useStyles()\n  const locale = useLocale()\n  const setLocale = useSetLocale()\n  const translate = useTranslate()\n\n  return (\n    <Card>\n      <Title title={translate(\"settings.name\")} />\n      <CardContent>\n        <Typography className={classes.label}>{translate(\"settings.darkMode.name\")}</Typography>\n        <ButtonGroup className={classes.button}>\n          <Button\n            size=\"large\"\n            variant=\"contained\"\n            color={!theme ? 'primary' : 'default'}\n            onClick={() => theme && dispatch({ type: CHANGE_THEME })}>\n            {translate(\"settings.darkMode.light\")}\n          </Button>\n          <Button\n            size=\"large\"\n            variant=\"contained\"\n            color={theme ? 'primary' : 'default'}\n            onClick={() => !theme && dispatch({ type: CHANGE_THEME })}>\n            {translate(\"settings.darkMode.dark\")}\n          </Button>\n        </ButtonGroup>\n      </CardContent>\n      <CardContent>\n        <Typography className={classes.label}>{translate(\"settings.language.name\")}</Typography>\n        <Select\n          value={locale}\n          onChange={e => setLocale(e.target.value as string)}\n          className={classes.select}\n          variant=\"outlined\">\n          <MenuItem value=\"pl\">{translate(\"settings.language.pl\")}</MenuItem>\n          <MenuItem value=\"en\">{translate(\"settings.language.en\")}</MenuItem>\n        </Select>\n      </CardContent>\n      <CardContent>\n        <Typography className={classes.label}>{translate(\"dashboard.settings.title\")}</Typography>\n        <div className={classes.compsContainer}>\n          <DashboardCustomization />\n        </div>\n      </CardContent>\n    </Card>\n  )\n}","import * as React from 'react';\nimport { Route } from 'react-router-dom';\nimport { Configuration } from './Configuration'\n\nexport default [\n    <Route exact path=\"/configuration\" render={() => <Configuration/>} />\n]","import ReceiptIcon from '@material-ui/icons/Receipt'\nimport ViewComfyIcon from '@material-ui/icons/ViewComfy'\nimport PersonIcon from '@material-ui/icons/Person'\nimport React from 'react'\nimport { Admin, Resource } from 'react-admin'\nimport themeReducer from './core/common/theme.reducer'\nimport { providersFactory } from './core/providers.factory'\nimport { ResourceName } from './core/ResourceName'\nimport { AppLayout } from './main/common/AppLayout'\nimport { CustomerDetailsView } from './main/customer-details/CustomerDetailsView'\nimport { CustomerInfoList } from './main/customer-info/CustomerInfoList'\nimport { Dashboard } from './main/Dashboard'\nimport { EventEdit } from './main/events/EventEdit'\nimport { EventList } from './main/events/EventList'\nimport { EventShow } from './main/events/EventShow'\nimport { LogList } from './main/logs/LogList'\nimport { OverallView } from './main/stats/overall-view/OverallView'\nimport { OverallViewList } from './main/stats/overall-view/OverallViewList'\nimport { AccessUsingsList } from './main/ticket-details/accesses/AccessUsingsList'\nimport { TicketDetailsView } from './main/ticket-details/TicketDetailsView'\nimport { TicketInfoList } from './main/ticket-info/TicketInfoList'\nimport routes from './main/common/routes'\n\nconst App = () => {\n  const { authProvider, dataProvider, i18nProvider } = providersFactory(process.env.NODE_ENV)\n  return (\n    <Admin\n      dashboard={Dashboard}\n      authProvider={authProvider}\n      dataProvider={dataProvider}\n      i18nProvider={i18nProvider}\n      customReducers={{theme: themeReducer}}\n      customRoutes={routes}\n      layout={AppLayout}\n    >\n      <Resource\n        icon={ReceiptIcon}\n        name={ResourceName.TICKET_INFO}\n        list={TicketInfoList}\n      />\n      <Resource\n        name={ResourceName.TICKET_DETAILS}\n        show={TicketDetailsView}\n      />\n      <Resource\n        name={ResourceName.LOGS}\n        list={LogList}\n      />\n      <Resource\n        icon={ViewComfyIcon}\n        name={ResourceName.STATS_OVERALL_VIEW_LIST}\n        list={OverallViewList}\n      />\n      <Resource\n        icon={ViewComfyIcon}\n        name={ResourceName.STATS_OVERALL_VIEW}\n        show={OverallView}\n      />\n      <Resource\n        name={ResourceName.TICKET_LOGS} />\n      <Resource\n        name={ResourceName.ACCESSES} />\n      <Resource\n        name={ResourceName.ACCESS_USINGS}\n        list={AccessUsingsList}\n      />\n      <Resource\n        name={ResourceName.EVENTS}\n        list={EventList}\n        show={EventShow}\n        edit={EventEdit} />\n      <Resource\n        icon={PersonIcon}\n        name={ResourceName.CUSTOMER_INFO}\n        list={CustomerInfoList}\n      />\n      <Resource\n        name={ResourceName.CUSTOMER_DETAILS}\n        show={CustomerDetailsView} />\n      <Resource\n        name={ResourceName.BOOKINGS} />\n    </Admin>\n  )\n}\n\nexport default App\n","import { AuthProvider, DataProvider, I18nProvider, LegacyDataProvider } from 'react-admin'\nimport fakeDataProvider from './fake/fake-data.provider'\nimport fakeAuthProvider from './fake/providers/fake-auth.provider'\nimport authProvider from './auth/auth.provider'\nimport dataProvider from './data.provider'\nimport i18nProvider from './i18n.provider'\n\ninterface Providers {\n  readonly authProvider: AuthProvider\n  readonly dataProvider: DataProvider | LegacyDataProvider\n  readonly i18nProvider: I18nProvider\n}\n\nexport const providersFactory = (\n  env: 'development' | 'test' | 'production',\n): Providers => {\n  switch (env) {\n    case 'production':\n      return {\n        authProvider,\n        dataProvider,\n        i18nProvider,\n      }\n    case 'development':\n      return {\n        authProvider,\n        dataProvider,\n        i18nProvider,\n      }\n    default:\n      return {\n        authProvider: fakeAuthProvider,\n        dataProvider: fakeDataProvider,\n        i18nProvider,\n      }\n  }\n}\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import { initReactI18next } from 'react-i18next'\nimport i18n from 'i18next'\nimport plTranslation from './locales/pl/translation.json'\nimport enTranslation from './locales/en/translation.json'\n\nconst identity = localStorage.getItem('username')\nconst lng = identity && localStorage.getItem(`${identity}.lng`)\n\ni18n.use(initReactI18next)\n  .init({\n    lng: lng || 'pl',\n    fallbackLng: 'pl',\n    debug: false,\n    interpolation: {\n      escapeValue: false, // not needed for react as it escapes by default\n    },\n    resources: {\n      pl: { translation: plTranslation },\n      en: { translation: enTranslation },\n    },\n  })\n\nexport default i18n\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport './i18n.init'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}