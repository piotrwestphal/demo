{"version":3,"sources":["core/constants/reducer.actions.ts","core/common/theme.reducer.ts","core/ResourceName.ts","core/enum/TicketType.ts","core/enum/BookingType.ts","core/enum/BookingDisabledOption.ts","core/enum/CustomerDocumentType.ts","core/enum/Gender.ts","core/fake/providers/fake-access-usings.provider.ts","core/fake/providers/fake-bookings.provider.ts","core/fake/providers/fake-logs.provider.ts","core/fake/providers/fake-stats-overall-view-list.provider.ts","core/fake/providers/fake-stats-overall-view.provider.ts","core/fake/providers/fake-ticket-details.provider.ts","core/enum/AccessActivePeriodStartingOptions.ts","core/enum/AccessBonuses.ts","core/enum/DayOfWeek.ts","core/fake/providers/fake-ticket-info.provider.ts","core/fake/providers/fake-tickets.provider.ts","core/fake/providers/fake-accesses.provider.ts","core/enum/EventStatus.ts","core/fake/providers/fake-events.provider.ts","core/enum/DeviceDirection.ts","core/fake/providers/fake-customer-details.provider.ts","core/fake/providers/fake-customer-info.provider.ts","core/fake/providers/fake-access-dates.provider.ts","core/fake/providers/fake-companies.provider.ts","core/fake/providers/fake-objects.provider.ts","core/fake/providers/fake-palms.provider.ts","core/fake/providers/fake-engines.provider.ts","core/fake/providers/fake-entrances.provider.ts","core/fake/fake-data.provider.ts","core/fake/providers/fake-auth.provider.ts","core/common/header.parser.ts","core/common/fetch.utils.ts","core/api-urls.ts","core/auth/auth.provider.ts","core/access-usings/access-usings-sort.mapper.ts","core/auth/Authority.ts","core/access-usings/access-usings-filter.mapper.ts","core/access-usings/access-usings.provider.ts","core/bookings/booking-filter.mapper.ts","core/bookings/booking-sort.mapper.ts","core/bookings/bookings.mapper.ts","core/bookings/bookings.provider.ts","core/logs/log-filter.mapper.ts","core/logs/log-sort.mapper.ts","core/logs/extended-logs.mapper.ts","core/logs/extended-logs.provider.ts","core/common/filter.values.ts","core/stats/overall-view/overall-view-list-sort.mapper.ts","core/stats/overall-view/overall-view-list.mapper.ts","core/stats/overall-view/overall-view-list.provider.ts","core/stats/overall-view/overall-view.mapper.ts","core/stats/overall-view/overall-view.provider.ts","core/common/condition.builder.ts","core/common/mapper.utils.ts","core/ticket-details/ticket-details.mapper.ts","core/ticket-details/ticket-details.provider.ts","core/ticket-info/ticket-info.mapper.ts","core/ticket-info/ticket-info-sort.mapper.ts","core/ticket-info/ticket-info-filter.mapper.ts","core/ticket-info/ticket-info.provider.ts","core/tickets/tickets.provider.ts","core/accesses/access-filter.mapper.ts","core/accesses/access-sort.mapper.ts","core/accesses/access.provider.ts","core/events/event-sort.mapper.ts","core/events/event.provider.ts","core/customer-details/customer-details.provider.ts","core/customer-info/customer-info-filter.mapper.ts","core/customer-info/customer-info-sort.mapper.ts","core/customer-info/customer-info.provider.ts","core/access-dates/access-dates-filter.mapper.ts","core/access-dates/access-dates-sort.mapper.ts","core/access-dates/access-dates.provider.ts","core/companies/company-filter.mapper.ts","core/companies/company-sort.mapper.ts","core/companies/companies.provider.ts","core/objects/object-filter.mapper.ts","core/objects/object-sort.mapper.ts","core/objects/objects.provider.ts","core/devices/palms/palm-filter.mapper.ts","core/devices/palms/palm-sort.mapper.ts","core/devices/palms/palms.provider.ts","core/devices/engines/engine-filter.mapper.ts","core/devices/engines/engine-sort.mapper.ts","core/devices/engines/engines.provider.ts","core/entrances/entrance-sort.mapper.ts","core/entrances/entrance.provider.ts","core/data.provider.ts","core/i18n.provider.ts","core/auth/withSyncPermissions.ts","app.theme.ts","main/common/AppSubmenu.tsx","assets/icons/EngineDevice.js","main/common/AppMenu.tsx","main/common/AppLayout.tsx","main/common/SearchInput.tsx","main/common/FindCustomerByInfo.tsx","main/common/FindUserByTicket.tsx","core/auth/authority.mapper.ts","core/common/dashboard.ts","main/hooks/useHasAuthority.ts","main/events/EventList.tsx","main/logs/DateFilterInput.tsx","main/logs/LogsComponents.ts","main/logs/LogList.tsx","core/common/visual.utils.ts","main/Dashboard.tsx","core/ticket-details/toggle-button.ts","main/common/Configuration.tsx","main/common/routes.tsx","core/common/mask.utils.ts","main/common/MaskField.tsx","main/ticket-info/TicketInfoList.tsx","core/ticket-details/ticket-details-values.mapper.ts","main/ticket-details/TicketDetailsHeader.tsx","main/ticket-details/TicketDetailsTicketsField.tsx","core/ticket-details/toggle-access-button.reducer.ts","core/enum/Multiplicities.ts","main/ticket-details/ToggleAccessButton.tsx","core/ticket-details/toggle-ticket-button.reducer.ts","main/ticket-details/ToggleTicketButton.tsx","main/common/Pagination.tsx","main/ticket-details/accesses/AccessList.tsx","main/ticket-details/TicketDetailsComponents.tsx","main/ticket-details/accesses/AccessUsingsList.tsx","main/ticket-details/accesses/AccessDatesList.tsx","main/ticket-details/accesses/AccessShow.tsx","main/ticket-details/TicketDetailsView.tsx","main/stats/overall-view/OverallViewList.tsx","main/stats/overall-view/OverallView.tsx","main/events/EventShow.tsx","main/events/EventEdit.tsx","main/customer-info/CustomerInfoList.tsx","main/customer-details/CustomerBookingsList.tsx","main/customer-details/CustomerDetailsView.tsx","main/devices/palms/PalmList.tsx","main/devices/palms/PalmDialogs.tsx","main/devices/palms/PalmShow.tsx","main/devices/palms/PalmEdit.tsx","core/enum/StanbyMode.ts","main/devices/engines/EngineList.tsx","main/devices/engines/EngineDialogs.tsx","main/devices/engines/EngineShow.tsx","main/devices/engines/EngineEdit.tsx","main/events/EventCreate.tsx","main/Resources.tsx","core/common/dashboard.reducer.ts","App.tsx","core/providers.factory.ts","reportWebVitals.ts","i18n.init.ts","index.tsx"],"names":["CHANGE_THEME","UPDATE_DASHBOARD","identity","localStorage","getItem","initialState","darkMode","themeReducer","ResourceName","state","action","type","setItem","TicketType","BookingType","BookingDisabledOption","CustomerDocumentType","Gender","provider","updateMany","resource","params","a","Promise","resolve","data","create","id","update","fakeLogs","date","ticketCode","bookingId","deviceName","text","color","getList","total","length","fakeStatsOverallViewList","name","dateStart","dateEnd","eventName","capacity","sold","entered","objects","getOne","found","find","v","reject","Error","AccessActivePeriodStartingOptions","AccessBonuses","DayOfWeek","fakeTicketDetailsList","firstname","lastname","pesel","variantName","accessesIds","bookingType","NORMAL","activeFrom","activeTo","tickets","ticketType","K","accessUsings","createdAt","M","modifiedAt","bookingDisabled","STORNO","company","birthdate","documentType","ID_CARD","documentNumber","nationality","gender","MALE","seatId","blockId","accesses","objectName","tribuneName","blockName","rowNumber","fakeTicketInfoList","eventId","eventDate","fakeTickets","active","accessUsingsIds","EventStatus","fakeAccesses","bonus","N","entranceId","allowReenter","multipleEntry","multiple","usePriority","isTicketUnlockWithNextDay","releaseTime","releaseDayOfWeek","FRIDAY","releaseDayOfMonth","delay","activePeriod","activePeriodStartingFrom","FIRST_USE","variantsIds","accessDatesIds","createdById","modifiedById","createdByName","modifiedByName","DeviceDirection","fakeEvents","status","INACTIVE","externalId","infix","objectsIds","fakeCustomerDetailsList","bookingsIds","c","fakeCustomerInfoList","fakeCompanies","usersIds","eventsIds","fakeObjects","tribunesIds","fakePalms","fakeEngines","fakeEntrances","dataProviders","ACCESS_DATES","fakeAccessDatesProvider","ACCESSES","fakeAccessesProvider","ACCESS_USINGS","fakeAccessUsingsProvider","BOOKINGS","fakeBookingsProvider","COMPANIES","fakeCompaniesProvider","CUSTOMER_DETAILS","fakeCustomerDetailsProvider","CUSTOMER_INFO","fakeCustomerInfoProvider","ENGINES","fakeEnginesProvider","ENTRANCES","fakeEntrancesProvider","EVENTS","fakeEventsProvider","LOGS","fakeLogsProvider","OBJECTS","fakeObjectsProvider","PALMS","fakePalmsProvider","TICKETS","fakeTicketsProvider","TICKET_INFO","fakeTicketInfoProvider","TICKET_DETAILS","fakeTicketDetailsProvider","TICKET_LOGS","STATS_OVERALL_VIEW","fakeStatsOverallViewProvider","STATS_OVERALL_VIEW_LIST","fakeStatsOverallViewListProvider","fetchType","sanitizeFetchType","authProvider","login","logout","checkError","checkAuth","getPermissions","Set","getIdentity","fullName","contentRangeParser","headerValue","split","rangeFrom","summarySecondPartSplit","rangeTo","parseInt","getToken","baseHeaders","authHeaders","token","Authorization","getWithHeaders","url","headers","fetchUtils","fetchJson","method","Headers","then","json","postWithHeaders","body","JSON","stringify","get","baseUrl","path","getWithToken","getByConditions","getWithPagination","range","post","patch","put","API_V1","process","AUTH_URL","ROLES_URL","ACCESSES_URL","BOOKINGS_URL","CUSTOMERS_URL","EVENTS_URL","EXTENDED_LOGS_URL","TICKETS_URL","VARIANTS_URL","SEATS_URL","BLOCKS_URL","TRIBUNES_URL","OBJECTS_URL","ENGINES_URL","PALMS_URL","COMPANIES_URL","USERS_URL","ENTRANCES_URL","username","password","roleDtos","roles","map","r","join","removeItem","Authority","mapping","direction","ticketId","accessId","lambdaParameter","value","getFilterParams","filter","Object","keys","entries","key","getFilterMapper","mapper","reduce","p","ids","pendingUpdates","auId","req","all","au","ticketIds","accessIds","request","flatMap","Date","toISOString","IN","verifierDeviceId","sort","field","order","pagination","page","perPage","filterParams","toString","queryParams","push","pathParams","tId","ticket","mapToBookings","events","variants","disabled","customerId","variantId","ticketsIds","foundEvent","event","foundVariant","variant","eventDateStart","booking","eventIds","variantIds","mapToExtendedLog","locale","scheme","device","logEntry","language","includes","partialValues","partialFilterValues","extendedLogs","dto","ALL_RESULTS","mapToEventOverallView","overallViewList","calculateCapacity","seats","bookings","b","mapToTribuneOverallView","tribune","blocks","enteredBookingIds","blocksIds","block","filteredSeats","s","filteredBookingIds","concat","filteredBookings","book","filteredEnteredBookingIds","enteredBookingId","filteredEnteredBookings","enteredBookings","soldNormal","enteredNormal","soldAbo","ABO","enteredAbo","soldInfix","INFIX","enteredInfix","soldService","SERVICE","enteredService","soldPoints","POINTS","enteredPoints","mapToBlockOverallView","mapToOverallView","selectedEvent","tribunes","o","object","filteredTribunes","t","objectId","filteredBlocks","filteredSeatIds","seatsIds","tribuneId","mapToObjectOverallView","pendingSelectedEvent","pendingObjects","pendingTribunes","pendingBlocks","pendingSeats","bookingsCondition","pendingBookings","pendingEnteredBookings","overallViewData","buildFilterByIdsCondition","firstId","prev","curr","toMapById","values","Map","toUniqueValues","Array","from","mapToTicketDetails","seat","accessUsingById","mapToTicket","rowAlias","seatNumber","numberAlias","fetchTicketsWithAccessUsings","accessUsingIds","pendingCustomer","pendingEvent","pendingVariant","pendingTicketsWithAccessUsings","getBlock","customer","mapToTicketBaseInfoList","customers","bookingById","customerById","eventById","mapToTicketBaseInfo","getByUniqueIds","uniqueIds","bookingIds","customerIds","pendingCustomers","pendingEvents","ticketBaseInfoList","filterByTicketCodeCondition","access","modifiedBy","createdBy","entrance","userName","entranceNote","note","getTime","getTimezoneOffset","toJSON","previousData","eventUpdate","previousName","previousDateStart","previousDateEnd","activate","undefined","deactivate","getCompaniesList","companies","attachCompanies","eventCompanies","detachCompanies","attachObjects","eventObjects","detachObjects","getDevicesList","devices","attachDevices","eventDevices","detachDevices","info","q","categoryId","isWatched","lastRefresh","onlineInfixCeck","multiplicity","lock","palmId","lockName","unlock","setMobileDeviceId","mobileDeviceId","resetMobileDeviceId","attachEvents","detachEvents","attachEntrances","entrancesIds","detachEntrances","address","engineEvents","engineEntrances","setTSCanCredentials","removeTSCanCredentials","setStandbyMode","accessDatesProvider","accessesProvider","accessUsingsProvider","bookingsProvider","companiesProvider","customersDetailsProvider","customersInfoProvider","engineProvider","entrancesProvider","eventsProvider","logsProvider","objectsProvider","palmProvider","ticketsProvider","ticketInfoProvider","ticketDetailsProvider","statsOverallViewProvider","statsOverallViewListProvider","translate","options","i18n","changeLocale","changeLanguage","getLocale","areRolesOutOfSync","local","remote","size","every","has","validateRoles","dataProvider","rolesFromRemote","rolesFromLocalStorage","console","error","withSynchronizedPermissions","Proxy","target","overriddenTheme","defaultTheme","typography","fontFamily","body1","fontWeight","body2","h5","LightTheme","palette","primary","deepPurple","secondary","green","DarkTheme","light","main","dark","contrastText","useStyles","makeStyles","theme","icon","minWidth","spacing","sidebarIsOpen","transition","paddingLeft","sidebarIsClosed","SubMenu","props","handleToggle","isOpen","children","sidebarOpen","useSelector","admin","ui","classes","header","MenuItem","button","onClick","ListItemIcon","className","ExpandMore","Typography","Tooltip","title","placement","Collapse","in","timeout","unmountOnExit","component","disablePadding","createSvgIcon","React","d","open","width","closed","AppMenu","avRes","useState","menuStats","menuDevices","setOpen","availableResources","getResources","useTranslate","menu","style","userSelect","DashboardMenuItem","MenuItemLink","to","primaryText","leftIcon","Receipt","Person","List","Event","ViewComfy","Sort","transform","anyDeviceResourcesAvailable","VideoLabel","PhoneAndroid","EngineDevice","flex","textOverflow","whiteSpace","overflow","AppUserMenu","UserMenu","Settings","AppTopBar","AppBar","userMenu","AppLayout","Layout","appBar","RoundInputBox","withStyles","root","borderRadius","marginLeft","display","flexDirection","border","borderColor","Box","RoundInputBoxBtn","background","borderTopLeftRadius","borderBottomLeftRadius","margin","Button","RoundInputBoxFC","marginTop","FormControl","SearchInput","label","onValue","inputError","setInputError","inputValue","setInputValue","handleClick","Input","disableUnderline","placeholder","onInput","onKeyDown","ev","FormHelperText","FindCustomerByInfo","history","useHistory","notify","useNotify","setError","useMutation","mutate","loading","fetchCustomers","useCallback","GET_LIST","payload","returnPromise","replace","onlyCustomer","pathname","search","message","CardHeader","CardContent","FindUserByTicket","fetchTickets","onlyTicket","DashboardItem","VIEW_LOGS","VIEW_STATS_OVERALL_VIEW","VIEW_EVENTS","EDIT_EVENTS","CREATE_EVENTS","hasAuthorityWithGivenPermissions","authority","permissions","permissionSet","mapAuthorityToRequiredPermissions","some","reqPerms","useHasAuthority","usePermissions","loaded","actionColumnsWithoutPadding","padding","ListFilters","Filter","TextInput","source","alwaysOn","LastEvents","hasAuthority","Datagrid","FunctionField","render","record","toLowerCase","Link","IconButton","EventDateField","toDateString","DateField","getHours","getMinutes","showTime","EventGrid","compactMode","useListContext","useTheme","smallScreen","useMediaQuery","breakpoints","down","rowClick","TextField","EventList","actions","filters","exporter","Pagination","rowsPerPageOptions","createStyles","container","justifyContent","verticalAlign","marginBottom","DateFilterInput","defaultFromDate","now","setHours","defaultToDate","dateFrom","setDateFrom","dateTo","setDateTo","useField","onChange","input","meta","touched","convertedDate","substring","defaultValue","e","parse","helperText","alignSelf","VCenterGrid","Grid","VHCenterGrid","alignItems","BookingButton","xSmallScreen","ShowButton","basePath","LogExpand","noBooking","item","xs","Divider","LogBody","rowStyle","expand","TableBody","DatagridRow","LogHeader","DatagridHeader","sortable","LogList","listProps","useLocale","SelectInput","choices","isRowExpandable","hexcolor","substr","INACTIVE_COMPONENTS_KEY","ToggleType","textAlign","letterSpacing","lastLogs","TicketFinder","Card","CustomerFinder","LastLogs","ResourceContextProvider","Dashboard","inactiveComponents","dashboard","isItemActive","inactiveItems","titleTypographyProps","sm","TICKET_FINDER","LAST_EVENTS","CUSTOMER_FINDER","LAST_LOGS","select","compsContainer","DashboardItemSwitch","dashboardItem","dispatch","useDispatch","Paper","FormControlLabel","control","Switch","checked","labelPlacement","DashboardCustomization","Configuration","setLocale","useSetLocale","Title","ButtonGroup","Select","exact","maskMiddlePart","word","threshold","firstChars","lastChars","slice","restCharsLength","repeat","MaskField","rest","useRecordContext","properRecord","TicketInfoGrid","filterValues","m","height","paragraph","TicketInfoList","bookingTypeMapping","ticketTypeMapping","Z","P","U","R","mapFromBookingType","mapFromTicketType","TicketDetailsHeader","useShowContext","ticketBox","ticketField","TicketDetailsTicketsField","fields","mappedRecord","Labeled","Chip","flexWrap","Multiplicities","blockMutation","ticketDetails","CREATE","unblockMutation","activeAccessUsingIds","UPDATE_MANY","blockAccessButtonInitialState","DISABLED","toggleAccessButtonReducer","BLOCK","mutateQuery","UNBLOCK","common","white","ToggleAccessButton","useReducer","mutationLoading","refresh","useRefresh","useEffect","query","blockTicketButtonInitialState","toggleTicketButtonReducer","mutateParam","ADMIN","ToggleTicketButton","UPDATE","MobilePostPagination","setPage","setPerPage","nbPages","Math","ceil","Toolbar","elevation","AccessGrid","setSelected","TableContainer","Table","TableHead","TableRow","TableCell","cursor","hover","AccessList","up","FullWidthButton","fontSize","ButtonBase","BackButton","writingMode","textOrientation","BackButtonText","AccessUsingsBody","refetch","patchAccess","Power","PowerOff","AccessUsingsHeader","AccessUsingsList","AccessDatesList","timeFrom","timeTo","TabButton","selected","change","AccessDetails","NO_LIMIT","AccessDates","AccessUses","AccessShow","selectedTab","setSelectedTab","handleTabChange","prop","Show","MappedChipField","mappedValue","AccessDetailsView","selectedAccess","setSelectedAccess","Hidden","xlDown","paddingY","ProfileDetailsView","Tab","addLabel","StatusButtons","TicketMainView","TicketLogsView","TicketDetailsView","TabbedShowLayout","syncWithLocation","OverallViewGrid","OverallViewList","noBottomBorder","borderBottom","quarterWidth","ViewTitle","description","BlockGrid","firstColumnEntries","secondColumnEntries","thirdColumnEntries","paddingTop","TribuneGrid","TribuneHeader","ArrayField","ObjectGrid","OverallView","ShowTitle","useMemo","Attachments","currentSort","refetchList","useQuery","toLocaleLowerCase","allFiltered","refetchAllFiltered","getAttachmentsFetchType","enabled","attachedDto","refetchAttachedIds","isAttached","attachmentId","companiesIds","verifierDevicesIds","handleAttach","idsToAttach","handleDetach","idsToDetach","Checkbox","GeneralEditButton","handleActivation","IN_TRANSITION","ACTIVE","marginRight","EditButton","EventShow","EditTitle","EditToolbar","SaveButton","Cancel","EventEdit","Edit","SimpleForm","redirect","toolbar","DateTimeInput","CustomerInfoGrid","smallDevice","CustomerInfoList","BookingGrid","BookingList","CustomerBookingsView","CustomerLogsView","CustomerTabs","bookingPresent","CustomerDetailsView","PalmList","ConfirmDialog","confirm","cancel","Dialog","DialogTitle","DialogActions","DeviceIdModal","close","setValue","errorText","setErrorText","confirmOpen","setConfirmOpen","palm","handleClose","handleSetMobileDeviceId","onClose","DialogContent","fullWidth","LockModal","handleLock","GeneralActions","deviceIdModalOpen","setDeviceIdModalOpen","lockModalOpen","setLockModalOpen","unlockDialogOpen","setUnlockDialogOpen","resetIdDialogOpen","setResetIdDialogOpen","attachedList","PalmTabs","day","month","year","hour","minute","PalmShow","StanbyMode","HidingField","useEditContext","PalmEdit","hasShow","BooleanInput","OUT","INFO","SINGLE","MULTIPLE","CHECK_ALL","EngineList","dialogProperty","SetTSCanCredentialsModal","loginValue","setLoginValue","useStateRef","loginError","setLoginError","loginErrorCurrentValue","loginErrorText","setLoginErrorText","passwordValue","setPasswordValue","passwordError","setPasswordError","passwordErrorCurrentValue","passwordErrorText","setPasswordErrorText","engine","handleSetTSCanCredentials","current","engineId","autoComplete","SetStandbyModeModal","handleSetStandbyMode","stanbyMode","ALWAYS_ON","ALWAYS_OFF","SENSOR","standbyModeModalOpen","setStandbyModeModalOpen","removeTSCanCredentialsDialogOpen","setRemoveTSCanCredentialsDialogOpen","tsCanCredentialsModalOpen","setTSCanCredentialsModalOpen","handleRemoveTSCanCredentials","EngineTabs","EngineShow","EngineEdit","CreateTitle","ObjectsInput","objectIds","EventCreate","Create","TabbedForm","FormTab","isRequired","validate","required","generateResourcesBasedOnPermissions","Resource","ReceiptIcon","list","show","PersonIcon","edit","ViewComfyIcon","save","dashboardReducer","App","env","i18nProvider","fakeAuthProvider","fakeDataProvider","providersFactory","Admin","customReducers","customRoutes","routes","layout","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","lng","use","initReactI18next","init","fallbackLng","debug","interpolation","escapeValue","resources","pl","translation","plTranslation","en","enTranslation","ReactDOM","StrictMode","document","getElementById"],"mappings":"mouBAAaA,EAAe,eACfC,EAAmB,mBCE1BC,EAAWC,aAAaC,QAAQ,YAQhCC,EAAe,CACnBC,SAA2D,SAAjDH,aAAaC,QAAb,UAAwBF,EAAxB,cAA0D,OAAS,SAehEK,IC3BHC,ED2BGD,EAZf,WAAkE,IAA5CE,EAA2C,uDAAnCJ,EAAcK,EAAqB,uCAC7D,OAAIA,EAAOC,OAASX,GACO,SAAnBS,EAAMH,SAAqBH,aAAaS,QAAb,UAAwBV,EAAxB,aAA6C,SACvEC,aAAaS,QAAb,UAAwBV,EAAxB,aAA6C,QAC3C,2BACAO,GADP,IAEIH,SAA6B,SAAnBG,EAAMH,SAAsB,QAAU,UAGjDG,G,0BCxBCD,K,4BAAAA,E,oBAAAA,E,8BAAAA,E,oBAAAA,E,kBAAAA,E,gBAAAA,E,sBAAAA,E,oCAAAA,E,8BAAAA,E,YAAAA,E,kBAAAA,E,cAAAA,E,kBAAAA,E,gCAAAA,E,0BAAAA,E,0BAAAA,E,kDAAAA,E,wCAAAA,E,uBAAAA,M,SCAAK,ECAAC,ECAAC,ECAAC,ECAAC,E,uBCeGC,EAbE,CAEfC,WAAW,WAAD,4BAAE,WAAOC,EAAUC,GAAjB,SAAAC,EAAA,+EACVC,QAAQC,QAAQ,CACdC,KAAM,CAAC,MAFC,2CAAF,qDAAC,GAKXC,OAAO,WAAD,4BAAE,WAAON,EAAUC,GAAjB,SAAAC,EAAA,+EACNC,QAAQC,QAAQ,CACdC,KAAM,CAAEE,GAAI,MAFR,2CAAF,qDAAC,ICCMT,EARE,CAEfU,OAAO,WAAD,4BAAE,WAAOR,EAAUC,GAAjB,SAAAC,EAAA,+EACNC,QAAQC,QAAQ,CACdC,KAAM,CAAEE,GAAI,MAFR,2CAAF,qDAAC,ICDHE,EAA0B,CAC9B,CACEF,GAAI,EACJG,KAAM,2BACNC,WAAY,IACZC,UAAW,MACXC,WAAY,cACZC,KAAM,KACNC,MAAO,eAET,CACER,GAAI,EACJG,KAAM,2BACNC,WAAY,IACZC,UAAW,MACXC,WAAY,cACZC,KAAM,KACNC,MAAO,eAET,CACER,GAAI,EACJG,KAAM,2BACNC,WAAY,IACZC,UAAW,KACXC,WAAY,cACZC,KAAM,KACNC,MAAO,eAET,CACER,GAAI,EACJG,KAAM,2BACNC,WAAY,IACZC,UAAW,MACXC,WAAY,cACZC,KAAM,KACNC,MAAO,eAET,CACER,GAAI,EACJG,KAAM,2BACNC,WAAY,IACZC,UAAW,MACXC,WAAY,cACZC,KAAM,KACNC,MAAO,eAET,CACER,GAAI,EACJG,KAAM,2BACNC,WAAY,IACZC,UAAW,OACXC,WAAY,cACZC,KAAM,KACNC,MAAO,eAET,CACER,GAAI,EACJG,KAAM,2BACNC,WAAY,IACZC,UAAW,OACXC,WAAY,cACZC,KAAM,KACNC,MAAO,eAET,CACER,GAAI,EACJG,KAAM,2BACNC,WAAY,IACZC,UAAW,OACXC,WAAY,cACZC,KAAM,KACNC,MAAO,eAET,CACER,GAAI,EACJG,KAAM,2BACNC,WAAY,IACZC,UAAW,OACXC,WAAY,cACZC,KAAM,KACNC,MAAO,eAET,CACER,GAAI,GACJG,KAAM,2BACNC,WAAY,IACZC,UAAW,OACXC,WAAY,cACZC,KAAM,KACNC,MAAO,gBAUIjB,EANE,CAEfkB,QAAS,SAAChB,EAAUC,GAAX,OACPE,QAAQC,QAAQ,CAAEC,KAAMI,EAAUQ,MAAOR,EAASS,WChGhDC,EAA+C,CACnD,CACEZ,GAAI,EACJa,KAAM,GACNC,UAAW,6BACXC,QAAS,8BAEX,CACEf,GAAI,EACJa,KAAM,GACNC,UAAW,6BACXC,QAAS,8BAEX,CACEf,GAAI,EACJa,KAAM,GACNC,UAAW,6BACXC,QAAS,8BAEX,CACEf,GAAI,EACJa,KAAM,GACNC,UAAW,6BACXC,QAAS,8BAEX,CACEf,GAAI,EACJa,KAAM,GACNC,UAAW,6BACXC,QAAS,+BAUExB,EANE,CAEfkB,QAAS,SAAChB,EAAUC,GAAX,OACPE,QAAQC,QAAQ,CAAEC,KAAMc,EAA0BF,MAAOE,EAAyBD,WCnChFC,EAA0C,CAC9C,CACEZ,GAAI,EACJgB,UAAW,GACXC,SAAU,EACVC,KAAM,EACNC,QAAS,EACTC,QAAS,GACTjB,KAAM,uBAER,CACEH,GAAI,EACJgB,UAAW,GACXC,SAAU,EACVC,KAAM,EACNC,QAAS,EACTC,QAAS,GACTjB,KAAM,uBAER,CACEH,GAAI,EACJgB,UAAW,GACXC,SAAU,EACVC,KAAM,EACNC,QAAS,EACTC,QAAS,GACTjB,KAAM,uBAER,CACEH,GAAI,EACJgB,UAAW,GACXC,SAAU,EACVC,KAAM,EACNC,QAAS,EACTC,QAAS,GACTjB,KAAM,uBAER,CACEH,GAAI,EACJgB,UAAW,GACXC,SAAU,EACVC,KAAM,EACNC,QAAS,EACTC,QAAS,GACTjB,KAAM,wBAgBKZ,EAZE,CACf8B,OAAQ,SAAC5B,EAAD,GAAuC,IAA1BO,EAAyB,EAAzBA,GACbsB,EAAQV,EAAyBW,MAAK,SAACC,GAAD,MAAO,UAAGA,EAAExB,MAASA,KACjE,OAAIsB,EACK1B,QAAQC,QAAQ,CACrBC,KAAMwB,IAGH1B,QAAQ6B,OAAO,IAAIC,U,ST5DlBxC,K,MAAAA,E,MAAAA,E,MAAAA,E,MAAAA,E,MAAAA,E,MAAAA,E,OAAAA,M,cCAAC,K,gBAAAA,E,UAAAA,E,cAAAA,E,kBAAAA,E,iBAAAA,M,cCAAC,K,cAAAA,E,UAAAA,E,gBAAAA,E,mBAAAA,M,cCAAC,K,cAAAA,E,kBAAAA,E,oBAAAA,E,4BAAAA,E,sBAAAA,E,mCAAAA,M,cCAAC,K,YAAAA,E,iBAAAA,M,KMQZ,ICRYqC,ECAAC,ECAAC,EHQNC,EAAyC,CAC7C,CACE9B,GAAI,EACJ+B,UAAW,UACXC,SAAU,SACVhB,UAAW,0CACXiB,MAAO,cACPC,YAAa,eACbC,YAAa,CAAC,IACdC,YAAajD,EAAYkD,OACzBC,WAAY,KACZC,SAAU,KACVC,QAAS,CACP,CACExC,GAAI,MACJI,WAAY,eACZqC,WAAYvD,EAAWwD,EACvBC,aAAc,GACdC,UAAW,4BAEb,CACE5C,GAAI,MACJI,WAAY,WACZqC,WAAYvD,EAAW2D,EACvBF,aAAc,GACdC,UAAW,6BAGfA,UAAW,2BACXE,WAAY,2BACZC,gBAAiB3D,EAAsB4D,OACvCC,QAAS,MACTC,UAAW,2BACXC,aAAc9D,EAAqB+D,QACnCC,eAAgB,cAChBC,YAAa,SACbC,OAAQjE,EAAOkE,KACfC,OAAQ,KACRC,QAAS,KACTC,SAAU,GACVC,WAAY,KACZC,YAAa,KACbC,UAAW,KACXC,UAAW,MAEb,CACE/D,GAAI,EACJ+B,UAAW,UACXC,SAAU,SACVhB,UAAW,0CACXiB,MAAO,cACPC,YAAa,eACbC,YAAa,CAAC,IACdC,YAAajD,EAAYkD,OACzBC,WAAY,KACZC,SAAU,KACVC,QAAS,CACP,CACExC,GAAI,MACJI,WAAY,eACZqC,WAAYvD,EAAWwD,EACvBC,aAAc,GACdC,UAAW,4BAEb,CACE5C,GAAI,MACJI,WAAY,WACZqC,WAAYvD,EAAW2D,EACvBF,aAAc,GACdC,UAAW,6BAGfA,UAAW,2BACXE,WAAY,2BACZC,gBAAiB3D,EAAsB4D,OACvCC,QAAS,MACTC,UAAW,2BACXC,aAAc9D,EAAqB+D,QACnCC,eAAgB,cAChBC,YAAa,SACbC,OAAQjE,EAAOkE,KACfC,OAAQ,KACRC,QAAS,KACTC,SAAU,GACVC,WAAY,KACZC,YAAa,KACbC,UAAW,KACXC,UAAW,MAEb,CACE/D,GAAI,EACJ+B,UAAW,UACXC,SAAU,SACVhB,UAAW,0CACXiB,MAAO,cACPC,YAAa,eACbC,YAAa,CAAC,IACdC,YAAajD,EAAYkD,OACzBC,WAAY,KACZC,SAAU,KACVC,QAAS,CACP,CACExC,GAAI,MACJI,WAAY,eACZqC,WAAYvD,EAAWwD,EACvBC,aAAc,GACdC,UAAW,4BAEb,CACE5C,GAAI,MACJI,WAAY,WACZqC,WAAYvD,EAAW2D,EACvBF,aAAc,GACdC,UAAW,6BAGfA,UAAW,2BACXE,WAAY,2BACZC,gBAAiB,KACjBE,QAAS,MACTC,UAAW,2BACXC,aAAc9D,EAAqB+D,QACnCC,eAAgB,cAChBC,YAAa,SACbC,OAAQjE,EAAOkE,KACfC,OAAQ,KACRC,QAAS,KACTC,SAAU,GACVC,WAAY,KACZC,YAAa,KACbC,UAAW,KACXC,UAAW,MAEb,CACE/D,GAAI,EACJ+B,UAAW,UACXC,SAAU,SACVhB,UAAW,0CACXiB,MAAO,cACPC,YAAa,eACbC,YAAa,CAAC,IACdC,YAAajD,EAAYkD,OACzBC,WAAY,KACZC,SAAU,KACVC,QAAS,CACP,CACExC,GAAI,MACJI,WAAY,eACZqC,WAAYvD,EAAWwD,EACvBC,aAAc,GACdC,UAAW,4BAEb,CACE5C,GAAI,MACJI,WAAY,WACZqC,WAAYvD,EAAW2D,EACvBF,aAAc,GACdC,UAAW,6BAGfA,UAAW,2BACXE,WAAY,2BACZC,gBAAiB,KACjBE,QAAS,MACTC,UAAW,2BACXC,aAAc9D,EAAqB+D,QACnCC,eAAgB,cAChBC,YAAa,SACbC,OAAQjE,EAAOkE,KACfC,OAAQ,KACRC,QAAS,KACTC,SAAU,GACVC,WAAY,KACZC,YAAa,KACbC,UAAW,KACXC,UAAW,MAEb,CACE/D,GAAI,EACJ+B,UAAW,UACXC,SAAU,SACVhB,UAAW,0CACXiB,MAAO,cACPC,YAAa,eACbC,YAAa,CAAC,IACdC,YAAajD,EAAYkD,OACzBC,WAAY,KACZC,SAAU,KACVC,QAAS,CACP,CACExC,GAAI,MACJI,WAAY,eACZqC,WAAYvD,EAAWwD,EACvBC,aAAc,GACdC,UAAW,4BAEb,CACE5C,GAAI,MACJI,WAAY,WACZqC,WAAYvD,EAAW2D,EACvBF,aAAc,GACdC,UAAW,6BAGfA,UAAW,2BACXE,WAAY,2BACZC,gBAAiB,KACjBE,QAAS,MACTC,UAAW,2BACXC,aAAc9D,EAAqB+D,QACnCC,eAAgB,cAChBC,YAAa,SACbC,OAAQjE,EAAOkE,KACfC,OAAQ,KACRC,QAAS,KACTC,SAAU,GACVC,WAAY,KACZC,YAAa,KACbC,UAAW,KACXC,UAAW,MAEb,CACE/D,GAAI,EACJ+B,UAAW,UACXC,SAAU,SACVhB,UAAW,0CACXiB,MAAO,cACPC,YAAa,eACbC,YAAa,CAAC,IACdC,YAAajD,EAAYkD,OACzBC,WAAY,KACZC,SAAU,KACVC,QAAS,CACP,CACExC,GAAI,MACJI,WAAY,eACZqC,WAAYvD,EAAWwD,EACvBC,aAAc,GACdC,UAAW,4BAEb,CACE5C,GAAI,MACJI,WAAY,WACZqC,WAAYvD,EAAW2D,EACvBF,aAAc,GACdC,UAAW,6BAGfA,UAAW,2BACXE,WAAY,2BACZC,gBAAiB,KACjBE,QAAS,MACTC,UAAW,2BACXC,aAAc9D,EAAqB+D,QACnCC,eAAgB,cAChBC,YAAa,SACbC,OAAQjE,EAAOkE,KACfC,OAAQ,KACRC,QAAS,KACTC,SAAU,GACVC,WAAY,KACZC,YAAa,KACbC,UAAW,KACXC,UAAW,MAEb,CACE/D,GAAI,EACJ+B,UAAW,UACXC,SAAU,SACVhB,UAAW,0CACXiB,MAAO,cACPC,YAAa,eACbC,YAAa,CAAC,IACdC,YAAajD,EAAYkD,OACzBC,WAAY,KACZC,SAAU,KACVC,QAAS,CACP,CACExC,GAAI,MACJI,WAAY,eACZqC,WAAYvD,EAAWwD,EACvBC,aAAc,GACdC,UAAW,4BAEb,CACE5C,GAAI,MACJI,WAAY,WACZqC,WAAYvD,EAAW2D,EACvBF,aAAc,GACdC,UAAW,6BAGfA,UAAW,2BACXE,WAAY,2BACZC,gBAAiB,KACjBE,QAAS,MACTC,UAAW,2BACXC,aAAc9D,EAAqB+D,QACnCC,eAAgB,cAChBC,YAAa,SACbC,OAAQjE,EAAOkE,KACfC,OAAQ,KACRC,QAAS,KACTC,SAAU,GACVC,WAAY,KACZC,YAAa,KACbC,UAAW,KACXC,UAAW,MAEb,CACE/D,GAAI,EACJ+B,UAAW,UACXC,SAAU,SACVhB,UAAW,0CACXiB,MAAO,cACPC,YAAa,eACbC,YAAa,CAAC,IACdC,YAAajD,EAAYkD,OACzBC,WAAY,KACZC,SAAU,KACVC,QAAS,CACP,CACExC,GAAI,MACJI,WAAY,eACZqC,WAAYvD,EAAWwD,EACvBC,aAAc,GACdC,UAAW,4BAEb,CACE5C,GAAI,MACJI,WAAY,WACZqC,WAAYvD,EAAW2D,EACvBF,aAAc,GACdC,UAAW,6BAGfA,UAAW,2BACXE,WAAY,2BACZC,gBAAiB,KACjBE,QAAS,MACTC,UAAW,2BACXC,aAAc9D,EAAqB+D,QACnCC,eAAgB,cAChBC,YAAa,SACbC,OAAQjE,EAAOkE,KACfC,OAAQ,KACRC,QAAS,KACTC,SAAU,GACVC,WAAY,KACZC,YAAa,KACbC,UAAW,KACXC,UAAW,MAEb,CACE/D,GAAI,EACJ+B,UAAW,UACXC,SAAU,SACVhB,UAAW,0CACXiB,MAAO,cACPC,YAAa,eACbC,YAAa,CAAC,IACdC,YAAajD,EAAYkD,OACzBC,WAAY,KACZC,SAAU,KACVC,QAAS,CACP,CACExC,GAAI,MACJI,WAAY,eACZqC,WAAYvD,EAAWwD,EACvBC,aAAc,GACdC,UAAW,4BAEb,CACE5C,GAAI,MACJI,WAAY,WACZqC,WAAYvD,EAAW2D,EACvBF,aAAc,GACdC,UAAW,6BAGfA,UAAW,2BACXE,WAAY,2BACZC,gBAAiB,KACjBE,QAAS,MACTC,UAAW,2BACXC,aAAc9D,EAAqB+D,QACnCC,eAAgB,cAChBC,YAAa,SACbC,OAAQjE,EAAOkE,KACfC,OAAQ,KACRC,QAAS,KACTC,SAAU,GACVC,WAAY,KACZC,YAAa,KACbC,UAAW,KACXC,UAAW,MAEb,CACE/D,GAAI,GACJ+B,UAAW,UACXC,SAAU,SACVhB,UAAW,0CACXiB,MAAO,cACPC,YAAa,eACbC,YAAa,CAAC,IACdC,YAAajD,EAAYkD,OACzBC,WAAY,KACZC,SAAU,KACVC,QAAS,CACP,CACExC,GAAI,MACJI,WAAY,eACZqC,WAAYvD,EAAWwD,EACvBC,aAAc,GACdC,UAAW,4BAEb,CACE5C,GAAI,MACJI,WAAY,WACZqC,WAAYvD,EAAW2D,EACvBF,aAAc,GACdC,UAAW,6BAGfA,UAAW,2BACXE,WAAY,2BACZC,gBAAiB,KACjBE,QAAS,MACTC,UAAW,2BACXC,aAAc9D,EAAqB+D,QACnCC,eAAgB,cAChBC,YAAa,SACbC,OAAQjE,EAAOkE,KACfC,OAAQ,KACRC,QAAS,KACTC,SAAU,GACVC,WAAY,KACZC,YAAa,KACbC,UAAW,KACXC,UAAW,OAgBAxE,EAZE,CACf8B,OAAQ,SAAC5B,EAAD,GAAuC,IAA1BO,EAAyB,EAAzBA,GACbsB,EAAQQ,EAAsBP,MAAK,SAACC,GAAD,MAAO,UAAGA,EAAExB,MAASA,KAC9D,OAAIsB,EACK1B,QAAQC,QAAQ,CACrBC,KAAMwB,IAGH1B,QAAQ6B,OAAO,IAAIC,SIvcxBsC,EAAmC,CACvC,CACEhE,GAAI,EACJ+B,UAAW,QACXC,SAAU,OACVC,MAAO,cACPgC,QAAS,EACTjD,UAAW,0CACXkD,UAAW,2BACX9D,WAAY,aACZqC,WAAYvD,EAAWwD,EACvBrC,UAAW,GAEb,CACEL,GAAI,EACJ+B,UAAW,QACXC,SAAU,iBACVC,MAAO,cACPgC,QAAS,EACTjD,UAAW,4BACXkD,UAAW,2BACX9D,WAAY,aACZqC,WAAYvD,EAAWwD,EACvBrC,UAAW,GAEb,CACEL,GAAI,EACJ+B,UAAW,cACXC,SAAU,SACVC,MAAO,aACPgC,QAAS,EACTjD,UAAW,4BACXkD,UAAW,2BACX9D,WAAY,aACZqC,WAAYvD,EAAWwD,EACvBrC,UAAW,GAEb,CACEL,GAAI,EACJ+B,UAAW,QACXC,SAAU,cACVC,MAAO,cACPgC,QAAS,EACTjD,UAAW,4BACXkD,UAAW,2BACX9D,WAAY,aACZqC,WAAYvD,EAAWwD,EACvBrC,UAAW,GAEb,CACEL,GAAI,EACJ+B,UAAW,MACXC,SAAU,SACVC,MAAO,cACPgC,QAAS,EACTjD,UAAW,4BACXkD,UAAW,2BACX9D,WAAY,aACZqC,WAAYvD,EAAWwD,EACvBrC,UAAW,GAEb,CACEL,GAAI,EACJ+B,UAAW,UACXC,SAAU,aACVC,MAAO,cACPgC,QAAS,EACTjD,UAAW,4BACXkD,UAAW,2BACX9D,WAAY,aACZqC,WAAYvD,EAAWwD,EACvBrC,UAAW,GAEb,CACEL,GAAI,EACJ+B,UAAW,SACXC,SAAU,UACVC,MAAO,cACPgC,QAAS,EACTjD,UAAW,4BACXkD,UAAW,2BACX9D,WAAY,aACZqC,WAAYvD,EAAWwD,EACvBrC,UAAW,GAEb,CACEL,GAAI,EACJ+B,UAAW,QACXC,SAAU,QACVC,MAAO,cACPgC,QAAS,EACTjD,UAAW,4BACXkD,UAAW,2BACX9D,WAAY,aACZqC,WAAYvD,EAAWwD,EACvBrC,UAAW,GAEb,CACEL,GAAI,EACJ+B,UAAW,QACXC,SAAU,WACVC,MAAO,cACPgC,QAAS,EACTjD,UAAW,4BACXkD,UAAW,2BACX9D,WAAY,aACZqC,WAAYvD,EAAWwD,EACvBrC,UAAW,GAEb,CACEL,GAAI,GACJ+B,UAAW,UACXC,SAAU,YACVC,MAAO,cACPgC,QAAS,EACTjD,UAAW,4BACXkD,UAAW,2BACX9D,WAAY,aACZqC,WAAYvD,EAAWwD,EACvBrC,UAAW,IAaAd,EATE,CAEfkB,QAAS,SAAChB,EAAUC,GAAX,OACPE,QAAQC,QAAQ,CACdC,KAAMkE,EACNtD,MAAOsD,EAAmBrD,WChI1BwD,EAA2B,CAC/B,CACEnE,GAAI,EACJI,WAAY,IACZqC,WAAYvD,EAAWwD,EACvB0B,QAAQ,EACR/D,UAAW,MACXgE,gBAAiB,GACjBzB,UAAW,2BACXE,WAAY,4BAEd,CACE9C,GAAI,EACJI,WAAY,IACZqC,WAAYvD,EAAWwD,EACvB0B,QAAQ,EACR/D,UAAW,MACXgE,gBAAiB,GACjBzB,UAAW,2BACXE,WAAY,4BAEd,CACE9C,GAAI,EACJI,WAAY,eACZqC,WAAYvD,EAAWwD,EACvB0B,QAAQ,EACR/D,UAAW,MACXgE,gBAAiB,GACjBzB,UAAW,2BACXE,WAAY,4BAEd,CACE9C,GAAI,EACJI,WAAY,eACZqC,WAAYvD,EAAWwD,EACvB0B,QAAQ,EACR/D,UAAW,MACXgE,gBAAiB,GACjBzB,UAAW,2BACXE,WAAY,4BAEd,CACE9C,GAAI,EACJI,WAAY,eACZqC,WAAYvD,EAAWwD,EACvB0B,QAAQ,EACR/D,UAAW,MACXgE,gBAAiB,GACjBzB,UAAW,2BACXE,WAAY,4BAEd,CACE9C,GAAI,EACJI,WAAY,eACZqC,WAAYvD,EAAWwD,EACvB0B,QAAQ,EACR/D,UAAW,MACXgE,gBAAiB,GACjBzB,UAAW,2BACXE,WAAY,4BAEd,CACE9C,GAAI,EACJI,WAAY,eACZqC,WAAYvD,EAAWwD,EACvB0B,QAAQ,EACR/D,UAAW,MACXgE,gBAAiB,GACjBzB,UAAW,2BACXE,WAAY,4BAEd,CACE9C,GAAI,EACJI,WAAY,eACZqC,WAAYvD,EAAWwD,EACvB0B,QAAQ,EACR/D,UAAW,MACXgE,gBAAiB,GACjBzB,UAAW,2BACXE,WAAY,4BAEd,CACE9C,GAAI,EACJI,WAAY,eACZqC,WAAYvD,EAAWwD,EACvB0B,QAAQ,EACR/D,UAAW,MACXgE,gBAAiB,GACjBzB,UAAW,2BACXE,WAAY,4BAEd,CACE9C,GAAI,GACJI,WAAY,eACZqC,WAAYvD,EAAWwD,EACvB0B,QAAQ,EACR/D,UAAW,MACXgE,gBAAiB,GACjBzB,UAAW,2BACXE,WAAY,6BAUDvD,EANE,CAEfkB,QAAS,SAAChB,EAAUC,GAAX,OACPE,QAAQC,QAAQ,CAAEC,KAAMqE,EAAazD,MAAOyD,EAAYxD,Y,SJ9GhDgB,K,oBAAAA,E,8BAAAA,E,uBAAAA,M,cCAAC,K,MAAAA,E,MAAAA,E,MAAAA,E,OAAAA,M,cCAAC,K,gBAAAA,E,gBAAAA,E,kBAAAA,E,sBAAAA,E,oBAAAA,E,gBAAAA,E,qBAAAA,M,KGMZ,ICNYyC,EDMNC,EAAyB,CAC7B,CACEvE,GAAI,EACJa,KAAM,UACN2D,MAAO5C,EAAc6C,EACrBC,WAAY,EACZC,cAAc,EACdC,eAAe,EACfC,SAAU,EACVC,YAAa,EACbC,2BAA2B,EAC3BC,YAAa,2BACbC,iBAAkBpD,EAAUqD,OAC5BC,kBAAmB,EACnBC,MAAO,GACPC,aAAc,GACdC,yBAA0B3D,EAAkC4D,UAC5DC,YAAa,GACbC,eAAgB,GAChBC,YAAa,EACbC,aAAc,EACd/C,UAAW,2BACXE,WAAY,2BACZ8C,cAAe,MACfC,eAAgB,OAElB,CACE7F,GAAI,EACJa,KAAM,UACN2D,MAAO5C,EAAc6C,EACrBC,WAAY,EACZC,cAAc,EACdC,eAAe,EACfC,SAAU,EACVC,YAAa,EACbC,2BAA2B,EAC3BC,YAAa,2BACbC,iBAAkBpD,EAAUqD,OAC5BC,kBAAmB,EACnBC,MAAO,GACPC,aAAc,GACdC,yBAA0B3D,EAAkC4D,UAC5DC,YAAa,GACbC,eAAgB,GAChBC,YAAa,EACbC,aAAc,EACd/C,UAAW,2BACXE,WAAY,2BACZ8C,cAAe,MACfC,eAAgB,OAElB,CACE7F,GAAI,EACJa,KAAM,UACN2D,MAAO5C,EAAc6C,EACrBC,WAAY,EACZC,cAAc,EACdC,eAAe,EACfC,SAAU,EACVC,YAAa,EACbC,2BAA2B,EAC3BC,YAAa,2BACbC,iBAAkBpD,EAAUqD,OAC5BC,kBAAmB,EACnBC,MAAO,GACPC,aAAc,GACdC,yBAA0B3D,EAAkC4D,UAC5DC,YAAa,GACbC,eAAgB,GAChBC,YAAa,EACbC,aAAc,EACd/C,UAAW,2BACXE,WAAY,2BACZ8C,cAAe,MACfC,eAAgB,OAElB,CACE7F,GAAI,EACJa,KAAM,UACN2D,MAAO5C,EAAc6C,EACrBC,WAAY,EACZC,cAAc,EACdC,eAAe,EACfC,SAAU,EACVC,YAAa,EACbC,2BAA2B,EAC3BC,YAAa,2BACbC,iBAAkBpD,EAAUqD,OAC5BC,kBAAmB,EACnBC,MAAO,GACPC,aAAc,GACdC,yBAA0B3D,EAAkC4D,UAC5DC,YAAa,GACbC,eAAgB,GAChBC,YAAa,EACbC,aAAc,EACd/C,UAAW,2BACXE,WAAY,2BACZ8C,cAAe,MACfC,eAAgB,OAElB,CACE7F,GAAI,EACJa,KAAM,UACN2D,MAAO5C,EAAc6C,EACrBC,WAAY,EACZC,cAAc,EACdC,eAAe,EACfC,SAAU,EACVC,YAAa,EACbC,2BAA2B,EAC3BC,YAAa,2BACbC,iBAAkBpD,EAAUqD,OAC5BC,kBAAmB,EACnBC,MAAO,GACPC,aAAc,GACdC,yBAA0B3D,EAAkC4D,UAC5DC,YAAa,GACbC,eAAgB,GAChBC,YAAa,EACbC,aAAc,EACd/C,UAAW,2BACXE,WAAY,2BACZ8C,cAAe,MACfC,eAAgB,OAElB,CACE7F,GAAI,EACJa,KAAM,UACN2D,MAAO5C,EAAc6C,EACrBC,WAAY,EACZC,cAAc,EACdC,eAAe,EACfC,SAAU,EACVC,YAAa,EACbC,2BAA2B,EAC3BC,YAAa,2BACbC,iBAAkBpD,EAAUqD,OAC5BC,kBAAmB,EACnBC,MAAO,GACPC,aAAc,GACdC,yBAA0B3D,EAAkC4D,UAC5DC,YAAa,GACbC,eAAgB,GAChBC,YAAa,EACbC,aAAc,EACd/C,UAAW,2BACXE,WAAY,2BACZ8C,cAAe,MACfC,eAAgB,OAElB,CACE7F,GAAI,EACJa,KAAM,UACN2D,MAAO5C,EAAc6C,EACrBC,WAAY,EACZC,cAAc,EACdC,eAAe,EACfC,SAAU,EACVC,YAAa,EACbC,2BAA2B,EAC3BC,YAAa,2BACbC,iBAAkBpD,EAAUqD,OAC5BC,kBAAmB,EACnBC,MAAO,GACPC,aAAc,GACdC,yBAA0B3D,EAAkC4D,UAC5DC,YAAa,GACbC,eAAgB,GAChBC,YAAa,EACbC,aAAc,EACd/C,UAAW,2BACXE,WAAY,2BACZ8C,cAAe,MACfC,eAAgB,OAElB,CACE7F,GAAI,EACJa,KAAM,UACN2D,MAAO5C,EAAc6C,EACrBC,WAAY,EACZC,cAAc,EACdC,eAAe,EACfC,SAAU,EACVC,YAAa,EACbC,2BAA2B,EAC3BC,YAAa,2BACbC,iBAAkBpD,EAAUqD,OAC5BC,kBAAmB,EACnBC,MAAO,GACPC,aAAc,GACdC,yBAA0B3D,EAAkC4D,UAC5DC,YAAa,GACbC,eAAgB,GAChBC,YAAa,EACbC,aAAc,EACd/C,UAAW,2BACXE,WAAY,2BACZ8C,cAAe,MACfC,eAAgB,OAElB,CACE7F,GAAI,EACJa,KAAM,UACN2D,MAAO5C,EAAc6C,EACrBC,WAAY,EACZC,cAAc,EACdC,eAAe,EACfC,SAAU,EACVC,YAAa,EACbC,2BAA2B,EAC3BC,YAAa,2BACbC,iBAAkBpD,EAAUqD,OAC5BC,kBAAmB,EACnBC,MAAO,GACPC,aAAc,GACdC,yBAA0B3D,EAAkC4D,UAC5DC,YAAa,GACbC,eAAgB,GAChBC,YAAa,EACbC,aAAc,EACd/C,UAAW,2BACXE,WAAY,2BACZ8C,cAAe,MACfC,eAAgB,OAElB,CACE7F,GAAI,GACJa,KAAM,WACN2D,MAAO5C,EAAc6C,EACrBC,WAAY,EACZC,cAAc,EACdC,eAAe,EACfC,SAAU,EACVC,YAAa,EACbC,2BAA2B,EAC3BC,YAAa,2BACbC,iBAAkBpD,EAAUqD,OAC5BC,kBAAmB,EACnBC,MAAO,GACPC,aAAc,GACdC,yBAA0B3D,EAAkC4D,UAC5DC,YAAa,GACbC,eAAgB,GAChBC,YAAa,EACbC,aAAc,EACd/C,UAAW,2BACXE,WAAY,2BACZ8C,cAAe,MACfC,eAAgB,QAULtG,EANE,CAEfkB,QAAS,SAAChB,EAAUC,GAAX,OACPE,QAAQC,QAAQ,CAAEC,KAAMyE,EAAc7D,MAAO6D,EAAa5D,Y,SCtQlD2D,K,oBAAAA,E,gBAAAA,E,+BAAAA,M,KCIZ,I,ECJYwB,EDINC,EAAyB,CAC7B,CACE/F,GAAI,EACJa,KAAM,SACNC,UAAW,2BACXC,QAAS,2BACTiF,OAAQ1B,EAAY2B,SACpBC,WAAY,IACZC,MAAO,SACPC,WAAY,CAAC,EAAG,EAAG,IAErB,CACEpG,GAAI,EACJa,KAAM,SACNC,UAAW,2BACXC,QAAS,2BACTiF,OAAQ1B,EAAY2B,SACpBC,WAAY,IACZC,MAAO,SACPC,WAAY,CAAC,EAAG,EAAG,IAErB,CACEpG,GAAI,EACJa,KAAM,SACNC,UAAW,2BACXC,QAAS,2BACTiF,OAAQ1B,EAAY2B,SACpBC,WAAY,IACZC,MAAO,SACPC,WAAY,CAAC,EAAG,EAAG,IAErB,CACEpG,GAAI,EACJa,KAAM,SACNC,UAAW,2BACXC,QAAS,2BACTiF,OAAQ1B,EAAY2B,SACpBC,WAAY,IACZC,MAAO,SACPC,WAAY,CAAC,EAAG,EAAG,IAErB,CACEpG,GAAI,EACJa,KAAM,SACNC,UAAW,2BACXC,QAAS,2BACTiF,OAAQ1B,EAAY2B,SACpBC,WAAY,IACZC,MAAO,SACPC,WAAY,CAAC,EAAG,EAAG,IAErB,CACEpG,GAAI,EACJa,KAAM,SACNC,UAAW,2BACXC,QAAS,2BACTiF,OAAQ1B,EAAY2B,SACpBC,WAAY,IACZC,MAAO,SACPC,WAAY,CAAC,EAAG,EAAG,IAErB,CACEpG,GAAI,EACJa,KAAM,SACNC,UAAW,2BACXC,QAAS,2BACTiF,OAAQ1B,EAAY2B,SACpBC,WAAY,IACZC,MAAO,SACPC,WAAY,CAAC,EAAG,EAAG,IAErB,CACEpG,GAAI,EACJa,KAAM,SACNC,UAAW,2BACXC,QAAS,2BACTiF,OAAQ1B,EAAY2B,SACpBC,WAAY,IACZC,MAAO,SACPC,WAAY,CAAC,EAAG,EAAG,IAErB,CACEpG,GAAI,EACJa,KAAM,SACNC,UAAW,2BACXC,QAAS,2BACTiF,OAAQ1B,EAAY2B,SACpBC,WAAY,IACZC,MAAO,SACPC,WAAY,CAAC,EAAG,EAAG,IAErB,CACEpG,GAAI,GACJa,KAAM,UACNC,UAAW,2BACXC,QAAS,2BACTiF,OAAQ1B,EAAY2B,SACpBC,WAAY,IACZC,MAAO,SACPC,WAAY,CAAC,EAAG,EAAG,KAUR7G,EANE,CAEfkB,QAAS,SAAChB,EAAUC,GAAX,OACPE,QAAQC,QAAQ,CAAEC,KAAMiG,EAAYrF,MAAOqF,EAAWpF,WEzGpD0F,EAA6C,CACjD,CACErG,GAAI,EACJhB,KAAM,SACN+C,UAAW,MACXC,SAAU,WACViB,QAAS,MACTC,UAAW,2BACXC,aAAc9D,EAAqB+D,QACnCnB,MAAO,cACPoB,eAAgB,KAChBC,YAAa,KACbC,OAAQjE,EAAOkE,KACf8C,YAAa,IAEf,CACEtG,GAAI,EACJhB,KAAM,SACN+C,UAAW,MACXC,SAAU,WACViB,QAAS,MACTC,UAAW,2BACXC,aAAc9D,EAAqB+D,QACnCnB,MAAO,cACPoB,eAAgB,KAChBC,YAAa,KACbC,OAAQjE,EAAOkE,KACf8C,YAAa,IAEf,CACEtG,GAAI,EACJhB,KAAM,SACN+C,UAAW,MACXC,SAAU,WACViB,QAAS,MACTC,UAAW,2BACXC,aAAc9D,EAAqB+D,QACnCnB,MAAO,cACPoB,eAAgB,KAChBC,YAAa,KACbC,OAAQjE,EAAOkE,KACf8C,YAAa,IAEf,CACEtG,GAAI,EACJhB,KAAM,SACN+C,UAAW,MACXC,SAAU,WACViB,QAAS,MACTC,UAAW,2BACXC,aAAc9D,EAAqB+D,QACnCnB,MAAO,cACPoB,eAAgB,KAChBC,YAAa,KACbC,OAAQjE,EAAOkE,KACf8C,YAAa,IAEf,CACEtG,GAAI,EACJhB,KAAM,SACN+C,UAAW,MACXC,SAAU,WACViB,QAAS,MACTC,UAAW,2BACXC,aAAc9D,EAAqB+D,QACnCnB,MAAO,cACPoB,eAAgB,KAChBC,YAAa,KACbC,OAAQjE,EAAOkE,KACf8C,YAAa,IAEf,CACEtG,GAAI,EACJhB,KAAM,SACN+C,UAAW,MACXC,SAAU,WACViB,QAAS,MACTC,UAAW,2BACXC,aAAc9D,EAAqB+D,QACnCnB,MAAO,cACPoB,eAAgB,KAChBC,YAAa,KACbC,OAAQjE,EAAOkE,KACf8C,YAAa,IAEf,CACEtG,GAAI,EACJhB,KAAM,SACN+C,UAAW,MACXC,SAAU,WACViB,QAAS,MACTC,UAAW,2BACXC,aAAc9D,EAAqB+D,QACnCnB,MAAO,cACPoB,eAAgB,KAChBC,YAAa,KACbC,OAAQjE,EAAOkE,KACf8C,YAAa,IAEf,CACEtG,GAAI,EACJhB,KAAM,SACN+C,UAAW,MACXC,SAAU,WACViB,QAAS,MACTC,UAAW,2BACXC,aAAc9D,EAAqB+D,QACnCnB,MAAO,cACPoB,eAAgB,KAChBC,YAAa,KACbC,OAAQjE,EAAOkE,KACf8C,YAAa,IAEf,CACEtG,GAAI,EACJhB,KAAM,SACN+C,UAAW,MACXC,SAAU,WACViB,QAAS,MACTC,UAAW,2BACXC,aAAc9D,EAAqB+D,QACnCnB,MAAO,cACPoB,eAAgB,KAChBC,YAAa,KACbC,OAAQjE,EAAOkE,KACf8C,YAAa,IAEf,CACEtG,GAAI,GACJhB,KAAM,SACN+C,UAAW,MACXC,SAAU,WACViB,QAAS,MACTC,UAAW,2BACXC,aAAc9D,EAAqB+D,QACnCnB,MAAO,cACPoB,eAAgB,KAChBC,YAAa,KACbC,OAAQjE,EAAOkE,KACf8C,YAAa,KAgBF/G,EAZE,CACf8B,OAAQ,SAAC5B,EAAD,GAAuC,IAA1BO,EAAyB,EAAzBA,GACbsB,EAAQ+E,EAAwB9E,MAAK,SAACgF,GAAD,MAAO,UAAGA,EAAEvG,MAASA,KAChE,OAAGsB,EACM1B,QAAQC,QAAQ,CACrBC,KAAMwB,IAGH1B,QAAQ6B,OAAO,IAAIC,SCzJxB8E,EAAuC,CAC3C,CACExG,GAAI,EACJ+B,UAAW,MACXC,SAAU,WACVC,MAAO,cACPoB,eAAgB,eAElB,CACErD,GAAI,EACJ+B,UAAW,MACXC,SAAU,WACVC,MAAO,cACPoB,eAAgB,eAElB,CACErD,GAAI,EACJ+B,UAAW,MACXC,SAAU,WACVC,MAAO,cACPoB,eAAgB,eAElB,CACErD,GAAI,EACJ+B,UAAW,MACXC,SAAU,WACVC,MAAO,cACPoB,eAAgB,eAElB,CACErD,GAAI,EACJ+B,UAAW,MACXC,SAAU,WACVC,MAAO,cACPoB,eAAgB,eAElB,CACErD,GAAI,EACJ+B,UAAW,MACXC,SAAU,WACVC,MAAO,cACPoB,eAAgB,eAElB,CACErD,GAAI,EACJ+B,UAAW,MACXC,SAAU,WACVC,MAAO,cACPoB,eAAgB,eAElB,CACErD,GAAI,EACJ+B,UAAW,MACXC,SAAU,WACVC,MAAO,cACPoB,eAAgB,eAElB,CACErD,GAAI,EACJ+B,UAAW,MACXC,SAAU,WACVC,MAAO,cACPoB,eAAgB,eAElB,CACErD,GAAI,GACJ+B,UAAW,MACXC,SAAU,WACVC,MAAO,cACPoB,eAAgB,gBAUL9D,EANE,CAEfkB,QAAS,SAAChB,EAAUC,GAAX,OACPE,QAAQC,QAAQ,CAAEC,KAAM0G,EAAsB9F,MAAO8F,EAAqB7F,WCvE/DpB,EANE,CAEfkB,QAAS,SAAChB,EAAUC,GAAX,OACPE,QAAQC,QAAQ,CAAEC,KAAM,GAAIY,MAAO,MCFjC+F,GAA8B,CAClC,CACEzG,GAAI,EACJa,KAAM,IACN6F,SAAU,GACVC,UAAW,IAEb,CACE3G,GAAI,EACJa,KAAM,IACN6F,SAAU,GACVC,UAAW,IAEb,CACE3G,GAAI,EACJa,KAAM,IACN6F,SAAU,GACVC,UAAW,IAEb,CACE3G,GAAI,EACJa,KAAM,IACN6F,SAAU,GACVC,UAAW,IAEb,CACE3G,GAAI,EACJa,KAAM,IACN6F,SAAU,GACVC,UAAW,IAEb,CACE3G,GAAI,EACJa,KAAM,IACN6F,SAAU,GACVC,UAAW,IAEb,CACE3G,GAAI,EACJa,KAAM,IACN6F,SAAU,GACVC,UAAW,IAEb,CACE3G,GAAI,EACJa,KAAM,IACN6F,SAAU,GACVC,UAAW,IAEb,CACE3G,GAAI,EACJa,KAAM,IACN6F,SAAU,GACVC,UAAW,IAEb,CACE3G,GAAI,EACJa,KAAM,IACN6F,SAAU,GACVC,UAAW,KAUApH,GANE,CAEfkB,QAAS,SAAChB,EAAUC,GAAX,OACPE,QAAQC,QAAQ,CAAEC,KAAM2G,GAAe/F,MAAO+F,GAAc9F,WClE1DiG,GAA2B,CAC/B,CACE5G,GAAI,EACJa,KAAM,IACNgG,YAAa,GACbF,UAAW,IAEb,CACE3G,GAAI,EACJa,KAAM,IACNgG,YAAa,GACbF,UAAW,IAEb,CACE3G,GAAI,EACJa,KAAM,IACNgG,YAAa,GACbF,UAAW,IAEb,CACE3G,GAAI,EACJa,KAAM,IACNgG,YAAa,GACbF,UAAW,IAEb,CACE3G,GAAI,EACJa,KAAM,IACNgG,YAAa,GACbF,UAAW,IAEb,CACE3G,GAAI,EACJa,KAAM,IACNgG,YAAa,GACbF,UAAW,IAEb,CACE3G,GAAI,EACJa,KAAM,IACNgG,YAAa,GACbF,UAAW,IAEb,CACE3G,GAAI,EACJa,KAAM,IACNgG,YAAa,GACbF,UAAW,IAEb,CACE3G,GAAI,EACJa,KAAM,IACNgG,YAAa,GACbF,UAAW,IAEb,CACE3G,GAAI,EACJa,KAAM,IACNgG,YAAa,GACbF,UAAW,KAUApH,GANE,CAEfkB,QAAS,SAAChB,EAAUC,GAAX,OACPE,QAAQC,QAAQ,CAAEC,KAAM8G,GAAalG,MAAOkG,GAAYjG,WClEtDmG,GAAuB,GAQdvH,GANE,CAEfkB,QAAS,SAAChB,EAAUC,GAAX,OACPE,QAAQC,QAAQ,CAAEC,KAAMgH,GAAWpG,MAAOoG,GAAUnG,WCLlDoG,GAA2B,GAQlBxH,GANE,CAEfkB,QAAS,SAAChB,EAAUC,GAAX,OACPE,QAAQC,QAAQ,CAAEC,KAAMiH,GAAarG,MAAOqG,GAAYpG,WCLtDqG,GAA+B,GAQtBzH,GANE,CAEbkB,QAAS,SAAChB,EAAUC,GAAX,OACLE,QAAQC,QAAQ,CAAEC,KAAMkH,GAAetG,MAAOsG,GAAcrG,WCa9DsG,IAAiD,mBACpDpI,EAAaqI,aAAeC,GADwB,cAEpDtI,EAAauI,SAAWC,GAF4B,cAGpDxI,EAAayI,cAAgBC,GAHuB,cAIpD1I,EAAa2I,SAAWC,GAJ4B,cAKpD5I,EAAa6I,UAAYC,IAL2B,cAMpD9I,EAAa+I,iBAAmBC,GANoB,cAOpDhJ,EAAaiJ,cAAgBC,GAPuB,cAQpDlJ,EAAamJ,QAAUC,IAR6B,cASpDpJ,EAAaqJ,UAAYC,IAT2B,cAUpDtJ,EAAauJ,OAASC,GAV8B,cAWpDxJ,EAAayJ,KAAOC,GAXgC,cAYpD1J,EAAa2J,QAAUC,IAZ6B,cAapD5J,EAAa6J,MAAQC,IAb+B,cAcpD9J,EAAa+J,QAAUC,GAd6B,cAepDhK,EAAaiK,YAAcC,GAfyB,cAgBpDlK,EAAamK,eAAiBC,GAhBsB,cAiBpDpK,EAAaqK,YAAcX,GAjByB,cAkBpD1J,EAAasK,mBAAqBC,GAlBkB,cAmBpDvK,EAAawK,wBAA0BC,GAnBa,GAsBxC,YACbC,EACA9J,EACAC,GAIA,OAFyBuH,GAAcxH,GAC1B+J,YAAkBD,IACD9J,EAAUC,ICnC3B+J,GAboB,CACjCC,MAAO,kBAAM9J,QAAQC,WACrB8J,OAAQ,kBAAM/J,QAAQC,WACtB+J,WAAY,kBAAMhK,QAAQC,WAC1BgK,UAAW,kBAAMjK,QAAQC,WACzBiK,eAAgB,kBAAMlK,QAAQC,QAAQ,IAAIkK,IAAI,MAC9CC,YAAa,kBACXpK,QAAQC,QAAQ,CACdG,GAAI,UACJiK,SAAU,c,UCTHC,GAAqB,SAACC,GACjC,IAAKA,EAEH,MAAO,CACLzJ,MAAO,GAGX,IACM0J,EADUD,EAAYC,MAAM,KAAK,GACjBA,MAAM,KACtBC,EAAYD,EAAM,GAClBE,EAAyBF,EAAM,GAAGA,MAAM,KACxCG,EAAUD,EAAuB,GACjC5J,EAAQ4J,EAAuB,GACrC,MAAO,CACLD,UAAWG,SAASH,EAAW,IAC/BE,QAASC,SAASD,EAAS,IAC3B7J,MAAO8J,SAAS9J,EAAO,MCfrB+J,GAAW,kBAAMjM,aAAaC,QAAQ,UAEtCiM,GAA2B,CAC/B,eAAgB,oBAGZC,GAAc,eAACC,EAAD,uDAASH,KAAT,mBAAC,eAChBC,IADe,IAElBG,cAAc,UAAD,OAAYD,MAGrBE,GAAiB,SAAIC,EAAaC,GAAjB,OACrBC,KACGC,UAAUH,EAAK,CACdI,OAAQ,MACRH,QAAS,IAAII,QAAQJ,KAEtBK,MAAK,qBAAGC,SAEPC,GAAkB,SAAOR,EAAaS,EAASR,GAA7B,OACtBC,KACGC,UAAUH,EAAK,CACdI,OAAQ,OACRK,KAAMC,KAAKC,UAAUF,GACrBR,QAAS,IAAII,QAAQJ,KAEtBK,MAAK,qBAAGC,SAEAK,GAAM,SAAIC,EAAiBC,GAArB,OACjBf,GAAc,UAAOc,GAAP,OAAiBC,GAAQ,IAAMlB,OAElCmB,GAAe,SAAIf,EAAaH,GAAjB,OAC1BE,GAAkBC,EAAKJ,GAAYC,KAExBmB,GAAkB,SAC7BH,EACAC,GAF6B,OAI7Bf,GAAc,UAASc,EAAT,4BAAoCC,GAAQlB,OAE/CqB,GAAoB,SAAIJ,EAAiBC,GAArB,OAC/BZ,KACGC,UADH,UACgBU,GADhB,OAC0BC,GAAQ,CAC9BV,OAAQ,MACRH,QAAS,IAAII,QAAQT,QAEtBU,MAAK,gBAAGC,EAAH,EAAGA,KAAMN,EAAT,EAASA,QAAT,OACJpL,QAAQC,QAAQ,CACdC,KAAMwL,EACNW,MAAO/B,GACLc,EAAQW,IAAI,wBAQTO,GAAO,SAAOnB,EAAaS,GAApB,OAClBD,GAAsBR,EAAKS,EAAMb,OAEtBwB,GAAQ,SAAOP,EAAiBJ,GAAxB,OACnBP,KACGC,UAAUU,EAAS,CAClBT,OAAQ,QACRK,KAAMC,KAAKC,UAAUF,GACrBR,QAAS,IAAII,QAAQT,QAEtBU,MAAK,qBAAGC,SAEAc,GAAM,SAAOR,EAAiBJ,GAAxB,OACjBP,KACGC,UAAUU,EAAS,CAClBT,OAAQ,MACRK,KAAMC,KAAKC,UAAUF,GACrBR,QAAS,IAAII,QAAQT,QAEtBU,MAAK,qBAAGC,SChFPe,GAAM,UAAMC,qCAAN,WACCC,GAAQ,UAAMF,GAAN,+BACRG,GAAS,UAAMH,GAAN,kBACT/E,GAAa,UAAM+E,GAAN,kCACbI,GAAY,UAAMJ,GAAN,8BACZnF,GAAY,UAAMmF,GAAN,iCACZK,GAAY,UAAML,GAAN,8BACZM,GAAa,UAAMN,GAAN,+BACbO,GAAU,UAAMP,GAAN,4BACVQ,GAAiB,UAAMR,GAAN,qDACjBS,GAAW,UAAMT,GAAN,6BACXU,GAAY,UAAMV,GAAN,8BACZW,GAAS,UAAMX,GAAN,2BACTY,GAAU,UAAMZ,GAAN,4BACVa,GAAY,UAAMb,GAAN,8BACZc,GAAW,UAAMd,GAAN,6BACXe,GAAW,UAAMf,GAAN,6BACXgB,GAAS,UAAMhB,GAAN,2BACTiB,GAAa,UAAMjB,GAAN,2CACbkB,GAAS,UAAMlB,GAAN,+BACTmB,GAAa,UAAMnB,GAAN,+BC0BX5C,GAvCoB,CACjCC,MAAM,WAAD,4BAAE,uCAAA/J,EAAA,6DAAS8N,EAAT,EAASA,SAAUC,EAAnB,EAAmBA,SAAnB,SFmDPnC,GElDyDgB,GAAU,CAC/D7C,MAAO+D,EACPC,YFgD6BhD,IEnD1B,uBACGE,EADH,EACGA,MADH,SAKkBkB,GAAwBU,GAAW5B,GALrD,OAKC+C,EALD,OAMCC,EAAQD,EAASE,KAAI,SAACC,GAAD,OAAOA,EAAEjN,QACpCrC,aAAaS,QAAQ,WAAYwO,GACjCjP,aAAaS,QAAQ,QAAS2L,GAC9BpM,aAAaS,QAAQ,QAAS2O,EAAMG,QAT/B,4CAAF,mDAAC,GAWNpE,OAAQ,WAIN,OAHAnL,aAAawP,WAAW,YACxBxP,aAAawP,WAAW,SACxBxP,aAAawP,WAAW,SACjBpO,QAAQC,WAEjB+J,WAAY,YAAiB,IAAd5D,EAAa,EAAbA,OACb,OAAe,MAAXA,GAA6B,MAAXA,GACpBxH,aAAawP,WAAW,YACxBxP,aAAawP,WAAW,SACxBxP,aAAawP,WAAW,SACjBpO,QAAQ6B,UAEV7B,QAAQC,WAEjBgK,UAAW,kBACTrL,aAAaC,QAAQ,SAAWmB,QAAQC,UAAYD,QAAQ6B,UAC9DqI,eAAgB,WACd,IAAM8D,EAAQpP,aAAaC,QAAQ,SACnC,OAAOmB,QAAQC,QAAQ,IAAIkK,KAAS,OAAL6D,QAAK,IAALA,OAAA,EAAAA,EAAOxD,MAAM,OAAQ,MAEtDJ,YAAa,kBACXpK,QAAQC,QAAQ,CACdG,GAAIxB,aAAaC,QAAQ,gB,mBd1CnBqH,K,QAAAA,E,UAAAA,E,aAAAA,M,KeEZ,I,GCFYmI,G,GDENC,GAAyD,CAC7DlO,GAAI,YACJG,KAAM,cACNgO,UAAW,mBACX/J,OAAQ,gBACRgK,SAAU,kBACVC,SAAU,mBENNH,GAEF,CACFlO,GAAI,SAACsO,EAAiBC,GAAlB,gBAAgCD,EAAhC,oCAA4EC,EAA5E,OACJH,SAAU,SAACE,EAAiBC,GAAlB,iBAAgCA,EAAhC,sBAAoDD,EAApD,0BACVD,SAAU,SAACC,EAAiBC,GAAlB,gBAAgCD,EAAhC,0CAAkFC,EAAlF,QCaNC,GAAkB,SAACC,GACvB,OAAIC,OAAOC,KAAKF,GAAQ9N,OACD+N,OAAOE,QAAQH,GAAQZ,KAAI,YAAmB,IAAD,oBAAhBgB,EAAgB,KAAXN,EAAW,KAEhE,ODdyB,SAACM,GAAD,OAC7BX,GAAQW,GCYWC,CAAgBD,EACxBE,CAAO,KAAMR,MAEFS,QAAO,SAACC,EAAG1I,GAAJ,gBAAa0I,EAAb,aAAmB1I,MAEzC,QAQHhH,GAAW,CACfC,WAAW,WAAD,4BAAE,WACVC,EADU,0BAAAE,EAAA,6DAERuP,EAFQ,EAERA,IAFQ,IAEHpP,KAAQsE,cAFL,SAIJ+K,EAAiBD,EACpBrB,KAAI,SAACuB,GAAD,MAAW,CAAEpP,GAAIoP,EAAMhL,aAC3ByJ,KAAI,SAACwB,GAAD,OACHlD,GAAgD7E,GAAe+H,MAPzD,SASiBzP,QAAQ0P,IAAIH,GAT7B,cASJxM,EATI,yBAUH/C,QAAQC,QAAQ,CACrBC,KAAM6C,EAAakL,KAAI,SAAC0B,GAAD,OAAQA,EAAGvP,SAX1B,2CAAF,qDAAC,GAcXD,OAAO,WAAD,4BAAE,WACNN,EADM,wBAAAE,EAAA,6DAEJG,EAFI,EAEJA,KAEM0P,EAAyB1P,EAAzB0P,UAAWC,EAAc3P,EAAd2P,UACbC,EAAoCD,EAAUE,SAAQ,SAACtB,GAAD,OAC1DmB,EAAU3B,KAAI,SAACO,GAAD,MAAe,CAC3BjO,MAAM,IAAIyP,MAAOC,cACjB1B,UAAWrI,EAAgBgK,GAC3B1L,QAAQ,EACRiK,WACAD,WACA2B,iBAAkB,YAZhB,SAeA7D,GACJ5E,GACAoI,GAjBI,gCAmBC9P,QAAQC,QAAQ,CACrBC,KAAM,CAAEE,GAAI,MApBR,2CAAF,qDAAC,GAuBPS,QAAQ,WAAD,4BAAE,WACPhB,EADO,kDAAAE,EAAA,6DAGL8O,EAHK,EAGLA,OAHK,IAILuB,KAAQC,EAJH,EAIGA,MAAOC,EAJV,EAIUA,MAJV,IAKLC,WAAcC,EALT,EAKSA,KAAMC,EALf,EAKeA,QAGhBC,EARC,cAQqB9B,GAAgBC,GAAQ8B,aAC9CC,EAAwB,IAClBC,KAAZ,iBHzEmEvC,GGyEf+B,KACpDO,EAAYC,KAAZ,oBAA8BP,IAC9BM,EAAYC,KAAZ,oBAA8BL,EAAOC,EAAUA,IAC/CG,EAAYC,KAAZ,kBAA4BL,EAAOC,IAE7BK,EAAaF,EAAYxB,QAAO,SAACC,EAAG1I,GAAJ,gBAAa0I,EAAb,YAAkB1I,MAClDsF,EAhBC,WAgBUyE,EAhBV,YAgB0BI,GAhB1B,UAqBG1E,GAAiB,UAAsB1E,GAAtB,oBAAuDuE,GArB3E,wBAmBL/L,EAnBK,EAmBLA,KACSY,EApBJ,EAoBLuL,MAASvL,MApBJ,UAuBeqL,GACnBe,GADkC,oBACf2B,QADe,IACfA,GADe,UACfA,EAAQL,gBADO,aACf,EAAkBmC,WAAWnG,MAAM,KAAKyD,KAAI,SAAC8C,GAAD,sBAAkBA,MAAO5C,KAAK,QAxBzF,eAuBDvL,EAvBC,OA0BDG,EAAe7C,EAAK+N,KAAI,kBAC5B7N,EAD4B,EAC5BA,GAAIG,EADwB,EACxBA,KAAMgO,EADkB,EAClBA,UAAW/J,EADO,EACPA,OAAQgK,EADD,EACCA,SAAUC,EADX,EACWA,SAAU0B,EADrB,EACqBA,iBADrB,MAEvB,CACL/P,KAAIG,OAAMgO,YAAW/J,SAAQgK,WAAUC,WAAU0B,mBACjD3P,WAAU,UAAEoC,EAAQjB,MAAK,SAACqP,GAAD,OAAYA,EAAO5Q,KAAOoO,YAAzC,aAAE,EAAkDhO,eA9BzD,kBAiCAR,QAAQC,QAAQ,CACrBC,KAAM6C,EACNjC,WAnCK,4CAAF,qDAAC,IAwCKnB,MChHT2O,GAEF,CACFlO,GAAI,SAACsO,EAAiBC,GAAlB,OAAiC,OAALA,QAAK,IAALA,OAAA,EAAAA,EAAOgC,WAAWnG,MAAM,KAAKzJ,QAAS,EAAtC,WAC1B4N,EAD0B,sBACND,EADM,6BAE1BA,EAF0B,gBAEFC,KCL1BL,GAAqD,CACzDlO,GAAI,WCEO6Q,GAAgB,SAAC,EAgB5BC,EACAC,GACa,IAhBX/Q,EAgBU,EAhBVA,GACAhB,EAeU,EAfVA,KACAgS,EAcU,EAdVA,SACA1O,EAaU,EAbVA,WACAC,EAYU,EAZVA,SACA0B,EAWU,EAXVA,QACAR,EAUU,EAVVA,OACAC,EASU,EATVA,QACAuN,EAQU,EARVA,WACAC,EAOU,EAPVA,UACAC,EAMU,EANVA,WACAvO,EAKU,EALVA,UACAE,EAIU,EAJVA,WAKIsO,EAAaN,EAAOvP,MAAK,SAAC8P,GAAD,OAAWA,EAAMrR,KAAOiE,KACjDqN,EAAeP,EAASxP,MAAK,SAACgQ,GAAD,OAAaA,EAAQvR,KAAOkR,KAC/D,MAAO,CACLlR,KACAhB,OACAgS,WACA1O,aACAC,WACA0B,UACAR,SACAC,UACAuN,aACAC,YACAC,aACAvO,YACAE,aACA9B,UAAS,OAAEoQ,QAAF,IAAEA,OAAF,EAAEA,EAAYvQ,KACvB2Q,eAAc,OAAEJ,QAAF,IAAEA,OAAF,EAAEA,EAAYtQ,UAC5BoB,YAAW,OAAEoP,QAAF,IAAEA,OAAF,EAAEA,EAAczQ,OC7BzB2N,GAAkB,SAACC,GACvB,OAAIC,OAAOC,KAAKF,GAAQ9N,OACD+N,OAAOE,QAAQH,GAAQZ,KAAI,YAAmB,IAAD,oBAAhBgB,EAAgB,KAAXN,EAAW,KAEhE,OHPyB,SAACM,GAAD,OAC7BX,GAAQW,GGKWC,CAAgBD,EACxBE,CAAO,IAAKR,MAEDS,QAAO,SAACC,EAAG1I,GAAJ,gBAAa0I,EAAb,aAAmB1I,MAEzC,QAmDMhH,GAhDE,CACfU,OAAO,WAAD,4BAAE,WACNR,EADM,oBAAAE,EAAA,6DAEJG,EAFI,EAEJA,KAFI,SAIgBqM,GACpBO,GACA5M,GANI,cAIA2R,EAJA,yBAQC7R,QAAQC,QAAQ,CACrBC,KAAM2R,KATF,2CAAF,qDAAC,GAYPhR,QAAQ,WAAD,4BAAE,WACPhB,EADO,kDAAAE,EAAA,6DAGL8O,EAHK,EAGLA,OAHK,IAILuB,KAAQC,EAJH,EAIGA,MAAOC,EAJV,EAIUA,MAJV,IAKLC,WAAcC,EALT,EAKSA,KAAMC,EALf,EAKeA,QAGhBC,EARC,aAQoB9B,GAAgBC,GAAQ8B,aAC7CC,EAAyB,IACnBC,KAAZ,iBFzC0DvC,GEyCX+B,KAC/CO,EAAYC,KAAZ,oBAA8BP,IAC9BM,EAAYC,KAAZ,oBAA8BL,EAAOC,EAAUA,IAC/CG,EAAYC,KAAZ,kBAA4BL,EAAOC,IAE7BK,EAAaF,EAAYxB,QAAO,SAACC,EAAG1I,GAAJ,gBAAa0I,EAAb,YAAkB1I,MAClDsF,EAhBC,WAgBUyE,EAhBV,YAgB0BI,GAhB1B,UAoBG1E,GAAiB,UAAkBU,GAAlB,oBAAkDb,GApBtE,wBAmBL/L,EAnBK,EAmBLA,KAGI4R,EAAW5R,EAAK+N,KAAI,SAAC4D,GAAD,OAAaA,EAAQxN,WAtBxC,UAuBc8H,GAA0Ba,GAAX,cAA8B8E,EAAS3D,KAAK,KAA5C,gCAvB7B,eAuBD+C,EAvBC,OAyBDa,EAAa7R,EAAK+N,KAAI,SAAC4D,GAAD,OAAaA,EAAQP,aAzB1C,UA0BgBnF,GAA4BgB,GAAb,cAAkC4E,EAAW5D,KAAK,KAAlD,gCA1B/B,eA0BDgD,EA1BC,yBA4BA,CACLjR,KAAMA,EAAK+N,KAAI,SAAC4D,GAAD,OAAaZ,GAAcY,EAASX,EAAQC,MAC3DrQ,MAAOZ,EAAKa,SA9BP,4CAAF,qDAAC,I,QCnCJuN,GAKF,CACF9N,WAAY,SAACkO,EAAiBC,GAAlB,gBAAgCD,EAAhC,iCAAyEC,EAAzE,OACZlO,UAAW,SAACiO,EAAiBC,GAAlB,OAAiC,OAALA,QAAK,IAALA,OAAA,EAAAA,EAAOgC,WAAWnG,MAAM,KAAKzJ,QAAS,EAAtC,WACjC4N,EADiC,sBACbD,EADa,oCAEjCA,EAFiC,2CAEkBC,EAFlB,OAGvCpO,KAAM,SAACmO,EAAiBC,GAAlB,gBAAgCD,EAAhC,2DAAmGC,EAAMgC,WAAWnG,MAAM,KAAK,GAA/H,0EAAmMmE,EAAMgC,WAAWnG,MAAM,KAAK,GAA/N,eACN9J,WAAY,SAACgO,EAAiBC,GAAlB,gBAAgCD,EAAhC,kCAA0EC,EAA1E,OACZhO,KAAM,SAAC+N,EAAiBC,GAAlB,gBAAgCD,EAAhC,gCAAwEC,EAAxE,OACN8C,MAAO,SAAC/C,EAAiBC,GAAlB,gBAAgCD,EAAhC,yCAAiFC,EAAjF,QCbHL,GAAsD,CAC1DlO,GAAI,UACJG,KAAM,YACNG,WAAY,mBACZF,WAAY,kBACZC,UAAW,kBCJAuR,GAAmB,SAAC,EAU/BC,GACiB,IATf7R,EASc,EATdA,GACAG,EAQc,EARdA,KACAC,EAOc,EAPdA,WACAC,EAMc,EANdA,UACAyR,EAKc,EALdA,OACgBxR,EAIF,EAJdyR,OAAUlR,KACVf,EAGc,EAHdA,KAIIkS,EAAWlS,EAAK2O,QAAO,qBAAGwD,SAAwBC,SAASL,MAAS,GAC1E,MAAO,CACL7R,KACAG,OACAG,aACAF,aACAG,MAAc,OAARyR,QAAQ,IAARA,OAAA,EAAAA,EAAUzR,OAAQuR,EACxBtR,MAAOV,EAAK,GAAGU,OAAS,cACxBH,c,cCbEmO,GAAkB,SACtB2D,GAEA,OAAIzD,OAAOC,KAAKwD,GAAexR,OACR+N,OAAOE,QAAQuD,GAAetE,KAAI,YAAmB,IAAD,oBAAhBgB,EAAgB,KAAXN,EAAW,KAEvE,OHEyB,SAACM,GAAD,OAC7BX,GAAQW,GGJWC,CAAgBD,EACxBE,CAAO,IAAKR,MAEDS,QAAO,SAACC,EAAG1I,GAAJ,gBAAa0I,EAAb,aAAmB1I,MAEzC,QAmCMhH,GAhCE,CACfkB,QAAQ,WAAD,4BAAE,WACPhB,EADO,kDAAAE,EAAA,iEAGL8O,OAAUoD,EAHL,EAGKA,OAAWO,EAHhB,uBAILpC,KAAQC,EAJH,EAIGA,MAAOC,EAJV,EAIUA,MAJV,IAKLC,WAAcC,EALT,EAKSA,KAAMC,EALf,EAKeA,QAGhBC,EARC,aAQoB9B,GAAgB4D,KACrC5B,EAAwB,IAClBC,KAAZ,iBFxBuDvC,GEwBZ+B,KAC3CO,EAAYC,KAAZ,oBAA8BP,IAC9BM,EAAYC,KAAZ,oBAA8BL,EAAOC,EAAUA,IAC/CG,EAAYC,KAAZ,kBAA4BL,EAAOC,IAE7BK,EAAaF,EAAYxB,QAAO,SAACC,EAAG1I,GAAJ,gBAAa0I,EAAb,YAAkB1I,MAClDsF,EAhBC,WAgBUyE,EAhBV,YAgB0BI,GAhB1B,UAqBG1E,GAAoCa,GAAmBhB,GArB1D,wBAmBL/L,EAnBK,EAmBLA,KACSY,EApBJ,EAoBLuL,MAASvL,MAEL2R,EAAevS,EAAK+N,KAAI,SAACyE,GAAD,OAASV,GAAiBU,EAAKT,MAtBtD,kBAwBAjS,QAAQC,QAAQ,CACrBC,KAAMuS,EACN3R,WA1BK,4CAAF,qDAAC,ICxBG6R,GAAc,UCErBrE,GAA2D,CAC/DlO,GAAI,UACJa,KAAM,YACNC,UAAW,iBACXC,QAAS,gBCHEyR,GAAwB,SACnCnB,GADmC,MAEb,CACtBrR,GAAIqR,EAAMrR,GACVa,KAAMwQ,EAAMxQ,KACZC,UAAWuQ,EAAMvQ,UACjBC,QAASsQ,EAAMtQ,UC2BFxB,GA1BE,CACfkB,QAAQ,WAAD,4BAAE,WACPhB,EADO,4CAAAE,EAAA,6DAEL8O,EAFK,EAELA,OAFK,IAEGuB,KAAQE,EAFX,EAEWA,MAAOD,EAFlB,EAEkBA,MAFlB,IAE2BE,WAAcC,EAFzC,EAEyCA,KAAMC,EAF/C,EAE+CA,SAEhDG,EAAwB,IAClBC,KAAZ,iBFPoEvC,GEOjB+B,KACnDO,EAAYC,KAAZ,oBAA8BP,IAC9BM,EAAYC,KAAZ,oBAA8BL,EAAOC,EAAUA,IAC/CG,EAAYC,KAAZ,kBAA4BL,EAAOC,IAE7BK,EAAaF,EAAYxB,QAAO,SAACC,EAAG1I,GAAJ,gBAAa0I,EAAb,YAAkB1I,MAClDsF,EAXC,UAWS4C,EAAO5N,KAAP,8BAAqC4N,EAAO5N,KAA5C,MAAuD0R,GAXhE,YAW+E7B,GAX/E,UAakC1E,GAAiB,UACrDY,GADqD,qBACtBf,GAd7B,wBAaC/L,EAbD,EAaCA,KAAeY,EAbhB,EAaOuL,MAASvL,MAGjB+R,EAAkB3S,EAAK+N,KAAI,SAACwD,GAAD,OAAWmB,GAAsBnB,MAhB3D,kBAkBA,CACLvR,KAAM2S,EACN/R,UApBK,4CAAF,qDAAC,ICGJgS,GAAoB,SAACC,EAAkBC,GAAnB,OACxBD,EAAMhS,OAASiS,EAASnE,QAAO,SAACoE,GAAD,OAAmB,MAAZA,EAAEpP,UAAgB9C,QA6BpDmS,GAA0B,SAC9BC,EACAC,EACAL,EACAC,EACAK,GAL8B,MAMN,CACxBjT,GAAI+S,EAAQ/S,GACZa,KAAMkS,EAAQlS,KACdI,SAAUyR,GAAkBC,EAAOC,GACnC1R,KAAM0R,EAASjS,OACfQ,QAAS8R,EAAkBtS,OAC3BqS,OAAQA,EACLvE,QAAO,SAACoE,GAAD,OAAOE,EAAQG,UAAUhB,SAASW,EAAE7S,OAC3C6N,KAAI,SAACsF,GACJ,IAAMC,EAAgBT,EAAMlE,QAAO,SAAC4E,GAAD,OAAOA,EAAE3P,UAAYyP,EAAMnT,MACxDsT,EAAqBH,EAAM7M,YAAYiN,OAC3CH,EAAczD,SAAQ,SAAC0D,GAAD,OAAOA,EAAE/M,gBAE3BkN,EAAmBZ,EAASnE,QAAO,SAACgF,GAAD,OACvCH,EAAmBpB,SAASuB,EAAKzT,OAE7B0T,EAA4BT,EAAkBxE,QAClD,SAACkF,GAAD,OAAsBL,EAAmBpB,SAASyB,MAE9CC,EAA0BhB,EAASnE,QAAO,SAACgF,GAAD,OAC9CC,EAA0BxB,SAASuB,EAAKzT,OAE1C,OAvDwB,SAC5BmT,EACAR,EACAC,EACAiB,GAJ4B,MAKN,CACtB7T,GAAImT,EAAMnT,GACVa,KAAMsS,EAAMtS,KACZI,SAAUyR,GAAkBC,EAAOC,GACnC1R,KAAM0R,EAASjS,OACfQ,QAAS0S,EAAgBlT,OACzBmT,WAAYlB,EAASnE,QAAO,SAACoE,GAAD,OAAOA,EAAE7T,OAASG,EAAYkD,UAAQ1B,OAClEoT,cAAeF,EAAgBpF,QAAO,SAACoE,GAAD,OAAOA,EAAE7T,OAASG,EAAYkD,UACjE1B,OACHqT,QAASpB,EAASnE,QAAO,SAACoE,GAAD,OAAOA,EAAE7T,OAASG,EAAY8U,OAAKtT,OAC5DuT,WAAYL,EAAgBpF,QAAO,SAACoE,GAAD,OAAOA,EAAE7T,OAASG,EAAY8U,OAAKtT,OACtEwT,UAAWvB,EAASnE,QAAO,SAACoE,GAAD,OAAOA,EAAE7T,OAASG,EAAYiV,SAAOzT,OAChE0T,aAAcR,EAAgBpF,QAAO,SAACoE,GAAD,OAAOA,EAAE7T,OAASG,EAAYiV,SAChEzT,OACH2T,YAAa1B,EAASnE,QAAO,SAACoE,GAAD,OAAOA,EAAE7T,OAASG,EAAYoV,WAAS5T,OACpE6T,eAAgBX,EAAgBpF,QAAO,SAACoE,GAAD,OAAOA,EAAE7T,OAASG,EAAYoV,WAClE5T,OACH8T,WAAY7B,EAASnE,QAAO,SAACoE,GAAD,OAAOA,EAAE7T,OAASG,EAAYuV,UAAQ/T,OAClEgU,cAAed,EAAgBpF,QAAO,SAACoE,GAAD,OAAOA,EAAE7T,OAASG,EAAYuV,UACjE/T,QA+BQiU,CACLzB,EACAC,EACAI,EACAI,QA2CKiB,GAAmB,SAC9BC,EACA1T,EACA2T,EACA/B,EACAL,EACAC,EACAiB,GAEA,IAAMZ,EAAoBY,EAAgBhG,KAAI,SAAC4F,GAAD,OAAUA,EAAKzT,MAC7D,MAAO,CACLA,GAAI8U,EAAc9U,GAClBgB,UAAW8T,EAAcjU,KACzBI,SAAUyR,GAAkBC,EAAOC,GACnC1R,KAAM0R,EAASjS,OACfQ,QAAS0S,EAAgBlT,OACzBR,KAAM2U,EAAchU,UACpBM,QAASA,EACNqN,QAAO,SAACuG,GAAD,OAAOF,EAAc1O,WAAW8L,SAAS8C,EAAEhV,OAClD6N,KAAI,SAACoH,GACJ,IAAMC,EAAmBH,EAAStG,QAChC,SAAC0G,GAAD,OAAOA,EAAEC,WAAaH,EAAOjV,MAEzBqV,EAAiBrC,EAAOvE,QAAO,SAACoE,GAAD,OACnCqC,EAAiBvF,SAAQ,SAACwF,GAAD,OAAOA,EAAEjC,aAAWhB,SAASW,EAAE7S,OAEpDsV,EAAkBD,EAAe1F,SAAQ,SAACkD,GAAD,OAAOA,EAAE0C,YAClDnC,EAAgBT,EAAMlE,QAAO,SAAC4E,GAAD,OACjCiC,EAAgBpD,SAASmB,EAAErT,OAEvBsT,EAAqB+B,EACxB1F,SAAQ,SAACkD,GAAD,OAAOA,EAAEvM,eACjBiN,OAAOH,EAAczD,SAAQ,SAAC0D,GAAD,OAAOA,EAAE/M,gBACnCkN,EAAmBZ,EAASnE,QAAO,SAACgF,GAAD,OACvCH,EAAmBpB,SAASuB,EAAKzT,OAE7B0T,EAA4BT,EAAkBxE,QAClD,SAACkF,GAAD,OAAsBL,EAAmBpB,SAASyB,MAEpD,OA7EuB,SAC7BsB,EACAF,EACA/B,EACAL,EACAC,EACAK,GAN6B,MAON,CACvBjT,GAAIiV,EAAOjV,GACXa,KAAMoU,EAAOpU,KACbI,SAAUyR,GAAkBC,EAAOC,GACnC1R,KAAM0R,EAASjS,OACfQ,QAAS8R,EAAkBtS,OAC3BoU,SAAUA,EACPtG,QAAO,SAAC0G,GAAD,OAAOF,EAAOpO,YAAYqL,SAASiD,EAAEnV,OAC5C6N,KAAI,SAACkF,GACJ,IAAMsC,EAAiBrC,EAAOvE,QAAO,SAACoE,GAAD,OAAOA,EAAE2C,YAAczC,EAAQ/S,MAC9DsV,EAAkBD,EAAe1F,SAAQ,SAACkD,GAAD,OAAOA,EAAE0C,YAClDnC,EAAgBT,EAAMlE,QAAO,SAAC4E,GAAD,OAAOiC,EAAgBpD,SAASmB,EAAErT,OAC/DsT,EAAqB+B,EACxB1F,SAAQ,SAACkD,GAAD,OAAOA,EAAEvM,eACjBiN,OAAOH,EAAczD,SAAQ,SAAC0D,GAAD,OAAOA,EAAE/M,gBACnCkN,EAAmBZ,EAASnE,QAAO,SAACgF,GAAD,OACvCH,EAAmBpB,SAASuB,EAAKzT,OAE7B0T,EAA4BT,EAAkBxE,QAClD,SAACkF,GAAD,OAAsBL,EAAmBpB,SAASyB,MAEpD,OAAOb,GACLC,EACAsC,EACAjC,EACAI,EACAE,OA4CO+B,CACLR,EACAC,EACAG,EACAjC,EACAI,EACAE,QC/EKnU,GAlEE,CACf8B,OAAO,WAAD,4BAAE,WACN5B,EADM,sDAAAE,EAAA,6DAEAsE,EAFA,EAEJjE,GAEI0V,EAAuB/J,GAAciB,GAAX,WAA2B3I,IACrD0R,EAAiB5J,GACrBoB,GADoC,2CAEAlJ,EAFA,sCAIhC2R,EAAkB7J,GACtBmB,GADqC,kDAEMjJ,EAFN,sCAIjC4R,EAAgB9J,GACpBkB,GADmC,0DAEgBhJ,EAFhB,sCAI/B6R,EAAe/J,GACnBiB,GADkC,gEAEuB/I,EAFvB,OAI9B8R,EArBA,8BAqB2C9R,EArB3C,4FAsBA+R,EAAkBjK,GACtBW,GACAqJ,GAEIE,EAAyBlK,GAC7BW,GAD4C,UAEzCqJ,EAFyC,mKA1BxC,UAuCInW,QAAQ0P,IAAI,CACpBoG,EACAC,EACAC,EACAC,EACAC,EACAE,EACAC,IA9CI,4CAgCJnB,EAhCI,KAiCJ1T,EAjCI,KAkCJ2T,EAlCI,KAmCJ/B,EAnCI,KAoCJL,EApCI,KAqCJC,EArCI,KAsCJiB,EAtCI,KAiDAqC,EAAkBrB,GACtBC,EACA1T,EACA2T,EACA/B,EACAL,EACAC,EACAiB,GAxDI,kBA2DC,CACL/T,KAAMoW,IA5DF,4CAAF,qDAAC,I,UCpBIC,GAA4B,SAACjH,GACxC,mBAA8BA,GAAvBkH,EAAP,KACA,OADA,YACmB,IAAIpH,QACrB,SAACqH,EAAMC,GAAP,gBAAmBD,EAAnB,mBAA4CC,KADvC,mBAEOF,KCJHG,GAAY,SAA2BC,GAA3B,OACvB,IAAIC,IAAID,EAAO3I,KAAI,SAACrM,GAAD,MAAoB,CAACA,EAAExB,GAAIwB,QAEnCkV,GAAiB,SAACF,GAAD,OAAsBG,MAAMC,KAAK,IAAI7M,IAAIyM,KCwB1DK,GAAqB,SAAC,EAAD,EAuBhCxF,EAvBgC,EAyBhC7O,EACAG,EACAwQ,EACAJ,EACAkC,EACA6B,GACmB,IA7BbzW,EA6BY,EA7BhBL,GACU+C,EA4BM,EA5BhBiO,SACM5O,EA2BU,EA3BhBpD,KACAsD,EA0BgB,EA1BhBA,WACAC,EAyBgB,EAzBhBA,SACAK,EAwBgB,EAxBhBA,UACAE,EAuBgB,EAvBhBA,WACAW,EAsBgB,EAtBhBA,OACAC,EAqBgB,EArBhBA,QAGA3B,EAkBgB,EAlBhBA,UACAC,EAiBgB,EAjBhBA,SACAC,EAgBgB,EAhBhBA,MACAgB,EAegB,EAfhBA,QACAC,EAcgB,EAdhBA,UACAC,EAagB,EAbhBA,aACAE,EAYgB,EAZhBA,eACAC,EAWgB,EAXhBA,YACAC,EAUgB,EAVhBA,OAGMrB,EAOU,EAPhBrB,KAAmBsB,EAOH,EAPGA,YAQf4U,EAAkBR,GAAU5T,GAClC,MAAO,CACL3C,GAAIK,EACJ0B,YACAC,WACAhB,WAAgB,OAALqQ,QAAK,IAALA,OAAA,EAAAA,EAAOxQ,OAAQ,KAC1BoB,QACAC,cACAC,cACAC,cACAE,aACAC,WACAC,QAASA,EAAQqL,KAAI,SAACsH,GAAD,OAzDL,SAAC,EAEnB4B,GAFkB,MAGN,CACZ/W,GAJkB,EAChBA,GAIFI,WALkB,EACZA,WAKNqC,WANkB,EACAA,WAMlBG,UAPkB,EACYA,UAO9BD,aARkB,EACuB0B,gBAOXwJ,KAC5B,SAACuB,GAAD,OAAU2H,EAAgBpL,IAAIyD,OAgDF4H,CAAY7B,EAAG4B,MAC3CnU,YACAE,aACAC,kBACAE,UACAC,YACAC,eACAE,iBACAC,cACAC,SACAE,SACAC,UACAE,YAAkB,OAANqR,QAAM,IAANA,OAAA,EAAAA,EAAQpU,OAAQ,KAC5BgD,aAAoB,OAAPkP,QAAO,IAAPA,OAAA,EAAAA,EAASlS,OAAQ,KAC9BiD,WAAgB,OAALqP,QAAK,IAALA,OAAA,EAAAA,EAAOtS,OAAQ,KAC1BkD,WAAe,OAAJ+S,QAAI,IAAJA,OAAA,EAAAA,EAAMG,WAAY,KAC7BC,WAAU,OAAEJ,QAAF,IAAEA,OAAF,EAAEA,EAAMK,cC1DhBC,GAA4B,uCAAG,WAAO5H,GAAP,mBAAA7P,EAAA,sEACboM,GACpBe,GACAqJ,GAA0B3G,IAHO,UAC7BhN,EAD6B,SAK7B6U,EAAiB7U,EAAQmN,SAAQ,SAACwF,GAAD,OAAOA,EAAE9Q,oBACZ1D,OAND,iCAOzBoL,GACJzE,GACA6O,GAA0BO,GAAeW,KATZ,gDAW/B,GAX+B,eAM7B1U,EAN6B,uBAY5B,CACLH,UACAG,iBAdiC,4CAAH,sDAiFnBpD,GA/DE,CACf8B,OAAO,WAAD,4BAAE,WACN5B,EADM,gEAAAE,EAAA,6DAEAU,EAFA,EAEJL,GAFI,SAIgB2L,GAAgBe,GAAb,WAA+BrM,IAJlD,UAIAoR,EAJA,OAKER,EAAmCQ,EAAnCR,WAAYhN,EAAuBwN,EAAvBxN,QAASiN,EAAcO,EAAdP,UAEvBoG,EAAkB3L,GAAiBgB,GAAd,WAAiCsE,IACtDsG,EAAetT,EAAU0H,GAAciB,GAAX,WAA2B3I,IAAa,KACpEuT,EAAiB7L,GAAgBoB,GAAb,WAA+BmE,IACnDuG,EAAiCL,GACrC3F,EAAQN,aAGGM,EAAQhO,OAdf,kCAeIkI,GAAaqB,GAAV,WAAyByE,EAAQhO,OAAO8M,aAf/C,iDAgBF,KAhBE,eAcAuG,EAdA,KAkBAY,EAAW,WACf,OAAIZ,EACKnL,GAAcsB,GAAX,WAA2B6J,EAAKpT,QAAQ6M,cAEpD,OAAIkB,QAAJ,IAAIA,OAAJ,EAAIA,EAAS/N,SACJiI,GAAcsB,GAAX,kBAA2BwE,QAA3B,IAA2BA,GAA3B,UAA2BA,EAAS/N,eAApC,aAA2B,EAAkB6M,aAElD,KAHgB,IAAD,GAtBlB,UA4BcmH,IA5Bd,aA4BAvE,EA5BA,0CA+BIxH,GAAgBuB,GAAb,kBAA+BiG,QAA/B,IAA+BA,GAA/B,UAA+BA,EAAOqC,iBAAtC,aAA+B,EAAkBjF,aA/BxD,iDAgCF,KAhCE,aA8BAwC,EA9BA,wCAkCIpH,GAAewB,GAAZ,kBAA6B4F,QAA7B,IAA6BA,GAA7B,UAA6BA,EAASqC,gBAAtC,aAA6B,EAAmB7E,aAlCvD,iDAmCF,KAnCE,eAiCA0E,EAjCA,eAsCErV,QAAQ0P,IAAI,CAChBgI,EACAC,EACAC,EACAC,IA1CE,4CAqCCE,EArCD,KAqCWtG,EArCX,KAqCkBE,EArClB,YAqC6B/O,EArC7B,EAqC6BA,QAASG,EArCtC,EAqCsCA,aArCtC,kBA6CC,CACL7C,KAAM+W,GACJpF,EACAkG,EACAtG,EACAE,EACA/O,EACAG,EACAwQ,EACAJ,EACAkC,EACA6B,KAxDE,4CAAF,qDAAC,ICxBIc,GAA0B,SACrChF,EACAiF,EACA/G,EACAtO,GAEA,IAAMsV,EAAcvB,GAAU3D,GACxBmF,EAAexB,GAAUsB,GACzBG,EAAYzB,GAAUzF,GAC5B,OAAOtO,EAAQqL,KAAI,SAAC+C,GAClB,MAAgCkH,EAAYnM,IAC1CiF,EAAOvQ,WADD4Q,EAAR,EAAQA,WAAYhN,EAApB,EAAoBA,QAKpB,OAhC+B,SAAC,EAElCoN,EAFiC,OAC/BtP,EAD+B,EAC/BA,UAAWC,EADoB,EACpBA,SAAUC,EADU,EACVA,MAErBjC,EAH+B,EAG/BA,GAAIK,EAH2B,EAG3BA,UAAWD,EAHgB,EAGhBA,WAAYqC,EAHI,EAGJA,WAHI,MAIjB,CAChBzC,KACA+B,YACAC,WACAC,QACAgC,SAAc,OAALoN,QAAK,IAALA,OAAA,EAAAA,EAAOrR,KAAM,KACtBgB,WAAgB,OAALqQ,QAAK,IAALA,OAAA,EAAAA,EAAOxQ,OAAQ,KAC1BqD,WAAgB,OAALmN,QAAK,IAALA,OAAA,EAAAA,EAAOvQ,YAAa,KAC/BV,aACAqC,aACApC,aAkBS4X,CAFUF,EAAapM,IAAIsF,GACpB+G,EAAUrM,IAAI1H,GACgB2M,OCrC1C1C,GAAqD,CACzDlO,GAAI,UACJI,WAAY,kBACZC,UAAW,kBCHP6N,GAKF,CACF9N,WAAY,SAACkO,EAAiBC,GAAlB,gBAAgCD,EAAhC,iCAAyEC,EAAzE,QCYRC,GAAkB,SACtB2D,GAEA,OAAIzD,OAAOC,KAAKwD,GAAexR,OACR+N,OAAOE,QAAQuD,GAAetE,KAAI,YAAmB,IAAD,oBAAhBgB,EAAgB,KAAXN,EAAW,KAEvE,ODfyB,SAACM,GAAD,OAC7BX,GAAQW,GCaWC,CAAgBD,EACxBE,CAAO,IAAKR,MAEDS,QAAO,SAACC,EAAG1I,GAAJ,gBAAa0I,EAAb,aAAmB1I,MAEzC,QAEH2R,GAAiB,SAAItM,EAAiBsD,GAC1C,IAAMiJ,EAAYzB,GAAexH,GACjC,OAAOnD,GAAmBH,EAASuK,GAA0BgC,KAyDhD5Y,GAtDE,CACfkB,QAAQ,WAAD,4BAAE,WACPhB,EADO,kEAAAE,EAAA,6DAGL8O,EAHK,EAGLA,OAHK,IAIL0B,WAAcC,EAJT,EAISA,KAAMC,EAJf,EAIeA,QAJf,IAKLL,KAAQC,EALH,EAKGA,MAAOC,EALV,EAKUA,MAGXI,EARC,aAQoB9B,GAAgBC,IACrC+B,EAAwB,GACxBJ,GAAUH,GACdO,EAAYC,KAAZ,iBFzCwDvC,GEyCT+B,KAC/CO,EAAYC,KAAZ,oBAA8BP,IAC9BM,EAAYC,KAAZ,oBAA8BL,EAAOC,EAAUA,IAC/CG,EAAYC,KAAZ,kBAA4BL,EAAOC,KAEhCG,EAAYC,KAAK,IAEhBC,EAAaF,EAAYxB,QAAO,SAACC,EAAG1I,GAAJ,gBAAa0I,EAAb,YAAkB1I,MAClDsF,EAnBC,WAmBUyE,EAnBV,YAmB0BI,GAnB1B,SAoB2C1E,GAAiB,UAC9Dc,GAD8D,oBAC/BjB,GArB7B,uBAoBOrJ,EApBP,EAoBC1C,KAAwBY,EApBzB,EAoBgBuL,MAASvL,MAI1B0X,EAAa5V,EAAQqL,KAAI,SAACrM,GAAD,OAAOA,EAAEnB,aAxBjC,UAyBgB6X,GAA2BxL,GAAc0L,GAzBzD,eAyBDxF,EAzBC,OA2BDyF,EAAczF,EAAS/E,KAAI,SAACrM,GAAD,OAAOA,EAAEyP,cACpCS,EAAWkB,EAAS/E,KAAI,SAACrM,GAAD,OAAOA,EAAEyC,WAEjCqU,EAAmBJ,GACvBvL,GACA0L,GAEIE,EAAgBL,GAAyBtL,GAAY8E,GAlCpD,UAmC2B9R,QAAQ0P,IAAI,CAC5CgJ,EACAC,IArCK,4CAmCAV,EAnCA,KAmCW/G,EAnCX,KAwCD0H,EAAqBZ,GACzBhF,EACAiF,EACA/G,EACAtO,GA5CK,kBA8CA5C,QAAQC,QAAQ,CACrBC,KAAM0Y,EACN9X,WAhDK,4CAAF,qDAAC,ICfKnB,GAjBE,CACfkB,QAAQ,WAAD,4BAAE,WACPhB,EADO,sBAAAE,EAAA,6DAEL8O,EAFK,EAELA,OAEIgK,EAJC,oCAI0DhK,EAAOrO,WAJjE,eAKe2L,GACpBe,GACA2L,GAPK,cAKDjW,EALC,yBASA5C,QAAQC,QAAQ,CACrBC,KAAM0C,EACN9B,MAAO8B,EAAQ7B,UAXV,2CAAF,qDAAC,ICLJuN,GAKF,CACFlO,GAAI,SAACsO,EAAiBC,GAAlB,OAA4BA,EAAMgC,WAAWnG,MAAM,KAAKyD,KAAI,SAACrM,GAAD,gBAAUA,EAAV,aAAgB8M,EAAhB,UAAsCP,KAAK,QCNvGG,GAAiD,CACrDlO,GAAI,WCaAwO,GAAkB,SAACC,GACvB,OAAIC,OAAOC,KAAKF,GAAQ9N,OACD+N,OAAOE,QAAQH,GAAQZ,KAAI,YAAmB,IAAD,oBAAhBgB,EAAgB,KAAXN,EAAW,KAEhE,OFTyB,SAACM,GAAD,OAC7BX,GAAQW,GEOWC,CAAgBD,EACxBE,CAAO,IAAKR,MAEDS,QAAO,SAACC,EAAG1I,GAAJ,gBAAa0I,EAAb,aAAmB1I,MAEzC,QAyGMhH,GAtGE,CACfkB,QAAQ,WAAD,4BAAE,WACPhB,EADO,4CAAAE,EAAA,6DAGL8O,EAHK,EAGLA,OAHK,IAILuB,KAAQC,EAJH,EAIGA,MAAOC,EAJV,EAIUA,MAJV,IAKLC,WAAcC,EALT,EAKSA,KAAMC,EALf,EAKeA,QAGhBC,EARC,aAQoB9B,GAAgBC,GAAQ8B,aAC7CC,EAAwB,IAClBC,KAAZ,iBDhCqDvC,GCgCP+B,KAC9CO,EAAYC,KAAZ,oBAA8BP,IAC9BM,EAAYC,KAAZ,oBAA8BL,EAAOC,EAAUA,IAC/CG,EAAYC,KAAZ,kBAA4BL,EAAOC,IAE7BK,EAAaF,EAAYxB,QAAO,SAACC,EAAG1I,GAAJ,gBAAa0I,EAAb,YAAkB1I,MAClDsF,EAhBC,WAgBUyE,EAhBV,YAgB0BI,GAhB1B,UAkBgB1E,GAAiB,UACnCS,GADmC,oBAEtCZ,GApBK,wBAkBC/L,EAlBD,EAkBCA,KAIF6D,EAAW7D,EAAK+N,KACpB,kBAuBC,CACC7N,GAxBF,EACEA,GAwBAa,KAzBF,EAEEA,KAwBA2D,MA1BF,EAGEA,MAwBAE,WA3BF,EAIEA,WAwBAC,aA5BF,EAKEA,aAwBAC,cA7BF,EAMEA,cAwBAC,SA9BF,EAOEA,SAwBAC,YA/BF,EAQEA,YAwBAC,0BAhCF,EASEA,0BAwBAC,YAjCF,EAUEA,YAwBAC,iBAlCF,EAWEA,iBAwBAE,kBAnCF,EAYEA,kBAwBAC,MApCF,EAaEA,MAwBAC,aArCF,EAcEA,aAwBAC,yBAtCF,EAeEA,yBAwBAE,YAvCF,EAgBEA,YAwBAC,eAxCF,EAiBEA,eAwBAC,YAzCF,EAkBEA,YAwBAC,aA1CF,EAmBEA,aAwBA/C,UA3CF,EAoBEA,UAwBAE,WA5CF,EAqBEA,eA5CG,kBAuEAlD,QAAQC,QAAQ,CACrBC,KAAM6D,EACNjD,MAAOiD,EAAShD,UAzEX,4CAAF,qDAAC,GA4ERU,OAAO,WAAD,4BAAE,WACN5B,EADM,0BAAAE,EAAA,6DAEJK,EAFI,EAEJA,GAFI,SAIe2L,GAAec,GAAZ,WAA8BzM,IAJhD,cAIA0Y,EAJA,gBAKmB/M,GACvB4B,GACAmL,EAAO/S,aAAa4K,YAPhB,UAKAoI,EALA,OAUJD,EAAO/S,eAAiB+S,EAAOhT,YAV3B,sBAWAiT,EAXA,yCAYMhN,GAAa4B,GAAWmL,EAAOhT,YAAY6K,YAZjD,mCASAqI,EATA,eAaiBjN,GAAiB6B,GAAd,WAAiCkL,EAAOhU,aAb5D,eAaAmU,EAbA,yBAcC,CACL/Y,KAAK,2BACA4Y,GADD,IAEF7S,eAAgB8S,EAAWG,SAC3BlT,cAAegT,EAAUE,SACzBC,aAAcF,EAASG,SAnBrB,4CAAF,qDAAC,ICtGH9K,GAAmD,CACvDlO,GAAI,UACJa,KAAM,YACNC,UAAW,iBACXC,QAAS,eACTiF,OAAQ,eCgSKzG,GAvQE,CACfkB,QAAQ,WAAD,4BAAE,WACPhB,EADO,wCAAAE,EAAA,6DAGKkB,EAHL,EAGL4N,OAAU5N,KAHL,IAILmP,KAAQC,EAJH,EAIGA,MAAOC,EAJV,EAIUA,MAJV,IAKLC,WAAcC,EALT,EAKSA,KAAMC,EALf,EAKeA,SAIhBG,EAAwB,IAClBC,KAAZ,iBDjCsDvC,GCiCT+B,KAC7CO,EAAYC,KAAZ,oBAA8BP,IAC9BM,EAAYC,KAAZ,oBAA8BL,EAAOC,EAAUA,IAC/CG,EAAYC,KAAZ,kBAA4BL,EAAOC,IAC7BK,EAAaF,EAAYxB,QAAO,SAACC,EAAG1I,GAAJ,gBAAa0I,EAAb,YAAkB1I,MAdjD,SAekCyF,GAAiB,UAAgBY,GAAhB,+BAAkD/L,EAAI,8BAA0BA,EAA1B,MAAqC0R,GAA3F,YAA0G7B,IAf7J,uBAeC5Q,EAfD,EAeCA,KAAeY,EAfhB,EAeOuL,MAASvL,MAfhB,kBAiBAd,QAAQC,QAAQ,CACrBC,OACAY,WAnBK,4CAAF,qDAAC,GAsBRW,OAAO,WAAD,4BAAE,WACN5B,EADM,oBAAAE,EAAA,6DAEJK,EAFI,EAEJA,GAFI,SAIc2L,GAAciB,GAAX,WAA2B5M,IAJ5C,cAIAqR,EAJA,yBAMC,CACLvR,KAAMuR,IAPF,2CAAF,qDAAC,GAUPtR,OAAO,WAAD,4BAAE,WACNN,EADM,oBAAAE,EAAA,6DAEJG,EAFI,EAEJA,KAFI,SAIcoM,GAAuCU,GAAY,CAAC,2BACnE9M,GADkE,IAErEgB,UACE,IAAI8O,KAAK,IAAIA,KAAJ,OAAS9P,QAAT,IAASA,OAAT,EAASA,EAAMgB,WAAWmY,UAA6D,IAAhD,IAAIrJ,KAAJ,OAAS9P,QAAT,IAASA,OAAT,EAASA,EAAMgB,WAAWoY,qBAA8BC,SAC1GpY,QACE,IAAI6O,KAAK,IAAIA,KAAJ,OAAS9P,QAAT,IAASA,OAAT,EAASA,EAAMiB,SAASkY,UAA2D,IAA9C,IAAIrJ,KAAJ,OAAS9P,QAAT,IAASA,OAAT,EAASA,EAAMiB,SAASmY,qBAA8BC,aATlG,cAIA9H,EAJA,yBAYC,CACLvR,KAAMuR,EAAM,KAbR,2CAAF,qDAAC,GAgBPpR,OAAO,WAAD,4BAAE,WACNR,EADM,oCAAAE,EAAA,yDAEJK,EAFI,EAEJA,GAAIF,EAFA,EAEAA,KAAMsZ,EAFN,EAEMA,aAEJvY,EAA6Bf,EAA7Be,KAAMC,EAAuBhB,EAAvBgB,UAAWC,EAAYjB,EAAZiB,QAErBsY,EAAcvZ,GACdsZ,EAPE,uBAQUE,EAAyEF,EAA/EvY,KAA+B0Y,EAAgDH,EAA3DtY,UAAuC0Y,EAAoBJ,EAA7BrY,QARtD,SASgBoL,GAAoCS,GAAY,CAClE5M,GAAIwK,SAASxK,EAAc,IAC3Ba,KAAI,OAAEA,QAAF,IAAEA,IAAQyY,EACdxY,UAAWA,EACT,IAAI8O,KAAK,IAAIA,KAAK9O,GAAWmY,UAAuD,IAA1C,IAAIrJ,KAAK9O,GAAWoY,qBAA8BC,SAC5FI,EACFxY,QAASA,EACP,IAAI6O,KAAK,IAAIA,KAAK7O,GAASkY,UAAqD,IAAxC,IAAIrJ,KAAK7O,GAASmY,qBAA8BC,SACxFK,IAjBA,OASJH,EATI,uCAqBCzZ,QAAQC,QAAQ,CACrBC,KAAK,yBAAGE,MAAOF,GAASuZ,MAtBpB,2CAAF,qDAAC,GAyBPI,SAAS,WAAD,4BAAE,WACRha,EADQ,oBAAAE,EAAA,6DAENsE,EAFM,EAENA,QAFM,SAIemI,GAAG,UACpBQ,GADoB,6BACW3I,QAAWyV,GALxC,cAIFD,EAJE,yBAMD,CACL3Z,KAAM2Z,IAPA,2CAAF,qDAAC,GAUTE,WAAW,WAAD,4BAAE,WACVla,EADU,oBAAAE,EAAA,6DAERsE,EAFQ,EAERA,QAFQ,SAIemI,GAAG,UACtBQ,GADsB,+BACW3I,QAAWyV,GALxC,cAIJC,EAJI,yBAMH,CACL7Z,KAAM6Z,IAPE,2CAAF,qDAAC,GAUXC,iBAAiB,WAAD,4BAAE,WAChBna,EADgB,oBAAAE,EAAA,6DAEdsE,EAFc,EAEdA,QAFc,SAIQ0H,GAAG,UACrBiB,IADqB,wBACU3I,IALrB,cAIV4V,EAJU,yBAMT,CACL/Z,KAAM+Z,IAPQ,2CAAF,qDAAC,GAUjBC,gBAAgB,WAAD,4BAAE,WACfra,EACAC,GAFe,eAAAC,EAAA,sEAIcyM,GAAG,UAC1BQ,GAD0B,oBACIlN,GALrB,cAITqa,EAJS,yBAMR,CACLja,KAAMia,IAPO,2CAAF,qDAAC,GAUhBC,gBAAgB,WAAD,4BAAE,WACfva,EACAC,GAFe,eAAAC,EAAA,sEAIcyM,GAAG,UAC1BQ,GAD0B,oBACIlN,GALrB,cAITqa,EAJS,yBAMR,CACLja,KAAMia,IAPO,2CAAF,qDAAC,GAUhBE,cAAc,WAAD,4BAAE,WACbxa,EACAC,GAFa,eAAAC,EAAA,sEAIcyM,GAAG,UACxBQ,GADwB,kBACIlN,GALrB,cAIPwa,EAJO,yBAMN,CACLpa,KAAMoa,IAPK,2CAAF,qDAAC,GAUdC,cAAc,WAAD,4BAAE,WACb1a,EACAC,GAFa,eAAAC,EAAA,sEAIcyM,GAAG,UACxBQ,GADwB,kBACIlN,GALrB,cAIPwa,EAJO,yBAMN,CACLpa,KAAMoa,IAPK,2CAAF,qDAAC,GAUdE,eAAe,WAAD,4BAAE,WACd3a,EADc,oBAAAE,EAAA,6DAEZsE,EAFY,EAEZA,QAFY,SAIQ0H,GAAG,UACnBiB,IADmB,sBACU3I,IALrB,cAIRoW,EAJQ,yBAMP,CACLva,KAAMua,IAPM,2CAAF,qDAAC,GAUfC,cAAc,WAAD,4BAAE,WACb7a,EACAC,GAFa,eAAAC,EAAA,sEAIcyM,GAAG,UACxBQ,GADwB,kBACIlN,GALrB,cAIP6a,EAJO,yBAMN,CACLza,KAAMya,IAPK,2CAAF,qDAAC,GAUdC,cAAc,WAAD,4BAAE,WACb/a,EACAC,GAFa,eAAAC,EAAA,sEAIcyM,GAAG,UACxBQ,GADwB,kBACIlN,GALrB,cAIP6a,EAJO,yBAMN,CACLza,KAAMya,IAPK,2CAAF,qDAAC,IClLDhb,GAZE,CACf8B,OAAO,WAAD,4BAAE,WACN5B,EADM,oBAAAE,EAAA,6DAEAsR,EAFA,EAEJjR,GAFI,SAIiB2L,GAAiBgB,GAAd,WAAiCsE,IAJrD,cAIA0G,EAJA,yBAKC,CACL7X,KAAM6X,IANF,2CAAF,qDAAC,ICLHzJ,GAKF,CACFnM,UAAW,SAACuM,EAAiBC,GAAlB,gBAAgCD,EAAhC,gCAAwEC,EAAxE,OACXvM,SAAU,SAACsM,EAAiBC,GAAlB,gBAAgCD,EAAhC,+BAAuEC,EAAvE,OACVtM,MAAO,SAACqM,EAAiBC,GAAlB,gBAAgCD,EAAhC,4BAAoEC,EAApE,OACPlL,eAAgB,SAACiL,EAAiBC,GAAlB,gBAAgCD,EAAhC,qCAA6EC,EAA7E,OAChBkM,KAAM,SAACnM,EAAiBC,GAAlB,gBAA+BA,EAAMgC,WAAWnG,MAAM,KAAKyD,KAAI,SAAC6M,GAAD,iBAC9DpM,EAD8D,sBAC/BA,EAD+B,qBACDA,EADC,kBAC0BA,EAD1B,sCACwEoM,EADxE,SAC+E3M,KAAK,SCXrJG,GAAuD,CAC3DlO,GAAI,UACJ+B,UAAW,iBACXC,SAAU,gBACVC,MAAO,aACPoB,eAAgB,uBCEZmL,GAAkB,SACtB2D,GAEA,OAAIzD,OAAOC,KAAKwD,GAAexR,OACR+N,OAAOE,QAAQuD,GAAetE,KAAI,YAAmB,IAAD,oBAAhBgB,EAAgB,KAAXN,EAAW,KAEvE,OFCyB,SAACM,GAAD,OAC7BX,GAAQW,GEHWC,CAAgBD,EACxBE,CAAO,IAAKR,MAEDS,QAAO,SAACC,EAAG1I,GAAJ,gBAAa0I,EAAb,aAAmB1I,MAEzC,QAgCMhH,GA7BE,CACfkB,QAAQ,WAAD,4BAAE,WACPhB,EADO,oCAAAE,EAAA,6DAEL8O,EAFK,EAELA,OAAQuB,EAFH,EAEGA,KAAMG,EAFT,EAESA,WAEVG,EAJC,aAIoB9B,GAAgBC,IACrC+B,EAAwB,GACxBL,GAAgBH,GACpBQ,EAAYC,KAAZ,kBDpBgC5B,ECoBiBmB,EAAKC,MDpBM/B,GAAQW,MCqBpE2B,EAAYC,KAAZ,oBAA8BT,EAAKE,QACnCM,EAAYC,KAAZ,oBAA8BN,EAAWC,KAAOD,EAAWE,QAAUF,EAAWE,UAChFG,EAAYC,KAAZ,kBAA4BN,EAAWC,KAAOD,EAAWE,WAEtDG,EAAYC,KAAK,IAChBC,EAAaF,EAAYxB,QAAO,SAACC,EAAG1I,GAAJ,gBAAa0I,EAAb,YAAkB1I,MAClDsF,EAdC,WAcUyE,EAdV,YAc0BI,GAd1B,SAgBkC1E,GAAiB,UACrDW,GADqD,oBAExDd,GAlBK,uBAgBC/L,EAhBD,EAgBCA,KAAeY,EAhBhB,EAgBOuL,MAASvL,MAhBhB,kBAqBAd,QAAQC,QAAQ,CACrBC,OACAY,WAvBK,kCDb0B,IAACmO,ICa3B,OAAF,qDAAC,ICrBJX,GAEF,CACFlO,GAAI,SAACsO,EAAiBC,GAAlB,OAA4BA,EAAMgC,WAAWnG,MAAM,KAAKyD,KAAI,SAACrM,GAAD,gBAAU8M,EAAV,gBAAiC9M,MAAKuM,KAAK,QCHvGG,GAAwD,CAC5DlO,GAAI,YACJsC,WAAY,oBACZC,SAAU,kBACVvD,KAAM,eCIFwP,GAAkB,SAACC,GACvB,OAAIC,OAAOC,KAAKF,GAAQ9N,OACD+N,OAAOE,QAAQH,GAAQZ,KAAI,YAAmB,IAAD,oBAAhBgB,EAAgB,KAAXN,EAAW,KAEhE,OFNyB,SAACM,GAAD,OAC7BX,GAAQW,GEIWC,CAAgBD,EACxBE,CAAO,KAAMR,MAEFS,QAAO,SAACC,EAAG1I,GAAJ,gBAAa0I,EAAb,aAAmB1I,MAEzC,QAkCMhH,GA/BE,CACfkB,QAAQ,WAAD,4BAAE,WACPhB,EADO,4CAAAE,EAAA,6DAGL8O,EAHK,EAGLA,OAHK,IAILuB,KAAQC,EAJH,EAIGA,MAAOC,EAJV,EAIUA,MAJV,IAKLC,WAAcC,EALT,EAKSA,KAAMC,EALf,EAKeA,QAGhBC,EARC,cAQqB9B,GAAgBC,GAAQ8B,aAC9CC,EAAwB,IAClBC,KAAZ,iBDvBiEvC,GCuBd+B,KACnDO,EAAYC,KAAZ,oBAA8BP,IAC9BM,EAAYC,KAAZ,oBAA8BL,EAAOC,EAAUA,IAC/CG,EAAYC,KAAZ,kBAA4BL,EAAOC,IAE7BK,EAAaF,EAAYxB,QAAO,SAACC,EAAG1I,GAAJ,gBAAa0I,EAAb,YAAkB1I,MAClDsF,EAhBC,WAgBUyE,EAhBV,YAgB0BI,GAhB1B,UAqBG1E,GAAiB,UAAqB9E,GAArB,oBAAqD2E,GArBzE,wBAmBL/L,EAnBK,EAmBLA,KACSY,EApBJ,EAoBLuL,MAASvL,MApBJ,kBAuBAd,QAAQC,QAAQ,CACrBC,OACAY,WAzBK,4CAAF,qDAAC,ICpBJwN,GAKF,CACFrN,KAAM,SAACyN,EAAiBC,GAAlB,gBAAgCD,EAAhC,2BAAmEC,EAAnE,QCNFL,GAAqD,CACzDlO,GAAI,WCKAwO,GAAkB,SACtB2D,GAEA,OAAIzD,OAAOC,KAAKwD,GAAexR,OACR+N,OAAOE,QAAQuD,GAAetE,KAAI,YAAmB,IAAD,oBAAhBgB,EAAgB,KAAXN,EAAW,KAEvE,OFHyB,SAACM,GAAD,OAC7BX,GAAQW,GECWC,CAAgBD,EACxBE,CAAO,IAAKR,MAEDS,QAAO,SAACC,EAAG1I,GAAJ,gBAAa0I,EAAb,aAAmB1I,MAEzC,QA+BMhH,GA5BE,CACfkB,QAAQ,WAAD,4BAAE,WACPhB,EADO,4CAAAE,EAAA,6DAGQ8O,EAHR,mBAGLA,QAHK,IAILuB,KAAQC,EAJH,EAIGA,MAAOC,EAJV,EAIUA,MAJV,IAKLC,WAAcC,EALT,EAKSA,KAAMC,EALf,EAKeA,QAIhBC,EATC,aASoB9B,GAAgBC,KACrC+B,EAAwB,IAClBC,KAAZ,iBD3B0DvC,GC2BX+B,KAC/CO,EAAYC,KAAZ,oBAA8BP,IAC9BM,EAAYC,KAAZ,oBAA8BL,EAAOC,EAAUA,IAC/CG,EAAYC,KAAZ,kBAA4BL,EAAOC,IAC7BK,EAAaF,EAAYxB,QAAO,SAACC,EAAG1I,GAAJ,gBAAa0I,EAAb,YAAkB1I,MAClDsF,EAhBC,WAgBUyE,EAhBV,YAgB0BI,GAhB1B,UAkBkC1E,GAAgCsB,GAAezB,GAlBjF,wBAkBC/L,EAlBD,EAkBCA,KAAeY,EAlBhB,EAkBOuL,MAASvL,MAlBhB,kBAoBAd,QAAQC,QAAQ,CACrBC,OACAY,WAtBK,4CAAF,qDAAC,ICpBJwN,GAKF,CACFrN,KAAM,SAACyN,EAAiBC,GAAlB,gBAAgCD,EAAhC,2BAAmEC,EAAnE,QCNFL,GAAoD,CACxDlO,GAAI,WCKAwO,GAAkB,SACtB2D,GAEA,OAAIzD,OAAOC,KAAKwD,GAAexR,OAAS,EACjB+N,OAAOE,QAAQuD,GAAetE,KAAI,YAAmB,IAAD,oBAAhBgB,EAAgB,KAAXN,EAAW,KAEvE,OFHyB,SAACM,GAAD,OAC7BX,GAAQW,GECWC,CAAgBD,EACxBE,CAAO,IAAKR,MAEDS,QAAO,SAACC,EAAG1I,GAAJ,gBAAa0I,EAAb,aAAmB1I,MAEzC,QA+BMhH,GA5BE,CACfkB,QAAQ,WAAD,4BAAE,WACPhB,EADO,4CAAAE,EAAA,6DAGQ8O,EAHR,mBAGLA,QAHK,IAILuB,KAAQC,EAJH,EAIGA,MAAOC,EAJV,EAIUA,MAJV,IAKLC,WAAcC,EALT,EAKSA,KAAMC,EALf,EAKeA,QAIhBC,EATC,aASoB9B,GAAgBC,KACrC+B,EAAwB,IAClBC,KAAZ,iBD3ByDvC,GC2BV+B,KAC/CO,EAAYC,KAAZ,oBAA8BP,IAC9BM,EAAYC,KAAZ,oBAA8BL,EAAOC,EAAUA,IAC/CG,EAAYC,KAAZ,kBAA4BL,EAAOC,IAC7BK,EAAaF,EAAYxB,QAAO,SAACC,EAAG1I,GAAJ,gBAAa0I,EAAb,YAAkB1I,MAClDsF,EAhBC,WAgBUyE,EAhBV,YAgB0BI,GAhB1B,UAkBkC1E,GAAiB,UAAiBmB,GAAjB,oBAAgDtB,GAlBnG,wBAkBC/L,EAlBD,EAkBCA,KAAeY,EAlBhB,EAkBOuL,MAASvL,MAlBhB,kBAoBAd,QAAQC,QAAQ,CACrBC,OACAY,WAtBK,4CAAF,qDAAC,ICpBJwN,GAKF,CACFrN,KAAM,SAACyN,EAAiBC,GAAlB,gBAAgCD,EAAhC,2BAAmEC,EAAnE,OACNoM,WAAY,SAACrM,EAAiBC,GAAlB,gBAAgCD,EAAhC,wBAAgEC,KCNxEL,GAAkD,CACtDlO,GAAI,UACJa,KAAM,aCWF2N,GAAkB,SACtB2D,GAEA,OAAIzD,OAAOC,KAAKwD,GAAexR,OACR+N,OAAOE,QAAQuD,GAAetE,KAAI,YAAmB,IAAD,oBAAhBgB,EAAgB,KAAXN,EAAW,KAEvE,OFVyB,SAACM,GAAD,OAC7BX,GAAQW,GEQWC,CAAgBD,EACxBE,CAAO,IAAKR,MAEDS,QAAO,SAACC,EAAG1I,GAAJ,gBAAa0I,EAAb,aAAmB1I,MAEzC,QAwNMhH,GArNE,CACfkB,QAAQ,WAAD,4BAAE,WACPhB,EADO,4CAAAE,EAAA,6DAGQ8O,EAHR,mBAGLA,QAHK,IAILuB,KAAQC,EAJH,EAIGA,MAAOC,EAJV,EAIUA,MAJV,IAKLC,WAAcC,EALT,EAKSA,KAAMC,EALf,EAKeA,QAIhBC,EATC,aASoB9B,GAAgBC,KACrC+B,EAAwB,IAClBC,KAAZ,iBDjCoDvC,GCiCR+B,KAC5CO,EAAYC,KAAZ,oBAA8BP,IAC9BM,EAAYC,KAAZ,oBAA8BL,EAAOC,EAAUA,IAC/CG,EAAYC,KAAZ,kBAA4BL,EAAOC,EAAU,IACvCK,EAAaF,EAAYxB,QAAO,SAACC,EAAG1I,GAAJ,gBAAa0I,EAAb,YAAkB1I,MAClDsF,EAhBC,WAgBUyE,EAhBV,YAgB0BI,GAhB1B,UAkBkC1E,GAAiB,UAAeqB,GAAf,oBAA4CxB,GAlB/F,wBAkBC/L,EAlBD,EAkBCA,KAAeY,EAlBhB,EAkBOuL,MAASvL,MAlBhB,kBAoBAd,QAAQC,QAAQ,CACrBC,OACAY,WAtBK,4CAAF,qDAAC,GAyBRW,OAAO,WAAD,4BAAE,WACN5B,EADM,oBAAAE,EAAA,6DAEJK,EAFI,EAEJA,GAFI,SAIa2L,GAAa0B,GAAV,WAAyBrN,IAJzC,cAIAF,EAJA,yBAKCF,QAAQC,QAAQ,CACrBC,UANI,2CAAF,qDAAC,GASPG,OAAO,WAAD,4BAAE,WACNR,EADM,wBAAAE,EAAA,6DAEJK,EAFI,EAEJA,GAAIF,EAFA,EAEAA,KAAMsZ,EAFN,EAEMA,aAFN,SAIejN,GAAqDkB,GAAW,CACnFrN,KACAa,KAAMf,EAAKe,MAAQuY,EAAavY,KAChC+Z,UAAW9a,EAAK8a,UAChBC,YAAa,IAAIjL,KAAK,IAAIA,KAAK9P,EAAK+a,aAAa5B,UAA8D,IAAjD,IAAIrJ,KAAK9P,EAAK+a,aAAa3B,qBAA8BC,UAAwBC,EAAayB,YAC5J1M,UAAWrO,EAAKqO,WAAaiL,EAAajL,UAC1CwM,WAAY7a,EAAK6a,YAAcvB,EAAauB,WAC5CG,gBAAiBhb,EAAKgb,gBACtBC,aAAcjb,EAAKib,cAAgB3B,EAAa2B,eAZ5C,cAIA9a,EAJA,yBAcCL,QAAQC,QAAQ,CAAEC,KAAMG,KAdzB,2CAAF,qDAAC,GAgBP+a,KAAK,WAAD,4BAAE,WACJvb,EADI,sBAAAE,EAAA,6DAEFsb,EAFE,EAEFA,OAAQC,EAFN,EAEMA,SAFN,SAIe9O,GAAG,UAA8BiB,GAA9B,SAAgD,CACpE4N,SACAC,aANE,cAIEpb,EAJF,yBAQGF,QAAQC,QAAQ,CAAEC,UARrB,2CAAF,qDAAC,GAULqb,OAAO,WAAD,4BAAE,WACN1b,EADM,oBAAAE,EAAA,6DAEJsb,EAFI,EAEJA,OAFI,SAIa7O,GAAG,UAAkCiB,GAAlC,WAAsD,CAC1E4N,WALI,cAIAnb,EAJA,yBAOCF,QAAQC,QAAQ,CAAEC,KAAK,2BAAMA,GAAP,IAAakR,cAAU0I,OAP9C,2CAAF,qDAAC,GASP0B,kBAAkB,WAAD,4BAAE,WACjB3b,EADiB,sBAAAE,EAAA,6DAEfsb,EAFe,EAEfA,OAAQI,EAFO,EAEPA,eAFO,SAIEjP,GAAG,UAAwDiB,GAAxD,sBAAuF,CAC3G4N,SACAI,mBANe,cAIXvb,EAJW,yBAQVF,QAAQC,QAAQ,CAAEC,UARR,2CAAF,qDAAC,GAUlBwb,oBAAoB,WAAD,4BAAE,WACnB7b,EADmB,oBAAAE,EAAA,6DAEjBsb,EAFiB,EAEjBA,OAFiB,SAIA7O,GAAG,UAA4DiB,GAA5D,wBAA6F,CACjH4N,WALiB,cAIbnb,EAJa,yBAOZF,QAAQC,QAAQ,CAAEC,KAAK,2BAAMA,GAAP,IAAaub,oBAAgB3B,OAPvC,2CAAF,qDAAC,GASpB6B,aAAa,WAAD,4BAAE,WACZ9b,EADY,sBAAAE,EAAA,6DAEVsb,EAFU,EAEVA,OAAQtU,EAFE,EAEFA,UAFE,SAIOyF,GAAG,UAAkCiB,GAAlC,iBAA4D,CAChF4N,SACAtU,cANU,cAIN7G,EAJM,yBAQLF,QAAQC,QAAQ,CAAEC,UARb,2CAAF,qDAAC,GAUb0b,aAAa,WAAD,4BAAE,WACZ/b,EADY,sBAAAE,EAAA,6DAEVsb,EAFU,EAEVA,OAAQtU,EAFE,EAEFA,UAFE,SAIOyF,GAAG,UAAkCiB,GAAlC,iBAA4D,CAChF4N,SACAtU,cANU,cAIN7G,EAJM,yBAQLF,QAAQC,QAAQ,CAAEC,UARb,2CAAF,qDAAC,GAUb2b,gBAAgB,WAAD,4BAAE,WACfhc,EADe,sBAAAE,EAAA,6DAEbsb,EAFa,EAEbA,OAAQS,EAFK,EAELA,aAFK,SAIItP,GAAG,UAAwCiB,GAAxC,oBAAqE,CACzF4N,SACAS,iBANa,cAIT5b,EAJS,yBAQRF,QAAQC,QAAQ,CAAEC,UARV,2CAAF,qDAAC,GAUhB6b,gBAAgB,WAAD,4BAAE,WACflc,EADe,sBAAAE,EAAA,6DAEbsb,EAFa,EAEbA,OAAQS,EAFK,EAELA,aAFK,SAIItP,GAAG,UAAwCiB,GAAxC,oBAAqE,CACzF4N,SACAS,iBANa,cAIT5b,EAJS,yBAQRF,QAAQC,QAAQ,CAAEC,UARV,2CAAF,qDAAC,IClJZoO,GAKF,CACFrN,KAAM,SAACyN,EAAiBC,GAAlB,gBAAgCD,EAAhC,2BAAmEC,EAAnE,OACNoM,WAAY,SAACrM,EAAiBC,GAAlB,gBAAgCD,EAAhC,wBAAgEC,KCPxEL,GAAoD,CACxDlO,GAAI,UACJa,KAAM,YACN+a,QAAS,gBCYLpN,GAAkB,SACtB2D,GAEA,OAAIzD,OAAOC,KAAKwD,GAAexR,OACR+N,OAAOE,QAAQuD,GAAetE,KAAI,YAAmB,IAAD,oBAAhBgB,EAAgB,KAAXN,EAAW,KAEvE,OFXyB,SAACM,GAAD,OAC7BX,GAAQW,GESWC,CAAgBD,EACxBE,CAAO,IAAKR,MAEDS,QAAO,SAACC,EAAG1I,GAAJ,gBAAa0I,EAAb,aAAmB1I,MAEzC,QAsNMhH,GAnNE,CACfkB,QAAQ,WAAD,4BAAE,WACPhB,EADO,4CAAAE,EAAA,6DAGQ8O,EAHR,mBAGLA,QAHK,IAILuB,KAAQC,EAJH,EAIGA,MAAOC,EAJV,EAIUA,MAJV,IAKLC,WAAcC,EALT,EAKSA,KAAMC,EALf,EAKeA,QAIhBC,EATC,aASoB9B,GAAgBC,KACrC+B,EAAwB,IAClBC,KAAZ,iBDlCwDvC,GCkCV+B,KAC9CO,EAAYC,KAAZ,oBAA8BP,IAC9BM,EAAYC,KAAZ,oBAA8BL,EAAOC,EAAUA,IAC/CG,EAAYC,KAAZ,kBAA4BL,EAAOC,EAAU,IACvCK,EAAaF,EAAYxB,QAAO,SAACC,EAAG1I,GAAJ,gBAAa0I,EAAb,YAAkB1I,MAClDsF,EAhBC,WAgBUyE,EAhBV,YAgB0BI,GAhB1B,UAkBkC1E,GAAiB,UAAiBoB,GAAjB,oBAAgDvB,GAlBnG,wBAkBC/L,EAlBD,EAkBCA,KAAeY,EAlBhB,EAkBOuL,MAASvL,MAlBhB,kBAoBAd,QAAQC,QAAQ,CACrBC,OACAY,WAtBK,4CAAF,qDAAC,GAyBRW,OAAO,WAAD,4BAAE,WACN5B,EADM,oBAAAE,EAAA,6DAEJK,EAFI,EAEJA,GAFI,SAIa2L,GAAeyB,GAAZ,WAA6BpN,IAJ7C,cAIAF,EAJA,yBAKCF,QAAQC,QAAQ,CACrBC,UANI,2CAAF,qDAAC,GASPG,OAAO,WAAD,4BAAE,WACNR,EADM,wBAAAE,EAAA,6DAEJK,EAFI,EAEJA,GAAIF,EAFA,EAEAA,KAAMsZ,EAFN,EAEMA,aAFN,SAIejN,GAAuDiB,GAAa,CACvFpN,KACAa,KAAMf,EAAKe,MAAQuY,EAAavY,KAChC+Z,UAAW9a,EAAK8a,UAChBC,YAAa,IAAIjL,KAAK,IAAIA,KAAK9P,EAAK+a,aAAa5B,UAA8D,IAAjD,IAAIrJ,KAAK9P,EAAK+a,aAAa3B,qBAA8BC,UAAwBC,EAAayB,YAC5Je,QAAS9b,EAAK8b,SAAWxC,EAAawC,QACtCzN,UAAWrO,EAAKqO,WAAaiL,EAAajL,UAC1CwM,WAAY7a,EAAK6a,YAAcvB,EAAauB,WAC5CG,gBAAiBhb,EAAKgb,gBACtBC,aAAcjb,EAAKib,cAAgB3B,EAAa2B,eAb5C,cAIA9a,EAJA,yBAeCL,QAAQC,QAAQ,CAAEC,KAAMG,KAfzB,2CAAF,qDAAC,GAiBPsb,aAAa,WAAD,4BAAE,WACZ9b,EACAC,GAFY,eAAAC,EAAA,sEAIeyM,GAAG,UACxBgB,GADwB,iBACI1N,GALtB,cAINmc,EAJM,yBAML,CACL/b,KAAM+b,IAPI,2CAAF,qDAAC,GAUbL,aAAa,WAAD,4BAAE,WACZ/b,EACAC,GAFY,eAAAC,EAAA,sEAIeyM,GAAG,UACxBgB,GADwB,iBACI1N,GALtB,cAINmc,EAJM,yBAML,CACL/b,KAAM+b,IAPI,2CAAF,qDAAC,GAUbJ,gBAAgB,WAAD,4BAAE,WACfhc,EACAC,GAFe,eAAAC,EAAA,sEAIeyM,GAAG,UAC3BgB,GAD2B,oBACI1N,GALtB,cAIToc,EAJS,yBAMR,CACLhc,KAAMgc,IAPO,2CAAF,qDAAC,GAUhBH,gBAAgB,WAAD,4BAAE,WACflc,EACAC,GAFe,eAAAC,EAAA,sEAIeyM,GAAG,UAC3BgB,GAD2B,oBACI1N,GALtB,cAIToc,EAJS,yBAMR,CACLhc,KAAMgc,IAPO,2CAAF,qDAAC,GAUhBC,oBAAoB,WAAD,4BAAE,WACnBtc,EACAC,GAFmB,eAAAC,EAAA,sEAIeyM,GAAG,UAC/BgB,GAD+B,wBACI1N,GALtB,cAIbqc,EAJa,yBAMZ,CACLjc,KAAMic,IAPW,2CAAF,qDAAC,GAUpBC,uBAAuB,WAAD,4BAAE,WACtBvc,EACAC,GAFsB,eAAAC,EAAA,sEAIeyM,GAAG,UAClCgB,GADkC,2BACI1N,GALtB,cAIhBsc,EAJgB,yBAMf,CACLlc,KAAMkc,IAPc,2CAAF,qDAAC,GAUvBhB,KAAK,WAAD,4BAAE,WACJvb,EACAC,GAFI,eAAAC,EAAA,sEAIeyM,GAAG,UAChBgB,GADgB,SACI1N,GALtB,cAIEsb,EAJF,yBAMG,CACLlb,KAAMkb,IAPJ,2CAAF,qDAAC,GAULG,OAAO,WAAD,4BAAE,WACN1b,EACAC,GAFM,eAAAC,EAAA,sEAIeyM,GAAG,UAClBgB,GADkB,WACI1N,GALtB,cAIAyb,EAJA,yBAMC,CACLrb,KAAMqb,IAPF,2CAAF,qDAAC,GAUPc,eAAe,WAAD,4BAAE,WACdxc,EACAC,GAFc,eAAAC,EAAA,sEAIeyM,GAAG,UAC1BgB,GAD0B,mBACI1N,GALtB,cAIRuc,EAJQ,yBAMP,CACLnc,KAAMmc,IAPM,2CAAF,qDAAC,IChKX/N,GAAsD,CAC1DlO,GAAI,UACJgZ,KAAM,aCuCOzZ,GAzBE,CACfkB,QAAQ,WAAD,4BAAE,WACPhB,EADO,wCAAAE,EAAA,6DAGKqZ,EAHL,EAGLvK,OAAUuK,KAHL,IAILhJ,KAAQC,EAJH,EAIGA,MAAOC,EAJV,EAIUA,MAJV,IAKLC,WAAcC,EALT,EAKSA,KAAMC,EALf,EAKeA,SAIhBG,EAAwB,IAClBC,KAAZ,iBDtB4DvC,GCsBZ+B,KAChDO,EAAYC,KAAZ,oBAA8BP,IAC9BM,EAAYC,KAAZ,oBAA8BL,EAAOC,EAAUA,IAC/CG,EAAYC,KAAZ,kBAA4BL,EAAOC,IAC7BK,EAAaF,EAAYxB,QAAO,SAACC,EAAG1I,GAAJ,gBAAa0I,EAAb,YAAkB1I,MAdjD,SAekCyF,GAAiB,UAAmBwB,GAAnB,+BAAwDwL,EAAI,8BAA0BA,EAA1B,MAAqCzG,GAAjG,YAAgH7B,IAfnK,uBAeC5Q,EAfD,EAeCA,KAAeY,EAfhB,EAeOuL,MAASvL,MAfhB,kBAiBAd,QAAQC,QAAQ,CACrBC,OACAY,WAnBK,4CAAF,qDAAC,ICEJuG,IAAiD,qBACpDpI,EAAaqI,aAAegV,IADwB,eAEpDrd,EAAauI,SAAW+U,IAF4B,eAGpDtd,EAAayI,cAAgB8U,IAHuB,eAIpDvd,EAAa2I,SAAW6U,IAJ4B,eAKpDxd,EAAa6I,UAAY4U,IAL2B,eAMpDzd,EAAa+I,iBAAmB2U,IANoB,eAOpD1d,EAAaiJ,cAAgB0U,IAPuB,eAQpD3d,EAAamJ,QAAUyU,IAR6B,eASpD5d,EAAaqJ,UAAYwU,IAT2B,eAUpD7d,EAAauJ,OAASuU,IAV8B,eAWpD9d,EAAayJ,KAAOsU,IAXgC,eAYpD/d,EAAa2J,QAAUqU,IAZ6B,eAapDhe,EAAa6J,MAAQoU,IAb+B,eAcpDje,EAAa+J,QAAUmU,IAd6B,eAepDle,EAAaiK,YAAckU,IAfyB,eAgBpDne,EAAamK,eAAiBiU,IAhBsB,eAiBpDpe,EAAaqK,YAAc0T,IAjByB,eAkBpD/d,EAAasK,mBAAqB+T,IAlBkB,eAmBpDre,EAAawK,wBAA0B8T,IAnBa,IAsBxC,YACb5T,EACA9J,EACAC,GAIA,OAFyBuH,GAAcxH,GAC1B+J,YAAkBD,IACD9J,EAAUC,I,UCtC3BH,GAVE,CACf6d,UAAW,SAACvO,EAAawO,GAAd,OAAuCC,KAAKnI,EAAEtG,EAAKwO,IAC9DE,aAAa,WAAD,4BAAE,WAAO1L,GAAP,eAAAlS,EAAA,6DACNpB,EAAWC,aAAaC,QAAQ,YACtCD,aAAaS,QAAb,UAAwBV,EAAxB,QAAwCsT,GAF5B,SAGNyL,KAAKE,eAAe3L,GAHd,2CAAF,mDAAC,GAKb4L,UAAW,kBAAcH,KAAKrL,WCJ1ByL,GAAoB,SAACC,EAAoBC,GAArB,OACxBD,EAAME,OAASD,EAAOjd,SAAWid,EAAOE,OAAM,SAACvP,GAAD,OAAWoP,EAAMI,IAAIxP,OAE/DyP,GAAa,uCAAG,WACpBC,EACAve,EACAwe,GAHoB,eAAAve,EAAA,sEAKiBse,EAAanU,eAChDpK,GANkB,UAKdye,EALc,QAQhBT,GAAkBS,EAAuBD,GARzB,uBAUlBE,QAAQC,MAAM,yBAVI,SAWZJ,EAAatU,OAAO,IAXR,gCAYX/J,QAAQC,QAAQ,IAAIkK,IAAI,MAZb,gCAcbnK,QAAQC,QAAQse,IAdH,2CAAH,0DAiBNG,GAA8B,SAACL,GAE1C,IAAIC,EAAmC,KAEvC,OAAO,IAAIK,MAAoBN,EAAc,CAC3CtS,IACE,SAAC6S,EAAQ3d,GAAT,8CACA,WAAOnB,GAAP,mBAAAC,EAAA,2DACUkB,EADV,OAGS,UAHT,OAWS,mBAXT,wCAIYod,EAAavU,MAAMhK,GAJ/B,uBAK2Cue,EAAanU,eAChDpK,GANR,cAKYye,EALZ,OAQMD,EAAkBvH,MAAMC,KAAKuH,GARnC,kBASave,QAAQC,WATrB,YAYUqe,EAZV,0CAceF,GAAcC,EAAcve,EAAQwe,IAdnD,yBAiB6BvS,GAAea,IAjB5C,eAiBYmB,EAjBZ,OAkBYC,EAAQD,EAASE,KAAI,SAACrM,GAAD,OAAOA,EAAEX,QACpCqd,EAAkBtQ,EAClBpP,aAAaS,QAAQ,QAAS2O,EAAMG,QApB1C,kBAqBanO,QAAQC,QAAQ,IAAIkK,IAAI6D,KArBrC,iCAwBaqQ,EAAapd,GAAMnB,IAxBhC,4CADA,0D,qHC3BA+e,GAA6B,2BAC9BC,MAD8B,IAEjCC,WAAY,CAEVC,WAAY,CACV,gBACA,qBACA,aACA,QACA,cACA7Q,KAAK,KACP8Q,MAAO,CACLC,WAAY,KAEdC,MAAO,CACLD,WAAY,KAEdE,GAAI,CACFF,WAAY,QAKLG,GAAwB,2BAChCR,IADgC,IAEnCS,QAAS,CACPC,QAASC,KACTC,UAAWC,KACXtgB,KAAM,WAIGugB,GAAuB,2BAC/Bd,IAD+B,IAElCS,QAAS,CACPC,QAAS,CACPK,MAAOJ,KAAW,KAClBK,KAAML,KAAW,KACjBM,KAAMN,KAAW,KACjBO,aAAc,WAEhBN,UAAWC,KACXtgB,KAAM,U,wKCvCJ4gB,GAAYC,cAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,SAAUF,EAAMG,QAAQ,IAE1BC,cAAe,CACb,MAAO,CACLC,WAAY,sDACZC,YAAaN,EAAMG,QAAQ,KAG/BI,gBAAiB,CACf,MAAO,CACLF,WAAY,sDACZC,YAAaN,EAAMG,QAAQ,SAapBK,GAAU,SAACC,GACtB,IAAQC,EAA+CD,EAA/CC,aAAcT,EAAiCQ,EAAjCR,KAAMU,EAA2BF,EAA3BE,OAAQ5f,EAAmB0f,EAAnB1f,KAAM6f,EAAaH,EAAbG,SACpCC,EAAcC,cAAY,SAAC9hB,GAAD,cAAuBA,QAAvB,IAAuBA,OAAvB,EAAuBA,EAAO+hB,MAAMC,GAAGH,eACjEI,EAAUnB,KAEVoB,EACJ,gBAACC,GAAA,EAAD,CAAUC,QAAM,EAACC,QAASX,EAA1B,UACE,eAACY,GAAA,EAAD,CAAcC,UAAWN,EAAQhB,KAAjC,SACGU,EAAS,eAACa,GAAA,EAAD,IAAiBvB,IAE7B,eAACwB,GAAA,EAAD,CAAYhQ,QAAQ,UAAU/Q,MAAM,gBAApC,SACGK,OAKP,OACE,uCACG8f,GAAeF,EACdO,EAEA,eAACQ,GAAA,EAAD,CAASC,MAAO5gB,EAAM6gB,UAAU,QAAhC,SACGV,IAGL,eAACW,GAAA,EAAD,CAAUC,GAAInB,EAAQoB,QAAQ,OAAOC,eAAa,EAAlD,SACE,eAAC,KAAD,CACEC,UAAU,MACVC,gBAAc,EACdX,UAAWV,EAAcI,EAAQb,cAAgBa,EAAQV,gBAH3D,SAIGK,U,UC5DIuB,G,OAAAA,GAA4BC,gBAAoBA,WAAgB,KAAmBA,gBAAoB,OAAQ,CAC1HC,EAAG,u7CACUD,gBAAoB,OAAQ,CACzCC,EAAG,oOACUD,gBAAoB,OAAQ,CACzCC,EAAG,iaACF,OCeCvC,GAAYC,aAAW,CAC3BuC,KAAM,CACJC,MAAO,SAETC,OAAQ,CACND,MAAO,UAIEE,GAAU,WACrB,IAmBoCC,EAnB9B7B,EAAcC,cAClB,SAAC9hB,GAAD,OAAuBA,EAAM+hB,MAAMC,GAAGH,eAElCb,EAAQF,KACd,EAAwB6C,mBAAS,CAC/BC,WAAW,EACXC,aAAa,IAFf,oBAAOP,EAAP,KAAaQ,EAAb,KAKMC,EAAqB,IAAI9Y,IAC7B6W,aAA8CkC,MAAcjV,KAC1D,SAACC,GAAD,OAAOA,EAAEjN,SAGPuc,EAAY2F,eAEZvC,EAAe,SAACwC,GAAD,OACnBJ,GAAQ,SAAC9jB,GAAD,mBAAC,eAAgBA,GAAjB,kBAAyBkkB,GAAQlkB,EAAMkkB,SAQjD,OACE,uBACEC,MAAO,CAAEC,WAAY,QACrB7B,UAAWV,EAAcb,EAAMsC,KAAOtC,EAAMwC,OAF9C,UAIE,eAACa,GAAA,EAAD,IACCN,EAAmB9E,IAAIlf,EAAaiK,cACnC,eAACsa,GAAA,EAAD,CACEC,GAAE,WAAMxkB,EAAaiK,aACrBwa,YAAalG,EAAU,8BACvBmG,SAAU,eAACC,GAAA,EAAD,MAGbX,EAAmB9E,IAAIlf,EAAaiJ,gBACnC,eAACsb,GAAA,EAAD,CACEC,GAAE,WAAMxkB,EAAaiJ,eACrBwb,YAAalG,EAAU,gCACvBmG,SAAU,eAACE,GAAA,EAAD,MAGbZ,EAAmB9E,IAAIlf,EAAayJ,OACnC,eAAC8a,GAAA,EAAD,CACEC,GAAE,WAAMxkB,EAAayJ,MACrBgb,YAAalG,EAAU,uBACvBmG,SAAU,eAACG,GAAA,EAAD,MAGbb,EAAmB9E,IAAIlf,EAAauJ,SACnC,eAACgb,GAAA,EAAD,CACEC,GAAE,WAAMxkB,EAAauJ,QACrBkb,YAAalG,EAAU,yBACvBmG,SAAU,eAACI,GAAA,EAAD,OArCkBnB,EAwCJK,EAvC9BL,EAAMzE,IAAIlf,EAAawK,0BAwCnB,eAAC,GAAD,CACEmX,aAAc,kBAAMA,EAAa,cACjCC,OAAQ2B,EAAKM,UACb7hB,KAAMuc,EAAU,wBAChB2C,KAAM,eAAC6D,GAAA,EAAD,IAJR,SAMGf,EAAmB9E,IAAIlf,EAAawK,0BACnC,eAAC+Z,GAAA,EAAD,CACEC,GAAE,WAAMxkB,EAAawK,yBACrBia,YAAalG,EAAU,gCACvBmG,SAAU,eAACM,GAAA,EAAD,CAAMZ,MAAO,CAAEa,UAAW,qBAhDZ,SAACtB,GAAD,OAClCA,EAAMzE,IAAIlf,EAAa6J,QAAU8Z,EAAMzE,IAAIlf,EAAamJ,SAoDrD+b,CAA4BlB,IAC3B,gBAAC,GAAD,CACErC,aAAc,kBAAMA,EAAa,gBACjCC,OAAQ2B,EAAKO,YACb9hB,KAAMuc,EAAU,0BAChB2C,KAAM,eAACiE,GAAA,EAAD,IAJR,UAMGnB,EAAmB9E,IAAIlf,EAAa6J,QACnC,eAAC0a,GAAA,EAAD,CACEC,GAAG,SACHC,YAAalG,EAAU,wBACvBmG,SAAU,eAACU,GAAA,EAAD,MAGbpB,EAAmB9E,IAAIlf,EAAamJ,UACnC,eAACob,GAAA,EAAD,CACEC,GAAG,WACHC,YAAalG,EAAU,0BACvBmG,SAAU,eAACW,GAAD,aCrHlBtE,GAAYC,aAAW,CAC3B4B,MAAO,CACL0C,KAAM,EACNC,aAAc,WACdC,WAAY,SACZC,SAAU,YAIRC,GAAc,SAAChE,GACnB,IAAMnD,EAAY2F,eAClB,OACE,eAACyB,GAAA,EAAD,2BAAcjE,GAAd,aACE,eAAC6C,GAAA,EAAD,CACEC,GAAG,iBACHC,YAAalG,EAAU,iBACvBmG,SAAU,eAACkB,GAAA,EAAD,UAKZC,GAAY,SAACnE,GACjB,IAAMQ,EAAUnB,KAChB,OACE,eAAC+E,GAAA,EAAD,2BAAYpE,GAAZ,IAAmBqE,SAAU,eAAC,GAAD,IAA7B,SACE,eAACrD,GAAA,EAAD,CACEhQ,QAAQ,KACR8P,UAAWN,EAAQU,MACnBzhB,GAAG,0BAME6kB,GAAY,SAACtE,GACxB,IAAMT,EAAQc,cAAY,SAAC9hB,GAAD,MACC,SAAzBA,EAAMghB,MAAMnhB,SAAsB4gB,GAAYN,MAGhD,OACE,eAAC6F,GAAA,EAAD,2BACMvE,GADN,IAEEyC,KAAMT,GACNwC,OAAQL,GACR5E,MAAOA,M,iLC1CPkF,GAAgBC,aAAW,CAC/BC,KAAM,CACJC,aAAc,GACd9C,MAAO,MACP+C,WAAY,KACZC,QAAS,OACTC,cAAe,cACfC,OAAQ,QACRC,YAAa,YARKP,CAUnBQ,MAEGC,GAAmBT,aAAW,CAClCC,KAAM,CACJS,WAAY,UACZpU,QAAS,YACT4T,aAAc,GACdS,oBAAqB,EACrBC,uBAAwB,EACxBC,OAAQ,EACRhH,WAAY,OACZ,UAAW,CACT6G,WAAY,aAVOV,CAatBc,MAEGC,GAAkBf,aAAW,CACjCC,KAAM,CACJ7C,MAAO,OACP+C,WAAY,GACZa,UAAW,IAJShB,CAMrBiB,MAsDYC,GA7CqC,SAAC,GAK9C,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACArV,EAEI,EAFJA,SACAqN,EACI,EADJA,MAEA,EAAoCoE,oBAAS,GAA7C,oBAAO6D,EAAP,KAAmBC,EAAnB,KACA,EAAoC9D,mBAAS,IAA7C,oBAAO+D,EAAP,KAAmBC,EAAnB,KACMtR,EAAI4N,eAMJ2D,EAAc,WACdF,GACFD,GAAc,GACdF,EAAQG,IAERD,GAAc,IAIlB,OACE,gBAACvB,GAAD,WACE,eAACU,GAAD,CAAkBvE,QAASuF,EAAa1V,SAAUA,EAAlD,SACE,eAAC,KAAD,CAAYiS,MAAO,CAAEziB,MAAO,aAE9B,gBAACwlB,GAAD,CAAiBhV,SAAUA,EAA3B,UACE,eAAC2V,GAAA,EAAD,CACEC,kBAAgB,EAChBC,YAAa1R,EAAEiR,GACfU,QAtBY,SAACzV,GACnBoV,EAAcpV,EAAMmN,OAAOjQ,QAsBrBwY,UAAW,SAACC,GAAD,MAAmB,UAAXA,EAAGnY,KAAmB6X,KACzCrI,MAAOiI,KAAgBjI,IAExBiI,GACC,eAACW,GAAA,EAAD,CAAgB5I,OAAK,EAArB,SAAuBlJ,EAAE,8BAExBkJ,GAAS,eAAC4I,GAAA,EAAD,CAAgB5I,OAAK,EAArB,SAAuBlJ,EAAEkJ,YC5EhC6I,GAAqB,WAChC,IAAMC,EAAUC,eACVC,EAASC,eACf,EAA0B7E,mBAAS,IAAnC,oBAAOpE,EAAP,KAAckJ,EAAd,KACA,EAA8BC,eAA9B,oBAAOC,EAAP,KAAiBC,EAAjB,KAAiBA,QACXvS,EAAI4N,eAEJ4E,EAAiBC,uBACrB,SAACnN,GAAD,OACEgN,EACE,CACEzoB,KAAMwK,YAAkBqe,KACxBpoB,SAAUZ,EAAaiJ,cACvBggB,QAAS,CAAErZ,OAAQ,CAAEgM,UAEvB,CAAEsN,eAAe,MAErB,CAACN,IAGGpB,EAAUuB,sBAAW,uCACzB,WAAOnN,GAAP,qBAAA9a,EAAA,yDACyC,IAAnC8a,EAAKuN,QAAQ,MAAO,IAAIrnB,OAD9B,gBAEI4mB,EAAS,6CAFb,4BAGa9M,EAAK9Z,OAAS,GAH3B,gBAII4mB,EAAS,yCAJb,8BAMIA,EAAS,IANb,mBAWgBI,EAAelN,GAX/B,iBASQ/Z,EATR,EASQA,MATR,iBAUQZ,KAVR,GAUemoB,EAVf,KAYWvnB,EAEgB,IAAVA,EACTymB,EAAQ1W,KAAK,CACXyX,SAAS,IAAD,OAAMrpB,EAAa+I,iBAAnB,YAAuCqgB,EAAajoB,GAApD,WAGVmnB,EAAQ1W,KAAK,CACXyX,SAAS,IAAD,OAAMrpB,EAAaiJ,eAC3BqgB,OAAQzc,qBAAU,CAChB+C,OAAQhD,KAAKC,UAAU,CACrB+O,aAVN8M,EAAS,sCAbjB,kDA6BMF,EAAM,OAAC,EAAD,yBAAC,KAAgBe,QAAS,SA7BtC,0DADyB,sDAkCzB,CAACT,EAAgBR,EAASE,IAG5B,OACE,uCACE,eAACgB,GAAA,EAAD,CAAY5G,MAAOtM,EAAE,wCACrB,eAACmT,GAAA,EAAD,UACE,eAAC,GAAD,CACElC,MAAM,2CACNC,QAASA,EACTrV,SAAU0W,EACVrJ,MAAOA,UChEJkK,GAAmB,WAC9B,IAAMpB,EAAUC,eACVC,EAASC,eACf,EAA0B7E,mBAAS,IAAnC,oBAAOpE,EAAP,KAAckJ,EAAd,KACA,EAA8BC,eAA9B,oBAAOC,EAAP,KAAiBC,EAAjB,KAAiBA,QACXvS,EAAI4N,eAEJyF,EAAeZ,uBACnB,SAACxnB,GAAD,OACEqnB,EACE,CACEzoB,KAAMwK,YAAkBqe,KACxBpoB,SAAUZ,EAAa+J,QACvBkf,QAAS,CAAErZ,OAAQ,CAAErO,gBAEvB,CAAE2nB,eAAe,MAErB,CAACN,IAGGpB,EAAUuB,sBAAW,uCACzB,WAAOxnB,GAAP,qBAAAT,EAAA,6DACE4nB,EAAS,IADX,kBAMciB,EAAapoB,GAN3B,gBAIMM,EAJN,EAIMA,MAJN,iBAKMZ,KALN,GAKa2oB,EALb,KAOS/nB,EAEgB,IAAVA,EACTymB,EAAQ1W,KAAK,CACXyX,SAAS,IAAD,OAAMrpB,EAAamK,eAAnB,YAAqCyf,EAAWpoB,UAAhD,WAGV8mB,EAAQ1W,KAAK,CACXyX,SAAS,IAAD,OAAMrpB,EAAaiK,aAC3Bqf,OAAQzc,qBAAU,CAChB+C,OAAQhD,KAAKC,UAAU,CACrBtL,mBAVNmnB,EAAS,oCARf,kDAwBIF,EAAM,OAAC,EAAD,yBAAC,KAAgBe,QAAS,SAxBpC,0DADyB,sDA4BzB,CAACI,EAAcrB,EAASE,IAG1B,OACE,uCACE,eAACgB,GAAA,EAAD,CAAY5G,MAAOtM,EAAE,sCACrB,eAACmT,GAAA,EAAD,UACE,eAAC,GAAD,CACElC,MAAM,yCACNC,QAASA,EACTrV,SAAU0W,EACVrJ,MAAOA,U,qJ9D7ELpQ,O,yBAAAA,I,qDAAAA,I,6BAAAA,I,6BAAAA,I,kCAAAA,Q,K+DEZ,ICGYya,GDHNxa,IAAoC,qBACvCD,GAAU0a,UAAY,CAAC,mBADgB,eAEvC1a,GAAU2a,wBAA0B,CAAC,gCAFE,eAGvC3a,GAAU4a,YAAc,CAAC,wBAAyB,wBAAyB,yBAHpC,eAIvC5a,GAAU6a,YAAc,CAAC,0BAJc,eAKvC7a,GAAU8a,cAAgB,CAAC,yBALY,IEE7BC,GAAmC,SAACC,EAAsBC,GACrE,IAAMC,EAAgB,IAAIpf,IAAImf,GAE9B,OFG+C,SAACD,GAAD,OAA0B/a,GAAQ+a,GEJ3DG,CAAkCH,GACnCI,MAAK,SAAAC,GAAQ,OAAIH,EAAcpL,IAAIuL,OAG7CC,GAAkB,WAC7B,MAAgCC,eAAxBN,EAAR,EAAQA,YAAaO,EAArB,EAAqBA,OACrB,OAAO,SAACR,GACN,OAAIQ,IAAWP,GAEb9K,QAAQC,MAAM,wFACP,GAEF2K,GAAiCC,EAAWC,K,mBCMjDtJ,GAAYC,cAAW,SAACC,GAAD,MAAY,CACvC4J,4BAA6B,CAE3B,uBAAwB,CACtBC,QAAS,EACTtH,MAAOvC,EAAMG,QAAQ,IAGvB,iEAAkE,CAChE0J,QAAS,EACTtH,MAAOvC,EAAMG,QAAQ,SAKrB2J,GAAc,SAACrJ,GAAD,OAClB,eAACsJ,GAAA,EAAD,2BAAYtJ,GAAZ,aACE,eAACuJ,GAAA,EAAD,CAAWC,OAAO,OAAOC,UAAQ,QAI/BC,GAAa,WACjB,IAAM9U,EAAI4N,eACJhC,EAAUnB,KACVsK,EAAeX,KACrB,OACE,gBAACY,GAAA,EAAD,CAAU9I,UAAWN,EAAQ2I,4BAA7B,UACE,eAACU,GAAA,EAAD,CACEhE,MAAOjR,EAAE,gCACTkV,OAAQ,SAACC,GACP,MAAqBA,EAAbtqB,EAAR,EAAQA,GAAIa,EAAZ,EAAYA,KACZ,MAAM,GAAN,OAAUb,EAAV,aAAiBa,MAGrB,eAACupB,GAAA,EAAD,CACEhE,MAAOjR,EAAE,kCACTkV,OAAQ,SAACC,GACP,IAAQtkB,EAAWskB,EAAXtkB,OACR,OAAOmP,EAAE,+BAAD,OAAgCnP,EAAOukB,mBAGnD,eAACH,GAAA,EAAD,CACEC,OAAQ,SAACC,GACP,IAAQtqB,EAAOsqB,EAAPtqB,GACR,OACE,eAACwqB,GAAA,EAAD,CAAMnH,GAAE,WAAMxkB,EAAauJ,OAAnB,YAA6BpI,EAA7B,SAAR,SACE,eAACyqB,GAAA,EAAD,UACE,eAAC9G,GAAA,EAAD,WAMTuG,EAAajc,GAAU2a,0BACtB,eAACwB,GAAA,EAAD,CACEC,OAAQ,SAACC,GACP,IAAQtqB,EAAOsqB,EAAPtqB,GACR,OACE,eAACwqB,GAAA,EAAD,CAAMnH,GAAE,WAAMxkB,EAAasK,mBAAnB,YAAyCnJ,EAAzC,SAAR,SACE,eAACyqB,GAAA,EAAD,UACE,eAAC5G,GAAA,EAAD,CAAMZ,MAAO,CAAEa,UAAW,2BAWtC4G,GAAiB,SAAC,GAAD,IAAGX,EAAH,EAAGA,OAAQ3D,EAAX,EAAWA,MAAX,OACrB,eAACgE,GAAA,EAAD,CAAyBL,OAAQA,EAAQ3D,MAAOA,EAAOiE,OAAQ,SAACC,GAC9D,MAA+B,CAC7BxpB,UAAW,IAAI8O,KAAJ,OAAS0a,QAAT,IAASA,OAAT,EAASA,EAAQxpB,WAC5BC,QAAS,IAAI6O,KAAJ,OAAS0a,QAAT,IAASA,OAAT,EAASA,EAAQvpB,UAFpBD,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAInB,OAAID,EAAU6pB,iBAAmB5pB,EAAQ4pB,eACvC,uCACE,eAACC,GAAA,EAAD,CAAWb,OAAO,cAClB,sCAAQjpB,EAAU+pB,WAAa,IAAM,EAAG/pB,EAAU+pB,WAAlD,OACA,kCAAO/pB,EAAUgqB,aAAe,IAAM,EAAGhqB,EAAUgqB,aAAnD,SACA,kCAAO/pB,EAAQ8pB,WAAa,IAAM,EAAG9pB,EAAQ8pB,WAA7C,OACA,kCAAO9pB,EAAQ+pB,aAAe,IAAM,EAAG/pB,EAAQ+pB,mBAIjD,uCACE,gCACE,eAACF,GAAA,EAAD,CAAWb,OAAO,YAAYgB,UAAQ,MAExC,wCACA,gCACE,eAACH,GAAA,EAAD,CAAWb,OAAO,UAAUgB,UAAQ,aAOxCC,GAAY,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,YACXvD,EAAYwD,eAAZxD,QACFvS,EAAI4N,eACJjD,EAAQqL,eACRC,EAAcC,aAAcvL,EAAMwL,YAAYC,KAAK,OACzD,OACE,qCACGN,EACC,eAAC,GAAD,IAEA,gBAACd,GAAA,EAAD,CACEtM,KAAK,QACL4L,QAAS/B,EACT8D,SAAU,SAACxrB,GAAD,gBAAWnB,EAAauJ,OAAxB,YAAkCpI,EAAlC,UAHZ,UAKE,eAACyrB,GAAA,EAAD,CAAW1B,OAAO,KAAK3D,MAAM,OAC7B,eAACqF,GAAA,EAAD,CAAW1B,OAAO,UAChBqB,GACA,eAACR,GAAA,EAAD,CAAWb,OAAO,YAAYgB,UAAQ,KACtCK,GACA,eAACR,GAAA,EAAD,CAAWb,OAAO,UAAUgB,UAAQ,IACrCK,GACC,eAAC,GAAD,CAAgBrB,OAAO,YACrB3D,MAAM,iCACV,eAACgE,GAAA,EAAD,CACE3qB,SAAS,SACT2mB,MAAOjR,EAAE,kCACTkV,OAAQ,SAACvc,GAAD,OACNqH,EAAE,+BAAD,cAAgCrH,QAAhC,IAAgCA,OAAhC,EAAgCA,EAAG9H,OAAOukB,yBAa5CmB,GAAY,SAAC,GAAD,QAAGT,mBAAH,SAA2B1K,EAA3B,0BACvB0K,EACE,eAAC,KAAD,2BACM1K,GADN,IAEEoL,SAAS,EACTC,aAASlS,EACTrJ,QAAS,GACTF,YAAY,EALd,SAOE,eAAC,GAAD,CAAW8a,aAAW,OAGxB,eAAC,KAAD,2BACM1K,GADN,IAEEsL,UAAU,EACVD,QAAS,eAAC,GAAD,IACTvb,QAAS,GACTF,WAAY,eAAC2b,GAAA,EAAD,CAAYC,mBAAoB,CAAC,GAAI,GAAI,MALvD,SAOE,eAAC,GAAD,Q,8GCnLAnM,GAAYC,cAAW,SAACC,GAAD,OAC3BkM,aAAa,CACXC,UAAW,CACT5G,QAAS,OACT6G,eAAgB,SAChBC,cAAe,SACfC,aAActM,EAAMG,QAAQ,SAKrBoM,GAAkB,SAAC,GAAoC,IAAlCtC,EAAiC,EAAjCA,OAC1BhJ,EAAUnB,KACV0M,EAAkBpK,WAAc,kBAAM,IAAItS,KAAKA,KAAK2c,MAAQ,WAAa,IAC/ED,EAAgBE,SAAS,EAAG,EAAG,EAAG,GAClC,IAAMC,EAAgB,IAAI7c,KAAKA,KAAK2c,OACpCE,EAAcD,SAAS,GAAI,GAAI,EAAG,GAClC,MAAgCtK,WAC9BoK,EAAgBrT,UAAU1I,YAD5B,oBAAOmc,EAAP,KAAiBC,EAAjB,KAGA,EAA4BzK,WAAeuK,EAAcxT,UAAU1I,YAAnE,oBAAOqc,EAAP,KAAeC,EAAf,KACA,EAGIC,aAAS/C,GAFFgD,EADX,EACEC,MAASD,SADX,IAEEE,KAAQC,EAFV,EAEUA,QAAS7O,EAFnB,EAEmBA,MAGnB6D,aAAgB,WACd6K,EAAS,EACNviB,SAASkiB,EAAU,IAA6C,IAAtCJ,EAAgBpT,qBAA8B3I,YACxE/F,SAASoiB,EAAQ,IAA6C,IAAtCN,EAAgBpT,qBAA8B3I,YAAYxC,KAAK,QACzF,CAAC2e,EAAUE,EAAQG,EAAUT,IAEhC,IAAMa,EAAgB,SAAChtB,GAAD,OACpB,IAAIyP,KAAKzP,EAAK8Y,UAAmD,IAAtCqT,EAAgBpT,qBAA8BC,SAASiU,UAAU,EAAG,KAEjG,OACE,wBAEE/L,UAAWN,EAAQkL,UAFrB,UAIE,eAAC,KAAD,CACE1a,QAAQ,SACR8b,aAAcF,EAAcb,GAC5BzrB,KAAMkpB,EACN/qB,KAAK,iBACL+tB,SAAU,SAACO,GAAD,OAAOX,EAAY/c,KAAK2d,MAAMD,EAAE9O,OAAOjQ,OAAOgC,aACxD8N,SAAU6O,IAAW7O,GACrBmP,WAAYN,GAAW7O,EACvB4E,MAAO,CAAEwK,UAAW,UACpB5P,KAAK,UAEP,eAAC,KAAD,CAAmBoF,MAAO,CAAEgD,UAAW,QACvC,eAAC,KAAD,CACE1U,QAAQ,SACR8b,aAAcF,EAAcV,GAC5B5rB,KAAMkpB,EACN/qB,KAAK,iBACL+tB,SAAU,SAACO,GAAD,OAAOT,EAAUjd,KAAK2d,MAAMD,EAAE9O,OAAOjQ,OAAOgC,aACtD8N,SAAU6O,IAAW7O,GACrBmP,WAAYN,GAAW7O,EACvBR,KAAK,YAvBH,SCxCG6P,GAAczI,aAAW,CACpCC,KAAM,CACJG,QAAS,OACT6G,eAAgB,SAChB5G,cAAe,WAJQL,CAMxB0I,MAEUC,GAAe3I,aAAW,CACrCC,KAAM,CACJG,QAAS,OACT6G,eAAgB,SAChB5G,cAAe,SACfuI,WAAY,WALY5I,CAOzB0I,M,4ECuCGG,GAAgB,SAAC,GAAgC,IAA9B7K,EAA6B,EAA7BA,MACjBnD,EAAQqL,eACR4C,EAAe1C,aAAcvL,EAAMwL,YAAYC,KAAK,OACpDpE,EAAUC,eAChB,OACE,eAACgD,GAAA,EAAD,CACEL,OAAO,YACPM,OAAQ,SAACC,GAAD,OACA,OAANA,QAAM,IAANA,OAAA,EAAAA,EAAQjqB,YACN,uCACE,eAAC2tB,GAAA,EAAD,CACEC,SAAS,kBACT7H,MAAOkE,EAAOjqB,UAAUkQ,WACxB+Z,OAAQ,CAAEtqB,GAAIsqB,EAAOjqB,WACrB0f,KAAM,eAACyD,GAAA,EAAD,IACNP,MAAOA,IAER8K,GACC,eAACxM,GAAA,EAAD,CAAY/gB,MAAM,UAAU2gB,QAAS,kBAAMgG,EAAQ1W,KAAR,0BAAgC6Z,EAAOjqB,UAAvC,WAA3C,SAAsGiqB,EAAOjqB,mBAQrH6tB,GAAY,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,UAAW7D,EAA6B,EAA7BA,OACxBlN,EAAY2F,eAClB,OACE,eAAC0C,GAAA,EAAD,CAAKkE,QAAS,EAAd,SACE,gBAACgE,GAAA,EAAD,CAAM1B,WAAS,EAAChM,QAAS,EAAzB,UACE,gBAACyN,GAAD,CAAaU,MAAI,EAACC,GAAI,EAAtB,UACGjR,EAAU,qCADb,OAGA,eAACsQ,GAAD,CAAaU,MAAI,EAACC,GAAI,EAAtB,SACE,eAAC5C,GAAA,EAAD,CAAW1B,OAAO,YAElBoE,IAAD,OAAc7D,QAAd,IAAcA,OAAd,EAAcA,EAAQjqB,YACrB,uCACE,eAACstB,GAAA,EAAD,CAAMS,MAAI,EAACC,GAAI,GAAf,SACE,eAACC,GAAA,EAAD,MAEF,gBAACZ,GAAD,CAAaU,MAAI,EAACC,GAAI,EAAtB,UACGjR,EAAU,mCADb,OAGA,eAACwQ,GAAD,CAAcQ,MAAI,EAACC,GAAI,EAAvB,SACE,eAAC,GAAD,eASRE,GAAU,SAAC,GAAD,IACdJ,EADc,EACdA,UACAlD,EAFc,EAEdA,YACAnrB,EAHc,EAGdA,KACAoP,EAJc,EAIdA,IACAsf,EALc,EAKdA,SACAC,EANc,EAMdA,OANc,OAQd,eAACC,GAAA,EAAD,UACG5uB,GAAQ0uB,IAAR,OACCtf,QADD,IACCA,OADD,EACCA,EAAKrB,KAAI,SAAC7N,GACR,IAAMijB,EAAQuL,EAAS1uB,EAAKE,GAAKA,GACjC,OACE,gBAAC2uB,GAAA,EAAD,CAEE3uB,GAAIA,EACJsqB,OAAQxqB,EAAKE,GACbP,SAAS,OACTgvB,OAAQA,EACRxL,MAAOA,EANT,UAQE,eAAC2H,GAAA,EAAD,CACEb,OAAO,OACP9G,MAAOA,IAET,eAACwI,GAAA,EAAD,CACE1B,OAAO,aACP9G,MAAOA,IAET,eAACwI,GAAA,EAAD,CACE1B,OAAO,aACP9G,MAAOA,KAEPgI,GACA,eAACQ,GAAA,EAAD,CACE1B,OAAO,OACP9G,MAAOA,KAGTgI,IAAgBkD,GAChB,eAAC,GAAD,CAAelL,MAAOA,MA1BnBjjB,UAkCX4uB,GAAY,SAAC,GAAD,IAAGT,EAAH,EAAGA,UAAWlD,EAAd,EAAcA,YAAgB1K,EAA9B,0BAChB,gBAACsO,GAAA,EAAD,2BAAoBtO,GAApB,cACE,eAACqK,GAAA,EAAD,CAAWb,OAAO,OAChB3D,MAAM,+BACR,eAACqF,GAAA,EAAD,CAAW1B,OAAO,aAChB3D,MAAM,qCACR,eAACqF,GAAA,EAAD,CAAW1B,OAAO,aAChB3D,MAAM,sCACN6E,GACA,eAACQ,GAAA,EAAD,CACE1B,OAAO,OACP+E,UAAU,EACV1I,MAAM,uCAGR+H,IAAclD,GAAe,eAACQ,GAAA,EAAD,CAAW1B,OAAO,YAC/C3D,MAAM,yCAIC2I,GAAU,SAAC,GAIH,IAAD,IAHlB9D,mBAGkB,aAFlBkD,iBAEkB,SADf5N,EACe,mBACV9R,EAAyB8R,EAAzB9R,OAAWugB,EAAnB,aAAiCzO,EAAjC,IACMT,EAAQqL,eACRC,EAAcC,aAAcvL,EAAMwL,YAAYC,KAAK,OACnDwC,EAAe1C,aAAcvL,EAAMwL,YAAYC,KAAK,OACpD1Z,EAASod,eACf,OACE,eAAC,KAAD,yBACE5e,QAAS,GACTwb,UAAU,EACV1b,WAAY,eAAC2b,GAAA,EAAD,CAAYC,mBAAoB,CAAC,GAAI,GAAI,OACrDH,QAAS,CACP,eAAC9B,GAAA,EAAD,CAAWC,OAAO,aAAaC,UAAQ,IACvC,eAACkF,GAAA,EAAD,CACEnF,OAAO,aACPoF,QAAS,CACP,CACEnvB,GAAI,UACJa,KAAM,kDAER,CACEb,GAAI,iBACJa,KAAM,sDAIZ,eAAC,GAAD,CAAiBkpB,OAAO,QAAW,QACnC,eAACD,GAAA,EAAD,CAAWC,OAAO,cAClB,eAACD,GAAA,EAAD,CAAWC,OAAO,WAEpBtb,OAAM,2BAAOA,GAAP,IAAeoD,WACrB7B,KAAM,CAAEC,MAAO,OAAQC,MAAO,SAC1B8e,GAzBN,aA2BE,qCACE,eAAC7E,GAAA,EAAD,CACEnJ,OACE,eAAC,GAAD,CACEiK,cAAaG,GAAqBH,EAClCkD,UAAWA,IAGf3iB,KACE,eAAC,GAAD,CACEyf,cAAaG,GAAqBH,EAClCkD,UAAWA,IAGfiB,gBAAiB,kBAAMhE,GAAeH,GACtCwD,OAAQ,eAAC,GAAD,CAAWN,UAAWA,IAC9BK,SAAU,SAAClE,GAAD,MAAqB,CAC7B3E,WAAY2E,EAAO9pB,MACnBA,MAAwB,gBAAjB8pB,EAAO9pB,OC3OO6uB,ED2OoC/E,EAAO9pB,OCvOtD,IAHRgK,SAAS6kB,EAASC,OAAO,EAAG,GAAI,IAGZ,IAFpB9kB,SAAS6kB,EAASC,OAAO,EAAG,GAAI,IAEA,IADhC9kB,SAAS6kB,EAASC,OAAO,EAAG,GAAI,KACQ,KACnC,IAAO,QAAU,SDsOiD,WC3OrD,IAACD,GD6OvB1F,QAASoE,EAAe,OAAS,UAnBnC,SAqBE,iCL7OJxvB,GAAWC,aAAaC,QAAQ,YACzB8wB,GAAuB,UAAMhxB,GAAN,wB,SAExBmqB,K,8BAAAA,E,sBAAAA,E,0BAAAA,E,mCAAAA,Q,KOgBZ,I,MCrBY8G,GDqBN5P,GAAYC,cAAW,SAACC,GAAD,OAC3BkM,aAAa,CACXhL,OAAQ,CACNyO,UAAW,SACXC,cAAe5P,EAAMG,QAAQ,KAE/B0P,SAAU,CACRtK,QAAS,OACTC,cAAe,SACfuI,WAAY,WACZxL,MAAO,YAKPuN,GAAe,kBACnB,eAACC,GAAA,EAAD,CAAM5M,MAAO,CAAEZ,MAAO,OAAQ+J,aAAc,OAA5C,SACE,eAAC,GAAD,OAIE0D,GAAiB,kBACrB,eAACD,GAAA,EAAD,CAAM5M,MAAO,CAAEZ,MAAO,OAAQ+J,aAAc,OAA5C,SACE,eAAC,GAAD,OAIE2D,GAAW,WACf,IAAM5a,EAAI4N,eACV,OACE,gBAAC8M,GAAA,EAAD,CAAM5M,MAAO,CAAEZ,MAAO,OAAQ+J,aAAc,OAA5C,UACE,eAAC/D,GAAA,EAAD,CAAY5G,MAAOtM,EAAE,qCACrB,eAACmT,GAAA,EAAD,UACE,eAAC0H,GAAA,EAAD,CAAyBzhB,MAAO1P,EAAayJ,KAA7C,SACE,eAAC,GAAD,CACE2lB,SAAS,IACTxM,MAAM,IACNwJ,aAAW,EACX9a,YAAY,EACZE,QAAS,GACTsb,SAAS,EACTC,aAASlS,YAQfuQ,GAAa,WACjB,IAAM9U,EAAI4N,eACV,OACE,gBAAC8M,GAAA,EAAD,CAAM5M,MAAO,CAAEZ,MAAO,OAAQ+J,aAAc,OAA5C,UACE,eAAC/D,GAAA,EAAD,CAAY5G,MAAOtM,EAAE,uCACrB,eAACmT,GAAA,EAAD,UACE,eAAC0H,GAAA,EAAD,CAAyBzhB,MAAO1P,EAAauJ,OAA7C,SACE,eAAC,GAAD,CACE4H,KAAM,CAAEC,MAAO,SAAUC,MAAO,QAChC+a,aAAW,EACXgD,SAAS,IACTxM,MAAM,cAQLwO,GAAY,WACvB,IAAMlP,EAAUnB,KACVzK,EAAI4N,eACJmH,EAAeX,KACf2G,EAAqBtP,cACzB,SAAC9hB,GAAD,OAA2BA,EAAMqxB,UAAUD,sBAEvCE,EAAe,SAAChC,EAAqBiC,GAAtB,OAClBA,EAAcne,SAASkc,IAE1B,OACE,gBAACT,GAAA,EAAD,CAAM1B,WAAS,EAAChM,QAAS,EAAzB,UACE,eAAC0N,GAAA,EAAD,CAAMS,MAAI,EAACC,GAAI,GAAf,SACE,eAACwB,GAAA,EAAD,UACE,eAACxH,GAAA,EAAD,CACEhH,UAAWN,EAAQC,OACnBS,MAAOtM,EAAE,qBACTmb,qBAAsB,CAAE/e,QAAS,YAIvC,gBAACoc,GAAA,EAAD,CAAMS,MAAI,EAACmC,GAAI,EAAGlC,GAAI,GAAtB,UACG+B,EAAa1H,GAAc8H,cAAeN,IACzC,eAAC,GAAD,IAEDhG,EAAajc,GAAU4a,cACtBuH,EAAa1H,GAAc+H,YAAaP,IACtC,eAAC,GAAD,OAGN,gBAACvC,GAAA,EAAD,CAAMtM,UAAWN,EAAQ4O,SAAUvB,MAAI,EAACmC,GAAI,EAAGlC,GAAI,GAAnD,UACG+B,EAAa1H,GAAcgI,gBAAiBR,IAC3C,eAAC,GAAD,IAEDhG,EAAajc,GAAU0a,YACtByH,EAAa1H,GAAciI,UAAWT,IACpC,eAAC,GAAD,W,+EE5FNtQ,GAAYC,cAAW,SAACC,GAAD,OAC3BkM,aAAa,CACX5F,MAAO,CAAE/D,MAAO,OAAQgD,QAAS,gBACjCnE,OAAQ,CAAE4E,OAAQhG,EAAMG,QAAQ,IAChC2Q,OAAQ,CAAEvO,MAAO,OAAQyD,OAAQhG,EAAMG,QAAQ,IAC/C4Q,eAAgB,CACdxO,MAAO,OACPgD,QAAS,eACTS,OAAQhG,EAAMG,QAAQ,SAWtB6Q,GAAsB,SAAC,GAII,IAH/BC,EAG8B,EAH9BA,cACA3K,EAE8B,EAF9BA,MACArG,EAC8B,EAD9BA,KAEM5K,EAAI4N,eACJiO,EAAWC,eACXf,EAAqBtP,cACzB,SAAC9hB,GAAD,OAA2BA,EAAMqxB,UAAUD,sBAO7C,OACE,eAACvC,GAAA,EAAD,CAAMS,MAAI,EAACC,GAAI,EAAf,SACE,gBAAC6C,GAAA,EAAD,WACGnR,EACD,eAACoR,GAAA,EAAD,CACEC,QACE,eAACC,GAAA,EAAD,CACEC,SAAUpB,EAAmBhe,SAAS6e,GACtClwB,KAAMkwB,EACNhE,SAdK,SAAC,GAE0B,IADhClsB,EAC+B,EADzC2d,OAAU3d,KAEVmwB,EAAS,CAAEhyB,KAAMV,EAAkBwpB,QAASjnB,OActCulB,MAAOjR,EAAEiR,GACTmL,eAAe,MACftO,MAAO,CAAE6C,OAAQ,KAAM2J,UAAW,SAAUpN,MAAO,eAOvDmP,GAAyB,WAC7B,IAAMtH,EAAeX,KACrB,OACE,gBAACoE,GAAA,EAAD,CAAM1B,WAAS,EAAChM,QAAS,EAAzB,UACE,eAAC,GAAD,CACE8Q,cAAerI,GAAc8H,cAC7BpK,MAAM,yCACNrG,KAAM,eAAC,KAAD,MAEPmK,EAAajc,GAAU0a,YACtB,eAAC,GAAD,CACEoI,cAAerI,GAAciI,UAC7BvK,MAAM,qCACNrG,KAAM,eAAC2D,GAAA,EAAD,MAGV,eAAC,GAAD,CACEqN,cAAerI,GAAc+H,YAC7BrK,MAAM,uCACNrG,KAAM,eAAC4D,GAAA,EAAD,MAER,eAAC,GAAD,CACEoN,cAAerI,GAAcgI,gBAC7BtK,MAAM,2CACNrG,KAAM,eAAC0D,GAAA,EAAD,UAMDgO,GAAgB,WAC3B,IAAMT,EAAWC,eACXnR,EAAQc,cACZ,SAAC9hB,GAAD,MAAgD,SAAzBA,EAAMghB,MAAMnhB,YAE/BoiB,EAAUnB,KACV/N,EAASod,eACTyC,EAAYC,eACZxc,EAAI4N,eAEV,OACE,gBAAC8M,GAAA,EAAD,WACE,eAAC+B,GAAA,EAAD,CAAOnQ,MAAOtM,EAAE,mBAChB,gBAACmT,GAAA,EAAD,WACE,eAAC/G,GAAA,EAAD,CAAYF,UAAWN,EAAQqF,MAA/B,SACGjR,EAAE,4BAEL,gBAAC0c,GAAA,EAAD,CAAaxQ,UAAWN,EAAQG,OAAhC,UACE,eAAC6E,GAAA,EAAD,CACElI,KAAK,QACLtM,QAAQ,YACR/Q,MAAQsf,EAAoB,UAAZ,UAChBqB,QAAS,kBAAMrB,GAASkR,EAAS,CAAEhyB,KAAMX,KAJ3C,SAMG8W,EAAE,6BAEL,eAAC4Q,GAAA,EAAD,CACElI,KAAK,QACLtM,QAAQ,YACR/Q,MAAOsf,EAAQ,UAAY,UAC3BqB,QAAS,kBAAOrB,GAASkR,EAAS,CAAEhyB,KAAMX,KAJ5C,SAMG8W,EAAE,kCAIT,gBAACmT,GAAA,EAAD,WACE,eAAC/G,GAAA,EAAD,CAAYF,UAAWN,EAAQqF,MAA/B,SACGjR,EAAE,4BAEL,gBAAC2c,GAAA,EAAD,CACEvjB,MAAOsD,EACPkb,SAAU,SAACO,GAAD,OAAOoE,EAAUpE,EAAE9O,OAAOjQ,QACpC8S,UAAWN,EAAQ6P,OACnBrf,QAAQ,WAJV,UAME,eAAC0P,GAAA,EAAD,CAAU1S,MAAM,KAAhB,SAAsB4G,EAAE,0BACxB,eAAC8L,GAAA,EAAD,CAAU1S,MAAM,KAAhB,SAAsB4G,EAAE,gCAG5B,gBAACmT,GAAA,EAAD,WACE,eAAC/G,GAAA,EAAD,CAAYF,UAAWN,EAAQqF,MAA/B,SACGjR,EAAE,8BAEL,sBAAKkM,UAAWN,EAAQ8P,eAAxB,SACE,eAAC,GAAD,aCzKK,IACX,eAAC,KAAD,CAAOkB,OAAK,EAAClmB,KAAK,iBAAiBwe,OAAQ,kBAAM,eAAC,GAAD,Q,yECDxC2H,GAAiB,SAACC,EAAcC,GAC3C,IAAMC,EAAaF,EAAK7E,UAAU,EAAG8E,GAC/BE,EAAYH,EAAKI,OAAOH,GACxBI,EAAkBL,EAAKtxB,OAASwxB,EAAWxxB,OAASyxB,EAAUzxB,OACpE,MAAM,GAAN,OAAUwxB,GAAV,OAAuB,IAAII,OACzBD,EAAkB,EAAIA,EAAkB,IAD1C,OAEIF,I,uBCNOI,GAAY,SAAC,GAAyC,IAAvCzI,EAAsC,EAAtCA,OAAW0I,EAA2B,mBAC1DnI,EAASoI,eACTC,EAAerI,EAAOP,GAAP,2BAEdO,GAFc,kBAGhBP,EAAmBiI,GAAe1H,EAAOP,GAAmB,KAE7DO,EACJ,OAAO,eAACmB,GAAA,EAAD,2BAAegH,GAAf,IAAqBnI,OAAQqI,EAAc5I,OAAQA,MCMtD6I,GAAiB,WACrB,MAII1H,eAHFxD,EADF,EACEA,QACgBtnB,EAFlB,EAEEyyB,aAAgBzyB,WAChBN,EAHF,EAGEA,KAEIqV,EAAI4N,eACJjD,EAAQqL,eACRC,EAAcC,aAAcvL,EAAMwL,YAAYC,KAAK,OACzD,OACE,uCACGnrB,GACC,eAACqlB,GAAA,EAAD,CAAKqN,EAAG,EAAGzN,QAAQ,cAAc0N,OAAO,OAAxC,SACE,eAACxR,GAAA,EAAD,CAAYhQ,QAAQ,KAAKyhB,WAAS,EAAlC,SACG7d,EAAE,0CAA2C,CAAE/U,mBAItD,eAACkuB,GAAA,EAAD,IACA,gBAACnE,GAAA,EAAD,CACER,QAASyB,EAAc,WAAa,UACpC3B,QAAS/B,EACT8D,SAAU,SAACxrB,GAAD,sBAAWnB,EAAamK,eAAxB,sBAA0ClJ,EAAKE,UAA/C,aAA0C,EAAUK,UAApD,UAHZ,WAKI+qB,GAAe,eAACK,GAAA,EAAD,CAAW1B,OAAO,YAAY+E,UAAU,KACvD1D,GAAe,eAACK,GAAA,EAAD,CAAW1B,OAAO,WAAW+E,UAAU,KACtD1D,GAAe,eAAC,GAAD,CAAWrB,OAAO,QAAQ+E,UAAU,IACpD1D,GAAe,eAAChB,GAAA,EAAD,CAAeL,OAAO,WACpCM,OAAQ,SAACC,GAAD,uBACHA,QADG,IACHA,OADG,EACHA,EAAQvoB,UADL,mBACkBuoB,QADlB,IACkBA,OADlB,EACkBA,EAAQtoB,SAD1B,aAC4C,OAANsoB,QAAM,IAANA,OAAA,EAAAA,EAAQroB,QAAS+vB,GAAe1H,EAAOroB,MAAO,OAE9F,eAACwpB,GAAA,EAAD,CAAW1B,OAAO,aAAa+E,UAAQ,IACvC,eAAC1E,GAAA,EAAD,CACEhE,MAAM,yCACNiE,OAAQ,SAACC,GAAD,aAAsC,OAANA,QAAM,IAANA,OAAA,EAAAA,EAAQrmB,SAAR,iBAAqBqmB,QAArB,IAAqBA,OAArB,EAAqBA,EAAQtpB,UAA7B,mBAA0CspB,QAA1C,IAA0CA,GAA1C,UAA0CA,EAAQpmB,iBAAlD,aAA0C,EAAmB8jB,QAAQ,IAAK,KAA1E,mBAAkFsC,QAAlF,IAAkFA,OAAlF,EAAkFA,EAAQrmB,SAAY,OAChJ,eAACwnB,GAAA,EAAD,CAAW1B,OAAO,YAAY+E,UAAQ,WAMjCmE,GAAiB,SAAC1S,GAAD,OAC5B,eAAC,KAAD,yBAAMsL,UAAU,EAAOxb,QAAS,GAAIL,KAAM,CAAEC,MAAO,KAAMC,MAAO,QAC9DC,WAAY,eAAC2b,GAAA,EAAD,CAAYC,mBAAoB,CAAC,GAAI,GAAI,OAAaxL,GADpE,IAEEqL,QAAS,CACP,eAAC9B,GAAA,EAAD,CAAWC,OAAO,aAAaC,UAAQ,KAH3C,SAKE,eAAC,GAAD,Q,sEC9DEkJ,IAA+C,qBAClD/zB,EAAYkD,OAAS,sCAD6B,eAElDlD,EAAY8U,IAAM,mCAFgC,eAGlD9U,EAAYiV,MAAQ,qCAH8B,eAIlDjV,EAAYuV,OAAS,sCAJ6B,eAKlDvV,EAAYoV,QAAU,uCAL4B,IAQ/C4e,IAA6C,qBAChDj0B,EAAWwD,EAAI,gCADiC,eAEhDxD,EAAW2D,EAAI,gCAFiC,eAGhD3D,EAAWk0B,EAAI,gCAHiC,eAIhDl0B,EAAWuF,EAAI,gCAJiC,eAKhDvF,EAAWm0B,EAAI,gCALiC,eAMhDn0B,EAAWo0B,EAAI,gCANiC,eAOhDp0B,EAAWq0B,EAAI,gCAPiC,IAUtCC,GAAqB,SAACpxB,GAAD,OAChC8wB,GAAmB9wB,IAERqxB,GAAoB,SAAChxB,GAAD,OAC/B0wB,GAAkB1wB,ICddmd,GAAYC,cAAW,SAACC,GAAD,OAC3BkM,aAAa,CACXhL,OAAQ,CACN0O,cAAe5P,EAAMG,QAAQ,UAItByT,GAAsB,WACjC,IAAM3S,EAAUnB,KACR0K,EAAWqJ,eAAXrJ,OACR,OACE,eAAC7E,GAAA,EAAD,CAAKqN,EAAG,EAAR,SACE,gBAACvR,GAAA,EAAD,CAAYF,UAAWN,EAAQC,OAAQzP,QAAQ,KAAKyhB,WAAS,EAA7D,iBACG1I,QADH,IACGA,OADH,EACGA,EAAQvoB,UADX,WACuBuoB,QADvB,IACuBA,OADvB,EACuBA,EAAQtoB,eCJ/B4d,GAAYC,cAAW,SAACC,GAAD,OAC3BkM,aAAa,CACX4H,UAAW,CACTvO,QAAS,OACTC,cAAe,SACfqE,QAAS7J,EAAMG,QAAQ,GACvBmF,WAAYtF,EAAMG,QAAQ,IAE5B4T,YAAa,CACXlK,QAAS7J,EAAMG,QAAQ,GACvB6F,OAAQhG,EAAMG,QAAQ,GACtBmM,aAActM,EAAMG,QAAQ,UAKrB6T,GAA4B,SAAC,GAA+B,IAA7B1N,EAA4B,EAA5BA,MACpCrF,EAAUnB,KACVzK,EAAI4N,eAUJgR,GATSrB,eACelwB,SAAW,IAAIqL,KAC3C,gBAAG7N,EAAH,EAAGA,GAAIyC,EAAP,EAAOA,WAAYG,EAAnB,EAAmBA,UAAnB,MAAgD,CAC9C5C,KACAI,WAFF,EAA8BA,WAG5BqC,WAAYgxB,GAAkBhxB,GAC9BG,gBAGyBiL,KAAI,SAACmmB,GAAD,OAC/B,gBAAC9C,GAAA,EAAD,CAEE3f,QAAQ,YACR8P,UAAWN,EAAQ6S,UAHrB,UAKE,eAACK,GAAA,EAAD,CACE5S,UAAWN,EAAQ8S,YACnBzN,MAAM,oDAFR,SAIE,eAACqF,GAAA,EAAD,CACEpK,UAAWN,EAAQ8S,YACnBvJ,OAAQ0J,EACRjK,OAAO,SAGX,eAACkK,GAAA,EAAD,CACE5S,UAAWN,EAAQ8S,YACnBzN,MAAM,4DAFR,SAIE,eAACqF,GAAA,EAAD,CACEpK,UAAWN,EAAQ8S,YACnBvJ,OAAQ0J,EACRjK,OAAO,iBAGX,eAACkK,GAAA,EAAD,CACE5S,UAAWN,EAAQ8S,YACnBzN,MAAM,4DAFR,SAIE,eAAC8N,GAAA,EAAD,CACE9N,MAAOjR,EAAE6e,EAAavxB,YACtB4e,UAAWN,EAAQ8S,gBAGvB,eAACI,GAAA,EAAD,CACE5S,UAAWN,EAAQ8S,YACnBzN,MAAM,2DAFR,SAIE,eAACwE,GAAA,EAAD,CACEvJ,UAAWN,EAAQ8S,YACnBvJ,OAAQ0J,EACRjK,OAAO,YACPgB,UAAQ,QAzCPiJ,EAAah0B,OA8CtB,OACE,eAACi0B,GAAA,EAAD,CAAS7N,MAAOA,EAAhB,SACE,eAACX,GAAA,EAAD,CAAKJ,QAAQ,OAAO8O,SAAS,OAAO7O,cAAc,MAAlD,SACGyO,O,oBRnGGvE,K,cAAAA,E,kBAAAA,E,qBAAAA,Q,KSuBZ,ICvBY4E,GDuBNC,GAAgB,SAACC,GACrB,IAAQnyB,EAAyBmyB,EAAzBnyB,YACFqN,EAD2B8kB,EAAZ9xB,QACKqL,KAAI,SAACsH,GAAD,OAAOA,EAAEnV,MACvC,MAAO,CACLhB,KAAMwK,YAAkB+qB,KACxB90B,SAAUZ,EAAayI,cACvBwgB,QAAS,CACPhoB,KAAM,CAAE0P,YAAWC,UAAWtN,MAK9BqyB,GAAkB,SAAC,GAA0C,IAC3DC,EAD0D,EAAvCjyB,QAEtBmN,SAAQ,SAACwF,GAAD,OAAOA,EAAExS,gBACjB8L,QAAO,SAACc,GAAD,OAAQA,EAAGnL,UAClByJ,KAAI,SAAC0B,GAAD,OAAQA,EAAGvP,MAClB,MAAO,CACLhB,KAAMwK,YAAkBkrB,KACxBj1B,SAAUZ,EAAayI,cACvBwgB,QAAS,CACP5Y,IAAKulB,EACL30B,KAAM,CACJsE,QAAQ,MAUHuwB,GAAgC,CAC3C31B,KAAMwwB,GAAWoF,SACjBr0B,KAAM,kDAGKs0B,GAA4B,SACvC/1B,EADuC,GAG5B,IADTE,EACQ,EADRA,KAEF,OAAQA,GACN,KAAKwwB,GAAWsF,MACd,MAAO,CACL91B,OACAuB,KAAM,+CACNw0B,YAAaV,IAGjB,KAAK7E,GAAWwF,QACd,MAAO,CACLh2B,OACAuB,KAAM,iDACNw0B,YAAaP,IAGjB,KAAKhF,GAAWoF,SACd,OAAOD,GAET,QACE,MAAM,IAAIjzB,QElEVke,GAAYC,cAAW,SAACC,GAAD,OAC3BkM,aAAa,CACX9K,OAAQ,CACN1gB,MAAOsf,EAAMZ,QAAQ+V,OAAOC,MAC5B9P,WAAYtF,EAAMG,QAAQ,SAKnBkV,GAAqB,WAChC,IAAMpU,EAAUnB,KACVzK,EAAI4N,eACJsE,EAASC,eACPI,EAAYiM,eAAZjM,QACR,EAAgD0N,qBAC9CP,GACAF,IAFF,2BAAS31B,EAAT,EAASA,KAAMuB,EAAf,EAAeA,KAAMw0B,EAArB,EAAqBA,YAAe/D,EAApC,KAIMsD,EAAgB5B,eACtB,EAA+ClL,eAA/C,oBAAOC,EAAP,KAA0B4N,EAA1B,KAAiB3N,QACX4N,EAAUC,eAKhBC,qBAAU,WACKlB,EAHV9xB,QAAQ6mB,MAAK,SAACzY,GAAD,OAAYA,EAAOjO,aAAa0mB,MAAK,SAAC1pB,GAAD,OAAOA,EAAEyE,aAI5D4sB,EAAS,CAAEhyB,KAAMwwB,GAAWwF,UAE5BhE,EAAS,CAAEhyB,KAAMwwB,GAAWsF,UAE7B,CAACR,IAEJ,IAAMnT,EAAO,uCAAG,4BAAAxhB,EAAA,sEAEN81B,EAFM,OAEEV,QAFF,IAEEA,OAFF,EAEEA,EAAcT,GAFhB,SAGN7M,EAAOgO,EAAO,CAAE1N,eAAe,IAHzB,OAIZuN,IAJY,gDAMZjO,EAAM,OAAC,EAAD,yBAAC,KAAgBe,QAAS,SANpB,yDAAH,qDAUb,OACE,eAACrC,GAAA,EAAD,CACE/U,SAAUhS,IAASwwB,GAAWoF,UAAYlN,GAAW2N,EACrDhU,UAAWN,EAAQG,OACnB3P,QAAQ,YACR/Q,MAAM,YACN2gB,QAASA,EALX,SAOGhM,EAAE5U,MCzDIm1B,GAAgC,CAC3C12B,KAAMwwB,GAAWoF,SACjBr0B,KAAM,kDAGKo1B,GAA4B,SACvC72B,EADuC,GAG5B,IADTE,EACQ,EADRA,KAEF,OAAQA,GACN,KAAKwwB,GAAWsF,MACd,MAAO,CACL91B,OACAuB,KAAM,+CACNq1B,YAAax2B,EAAsBy2B,OAGvC,KAAKrG,GAAWwF,QACd,MAAO,CACLh2B,OACAuB,KAAM,iDACNq1B,YAAa,MAGjB,KAAKpG,GAAWoF,SACd,OAAOc,GAET,QACE,MAAM,IAAIh0B,QChBVke,GAAYC,cAAW,SAACC,GAAD,OAC3BkM,aAAa,CACX9K,OAAQ,CACN1gB,MAAOsf,EAAMZ,QAAQ+V,OAAOC,MAC5B9P,WAAYtF,EAAMG,QAAQ,SAKnB6V,GAAqB,WAChC,IAAM/U,EAAUnB,KACVzK,EAAI4N,eACJsE,EAASC,eACPI,EAAYiM,eAAZjM,QACR,EAAgD0N,qBAC9CO,GACAD,IAFF,2BAAS12B,EAAT,EAASA,KAAMuB,EAAf,EAAeA,KAAMq1B,EAArB,EAAqBA,YAAe5E,EAApC,KAIA,EAA2C0B,eAA/BryB,EAAZ,EAAQL,GAAe+C,EAAvB,EAAuBA,gBACvB,EAA+CykB,eAA/C,oBAAOC,EAAP,KAA0B4N,EAA1B,KAAiB3N,QACX4N,EAAUC,eAEhBC,qBAAU,WACgB,OAApBzyB,EACFiuB,EAAS,CAAEhyB,KAAMwwB,GAAWsF,QACnB/xB,IAAoB3D,EAAsBy2B,MACnD7E,EAAS,CAAEhyB,KAAMwwB,GAAWwF,UAE5BhE,EAAS,CAAEhyB,KAAMwwB,GAAWoF,aAE7B,CAAC7xB,IAEJ,IAAMoe,EAAO,uCAAG,sBAAAxhB,EAAA,+EAEN8nB,EACJ,CACEzoB,KAAMwK,YAAkBusB,KACxBt2B,SAAUZ,EAAa2I,SACvBsgB,QAAS,CACPhoB,KAAM,CAAEE,GAAIK,EAAW2Q,SAAU4kB,KAGrC,CAAE7N,eAAe,IAVP,OAYZuN,IAZY,+CAcZjO,EAAM,OAAC,EAAD,yBAAC,KAAgBe,QAAS,SAdpB,wDAAH,qDAkBb,OACE,eAACrC,GAAA,EAAD,CACE/U,SAAUhS,IAASwwB,GAAWoF,UAAYlN,GAAW2N,EACrDhU,UAAWN,EAAQG,OACnB3P,QAAQ,YACR/Q,MAAM,YACN2gB,QAASA,EALX,SAOGhM,EAAE5U,M,sGC5EIy1B,GAAuB,WAClC,MAAsD9K,eAA9C9a,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAAS3P,EAAvB,EAAuBA,MAAOu1B,EAA9B,EAA8BA,QAASC,EAAvC,EAAuCA,WACjCC,EAAUC,KAAKC,KAAK31B,EAAQ2P,IAAY,EAC9C,OACI8lB,EAAU,EACR,eAACG,GAAA,EAAD,UACE,gBAAC3I,GAAA,EAAD,CAAM1B,WAAS,EAAf,UACE,eAAC0B,GAAA,EAAD,CAAMS,MAAI,EAACC,GAAI,EAAf,SACA,eAAC6C,GAAA,EAAD,CAAOqF,UAAW,EAChBtT,MAAO,CAAC8P,OAAQ,OAAQ1N,QAAS,OAAQC,cAAe,MAAO4G,eAAgB,WAAY2B,WAAY,UADzG,SAEE,gBAACiE,GAAA,EAAD,CAAQvjB,MAAO8B,EAAS4S,MAAO,CAACZ,MAAO,OAAQ0Q,OAAQ,MAAOtD,UAAW,UAAWle,QAAQ,WAC5Fwb,SAAU,SAAAO,GAAC,OAAI4I,EAAW1rB,SAAS8iB,EAAE9O,OAAOjQ,MAAiB,MAD7D,UAEE,eAAC0S,GAAA,EAAD,CAAU1S,MAAO,GAAjB,kBACA,eAAC0S,GAAA,EAAD,CAAU1S,MAAO,GAAjB,kBACA,eAAC0S,GAAA,EAAD,CAAU1S,MAAO,IAAjB,0BAIJ,eAACof,GAAA,EAAD,CAAMS,MAAI,EAACC,GAAI,IACf,eAACV,GAAA,EAAD,CAAMS,MAAI,EAACC,GAAI,EAAf,SACE,eAAC6C,GAAA,EAAD,CAAOqF,UAAW,EAClBtT,MAAO,CAAC8P,OAAQ,OAAQ1N,QAAS,OAAQC,cAAe,MAAO4G,eAAgB,WAAY2B,WAAY,UADvG,SAEE,gBAACgE,GAAA,EAAD,CAAa5O,MAAO,CAAC8P,OAAQ,OAA7B,UACG3iB,EAAO,EACN,eAAC2V,GAAA,EAAD,CAAQxU,QAAQ,WAAW/Q,MAAM,UAAqB2gB,QAAS,kBAAM8U,EAAQ7lB,EAAO,IAApF,SACE,eAAC,KAAD,KAD6C,QAG/C,eAAC2V,GAAA,EAAD,CAAQxU,QAAQ,WAAW/Q,MAAM,UAAUwQ,UAAQ,EAAnD,SACE,eAAC,KAAD,MAGJ,gBAAC+U,GAAA,EAAD,CAAQ/U,UAAQ,EAACO,QAAQ,YAAzB,cAAuCnB,EAAvC,OACCA,IAAS+lB,EACR,eAACpQ,GAAA,EAAD,CAAQxU,QAAQ,WAAW/Q,MAAM,UAAqB2gB,QAAS,kBAAM8U,EAAQ7lB,EAAO,IAApF,SACE,eAAC,KAAD,KAD6C,QAG/C,eAAC2V,GAAA,EAAD,CAAQxU,QAAQ,WAAW/Q,MAAM,UAAUwQ,UAAQ,EAAnD,SACE,eAAC,KAAD,kBAQd,0B,mBCjCFwlB,GAAa,SAAC,GAIb,IAHLC,EAGI,EAHJA,YAIMrZ,EAAY2F,eAClB,EAAsBmI,eAAdprB,EAAR,EAAQA,KAAMoP,EAAd,EAAcA,IAEd,OACE,qCACE,eAACwnB,GAAA,EAAD,UACE,gBAACC,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,UACE,gBAACC,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,iBACA,eAACA,GAAA,EAAD,UAAY1Z,EAAU,kCACtB,eAAC0Z,GAAA,EAAD,UAAY1Z,EAAU,6CAG1B,eAACsR,GAAA,EAAD,UACGxf,EAAIrB,KAAI,SAAC7N,GAAD,iBACP,gBAAC62B,GAAA,EAAD,CAAmB5T,MAAO,CAAE8T,OAAQ,WAAaC,OAAK,EAAtD,UACE,eAACF,GAAA,EAAD,CAAW3V,QAAS,kBAAMsV,EAAYz2B,IAAtC,mBACGF,EAAKE,UADR,aACG,EAAUA,KAEb,eAAC82B,GAAA,EAAD,CAAW3V,QAAS,kBAAMsV,EAAYz2B,IAAtC,mBACGF,EAAKE,UADR,aACG,EAAUa,OAEb,eAACi2B,GAAA,EAAD,CAAW3V,QAAS,kBAAMsV,EAAYz2B,IAAtC,mBACGF,EAAKE,UADR,aACG,EAAU0E,eARA1E,gBAmBhBi3B,GAAa,SAAC,GAA8C,IAA7CR,EAA4C,EAA5CA,YAAgBlW,EAA4B,mBAChET,EAAQqL,eAEd,OACE,eAAC,KAAD,yBACE9a,QAAS,GACTwb,UAAU,EACV1b,WACEkb,aAAcvL,EAAMwL,YAAY4L,GAAG,OACjC,eAACpL,GAAA,EAAD,CAAYC,mBAAoB,CAAC,GAAI,GAAI,OAEzC,eAAC,GAAD,KAGAxL,GAVN,aAYE,eAAC,GAAD,CAAYkW,YAAaA,Q,UCxElBU,GAAkBlS,aAAW,CACxCC,KAAM,CACJ7C,MAAO,OACP0Q,OAAQ,OACRqE,SAAU,OACVhL,aAAc,MACd,UAAW,CACT5rB,MAAO,eAPkBykB,CAU5BoS,MAEUC,GAAarS,aAAW,CACnCC,KAAM,CACJ6N,OAAQ,OACRwE,YAAa,cACbC,gBAAiB,QACjBnV,MAAO,OACP,UAAW,CACT7hB,MAAO,eAPaykB,CAUvBoS,MAEUI,GAAiBxS,aAAW,CACvCC,KAAM,CACJqS,YAAa,cACbC,gBAAiB,UAHSvS,CAK3B1D,M,oBCDGmW,GAAmB,SAAC,GAA8C,IAA5C53B,EAA2C,EAA3CA,KAAMoP,EAAqC,EAArCA,IAAKuf,EAAgC,EAAhCA,OAC/BrR,EAAY2F,eAClB,EAAiByE,eAAVC,EAAP,qBACQkQ,EAAYzM,eAAZyM,QACF7X,EAAQqL,eACRC,EAAcC,aAAcvL,EAAMwL,YAAYC,KAAK,OAEnDqM,EAAW,uCAAG,WAAOlf,GAAP,SAAA/Y,EAAA,sEACZ8nB,EACJ,CACEzoB,KAAMwK,YAAkBkrB,KACxBj1B,SAAUZ,EAAayI,cACvBwgB,QAAS,CACP5Y,IAAK,CAACwJ,EAAO1Y,IACbF,KAAM,CACJsE,QAASsU,EAAOtU,UAItB,CAAE2jB,eAAe,IAZD,OAclB4P,IAdkB,2CAAH,sDAiBjB,OACE,eAACjJ,GAAA,EAAD,UACGxf,GAAOA,EAAIrB,KAAI,SAAC7N,GAAD,OACdF,GAAQA,EAAKE,IACX,gBAAC2uB,GAAA,EAAD,CACEF,OAAQA,EAERzuB,GAAIA,EACJsqB,OAAQxqB,EAAKE,GACbP,SAAUZ,EAAayI,cALzB,UAOE,eAACsjB,GAAA,EAAD,CACEb,OAAO,OACPO,OAAQxqB,EAAKE,GACb+qB,UAAQ,IAEV,eAACX,GAAA,EAAD,CACEE,OAAQxqB,EAAKE,GACbqqB,OAAQ,SAACC,GAAD,OACNlN,EAAU,mCAAD,cAAoCkN,QAApC,IAAoCA,OAApC,EAAoCA,EAAQnc,gBAEvDid,GACA,eAAChB,GAAA,EAAD,CACEC,OAAQ,SAACC,GAAD,OACA,OAANA,QAAM,IAANA,OAAA,EAAAA,EAAQlmB,QACJgZ,EAAU,aACVA,EAAU,eAGpB,eAACqO,GAAA,EAAD,CACE1B,OAAO,eAET,qCACGqB,EACC,eAACX,GAAA,EAAD,CAAYjqB,MAAM,UAAU2gB,QAAS,kBACnCyW,EAAY93B,EAAKE,KADnB,SAEGF,EAAKE,GAAIoE,OACR,eAACyzB,GAAA,EAAD,IACA,eAACC,GAAA,EAAD,MAEJ,eAAC/R,GAAA,EAAD,CACExU,QAAQ,YACR/Q,MAAM,YACNyiB,MAAO,CAAEZ,MAAO,OAAQ+U,SAAU,QAClCjW,QAAS,kBAAMyW,EAAY93B,EAAKE,KAJlC,SAMGod,EAAU,mCAAD,OAC2Btd,EAAKE,GAAIoE,OAAT,gCAzCtCpE,SAqDX+3B,GAAqB,SAACxX,GAAD,OACzB,gBAACsO,GAAA,EAAD,2BAAoBtO,GAApB,cACE,eAACkL,GAAA,EAAD,CAAW1B,OAAO,SAClB,eAAC0B,GAAA,EAAD,CAAW1B,OAAO,cAClB,eAAC0B,GAAA,EAAD,CAAW1B,OAAO,aAClB,eAAC0B,GAAA,EAAD,CAAW1B,OAAO,gBAITiO,GAAmB,SAACzX,GAC/B,IAAMT,EAAQqL,eACR4C,EAAe1C,aAAcvL,EAAMwL,YAAYC,KAAK,OAC1D,OACE,eAAC,KAAD,2BACMhL,GADN,IAEEsL,UAAU,EACVxb,QAAS,GACTL,KAAM,CAAEC,MAAO,OAAQC,MAAO,QAJhC,SAME,qCACE,eAACia,GAAA,EAAD,CACE3e,KAAM,eAAC,GAAD,IACNwV,OAAQ,eAAC,GAAD,IACR2I,QAASoE,EAAe,WAAa,UAHvC,SAKE,iCC7HGkK,GAAkB,SAAC1X,GAC9B,IAAMT,EAAQqL,eACR4C,EAAe1C,aAAcvL,EAAMwL,YAAYC,KAAK,OACpDnO,EAAY2F,eAClB,OACE,eAAC,KAAD,2BACMxC,GADN,IAEEsL,UAAU,EACVxb,QAAS,GACTL,KAAM,CAAEC,MAAO,KAAMC,MAAO,QAJ9B,SAME,qCACE,gBAACia,GAAA,EAAD,CACER,QAASoE,EAAe,WAAa,UADvC,UAEE,eAACnD,GAAA,EAAD,CAAWb,OAAO,eAClB,eAACa,GAAA,EAAD,CAAWb,OAAO,aAClB,eAACK,GAAA,EAAD,CACEL,OAAO,WACPM,OAAQ,SAACvc,GAAD,cACNA,QADM,IACNA,OADM,EACNA,EAAGoqB,SAAS9K,UAAU,GAAI,OAE9B,eAAChD,GAAA,EAAD,CACEL,OAAO,SACPM,OAAQ,SAACvc,GAAD,cACNA,QADM,IACNA,OADM,EACNA,EAAGqqB,OAAO/K,UAAU,GAAI,OAE5B,eAAChD,GAAA,EAAD,CACEL,OAAO,OACPM,OAAQ,SAACvc,GAAD,OACNsP,EAAU,mCAAD,cAAoCtP,QAApC,IAAoCA,OAApC,EAAoCA,EAAG9O,UAEpD,eAACysB,GAAA,EAAD,CAAW1B,OAAO,aAClB,eAAC0B,GAAA,EAAD,CACE1B,OAAO,YACP3D,MAAM,eCfZgS,GAAY,SAAC,GAAD,IAChB7pB,EADgB,EAChBA,MACA8pB,EAFgB,EAEhBA,SACAC,EAHgB,EAGhBA,OACA5X,EAJgB,EAIhBA,SAJgB,OAWhB,eAACyW,GAAD,CACElU,MAAO,CACL0C,WAAY0S,IAAa9pB,EAAQ,kBAAoB,WAEvD4S,QAAS,kBAAMmX,EAAO/pB,IAJxB,SAMGmS,KAIC6X,GAAgB,WACpB,IAAMnb,EAAY2F,eACFrK,EAAWib,eAAnBrJ,OACR,OACE,eAACoM,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,UACE,gBAACjI,GAAA,EAAD,WACE,gBAACmI,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,CAAW7T,MAAO,CAAEZ,MAAO,OAA3B,gBACA,eAACyU,GAAA,EAAD,CAAW7T,MAAO,CAAEZ,MAAO,OAA3B,SACE,eAACoJ,GAAA,EAAD,CAAW1B,OAAO,YAGtB,gBAAC8M,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,UAAY1Z,EAAU,kCACtB,eAAC0Z,GAAA,EAAD,UACE,eAACrL,GAAA,EAAD,CAAW1B,OAAO,cAGtB,gBAAC8M,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,UAAY1Z,EAAU,mCACtB,eAAC0Z,GAAA,EAAD,UACE,eAAC1M,GAAA,EAAD,CACEC,OAAQ,SAACC,GAAD,OACNlN,EAAU,yBAAD,cAA0BkN,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAQ9lB,gBAKnD,gBAACqyB,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,UACG1Z,EAAU,wCAEb,eAAC0Z,GAAA,EAAD,UACE,eAAC1M,GAAA,EAAD,CAAuBC,OAAQ,SAACC,GAAD,uBAAwBA,QAAxB,IAAwBA,OAAxB,EAAwBA,EAAQ5lB,WAAhC,oBAA+C4lB,QAA/C,IAA+CA,OAA/C,EAA+CA,EAAQvR,aAAvD,aAGnC,gBAAC8d,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,UACG1Z,EAAU,0CAEb,eAAC0Z,GAAA,EAAD,UACE,eAACrL,GAAA,EAAD,CAAW1B,OAAO,wBAGtB,gBAAC8M,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,UACG1Z,EAAU,yCAEb,eAAC0Z,GAAA,EAAD,UACE,eAACrL,GAAA,EAAD,CAAW1B,OAAO,uBAGtB,gBAAC8M,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,UACG1Z,EAAU,0CAEb,eAAC0Z,GAAA,EAAD,UACE,eAAC1M,GAAA,EAAD,CACEC,OAAQ,SAACC,GAAD,OACA,OAANA,QAAM,IAANA,OAAA,EAAAA,EAAQ3lB,cACJyY,EAAU,aACVA,EAAU,oBAKtB,gBAACyZ,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,UACG1Z,EAAU,2CAEb,eAAC0Z,GAAA,EAAD,UACE,eAAC1M,GAAA,EAAD,CACEC,OAAQ,SAACC,GAAD,OACA,OAANA,QAAM,IAANA,OAAA,EAAAA,EAAQ1lB,eACJwY,EAAU,aACVA,EAAU,oBAKtB,gBAACyZ,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,UACG1Z,EAAU,sCAEb,eAAC0Z,GAAA,EAAD,UACE,eAACrL,GAAA,EAAD,CAAW1B,OAAO,kBAGtB,gBAAC8M,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,UACG1Z,EAAU,yCAEb,eAAC0Z,GAAA,EAAD,UACE,eAACrL,GAAA,EAAD,CAAW1B,OAAO,qBAGtB,gBAAC8M,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,UAAY1Z,EAAU,mCACtB,eAAC0Z,GAAA,EAAD,UACE,eAACrL,GAAA,EAAD,CAAW1B,OAAO,eAGtB,gBAAC8M,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,UACG1Z,EAAU,yCAEb,eAAC0Z,GAAA,EAAD,UACE,eAAClM,GAAA,EAAD,CAAWb,OAAO,qBAGtB,gBAAC8M,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,UACG1Z,EAAU,+CAEb,eAAC0Z,GAAA,EAAD,UACE,eAACrL,GAAA,EAAD,CAAW1B,OAAO,2BAGtB,gBAAC8M,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,UACG1Z,EAAU,8CAEb,eAAC0Z,GAAA,EAAD,UACE,eAACrL,GAAA,EAAD,CAAW1B,OAAO,0BAGtB,gBAAC8M,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,UACG1Z,EAAU,uCAEb,eAAC0Z,GAAA,EAAD,UACE,eAAClM,GAAA,EAAD,CAAWb,OAAO,mBAGtB,gBAAC8M,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,UACG1Z,EAAU,wCAEb,eAAC0Z,GAAA,EAAD,UACE,eAAClM,GAAA,EAAD,CAAWb,OAAO,qBAGf,OAANrR,QAAM,IAANA,OAAA,EAAAA,EAAQpT,4BACP3D,EAAkC62B,UAChC,gBAAC3B,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,UACG1Z,EAAU,0CAEb,eAAC0Z,GAAA,EAAD,UACE,eAACrL,GAAA,EAAD,CAAW1B,OAAO,sBAI1B,gBAAC8M,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,UACG1Z,EAAU,sDAEb,eAAC0Z,GAAA,EAAD,UACE,eAAC1M,GAAA,EAAD,CACEC,OAAQ,SAACC,GAAD,OACNlN,EAAU,4CAAD,cACqCkN,QADrC,IACqCA,OADrC,EACqCA,EAAQhlB,2CAYlEmzB,GAAc,WAClB,MAA6B9E,eAArB1F,EAAR,EAAQA,SAAU3D,EAAlB,EAAkBA,OAClB,OACE,eAAC7E,GAAA,EAAD,UACE,eAACuK,GAAA,EAAD,CAAyBzhB,MAAO1P,EAAaqI,aAA7C,SACE,eAAC,GAAD,CACEua,MAAM,IACNwM,SAAUA,EACVxf,OAAQ,CACNzO,GAAE,OAAEsqB,QAAF,IAAEA,OAAF,EAAEA,EAAQ7kB,eAAesI,KAAK,MAElC4d,SAAS,EACTtb,QAAS,GACTF,WAAY,eAAC2b,GAAA,EAAD,CAAYC,mBAAoB,CAAC,GAAI,GAAI,cAOzD2M,GAAa,SAAC,GAAwD,IAAtD14B,EAAqD,EAArDA,GAAIwC,EAAiD,EAAjDA,QAChByrB,EAAa0F,eAAb1F,SACR,OACE,eAACxI,GAAA,EAAD,UACE,eAACuK,GAAA,EAAD,CAAyBzhB,MAAO1P,EAAayI,cAA7C,SACE,eAAC,GAAD,CACEma,MAAM,IACNwM,SAAUA,EACVxf,OAAQ,CACNL,SAAU5L,EAAQuL,KAAK,KACvBM,SAAUrO,GAEZ2rB,SAAS,EACTtb,QAAS,GACTF,WAAY,eAAC2b,GAAA,EAAD,CAAYC,mBAAoB,CAAC,GAAI,GAAI,cAOlD4M,GAAa,SAACpY,GACzB,IAAMnD,EAAY2F,eAClB,EAAsCN,mBAAS,GAA/C,oBAAOmW,EAAP,KAAoBC,EAApB,KACQvO,EAAWqJ,eAAXrJ,OACAtqB,EAAOugB,EAAPvgB,GACF8f,EAAQqL,eACRC,EAAcC,aAAcvL,EAAMwL,YAAYC,KAAK,OAEnDuN,EAAkB,SAACC,GAAD,OAAkBF,EAAeE,IAEzD,OACE,eAACC,GAAA,EAAD,2BAAUzY,GAAV,aACE,qCACE,gBAACoN,GAAA,EAAD,CAAM1B,WAAS,EAAf,UACE,eAAC0B,GAAA,EAAD,CAAMS,MAAI,EAACC,GAAIjD,EAAc,GAAK,EAAlC,SACE,eAAC8F,GAAA,EAAD,CAAOjO,MAAO,CAAE8P,OAAQ,QAAxB,SACE,gBAACpF,GAAA,EAAD,CAAM1B,WAAS,EAAf,UACE,eAAC0B,GAAA,EAAD,CAAMS,MAAI,EAACC,GAAIjD,EAAc,EAAI,GAAjC,SACE,eAAC,GAAD,CACE7c,MAAO,EACP8pB,SAAUO,EACVN,OAAQQ,EAHV,SAKG1b,EAAU,qCAGf,eAACuQ,GAAA,EAAD,CAAMS,MAAI,EAACC,GAAIjD,EAAc,EAAI,GAAjC,SACE,eAAC,GAAD,CACE7c,MAAO,EACP8pB,SAAUO,EACVN,OAAQQ,EAHV,SAKG1b,EAAU,mCAGf,eAACuQ,GAAA,EAAD,CAAMS,MAAI,EAACC,GAAIjD,EAAc,EAAI,GAAjC,SACE,eAAC,GAAD,CACE7c,MAAO,EACP8pB,SAAUO,EACVN,OAAQQ,EAHV,SAKG1b,EAAU,yCAMrB,eAACuQ,GAAA,EAAD,CAAMS,MAAI,EAACC,GAAIjD,EAAc,GAAK,EAAlC,SACE,gBAAC8F,GAAA,EAAD,CAAOjO,MAAO,CAAE8P,OAAQ,QAAxB,UACmB,IAAhB6F,GAAqB,eAAC,GAAD,IACL,IAAhBA,GAAqB,eAAC,GAAD,IACL,IAAhBA,GACC,eAAC,GAAD,CACE54B,GAAIA,EACJwC,QAAO,OACL8nB,QADK,IACLA,OADK,EACLA,EAAQ9nB,QAAQqL,KAAI,SAAC+C,GAAD,OAAiBA,EAAO5Q,sBCrS1Di5B,GAAkB,YAGkC,IAFxDlqB,EAEuD,EAFvDA,OACAgb,EACuD,EADvDA,OAEMO,EAASoI,eACTvd,EAAI4N,eACJmW,EAAcnqB,EAAOub,EAAOP,IAClC,OAAO,eAACmK,GAAA,EAAD,CAAM9N,MAAOjR,EAAE+jB,MAGlBC,GAAoB,WACxB,MAA6BxF,eAArBrJ,EAAR,EAAQA,OAAQ2D,EAAhB,EAAgBA,SACV7Q,EAAY2F,eAClB,EAA4Cb,IAAMO,cAEhD/I,GAFF,oBAAO0f,EAAP,KAAuBC,EAAvB,KAaA,OALA7D,qBAAU,YACE,OAANlL,QAAM,IAANA,OAAA,EAAAA,EAAQnoB,cAA6C,IAA9BmoB,EAAOnoB,YAAYxB,QAC5C04B,EAAiB,OAAC/O,QAAD,IAACA,OAAD,EAACA,EAAQnoB,YAAYoO,cACvC,CAAC+Z,EAAQ+O,IAGV,uCACE,eAAC/K,GAAA,EAAD,IACA,gBAACgL,GAAA,EAAD,CAAQC,SAAUH,GAAiD,KAAzB,OAAN9O,QAAM,IAANA,OAAA,EAAAA,EAAQnoB,YAAYxB,QAAxD,UACE,eAAC4gB,GAAA,EAAD,CAAYhQ,QAAQ,KAApB,SACG6L,EAAU,qCAEb,eAAC4S,GAAA,EAAD,CAAyBzhB,MAAO1P,EAAauI,SAA7C,SACE,eAAC,GAAD,CACE6mB,SAAUA,EACVtC,SAAS,EACTC,aAASlS,EACTjL,OAAQ,CAAEzO,GAAE,OAAEsqB,QAAF,IAAEA,OAAF,EAAEA,EAAQnoB,YAAYoO,YAClCkR,MAAM,IACNgV,YAvBiB,SAACsC,GAC1BM,EAAkBN,WA0BfK,GACC,eAAC3T,GAAA,EAAD,CAAK+T,SAAU,EAAf,SACE,gBAAC7L,GAAA,EAAD,CAAM1B,WAAS,EAAf,UACE,eAACqN,GAAA,EAAD,CAAQC,OAAuC,KAAzB,OAANjP,QAAM,IAANA,OAAA,EAAAA,EAAQnoB,YAAYxB,QAApC,SACE,eAACgtB,GAAA,EAAD,CAAMS,MAAI,EAACC,GAAI,EAAf,SACE,eAACiJ,GAAD,CAAYnW,QAAS,kBAAMkY,OAAkB3f,IAA7C,SACE,eAAC+d,GAAD,UACGra,EAAU,yCAKnB,eAACuQ,GAAA,EAAD,CAAMS,MAAI,EAACC,GAAmC,KAAzB,OAAN/D,QAAM,IAANA,OAAA,EAAAA,EAAQnoB,YAAYxB,QAAe,GAAK,GAAvD,SACE,eAAC,GAAD,CACEstB,SAAUA,EACVtC,SAAS,EACT3rB,GAAIo5B,EAAe7oB,WACnB9Q,SAAUZ,EAAauI,SACvBqa,MAAM,iBAUhBgY,GAAqB,WACzB,IAAQnP,EAAWqJ,eAAXrJ,OACR,OACE,gBAACoP,GAAA,EAAD,CAAKtT,MAAM,wCAAX,WACS,OAANkE,QAAM,IAANA,OAAA,EAAAA,EAAQnnB,eACP,eAACsoB,GAAA,EAAD,CACEkO,UAAQ,EACRvT,MAAM,+CACN2D,OAAO,kBAGJ,OAANO,QAAM,IAANA,OAAA,EAAAA,EAAQroB,QACP,eAACwpB,GAAA,EAAD,CACErF,MAAM,wCACN2D,OAAO,WAGJ,OAANO,QAAM,IAANA,OAAA,EAAAA,EAAQjnB,iBACP,eAACooB,GAAA,EAAD,CACErF,MAAM,iDACN2D,OAAO,mBAGX,eAAC0B,GAAA,EAAD,CACErF,MAAM,4CACN2D,OAAO,cAET,eAAC0B,GAAA,EAAD,CACErF,MAAM,2CACN2D,OAAO,cAEF,OAANO,QAAM,IAANA,OAAA,EAAAA,EAAQ/mB,SACP,eAACkoB,GAAA,EAAD,CACErF,MAAM,yCACN2D,OAAO,YAGJ,OAANO,QAAM,IAANA,OAAA,EAAAA,EAAQpnB,YACP,eAAC0nB,GAAA,EAAD,CACExE,MAAM,4CACN2D,OAAO,eAGJ,OAANO,QAAM,IAANA,OAAA,EAAAA,EAAQrnB,UACP,eAACwoB,GAAA,EAAD,CACErF,MAAM,0CACN2D,OAAO,aAGJ,OAANO,QAAM,IAANA,OAAA,EAAAA,EAAQhnB,cACP,eAACmoB,GAAA,EAAD,CACErF,MAAM,8CACN2D,OAAO,oBAOX6P,GAAgB,kBACpB,uCACE,eAACtL,GAAA,EAAD,IACA,gBAAC7I,GAAA,EAAD,CAAKxW,EAAG,EAAGoW,QAAQ,OAAO6G,eAAe,WAAzC,UACE,eAAC,GAAD,IACA,eAAC,GAAD,WAKA2N,GAAiB,WACrB,IAAgBvF,EAAkBX,eAA1BrJ,OACR,OACE,gBAACoP,GAAA,EAAD,CAAKtT,MAAM,wCAAX,WACgB,OAAbkO,QAAa,IAAbA,OAAA,EAAAA,EAAetzB,YACd,eAACyqB,GAAA,EAAD,CACErF,MAAM,4CACN2D,OAAO,eAGG,OAAbuK,QAAa,IAAbA,OAAA,EAAAA,EAAe7wB,SACd,eAACgoB,GAAA,EAAD,CACErF,MAAM,yCACN2D,OAAO,YAGG,OAAbuK,QAAa,IAAbA,OAAA,EAAAA,EAAe5wB,UACd,eAAC+nB,GAAA,EAAD,CACErF,MAAM,0CACN2D,OAAO,aAGG,OAAbuK,QAAa,IAAbA,OAAA,EAAAA,EAAe1wB,aACd,eAAC6nB,GAAA,EAAD,CACErF,MAAM,6CACN2D,OAAO,gBAGG,OAAbuK,QAAa,IAAbA,OAAA,EAAAA,EAAezwB,cACd,eAAC4nB,GAAA,EAAD,CACErF,MAAM,8CACN2D,OAAO,iBAGG,OAAbuK,QAAa,IAAbA,OAAA,EAAAA,EAAexwB,YACd,eAAC2nB,GAAA,EAAD,CACErF,MAAM,4CACN2D,OAAO,eAGG,OAAbuK,QAAa,IAAbA,OAAA,EAAAA,EAAevwB,YACd,eAAC0nB,GAAA,EAAD,CACErF,MAAM,4CACN2D,OAAO,eAGG,OAAbuK,QAAa,IAAbA,OAAA,EAAAA,EAAepd,aACd,eAACuU,GAAA,EAAD,CACErF,MAAM,6CACN2D,OAAO,eAGX,eAACkK,GAAA,EAAD,CAAS7N,MAAM,8CAAf,SACE,eAAC,GAAD,CAAiB2D,OAAO,cAAchb,OAAQykB,QAElC,OAAbc,QAAa,IAAbA,OAAA,EAAAA,EAAehyB,aACd,eAACsoB,GAAA,EAAD,CACExE,MAAM,6CACN2D,OAAO,aACPgB,UAAQ,KAGE,OAAbuJ,QAAa,IAAbA,OAAA,EAAAA,EAAe/xB,WACd,eAACqoB,GAAA,EAAD,CACExE,MAAM,2CACN2D,OAAO,WACPgB,UAAQ,IAGZ,eAAC,GAAD,CAA2B3E,MAAM,iDACjC,eAACwE,GAAA,EAAD,CACExE,MAAM,4CACN2D,OAAO,YACPgB,UAAQ,IAEV,eAACH,GAAA,EAAD,CACExE,MAAM,6CACN2D,OAAO,aACPgB,UAAQ,IAEV,eAAC,GAAD,QAKA+O,GAAiB,WACrB,MAA6BnG,eAArBrJ,EAAR,EAAQA,OAAQ2D,EAAhB,EAAgBA,SAChB,OACE,eAAC+B,GAAA,EAAD,CAAyBzhB,MAAO1P,EAAaqK,YAA7C,SACE,eAAC,GAAD,CACE+kB,SAAUA,EACVxf,OAAQ,CAAEpO,UAAS,OAAEiqB,QAAF,IAAEA,OAAF,EAAEA,EAAQtqB,IAC7B4rB,aAASlS,EACTiS,SAAS,EACTlK,MAAM,IACN0M,WAAS,OAMJ4L,GAAoB,SAACxZ,GAChC,IAAM2J,EAAeX,KACrB,OACE,eAACyP,GAAA,EAAD,2BAAUzY,GAAV,aACE,uCACE,eAAC,GAAD,IACA,eAAC+N,GAAA,EAAD,IACA,gBAAC0L,GAAA,EAAD,CAAkBC,kBAAkB,EAApC,UACE,eAACP,GAAA,EAAD,CAAKtT,MAAM,wCAAX,SACE,eAAC,GAAD,MAED8D,EAAajc,GAAU0a,YACtB,eAAC+Q,GAAA,EAAD,CAAKtT,MAAM,qCAAX,SACE,eAAC,GAAD,MAGJ,eAACsT,GAAA,EAAD,CAAKtT,MAAM,wCAAX,SACE,eAAC,GAAD,MAEF,gBAACsT,GAAA,EAAD,CAAKtT,MAAM,yCAAX,UACE,eAACqF,GAAA,EAAD,CACErF,MAAM,8CACN2D,OAAO,gBAET,eAAC,GAAD,iBCxRNH,GAAc,SAACrJ,GAAD,OAClB,eAACsJ,GAAA,EAAD,2BAAYtJ,GAAZ,aACE,eAACuJ,GAAA,EAAD,CAAWC,OAAO,OAAOC,UAAQ,QAI/BkQ,GAAkB,WACtB,IAAQxS,EAAYwD,eAAZxD,QACFwC,EAAeX,KAIrB,OACE,gBAACY,GAAA,EAAD,CACEV,QAAS/B,EACT8D,SACEtB,EAAajc,GAAU2a,yBACnB,SAAC5oB,GAAD,gBAAWnB,EAAasK,mBAAxB,YAA8CnJ,EAA9C,eACA0Z,EALR,UAQE,eAAC+R,GAAA,EAAD,CAAW1B,OAAO,OAClB,eAAC0B,GAAA,EAAD,CAAW1B,OAAO,SAClB,eAACa,GAAA,EAAD,CAAWb,OAAO,YAAYgB,UAAQ,IACtC,eAACH,GAAA,EAAD,CAAWb,OAAO,UAAUgB,UAAQ,QAK7BoP,GAAkB,SAAC5Z,GAAD,OAC7B,eAAC,KAAD,2BACMA,GADN,IAEEoL,SAAS,EACTC,QAAS,eAAC,GAAD,IACT5b,KAAM,CAAEC,MAAO,KAAMC,MAAO,QAJ9B,SAME,eAAC,GAAD,Q,UCxCE0P,GAAYC,aAAW,CAC3Bua,eAAgB,CACdC,aAAc,QAEhBC,aAAc,CACZjY,MAAO,SAILkY,GAAY,SAACjQ,GACjB,MAEIA,EADFA,OAAUtpB,EADZ,EACYA,UAAWb,EADvB,EACuBA,KAAMH,EAD7B,EAC6BA,GAEvBmV,EAAI4N,eACJyX,EAAW,UAAMx5B,EAAN,YAAmBb,EAAK6nB,QAAQ,IAAK,KAArC,YAA6ChoB,GAC9D,OACE,0CAAUmV,EAAE,qCAAZ,aAAqDqlB,MAInDC,GAAY,SAACla,GACjB,MAIIA,EAHF+J,OACEtW,EAFJ,EAEIA,QAASG,EAFb,EAEaA,UAAWL,EAFxB,EAEwBA,WAAYW,EAFpC,EAEoCA,WAAYH,EAFhD,EAEgDA,YAG1CyM,EAAUnB,KACVxC,EAAY2F,eAEZ2X,EAAqB,CACzB,CAAEtU,MAAO,MAAO7X,MAAOyF,GACvB,CAAEoS,MAAO,QAAS7X,MAAO4F,GACzB,CAAEiS,MAAO,SAAU7X,MAAOuF,GAC1B,CAAEsS,MAAO,SAAU7X,MAAOkG,GAC1B,CAAE2R,MAAO,UAAW7X,MAAO+F,IAC3BzG,KAAI,gBAAGuY,EAAH,EAAGA,MAAH,UAAU7X,OAEZ,+BAAkB6O,EAAU,uCAAD,OAAwCgJ,KAAzDA,MAIRuU,EAAsB,CAC1B,CAAEvU,MAAO,aAAc7X,MAAOyF,GAC9B,CAAEoS,MAAO,eAAgB7X,MAAO4F,GAChC,CAAEiS,MAAO,gBAAiB7X,MAAOuF,GACjC,CAAEsS,MAAO,gBAAiB7X,MAAOkG,GACjC,CAAE2R,MAAO,iBAAkB7X,MAAO+F,IAClCzG,KAAI,gBAAGuY,EAAH,EAAGA,MAAH,UAAU7X,OAEZ,eAACkd,GAAA,EAAD,CAAuB1B,OAAQ3D,EAAOA,MAAM,KAA5BA,MAGdwU,EAAqB,CACzB,CAAExU,MAAO,UAAW7X,MAAOyF,GAC3B,CAAEoS,MAAO,YAAa7X,MAAO4F,GAC7B,CAAEiS,MAAO,aAAc7X,MAAOuF,GAC9B,CAAEsS,MAAO,aAAc7X,MAAOkG,GAC9B,CAAE2R,MAAO,cAAe7X,MAAO+F,IAC/BzG,KAAI,gBAAGuY,EAAH,EAAGA,MAAH,UAAU7X,OAEZ,eAACkd,GAAA,EAAD,CAAuB1B,OAAQ3D,EAAOA,MAAM,KAA5BA,MAIpB,OACE,eAACsQ,GAAA,EAAD,CAAgBzT,MAAO,CAAE4X,WAAY,OAAQzO,aAAc,QAA3D,SACE,eAACuK,GAAA,EAAD,CAAOhN,QAAQ,OAAf,SACE,eAAC+E,GAAA,EAAD,UACE,gBAACmI,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,CAAW7T,MAAO,CAAEZ,MAAO,OAAShB,UAAWN,EAAQqZ,iBACvD,eAACtD,GAAA,EAAD,CAAW7T,MAAO,CAAEZ,MAAO,OAAShB,UAAWN,EAAQqZ,eAAvD,SAAwEM,IACxE,eAAC5D,GAAA,EAAD,CAAW7T,MAAO,CAAEZ,MAAO,OAAShB,UAAWN,EAAQqZ,eAAvD,SAAwEO,IACxE,eAAC7D,GAAA,EAAD,CAAW7T,MAAO,CAAEZ,MAAO,OAAShB,UAAWN,EAAQqZ,eAAvD,SAAwEQ,IACxE,eAAC9D,GAAA,EAAD,CAAW7T,MAAO,CAAEZ,MAAO,OAAShB,UAAWN,EAAQqZ,2BAQ7DU,GAAc,WAClB,IAAM1d,EAAY2F,eAEZgY,EAAgB,kBACpB,eAACnE,GAAA,EAAD,UACE,gBAACC,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,CAAW7T,MAAO,CAAEZ,MAAO,SAC3B,eAACyU,GAAA,EAAD,CAAW7T,MAAO,CAAEZ,MAAO,OAA3B,SAAqCjF,EAAU,+CAC/C,eAAC0Z,GAAA,EAAD,CAAW7T,MAAO,CAAEZ,MAAO,SAC3B,eAACyU,GAAA,EAAD,CAAW7T,MAAO,CAAEZ,MAAO,SAC3B,eAACyU,GAAA,EAAD,CAAW7T,MAAO,CAAEZ,MAAO,eAKjC,OACE,eAAC2Y,GAAA,EAAD,CAAYjR,OAAO,SAAnB,SACE,gBAACI,GAAA,EAAD,CAAUsE,OAAQ,eAAC,GAAD,IAAe9E,QAAQ,OAAO3I,OAAQ,eAAC+Z,EAAD,IAAmB3L,gBAAiB,SAAA9E,GAAM,QAAMA,EAAOppB,MAA/G,UACE,eAACuqB,GAAA,EAAD,CAAW1B,OAAO,OAAO3D,MAAM,WAC/B,eAACqF,GAAA,EAAD,CAAW1B,OAAO,UAAU3D,MAAM,MAClC,eAACqF,GAAA,EAAD,CAAW1B,OAAO,OAAO3D,MAAM,MAC/B,eAACqF,GAAA,EAAD,CAAW1B,OAAO,WAAW3D,MAAM,YAMrC6U,GAAa,WACjB,IAAM7d,EAAY2F,eAclB,OACE,eAACiY,GAAA,EAAD,CAAYjR,OAAO,WAAnB,SACE,gBAACI,GAAA,EAAD,CAAUsE,OAAQ,eAAC,GAAD,IAAiB9E,QAAQ,OAAO3I,OAdjC,kBACnB,eAAC4V,GAAA,EAAD,UACE,gBAACC,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,CAAW7T,MAAO,CAAEZ,MAAO,SAC3B,eAACyU,GAAA,EAAD,CAAW7T,MAAO,CAAEZ,MAAO,OAA3B,SAAqCjF,EAAU,iDAC/C,eAAC0Z,GAAA,EAAD,CAAW7T,MAAO,CAAEZ,MAAO,SAC3B,eAACyU,GAAA,EAAD,CAAW7T,MAAO,CAAEZ,MAAO,SAC3B,eAACyU,GAAA,EAAD,CAAW7T,MAAO,CAAEZ,MAAO,eAO7B,UACE,eAACoJ,GAAA,EAAD,CAAW1B,OAAO,OAAO3D,MAAM,YAC/B,eAACqF,GAAA,EAAD,CAAW1B,OAAO,UAAU3D,MAAM,MAClC,eAACqF,GAAA,EAAD,CAAW1B,OAAO,OAAO3D,MAAM,MAC/B,eAACqF,GAAA,EAAD,CAAW1B,OAAO,WAAW3D,MAAM,YAM9B8U,GAAc,SAAC3a,GAC1B,IAAMnD,EAAY2F,eAclB,OACE,eAACiW,GAAA,EAAD,yBAAMvX,MAAO,eAAC,GAAD,KAAmBlB,GAAhC,aACE,eAACya,GAAA,EAAD,CAAYjR,OAAO,UAAnB,SACE,gBAACI,GAAA,EAAD,CAAUsE,OAAQ,eAAC,GAAD,IAAgB9E,QAAQ,OAAO3I,OAfjC,kBACpB,eAAC4V,GAAA,EAAD,UACE,gBAACC,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,CAAW7T,MAAO,CAAEZ,MAAO,QAC3B,eAACyU,GAAA,EAAD,CAAW7T,MAAO,CAAEZ,MAAO,OAA3B,SAAqCjF,EAAU,8CAC/C,eAAC0Z,GAAA,EAAD,CAAW7T,MAAO,CAAEZ,MAAO,OAA3B,SAAqCjF,EAAU,iDAC/C,eAAC0Z,GAAA,EAAD,CAAW7T,MAAO,CAAEZ,MAAO,OAA3B,SAAqCjF,EAAU,8CAC/C,eAAC0Z,GAAA,EAAD,CAAW7T,MAAO,CAAEZ,MAAO,OAA3B,SAAqCjF,EAAU,wDAQ/C,UACE,eAACqO,GAAA,EAAD,CAAW1B,OAAO,OAAO3D,MAAM,WAC/B,eAACqF,GAAA,EAAD,CAAW1B,OAAO,YAClB,eAAC0B,GAAA,EAAD,CAAW1B,OAAO,SAClB,eAAC0B,GAAA,EAAD,CAAW1B,OAAO,sB,8BC1JtBoR,GAAY,SAAC7Q,GACjB,MAA4CA,EAApCA,OAAUzpB,EAAlB,EAAkBA,KAAMC,EAAxB,EAAwBA,UAAWd,EAAnC,EAAmCA,GAC7Bod,EAAY2F,eACZ5iB,EAAOi7B,mBAAQ,kBAAQt6B,aAAqB8O,KAAsC,GAA9B9O,EAAUknB,QAAQ,IAAK,OAAW,CAAClnB,IAC7F,OACE,kCAAOsc,EAAU,gCAAjB,KAAoDvc,EAApD,IAA2DV,EAA3D,IAAkEH,MAIhEq7B,GAAc,SAAC,GAA2E,IAAzEtR,EAAwE,EAAxEA,OACf3M,EAAY2F,eAClB,EAAiByE,eAAVC,EAAP,qBACMJ,EAASC,eACT4C,EAAeX,KAErB,EAA8E2B,eAAtEprB,EAAR,EAAQA,KAAMoP,EAAd,EAAcA,IAAK2jB,EAAnB,EAAmBA,aAAcyI,EAAjC,EAAiCA,YAAa56B,EAA9C,EAA8CA,MAAgB66B,EAA9D,EAAqD5D,QACrD,EAAmChE,eAAnBtiB,EAAhB,EAAQiZ,OAAeqN,EAAvB,EAAuBA,QACvB,EAA2D6D,aAAS,CAClEx8B,KAAMwK,YAAkBqe,KACxBpoB,SAAUsqB,EAAO0R,oBACjB3T,QAAS,CACPrZ,OAAO,eACFokB,GAEL7iB,KAAMsrB,GAAe,CACnBrrB,MAAO,KACPC,MAAO,QAETC,WAAY,CACVC,KAAM,EACNC,QAAS3P,GAAS,MAbVg7B,EAAd,EAAQ57B,KAA4B67B,EAApC,EAA2BhE,QAkBrBiE,EAA0B,WAC9B,OAAQ7R,GACN,IAAK,YACH,MAAM,mBACR,IAAK,UACL,IAAK,QACH,MAAM,iBACR,QACE,MAAO,KAIb,EAA2DyR,aAAS,CAClEx8B,KAAMwK,YAAkBoyB,KACxBn8B,SAAUZ,EAAauJ,OACvB0f,QAAS,CACP7jB,QAAO,OAAEoN,QAAF,IAAEA,OAAF,EAAEA,EAAOrR,KAEjB,CACD67B,QAAuC,KAA9BD,MAPGE,EAAd,EAAQh8B,KAA4Bi8B,EAApC,EAA2BpE,QAUrBqE,EAAa,SAACC,GAA0B,IAAD,MAC3C,OAAQlS,GACN,IAAK,YACH,OAAoF,KAA7E,OAAC+R,QAAD,IAACA,GAAD,UAACA,EAAmCI,oBAApC,eAAkDhqB,SAAS+pB,IACpE,IAAK,UACH,cAAO5qB,QAAP,IAAOA,GAAP,UAAOA,EAAOjL,kBAAd,aAAO,EAAmB8L,SAAS+pB,GACrC,IAAK,UACL,IAAK,QACH,OAAwF,KAAjF,OAACH,QAAD,IAACA,GAAD,UAACA,EAAiCK,0BAAlC,eAAsDjqB,SAAS+pB,IACxE,QAEE,OADA5U,EAAO,WAAD,OAAY0C,EAAZ,+BACC,IAIPqS,EAAY,uCAAG,WAAOC,GAAP,SAAA18B,EAAA,2DACXoqB,EADW,OAEZ,cAFY,OAYZ,YAZY,OAsBZ,YAtBY,MAuBZ,UAvBY,uCAGTtC,EAAO,CACXzoB,KAAMwK,YAAkB,mBACxB/J,SAAUZ,EAAauJ,OACvB0f,QAAS,CACP7jB,QAAO,OAAEoN,QAAF,IAAEA,OAAF,EAAEA,EAAOrR,GAChBk8B,aAAcG,IAEf,CAAEtU,eAAe,IAVL,0DAaTN,EAAO,CACXzoB,KAAMwK,YAAkB,iBACxB/J,SAAUZ,EAAauJ,OACvB0f,QAAS,CACP7jB,QAAO,OAAEoN,QAAF,IAAEA,OAAF,EAAEA,EAAOrR,GAChBoG,WAAYi2B,IAEb,CAAEtU,eAAe,IApBL,2DAwBTN,EAAO,CACXzoB,KAAMwK,YAAkB,iBACxB/J,SAAUZ,EAAauJ,OACvB0f,QAAS,CACP7jB,QAAO,OAAEoN,QAAF,IAAEA,OAAF,EAAEA,EAAOrR,GAChBm8B,mBAAoBE,IAErB,CAAEtU,eAAe,IA/BL,4CAkCfV,EAAO,WAAD,OAAY0C,EAAZ,8BAlCS,QAoCnBwR,IACI5D,GACFA,IAEFoE,IAxCmB,4CAAH,sDA2CZO,EAAY,uCAAG,WAAOC,GAAP,SAAA58B,EAAA,2DACXoqB,EADW,OAEZ,cAFY,OAYZ,YAZY,OAsBZ,YAtBY,MAuBZ,UAvBY,uCAGTtC,EAAO,CACXzoB,KAAMwK,YAAkB,mBACxB/J,SAAUZ,EAAauJ,OACvB0f,QAAS,CACP7jB,QAAO,OAAEoN,QAAF,IAAEA,OAAF,EAAEA,EAAOrR,GAChBk8B,aAAcK,IAEf,CAAExU,eAAe,IAVL,0DAaTN,EAAO,CACXzoB,KAAMwK,YAAkB,iBACxB/J,SAAUZ,EAAauJ,OACvB0f,QAAS,CACP7jB,QAAO,OAAEoN,QAAF,IAAEA,OAAF,EAAEA,EAAOrR,GAChBoG,WAAYm2B,IAEb,CAAExU,eAAe,IApBL,2DAwBTN,EAAO,CACXzoB,KAAMwK,YAAkB,iBACxB/J,SAAUZ,EAAauJ,OACvB0f,QAAS,CACP7jB,QAASoN,GAASA,EAAMrR,GACxBm8B,mBAAoBI,IAErB,CAAExU,eAAe,IA/BL,4CAkCfV,EAAO,WAAD,OAAY0C,EAAZ,8BAlCS,QAoCnBwR,IACI5D,GACFA,IAEFoE,IAxCmB,4CAAH,sDAqDlB,OACE,gBAACrF,GAAA,EAAD,WACE,gBAAC7E,GAAA,EAAD,WACE,eAAC9L,GAAA,EAAD,CAAQxU,QAAQ,YACRP,UAAWkZ,EAAajc,GAAU6a,aAClC3H,QAAS,kBAdrBwa,SACAS,EAAaV,EAAY7tB,KAAI,SAACyc,GAAD,cAA0DA,QAA1D,IAA0DA,OAA1D,EAA0DA,EAAQtqB,QAW3F,SAGGod,EAAU,wCACb,eAAC2I,GAAA,EAAD,CAAQxU,QAAQ,YACRP,UAAWkZ,EAAajc,GAAU6a,aAClC3H,QAAS,kBAbrBwa,SACAW,EAAaZ,EAAY7tB,KAAI,SAACyc,GAAD,cAA0DA,QAA1D,IAA0DA,OAA1D,EAA0DA,EAAQtqB,QAU3F,SAGGod,EAAU,2CAEf,gBAACuZ,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,UACE,gBAACC,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,UACG1Z,EAAU,6CAEb,eAAC0Z,GAAA,EAAD,CAAW7T,MAAO,CAAEZ,MAAO,OAA3B,SACGjF,EAAU,sDAIjB,eAACsR,GAAA,EAAD,UACGxf,EAAIrB,KAAI,SAAC7N,GAAD,OACP,gBAAC62B,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,UACE,eAACrL,GAAA,EAAD,CAAW1B,OAAO,OAAOO,OAAQxqB,EAAKE,OAExC,eAAC82B,GAAA,EAAD,UACE,eAAC0F,GAAA,EAAD,CACExrB,UAAWkZ,EAAajc,GAAU6a,aAClCwI,QAAS0K,EAAWh8B,GACpBmhB,QACE6a,EAAWh8B,GACP,kBAAMs8B,EAAa,CAACt8B,KACpB,kBAAMo8B,EAAa,CAACp8B,WAXjBA,eAuBrBy8B,GAAoB,WACxB,IAAQnS,EAAWqJ,eAAXrJ,OACR,EAAiB9C,eAAVC,EAAP,qBACM6N,EAAUC,eACVnY,EAAY2F,eACZmH,EAAeX,KAEfmT,EAAgB,uCAAG,sBAAA/8B,EAAA,0DACb,OAAN2qB,QAAM,IAANA,OAAA,EAAAA,EAAQtkB,UAAW1B,EAAYq4B,cADZ,oBAEX,OAANrS,QAAM,IAANA,OAAA,EAAAA,EAAQtkB,UAAW1B,EAAYs4B,OAFd,gCAGbnV,EAAO,CACXzoB,KAAMwK,YAAkB,cACxB/J,SAAUZ,EAAauJ,OACvB0f,QAAS,CACP7jB,QAAO,OAAEqmB,QAAF,IAAEA,OAAF,EAAEA,EAAQtqB,KAElB,CAAE+nB,eAAe,IATD,6CAYbN,EAAO,CACXzoB,KAAMwK,YAAkB,YACxB/J,SAAUZ,EAAauJ,OACvB0f,QAAS,CACP7jB,QAAO,OAAEqmB,QAAF,IAAEA,OAAF,EAAEA,EAAQtqB,KAElB,CAAE+nB,eAAe,IAlBD,OAoBrBuN,IApBqB,2CAAH,qDAwBtB,OACE,uCACE,eAAChH,GAAA,EAAD,IACA,gBAAC7I,GAAA,EAAD,CAAKxW,EAAG,EAAGoW,QAAQ,OAAO6G,eAAe,WAAzC,UACE,eAACnG,GAAA,EAAD,CAAQxU,QAAQ,YACR4P,QAASub,EACTl8B,MAAM,UACNyiB,MAAO,CAAE4Z,YAAa,OACtB7rB,UAAWkZ,EAAajc,GAAU6a,eAAsB,OAANwB,QAAM,IAANA,OAAA,EAAAA,EAAQtkB,UAAW1B,EAAYq4B,cAJzF,UAKS,OAANrS,QAAM,IAANA,OAAA,EAAAA,EAAQtkB,UAAW1B,EAAY2B,SAC9BmX,EAAU,qCACVA,EAAU,yCAEd,eAAC0f,GAAA,EAAD,CAAYvrB,QAAQ,YACR0c,SAAS,UACT3D,OAAQA,EACRtZ,UAAWkZ,EAAajc,GAAU6a,sBAMzCiU,GAAY,SAACxc,GACxB,IAAMnD,EAAY2F,eACVkL,EAAa1N,EAAb0N,SACR,OACE,eAAC+K,GAAA,EAAD,2BAAUzY,GAAV,IAAiBkB,MAAO,eAAC,GAAD,IAAekK,SAAS,EAAhD,SACE,gBAACqO,GAAA,EAAD,WACE,gBAACN,GAAA,EAAD,CAAKtT,MAAOhJ,EAAU,iCAAtB,UACE,eAACqO,GAAA,EAAD,CAAW1B,OAAO,KAAK3D,MAAM,OAC7B,eAACqF,GAAA,EAAD,CAAW1B,OAAO,SAClB,eAACa,GAAA,EAAD,CAAWb,OAAO,YAAYgB,UAAQ,IACtC,eAACH,GAAA,EAAD,CAAWb,OAAO,UAAUgB,UAAQ,IACpC,eAACX,GAAA,EAAD,CAAe3qB,SAAS,SAAS2mB,MAAOhJ,EAAU,kCAChDiN,OAAQ,SAACvc,GAAD,OACLsP,EAAU,+BAAD,cAAgCtP,QAAhC,IAAgCA,OAAhC,EAAgCA,EAAG9H,OAAOukB,mBACxD,eAAC,GAAD,OAEF,eAACmP,GAAA,EAAD,CAAKtT,MAAOhJ,EAAU,+BAAtB,SACE,qCACE,eAACqI,GAAA,EAAD,CAAK+T,SAAU,EAAf,SACE,eAACxJ,GAAA,EAAD,CAAyBzhB,MAAO1P,EAAa6J,MAA7C,SACE,eAAC,KAAD,CAAMulB,SAAUA,EAAUpC,UAAU,EAAOpK,MAAM,IAC/CpR,QAAS,GAAIF,WAAY,eAAC2b,GAAA,EAAD,CAAYC,mBAAoB,CAAC,GAAI,GAAI,MAClEH,QAAS,CACP,eAAC9B,GAAA,EAAD,CAAWC,OAAO,OAAOC,UAAQ,IACjC,eAACF,GAAA,EAAD,CAAWC,OAAO,gBAJtB,SAME,eAAC,GAAD,CAAaA,OAAO,oBAM9B,eAAC2P,GAAA,EAAD,CAAKtT,MAAOhJ,EAAU,iCAAtB,SACE,qCACE,eAACqI,GAAA,EAAD,CAAK+T,SAAU,EAAf,SACE,eAACxJ,GAAA,EAAD,CAAyBzhB,MAAO1P,EAAamJ,QAA7C,SACE,eAAC,KAAD,CAAMimB,SAAUA,EAAUpC,UAAU,EAAOpK,MAAM,IAC/CpR,QAAS,GAAIF,WAAY,eAAC2b,GAAA,EAAD,CAAYC,mBAAoB,CAAC,GAAI,GAAI,MAClEH,QAAS,CACP,eAAC9B,GAAA,EAAD,CAAWC,OAAO,OAAOC,UAAQ,IACjC,eAACF,GAAA,EAAD,CAAWC,OAAO,gBAJtB,SAME,eAAC,GAAD,CAAaA,OAAO,sBAM9B,eAAC2P,GAAA,EAAD,CAAKtT,MAAOhJ,EAAU,iCAAtB,SACE,qCACE,eAACqI,GAAA,EAAD,CAAK+T,SAAU,EAAf,SACE,eAACxJ,GAAA,EAAD,CAAyBzhB,MAAO1P,EAAa2J,QAA7C,SACE,eAAC,KAAD,CAAMylB,SAAUA,EAAUpC,UAAU,EAAOpK,MAAM,IAC/CpR,QAAS,GAAIF,WAAY,eAAC2b,GAAA,EAAD,CAAYC,mBAAoB,CAAC,GAAI,GAAI,GAAI,OACtEH,QAAS,CACP,eAAC9B,GAAA,EAAD,CAAWC,OAAO,OAAOC,UAAQ,KAHrC,SAKE,eAAC,GAAD,CAAaD,OAAO,sBAM9B,eAAC2P,GAAA,EAAD,CAAKtT,MAAOhJ,EAAU,mCAAtB,SACE,qCACE,eAACqI,GAAA,EAAD,CAAK+T,SAAU,EAAf,SACE,eAACxJ,GAAA,EAAD,CAAyBzhB,MAAO1P,EAAa6I,UAA7C,SACE,eAAC,KAAD,CAAMumB,SAAUA,EAAUpC,UAAU,EAAOpK,MAAM,IAC/CpR,QAAS,GAAIF,WAAY,eAAC2b,GAAA,EAAD,CAAYC,mBAAoB,CAAC,GAAI,GAAI,GAAI,OACtEH,QAAS,CACP,eAAC9B,GAAA,EAAD,CAAWC,OAAO,OAAOC,UAAQ,KAHrC,SAKE,eAAC,GAAD,CAAaD,OAAO,+B,4DC7VhCiT,GAAY,SAAC1S,GACjB,MAA4CA,EAApCA,OAAUzpB,EAAlB,EAAkBA,KAAMC,EAAxB,EAAwBA,UAAWd,EAAnC,EAAmCA,GAC7Bod,EAAY2F,eACZ5iB,EAAOi7B,mBAAQ,kBAAQt6B,aAAqB8O,KAAsC,GAA9B9O,EAAUknB,QAAQ,IAAK,OAAW,CAAClnB,IAC7F,OACE,kCAAOsc,EAAU,gCAAjB,KAAoDvc,EAApD,IAA2DV,EAA3D,IAAkEH,MAIhEi9B,GAAc,SAAC1c,GAAD,OAClB,gBAAC,KAAD,2BAAaA,GAAb,cACE,eAAC2c,GAAA,EAAD,IACA,eAAClP,GAAA,EAAD,CAAY5H,MAAM,eAAerG,KAAM,eAACod,GAAA,EAAD,WAI9BC,GAAY,SAAC7c,GACxB,IAAMnD,EAAY2F,eAClB,OACE,eAACsa,GAAA,EAAD,2BAAU9c,GAAV,IAAiBkB,MAAO,eAAC,GAAD,IAAekK,SAAS,EAAhD,SACE,gBAAC2R,GAAA,EAAD,CAAYC,SAAS,OAAOC,QAAS,eAAC,GAAD,IAArC,UACE,eAAC/R,GAAA,EAAD,CAAW1B,OAAO,KAAK3D,MAAM,OAC7B,eAAC0D,GAAA,EAAD,CAAWC,OAAO,SAClB,eAAC0T,GAAA,EAAD,CAAe1T,OAAO,cACtB,eAAC0T,GAAA,EAAD,CAAe1T,OAAO,YACtB,eAACK,GAAA,EAAD,CAAe3qB,SAAS,SAAS2mB,MAAOhJ,EAAU,kCAChDiN,OAAQ,SAACvc,GAAD,OACLsP,EAAU,+BAAD,cAAgCtP,QAAhC,IAAgCA,OAAhC,EAAgCA,EAAG9H,OAAOukB,0BClB1DmT,GAAmB,WACvB,MAGIxS,eAFFxD,EADF,EACEA,QACgBjN,EAFlB,EAEEoY,aAAgBpY,KAEZtF,EAAI4N,eACJjD,EAAQqL,eACRwS,EAActS,aAAcvL,EAAMwL,YAAYC,KAAK,OACzD,OACE,uCACG9Q,GACC,eAACgL,GAAA,EAAD,CAAKqN,EAAG,EAAR,SACE,eAACvR,GAAA,EAAD,CAAYhQ,QAAQ,KAAKyhB,WAAS,EAAlC,SACG7d,EAAE,4CAA6C,CAAEsF,aAGxD,eAAC6T,GAAA,EAAD,IACA,gBAACnE,GAAA,EAAD,CACEV,QAAS/B,EACT8D,SAAU,SAACxrB,GAAD,gBAAWnB,EAAa+I,iBAAxB,YAA4C5H,EAA5C,UAFZ,UAIE,eAACyrB,GAAA,EAAD,CAAW1B,OAAO,cAClB,eAAC0B,GAAA,EAAD,CAAW1B,OAAO,aACjB4T,GACC,eAACvT,GAAA,EAAD,CAA6BL,OAAO,QAClC3D,MAAM,gDACNiE,OAAQ,SAACC,GAAD,OACA,OAANA,QAAM,IAANA,OAAA,EAAAA,EAAQroB,OACN,eAAC,GAAD,CAAW8nB,OAAO,UAClB,eAAC,GAAD,CAAWA,OAAO,uBAExB4T,GAAe,eAAC,GAAD,CAAW5T,OAAO,WACjC4T,GAAe,eAAC,GAAD,CAAW5T,OAAO,0BAM9B6T,GAAmB,SAACrd,GAAD,OAC9B,eAAC,KAAD,yBACEsL,UAAU,GACNtL,GAFN,IAGEvQ,KAAM,CAAEC,MAAO,WAAYC,MAAO,OAClC0b,QAAS,CACP,eAAC9B,GAAA,EAAD,CAAWC,OAAO,cAClB,eAACD,GAAA,EAAD,CAAWC,OAAO,aAClB,eAACD,GAAA,EAAD,CAAWC,OAAO,UAClB,eAACD,GAAA,EAAD,CAAWC,OAAO,mBAClB,eAACD,GAAA,EAAD,CAAWC,OAAO,UATtB,SAYE,eAAC,GAAD,QC5DE8T,GAAc,WAClB,MAAsB3S,eAAdprB,EAAR,EAAQA,KAAMoP,EAAd,EAAcA,IACRiY,EAAUC,eACVhK,EAAY2F,eAClB,OACE,eAAC2T,GAAA,EAAD,UACE,gBAACC,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,UACE,gBAACC,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,UAAY1Z,EAAU,uCACtB,eAAC0Z,GAAA,EAAD,UAAY1Z,EAAU,kCACtB,eAAC0Z,GAAA,EAAD,UAAY1Z,EAAU,gDAG1B,eAACsR,GAAA,EAAD,UACGxf,EAAIrB,KAAI,SAAA7N,GAAE,OACT,gBAAC62B,GAAA,EAAD,CAAmB5T,MAAO,CAAE8T,OAAQ,WAApC,UACE,eAACD,GAAA,EAAD,CAAW3V,QAAS,kBAClBgG,EAAQ1W,KAAK,CAAEyX,SAAS,IAAD,OAAMrpB,EAAamK,eAAnB,YAAqChJ,EAArC,YADzB,SAGE,eAACoqB,GAAA,EAAD,CAAeE,OAAQxqB,EAAKE,GAAKqqB,OAAQ,SAACC,GAAD,uBACpCA,QADoC,IACpCA,OADoC,EACpCA,EAAQrmB,QAD4B,oBAChBqmB,QADgB,IAChBA,OADgB,EAChBA,EAAQtpB,UADQ,mBACKspB,QADL,IACKA,OADL,EACKA,EAAQ9Y,eAAewW,QAAQ,IAAK,KAAKoF,UAAU,EAAG,UAGtG,eAAC0J,GAAA,EAAD,CAAW3V,QAAS,kBAClBgG,EAAQ1W,KAAK,CAAEyX,SAAS,IAAD,OAAMrpB,EAAamK,eAAnB,YAAqChJ,EAArC,YADzB,SAGE,eAACyrB,GAAA,EAAD,CAAWnB,OAAQxqB,EAAKE,GAAK+pB,OAAO,SAEtC,eAAC+M,GAAA,EAAD,CAAW3V,QAAS,kBAClBgG,EAAQ1W,KAAK,CAAEyX,SAAS,IAAD,OAAMrpB,EAAamK,eAAnB,YAAqChJ,EAArC,YADzB,SAGE,eAACyrB,GAAA,EAAD,CAAWnB,OAAQxqB,EAAKE,GAAK+pB,OAAO,oBAhBzB/pB,cA0Bd89B,GAAc,SAACvd,GAC1B,IAAMT,EAAQqL,eACd,OACE,eAAC,KAAD,yBACE9a,QAAS,GACTwb,UAAU,EACV1b,WACEkb,aAAcvL,EAAMwL,YAAY4L,GAAG,OACjC,eAACpL,GAAA,EAAD,CAAYC,mBAAoB,CAAC,GAAI,GAAI,OAEzC,eAAC,GAAD,IAGJ/b,KAAM,CAAEC,MAAO,KAAMC,MAAO,SACxBqQ,GAXN,aAaE,eAAC,GAAD,QC5CAwd,GAAuB,WAC3B,MAA6BpK,eAArBrJ,EAAR,EAAQA,OAAQ2D,EAAhB,EAAgBA,SAChB,OACE,eAACxI,GAAA,EAAD,CAAK+T,SAAU,EAAf,SACE,eAACxJ,GAAA,EAAD,CAAyBzhB,MAAO1P,EAAa2I,SAA7C,SACE,eAAC,GAAD,CACEymB,SAAUA,EACVxf,OAAQ,CAAEzO,GAAE,OAAEsqB,QAAF,IAAEA,OAAF,EAAEA,EAAQhkB,YAAYyH,KAAK,MACvC6d,aAASlS,EACTiS,SAAS,EACTlK,MAAM,WAOVuc,GAAmB,WACvB,MAA6BrK,eAArBrJ,EAAR,EAAQA,OAAQ2D,EAAhB,EAAgBA,SAChB,OACE,eAACxI,GAAA,EAAD,CAAK+T,SAAU,EAAf,SACE,eAACxJ,GAAA,EAAD,CAAyBzhB,MAAO1P,EAAaqK,YAA7C,SACE,eAAC,GAAD,CACE+kB,SAAUA,EACVxf,OAAQ,CAAEpO,UAAS,OAAEiqB,QAAF,IAAEA,OAAF,EAAEA,EAAQhkB,YAAYyH,KAAK,MAC9C6d,aAASlS,EACTiS,SAAS,EACTlK,MAAM,WAOVwc,GAAe,WACnB,IAAQ3T,EAAWqJ,eAAXrJ,OACFlN,EAAY2F,eACZmH,EAAeX,KACf2U,EAAiB9C,mBAAQ,kBAAY,OAAN9Q,QAAM,IAANA,OAAA,EAAAA,EAAQhkB,YAAY3F,QAAS,IAAG,CAAC2pB,IACtE,OACE,gBAAC0P,GAAA,EAAD,WACE,gBAACN,GAAA,EAAD,CAAKtT,MAAOhJ,EAAU,2CAAtB,UACE,eAACqO,GAAA,EAAD,CACE1B,OAAO,YACP3D,MAAM,gDAER,eAACqF,GAAA,EAAD,CACE1B,OAAO,WACP3D,MAAM,gDAED,OAANkE,QAAM,IAANA,OAAA,EAAAA,EAAQrnB,UACP,eAACwoB,GAAA,EAAD,CACE1B,OAAO,UACP3D,MAAM,+CAGH,OAANkE,QAAM,IAANA,OAAA,EAAAA,EAAQpnB,YACP,uCAC6C,IAA1ConB,EAAOpnB,UAAUkH,MAAM,KAAK,GAAGzJ,QAAgB,EAChD,eAACiqB,GAAA,EAAD,CACEb,OAAO,YACP3D,MAAM,oDAIL,OAANkE,QAAM,IAANA,OAAA,EAAAA,EAAQnnB,eACP,eAACsoB,GAAA,EAAD,CACE1B,OAAO,eACP3D,MAAM,oDAGH,OAANkE,QAAM,IAANA,OAAA,EAAAA,EAAQroB,OACP,eAACwpB,GAAA,EAAD,CACE1B,OAAO,QACP3D,MAAM,4CAGR,eAACqF,GAAA,EAAD,CACE1B,OAAO,iBACP3D,MAAM,sDAGH,OAANkE,QAAM,IAANA,OAAA,EAAAA,EAAQhnB,cACP,eAACmoB,GAAA,EAAD,CACE1B,OAAO,cACP3D,MAAM,mDAGH,OAANkE,QAAM,IAANA,OAAA,EAAAA,EAAQ/mB,SACP,eAAC6mB,GAAA,EAAD,CACEhE,MAAM,2CACNiE,OAAQ,SAACvc,GAAD,OACNA,GAAKsP,EAAU,0BAAD,OAA2BtP,EAAEvK,eAKlD26B,GACC,eAACxE,GAAA,EAAD,CAAKtT,MAAOhJ,EAAU,4CAAtB,SACE,eAAC,GAAD,MAGH8gB,GAAkBhU,EAAajc,GAAU0a,YACxC,eAAC+Q,GAAA,EAAD,CAAKtT,MAAOhJ,EAAU,wCAAtB,SACE,eAAC,GAAD,UAOG+gB,GAAsB,SAAC5d,GAAD,OACjC,eAACyY,GAAA,EAAD,2BAAUzY,GAAV,aACE,eAAC,GAAD,QCjIS6d,GAAW,SAAC7d,GACvB,IAAMT,EAAQqL,eACRC,EAAcC,aAAcvL,EAAMwL,YAAYC,KAAK,OACzD,OACE,eAAC,KAAD,2BACMhL,GADN,IAEElQ,QAAS,GACTF,WAAY,eAAC2b,GAAA,EAAD,CAAYC,mBAAoB,CAAC,GAAI,GAAI,MACrDF,UAAU,EACVD,QAAS,CACP,eAAC9B,GAAA,EAAD,CAAWC,OAAO,OAAOC,UAAQ,IACjC,eAACF,GAAA,EAAD,CAAWC,OAAO,gBAPtB,SAUE,qCACE,gBAACI,GAAA,EAAD,CACEtM,KAAK,QACL2N,SAAU,SAACxrB,GAAD,gBAAWnB,EAAa6J,MAAxB,YAAiC1I,EAAjC,UAFZ,UAIE,eAACyrB,GAAA,EAAD,CAAW1B,OAAO,KAAK3D,MAAM,OAC7B,eAACqF,GAAA,EAAD,CAAW1B,OAAO,SAClB,eAAC0B,GAAA,EAAD,CAAW1B,OAAO,aAAa+E,UAAU,KACvC1D,GACA,eAACK,GAAA,EAAD,CAAW1B,OAAO,WAAW+E,UAAU,KACvC1D,GACA,eAACK,GAAA,EAAD,CAAW1B,OAAO,iBAAiB+E,UAAU,a,wCCV5CuP,GAAgB,SAAC,GAYvB,IAXLC,EAWI,EAXJA,QACAC,EAUI,EAVJA,OACAxU,EASI,EATJA,OACA3H,EAQI,EARJA,KACArjB,EAOI,EAPJA,OAQMqe,EAAY2F,eAClB,OACE,gBAACyb,GAAA,EAAD,CAAQpc,KAAMA,EAAd,UACE,eAACqc,GAAA,EAAD,UACGrhB,EAAU,mCAAD,OAAoC2M,EAApC,YAA8ChrB,MAE1D,gBAAC2/B,GAAA,EAAD,WACE,eAAC3Y,GAAA,EAAD,CAAQxU,QAAQ,YAAY4P,QAASmd,EAArC,SACGlhB,EAAU,oBAEb,eAAC2I,GAAA,EAAD,CAAQxU,QAAQ,YAAY4P,QAASod,EAArC,SACGnhB,EAAU,yBAORuhB,GAAgB,SAAC,GAMvB,IALLvc,EAKI,EALJA,KACAwc,EAII,EAJJA,MAKA,EAA0Bnc,mBAAS,IAAnC,oBAAOlU,EAAP,KAAcswB,EAAd,KACA,EAA0Bpc,oBAAS,GAAnC,oBAAOpE,EAAP,KAAckJ,EAAd,KACA,EAAkC9E,mBAAS,IAA3C,oBAAOqc,EAAP,KAAkBC,EAAlB,KACA,EAAsCtc,oBAAS,GAA/C,oBAAOuc,EAAP,KAAoBC,EAApB,KACgBC,EAASvL,eAAjBrJ,OACR,EAAiB9C,eAAVC,EAAP,qBACM6N,EAAUC,eACVnY,EAAY2F,eAEZoc,EAAc,WAClBN,EAAS,IACTtX,GAAS,GACTwX,EAAa,IACbH,KAGIQ,EAAuB,uCAAG,sBAAAz/B,EAAA,yDAC9Bs/B,GAAe,GACyB,IAApC1wB,EAAMyZ,QAAQ,MAAO,IAAIrnB,OAFC,gBAG5B4mB,GAAS,GACTwX,EACE3hB,EAAU,sDALgB,0BAOnB7O,EAAMyZ,QAAQ,MAAO,IAAIrnB,SAAW4N,EAAM5N,OAPvB,iBAQ5B4mB,GAAS,GACTwX,EACE3hB,EAAU,qDAVgB,yCAatBqK,EACJ,CACEzoB,KAAMwK,YAAkB,qBACxB/J,SAAUZ,EAAa6J,MACvBof,QAAS,CACP7M,OAAM,OAAEikB,QAAF,IAAEA,OAAF,EAAEA,EAAMl/B,GACdqb,eAAgB9M,IAGpB,CAAEwZ,eAAe,IAtBS,QAwB5B8W,EAAS,IACTtX,GAAS,GACTwX,EAAa,IACbzJ,IACAsJ,IA5B4B,4CAAH,qDAgC7B,OACE,gBAACJ,GAAA,EAAD,CAAQpc,KAAMA,EAAMid,QAASF,EAA7B,UACE,eAAC,GAAD,CACE/c,KAAM4c,EACNT,OAAQ,kBAAMU,GAAe,IAC7BX,QAASc,EACTrV,OAAO,WACPhrB,OAAO,QAET,eAAC0/B,GAAA,EAAD,UACGrhB,EAAU,4CAEb,eAACkiB,GAAA,EAAD,UACE,eAAC,KAAD,CACE/tB,QAAQ,WACRhD,MAAOA,EACPwe,SAAU,SAACO,GAAD,OAAOuR,EAASvR,EAAE9O,OAAOjQ,QACnCgxB,WAAS,EACTlhB,MAAOA,EACPmP,WAAYsR,MAGhB,eAACJ,GAAA,EAAD,UACE,gBAAC7M,GAAA,EAAD,WACE,eAAC9L,GAAA,EAAD,CAAQxU,QAAQ,YAAY4P,QAAS,kBAAM8d,GAAe,IAA1D,SACG7hB,EAAU,oBAEb,eAAC2I,GAAA,EAAD,CAAQxU,QAAQ,YAAY4P,QAASge,EAArC,SACG/hB,EAAU,2BAQVoiB,GAAY,SAAC,GAMnB,IALLpd,EAKI,EALJA,KACAwc,EAII,EAJJA,MAKA,EAA0Bnc,mBAAS,IAAnC,oBAAOlU,EAAP,KAAcswB,EAAd,KACA,EAA0Bpc,oBAAS,GAAnC,oBAAOpE,EAAP,KAAckJ,EAAd,KACA,EAAkC9E,mBAAS,IAA3C,oBAAOqc,EAAP,KAAkBC,EAAlB,KACA,EAAsCtc,oBAAS,GAA/C,oBAAOuc,EAAP,KAAoBC,EAApB,KACgBC,EAASvL,eAAjBrJ,OACR,EAAiB9C,eAAVC,EAAP,qBACM6N,EAAUC,eACVnY,EAAY2F,eAEZoc,EAAc,WAClBN,EAAS,IACTtX,GAAS,GACTwX,EAAa,IACbH,KAGIa,EAAU,uCAAG,sBAAA9/B,EAAA,yDACjBs/B,GAAe,GACyB,IAApC1wB,EAAMyZ,QAAQ,MAAO,IAAIrnB,OAFZ,gBAGf4mB,GAAS,GACTwX,EAAa3hB,EAAU,kDAJR,0BAKN7O,EAAMyZ,QAAQ,MAAO,IAAIrnB,SAAW4N,EAAM5N,OALpC,iBAMf4mB,GAAS,GACTwX,EAAa3hB,EAAU,iDAPR,yCASTqK,EACJ,CACEzoB,KAAMwK,YAAkB,QACxB/J,SAAUZ,EAAa6J,MACvBof,QAAS,CACP7M,OAAM,OAAEikB,QAAF,IAAEA,OAAF,EAAEA,EAAMl/B,GACdkb,SAAU3M,IAGd,CAAEwZ,eAAe,IAlBJ,QAoBfoX,IACA7J,IArBe,4CAAH,qDAyBhB,OACE,gBAACkJ,GAAA,EAAD,CAAQpc,KAAMA,EAAMid,QAASF,EAA7B,UACE,eAAC,GAAD,CACE/c,KAAM4c,EACNT,OAAQ,kBAAMU,GAAe,IAC7BX,QAASmB,EACT1V,OAAO,OACPhrB,OAAO,QAET,eAAC0/B,GAAA,EAAD,UACGrhB,EAAU,wCAEb,eAACkiB,GAAA,EAAD,UACE,eAAC,KAAD,CACE/tB,QAAQ,WACRhD,MAAOA,EACPwe,SAAU,SAACO,GAAD,OAAOuR,EAASvR,EAAE9O,OAAOjQ,QACnCgxB,WAAS,EACTlhB,MAAOA,EACPmP,WAAYsR,MAGhB,eAACJ,GAAA,EAAD,UACE,gBAAC7M,GAAA,EAAD,WACE,eAAC9L,GAAA,EAAD,CAAQxU,QAAQ,YAAY4P,QAAS,kBAAM8d,GAAe,IAA1D,SACG7hB,EAAU,oBAEb,eAAC2I,GAAA,EAAD,CAAQxU,QAAQ,YAAY4P,QAASge,EAArC,SACG/hB,EAAU,2BCnMjB+d,GAAY,SAACr7B,GACjB,IACUo/B,EACNp/B,EADFwqB,OAEIlN,EAAY2F,eAClB,OACE,kCACG3F,EAAU,+BADb,YAC+C8hB,QAD/C,IAC+CA,OAD/C,EAC+CA,EAAMl/B,GADrD,YAC2Dk/B,QAD3D,IAC2DA,OAD3D,EAC2DA,EAAMr+B,SAK/D6+B,GAAiB,WACrB,IAAgBR,EAASvL,eAAjBrJ,OACR,EAAkD7H,oBAAS,GAA3D,oBAAOkd,EAAP,KAA0BC,EAA1B,KACA,EAA0Cnd,oBAAS,GAAnD,oBAAOod,EAAP,KAAsBC,EAAtB,KACA,EAAgDrd,oBAAS,GAAzD,oBAAOsd,EAAP,KAAyBC,EAAzB,KACA,EAAkDvd,oBAAS,GAA3D,oBAAOwd,EAAP,KAA0BC,EAA1B,KACA,EAAiB1Y,eAAVC,EAAP,qBACM6N,EAAUC,eACVnY,EAAY2F,eAEZqc,EAAuB,uCAAG,sBAAAz/B,EAAA,6DAC9BugC,GAAqB,GADS,SAExBzY,EACJ,CACEzoB,KAAMwK,YAAkB,uBACxB/J,SAAUZ,EAAa6J,MACvBof,QAAS,CACP7M,OAAM,OAAEikB,QAAF,IAAEA,OAAF,EAAEA,EAAMl/B,KAGlB,CAAE+nB,eAAe,IAVW,OAY9BuN,IAZ8B,2CAAH,qDAoBvBmK,EAAU,uCAAG,sBAAA9/B,EAAA,6DACjBqgC,GAAoB,GADH,SAEXvY,EACJ,CACEzoB,KAAMwK,YAAkB,UACxB/J,SAAUZ,EAAa6J,MACvBof,QAAS,CACP7M,OAAM,OAAEikB,QAAF,IAAEA,OAAF,EAAEA,EAAMl/B,KAGlB,CAAE+nB,eAAe,IAVF,OAYjBuN,IAZiB,2CAAH,qDAoBhB,OACE,uCACE,eAAChH,GAAA,EAAD,IACA,eAAC,GAAD,CACElM,KAAMud,EACNf,MAAO,kBAAMgB,GAAqB,MAEpC,eAAC,GAAD,CAAWxd,KAAMyd,EAAejB,MAAO,kBAAMkB,GAAiB,MAC9D,eAAC,GAAD,CACE1d,KAAM2d,EACNzB,QAASmB,EACT1V,OAAO,OACPwU,OAAQ,kBAAMyB,GAAoB,IAClCjhC,OAAO,WAET,eAAC,GAAD,CACEqjB,KAAM6d,EACN3B,QAASc,EACTrV,OAAO,WACPwU,OAAQ,kBAAM2B,GAAqB,IACnCnhC,OAAO,WAET,gBAAC0mB,GAAA,EAAD,CAAKxW,EAAG,EAAGoW,QAAQ,OAAO6G,eAAe,WAAzC,UACE,eAACnG,GAAA,EAAD,CACExU,QAAQ,YACR4P,QAlD8B,YACpC,OAAI+d,QAAJ,IAAIA,OAAJ,EAAIA,EAAM7jB,gBAAgB6kB,GAAqB,GAC1CN,GAAqB,IAiDpBp/B,MAAM,UACNyiB,MAAO,CAAE4Z,YAAa,OAJxB,UAMO,OAAJqC,QAAI,IAAJA,OAAA,EAAAA,EAAM7jB,gBACH+B,EAAU,+CACVA,EAAU,+CAEhB,eAAC2I,GAAA,EAAD,CACExU,QAAQ,YACR4P,QAxCiB,YACvB,OAAI+d,QAAJ,IAAIA,OAAJ,EAAIA,EAAMluB,UAAUgvB,GAAoB,GACnCF,GAAiB,IAuChBt/B,MAAM,UACNyiB,MAAO,CAAE4Z,YAAa,OAJxB,UAMO,OAAJqC,QAAI,IAAJA,OAAA,EAAAA,EAAMluB,UACHoM,EAAU,kCACVA,EAAU,kCAEhB,eAAC0f,GAAA,EAAD,CAAY7O,SAAS,SAAS3D,OAAQ4U,EAAM3tB,QAAQ,qBAMtD8pB,GAAc,SAAC,GAAoD,IAAlDtR,EAAiD,EAAjDA,OACrB,EAA4FmB,eAA9EiV,EAAd,EAAQrgC,KAAoBoP,EAA5B,EAA4BA,IAAK2jB,EAAjC,EAAiCA,aAAcyI,EAA/C,EAA+CA,YAAa56B,EAA5D,EAA4DA,MAAgB66B,EAA5E,EAAmE5D,QACnE,EAAkChE,eAAlBuL,EAAhB,EAAQ5U,OAAcqN,EAAtB,EAAsBA,QACtB,EAA2D6D,aAAS,CAClEx8B,KAAMwK,YAAkBqe,KACxBpoB,SAAUsqB,EAAO0R,oBACjB3T,QAAS,CACPrZ,OAAO,eACFokB,GAEL7iB,KAAMsrB,GAAe,CACnBrrB,MAAO,KACPC,MAAO,QAETC,WAAY,CACVC,KAAM,EACNC,QAAS3P,GAAS,MAbVg7B,EAAd,EAAQ57B,KAA4B67B,EAApC,EAA2BhE,QAiBrBva,EAAY2F,eAClB,EAAiByE,eAAVC,EAAP,qBACMJ,EAASC,eACT4C,EAAeX,KAEfyS,EAAa,SAACC,GAA0B,IAAD,IAC3C,OAAQlS,GACN,IAAK,SACH,cAAOmV,QAAP,IAAOA,GAAP,UAAOA,EAAMv4B,iBAAb,aAAO,EAAiBuL,SAAS+pB,GACnC,IAAK,YACH,cAAOiD,QAAP,IAAOA,GAAP,UAAOA,EAAMxjB,oBAAb,aAAO,EAAoBxJ,SAAS+pB,GACtC,QAEE,OADA5U,EAAO,WAAD,OAAY0C,EAAZ,+BACC,IAIPqS,EAAY,uCAAG,WAAOp8B,GAAP,SAAAL,EAAA,2DACXoqB,EADW,OAEZ,WAFY,OAeZ,cAfY,sCAGTtC,EACJ,CACEzoB,KAAMwK,YAAkB,gBACxB/J,SAAUZ,EAAa6J,MACvBof,QAAS,CACP7M,OAAM,OAAEikB,QAAF,IAAEA,OAAF,EAAEA,EAAMl/B,GACd2G,UAAW3G,IAGf,CAAE+nB,eAAe,IAZJ,0DAgBTN,EACJ,CACEzoB,KAAMwK,YAAkB,mBACxB/J,SAAUZ,EAAa6J,MACvBof,QAAS,CACP7M,OAAM,OAAEikB,QAAF,IAAEA,OAAF,EAAEA,EAAMl/B,GACd0b,aAAc1b,IAGlB,CAAE+nB,eAAe,IAzBJ,0CA6BfV,EAAO,WAAD,OAAY0C,EAAZ,8BA7BS,QA+BnBwR,IACI5D,GACFA,IAjCiB,4CAAH,sDAqCZ2E,EAAY,uCAAG,WAAOt8B,GAAP,SAAAL,EAAA,2DACXoqB,EADW,OAEZ,WAFY,OAeZ,cAfY,sCAGTtC,EACJ,CACEzoB,KAAMwK,YAAkB,gBACxB/J,SAAUZ,EAAa6J,MACvBof,QAAS,CACP7M,OAAM,OAAEikB,QAAF,IAAEA,OAAF,EAAEA,EAAMl/B,GACd2G,UAAW3G,IAGf,CAAE+nB,eAAe,IAZJ,0DAgBTN,EACJ,CACEzoB,KAAMwK,YAAkB,mBACxB/J,SAAUZ,EAAa6J,MACvBof,QAAS,CACP7M,OAAM,OAAEikB,QAAF,IAAEA,OAAF,EAAEA,EAAMl/B,GACd0b,aAAc1b,IAGlB,CAAE+nB,eAAe,IAzBJ,0CA6BfV,EAAO,WAAD,OAAY0C,EAAZ,8BA7BS,QA+BnBwR,IACI5D,GACFA,IAjCiB,4CAAH,sDA+ClB,OACE,gBAACjB,GAAA,EAAD,WACE,gBAAC7E,GAAA,EAAD,WACE,eAAC9L,GAAA,EAAD,CACExU,QAAQ,YACRP,SAAqB,WAAX+Y,IAAwBG,EAAajc,GAAU6a,aACzD3H,QAAS,kBAffwa,SACAS,EAAaV,EAAY7tB,KAAI,SAACyc,GAAD,cAAoCA,QAApC,IAAoCA,OAApC,EAAoCA,EAAQtqB,QAWrE,SAKGod,EAAU,uCAEb,eAAC2I,GAAA,EAAD,CACExU,QAAQ,YACRP,SAAqB,WAAX+Y,IAAwBG,EAAajc,GAAU6a,aACzD3H,QAAS,kBAjBfwa,SACAW,EAAaZ,EAAY7tB,KAAI,SAACyc,GAAD,cAAoCA,QAApC,IAAoCA,OAApC,EAAoCA,EAAQtqB,QAarE,SAKGod,EAAU,0CAGf,gBAACuZ,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,UACE,gBAACC,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,UAEM1Z,EADQ,cAAX2M,EACa,yCACA,4CAEhB,eAAC+M,GAAA,EAAD,CAAW7T,MAAO,CAAEZ,MAAO,OAA3B,SACGjF,EAAU,qDAIjB,eAACsR,GAAA,EAAD,UACGxf,EAAIrB,KAAI,SAAC7N,GAAD,OACP,gBAAC62B,GAAA,EAAD,WACE,gBAACC,GAAA,EAAD,WACc,cAAX/M,GACC,eAAC0B,GAAA,EAAD,CAAW1B,OAAO,OAAOO,OAAQ6V,EAAangC,KAEpC,WAAX+pB,GACC,eAAC0B,GAAA,EAAD,CAAW1B,OAAO,OAAOO,OAAQ6V,EAAangC,QAGlD,eAAC82B,GAAA,EAAD,UACE,eAAC0F,GAAA,EAAD,CACExrB,SAAqB,WAAX+Y,IAAwBG,EAAajc,GAAU6a,aACzDwI,QAAS0K,EAAWh8B,GACpBmhB,QACE6a,EAAWh8B,GACP,kBAAMs8B,EAAa,CAACt8B,KACpB,kBAAMo8B,EAAa,CAACp8B,WAhBjBA,eA4BrBogC,GAAW,WACf,IAAMhjB,EAAY2F,eAClB,EAAmC4Q,eAAnBuL,EAAhB,EAAQ5U,OAAc2D,EAAtB,EAAsBA,SAChB/D,EAAeX,KAErB,OACE,gBAACyQ,GAAA,EAAD,WACE,gBAACN,GAAA,EAAD,CAAKtT,MAAOhJ,EAAU,gCAAtB,UACE,eAACqO,GAAA,EAAD,CAAWrF,MAAM,KAAK2D,OAAO,OAC7B,eAAC0B,GAAA,EAAD,CAAWrF,MAAM,8BAA8B2D,OAAO,SACtD,eAACK,GAAA,EAAD,CACEhE,MAAM,mCACN2D,OAAO,YACPM,OAAQ,SAACC,GAAD,OACA,OAANA,QAAM,IAANA,OAAA,EAAAA,EAAQ1P,WAAYwC,EAAU,aAAeA,EAAU,eAG3D,eAACwN,GAAA,EAAD,CACExE,MAAM,qCACN2D,OAAO,cACPgB,UAAQ,EACR1N,QAAS,CAAEgjB,IAAK,UAAWC,MAAO,UAAWC,KAAM,UAAWC,KAAM,UAAWC,OAAQ,aAEzF,eAACrW,GAAA,EAAD,CACEhE,MAAM,mCACN2D,OAAO,YACPM,OAAQ,SAACC,GAAD,OAAgClN,EAAU,mCAAD,cAAoCkN,QAApC,IAAoCA,OAApC,EAAoCA,EAAQnc,eAE/F,eAACsd,GAAA,EAAD,CACErF,MAAM,oCACN2D,OAAO,gBAEJ,OAAJmV,QAAI,IAAJA,OAAA,EAAAA,EAAMluB,WACL,eAACya,GAAA,EAAD,CACErF,MAAM,kCACN2D,OAAO,aAGX,eAACK,GAAA,EAAD,CACEhE,MAAM,yCACN2D,OAAO,kBACPM,OAAQ,SAACC,GAAD,OACA,OAANA,QAAM,IAANA,OAAA,EAAAA,EAAQxP,iBACJsC,EAAU,aACVA,EAAU,eAGlB,eAACgN,GAAA,EAAD,CACEhE,MAAM,sCACN2D,OAAO,eACPM,OAAQ,SAACC,GAAD,OAAgClN,EAAU,kCAAD,cAAmCkN,QAAnC,IAAmCA,OAAnC,EAAmCA,EAAQvP,mBAEzF,OAAJmkB,QAAI,IAAJA,OAAA,EAAAA,EAAM7jB,iBACL,eAACoQ,GAAA,EAAD,CACErF,MAAM,wCACN2D,OAAO,mBAGX,eAAC,GAAD,OAEDG,EAAajc,GAAU4a,cACtB,eAAC6Q,GAAA,EAAD,CAAKtT,MAAOhJ,EAAU,+BAAtB,SACE,eAAC4S,GAAA,EAAD,CAAyBzhB,MAAO1P,EAAauJ,OAA7C,SACE,eAAC,KAAD,CACE6lB,SAAUA,EACVxf,OAAQ,CAAEwM,OAAM,OAAEikB,QAAF,IAAEA,OAAF,EAAEA,EAAMl/B,IACxB6rB,UAAU,EACVpK,MAAM,IACNmK,QAAS,CAAC,eAAC9B,GAAA,EAAD,CAAWC,OAAO,OAAOC,UAAQ,KAC3Cha,KAAM,CAAEC,MAAO,YAAaC,MAAO,QACnCC,WAAY,eAAC2b,GAAA,EAAD,CAAYC,mBAAoB,CAAC,GAAI,GAAI,GAAI,OACzD1b,QAAS,GARX,SAUE,eAAC,GAAD,CAAa0Z,OAAO,iBAK5B,eAAC2P,GAAA,EAAD,CAAKtT,MAAOhJ,EAAU,kCAAtB,SACE,eAAC4S,GAAA,EAAD,CAAyBzhB,MAAO1P,EAAaqJ,UAA7C,SACE,eAAC,KAAD,CACE+lB,SAAUA,EACVxf,OAAQ,CAAEwM,OAAM,OAAEikB,QAAF,IAAEA,OAAF,EAAEA,EAAMl/B,IACxB6rB,UAAU,EACVpK,MAAM,IACNmK,QAAS,CAAC,eAAC9B,GAAA,EAAD,CAAWC,OAAO,OAAOC,UAAQ,KAC3C7Z,WAAY,eAAC2b,GAAA,EAAD,CAAYC,mBAAoB,CAAC,GAAI,GAAI,GAAI,OACzD1b,QAAS,GAPX,SASE,eAAC,GAAD,CAAa0Z,OAAO,wBAQnB2W,GAAW,SAACngB,GAAD,OACtB,eAACyY,GAAA,EAAD,2BAAUzY,GAAV,IAAiBoL,SAAS,EAAOlK,MAAO,eAAC,GAAD,IAAxC,SACE,eAAC,GAAD,Q,8BpB/ZQ2S,K,gBAAAA,E,oBAAAA,E,uBAAAA,Q,KqB6BZ,IC7BYuM,GD6BN3D,GAAY,SAACl9B,GACjB,IACEwqB,EACExqB,EADFwqB,OAEIlN,EAAY2F,eAClB,OACE,kCACG3F,EAAU,+BADb,YAC+CkN,QAD/C,IAC+CA,OAD/C,EAC+CA,EAAQtqB,GADvD,YAC6DsqB,QAD7D,IAC6DA,OAD7D,EAC6DA,EAAQzpB,KAAM,QAKzE+/B,GAAc,SAAC,GAA2C,IAAzC7W,EAAwC,EAAxCA,OACbO,EAAWuW,eAAXvW,OACR,OACE,qCACGA,GAAUA,EAAOP,IAChB,eAACkK,GAAA,EAAD,CAAS7N,MAAM,kCAAf,SACE,eAAC7E,GAAA,EAAD,CAAYQ,UAAU,OAAOvhB,MAAM,cAAnC,SACG8pB,EAAOP,UAQdkT,GAAc,SAAC1c,GAAD,OAClB,gBAAC,KAAD,2BAAaA,GAAb,cACE,eAAC2c,GAAA,EAAD,IACA,eAAClP,GAAA,EAAD,CAAYjO,KAAM,eAACod,GAAA,EAAD,IAAY/W,MAAM,sBAI3B0a,GAAW,SAACvgB,GACvB,IAAMnD,EAAY2F,eAClB,OACE,eAACsa,GAAA,EAAD,2BAAU9c,GAAV,IAAiBwgB,SAAS,EAAOtf,MAAO,eAAC,GAAD,IAAxC,SACE,gBAAC6b,GAAA,EAAD,CAAYC,SAAS,OAAOC,QAAS,eAAC,GAAD,IAArC,UACE,eAAC/R,GAAA,EAAD,CAAW1B,OAAO,KAAK3D,MAAM,OAC7B,eAAC0D,GAAA,EAAD,CAAWC,OAAO,SAClB,eAACiX,GAAA,EAAD,CAAcjX,OAAO,cACrB,eAAC0T,GAAA,EAAD,CAAe1T,OAAO,gBACtB,eAACmF,GAAA,EAAD,CACEnF,OAAO,YACPoF,QAAS,CACP,CAAEnvB,GAAI8F,EAAgBgK,GAAIjP,KAAMuc,EAAU,uCAC1C,CAAEpd,GAAI8F,EAAgBm7B,IAAKpgC,KAAMuc,EAAU,wCAC3C,CAAEpd,GAAI8F,EAAgBo7B,KAAMrgC,KAAMuc,EAAU,4CAGhD,eAAC0M,GAAA,EAAD,CAAWC,OAAO,eAClB,eAAC,GAAD,CAAaA,OAAO,aACpB,eAACiX,GAAA,EAAD,CAAcjX,OAAO,oBACrB,eAACmF,GAAA,EAAD,CACEnF,OAAO,eACPoF,QAAS,CACP,CAAEnvB,GAAIo0B,GAAe+M,OAAQtgC,KAAMuc,EAAU,0CAC7C,CAAEpd,GAAIo0B,GAAegN,SAAUvgC,KAAMuc,EAAU,4CAC/C,CAAEpd,GAAIo0B,GAAeiN,UAAWxgC,KAAMuc,EAAU,gDAGpD,eAACqO,GAAA,EAAD,CAAW1B,OAAO,0BEvFbuX,GAAa,SAAC/gB,GAAD,OACxB,eAAC,KAAD,2BACMA,GADN,IAEElQ,QAAS,GACTF,WAAY,eAAC2b,GAAA,EAAD,CAAYC,mBAAoB,CAAC,GAAI,GAAI,MACrDF,UAAU,EACVD,QAAS,CACP,eAAC9B,GAAA,EAAD,CAAWC,OAAO,OAAOC,UAAQ,IACjC,eAACF,GAAA,EAAD,CAAWC,OAAO,gBAPtB,SAUE,qCACE,gBAACI,GAAA,EAAD,CACEtM,KAAK,QACL2N,SAAU,SAACxrB,GAAD,gBAAWnB,EAAamJ,QAAxB,YAAmChI,EAAnC,UAFZ,UAIE,eAACyrB,GAAA,EAAD,CAAW1B,OAAO,KAAK3D,MAAM,OAC7B,eAACqF,GAAA,EAAD,CAAW1B,OAAO,SAClB,eAAC0B,GAAA,EAAD,CAAW1B,OAAO,YAClB,eAAC0B,GAAA,EAAD,CAAW1B,OAAO,aAAa+E,UAAU,IACzC,eAACrD,GAAA,EAAD,CAAW1B,OAAO,WAAW+E,UAAU,a,+BDxBnC6R,K,gBAAAA,E,qBAAAA,E,wBAAAA,Q,KEgBZ,I,GAAM/gB,GAAYC,cAAW,SAACC,GAAD,OAC3BkM,aAAa,CACXuV,eAAgB,CACdnV,aAActM,EAAMG,QAAQ,SAKrBoe,GAAgB,SAAC,GAYvB,IAXLC,EAWI,EAXJA,QACAC,EAUI,EAVJA,OACAxU,EASI,EATJA,OACA3H,EAQI,EARJA,KACArjB,EAOI,EAPJA,OAQMqe,EAAY2F,eAClB,OACE,gBAACyb,GAAA,EAAD,CAAQpc,KAAMA,EAAd,UACE,eAACqc,GAAA,EAAD,UACGrhB,EAAU,qCAAD,OAAsC2M,EAAtC,YAAgDhrB,MAE5D,gBAAC2/B,GAAA,EAAD,WACE,eAAC3Y,GAAA,EAAD,CAAQxU,QAAQ,YAAY4P,QAASmd,EAArC,SACGlhB,EAAU,oBAEb,eAAC2I,GAAA,EAAD,CAAQxU,QAAQ,YAAY4P,QAASod,EAArC,SACGnhB,EAAU,yBAORokB,GAA2B,SAAC,GAMlC,IALLpf,EAKI,EALJA,KACAwc,EAII,EAJJA,MAKM7d,EAAUnB,KAChB,EAAoC6C,mBAAS,IAA7C,oBAAOgf,EAAP,KAAmBC,EAAnB,KACA,EAA4DC,MAAY,GAAxE,oBAAOC,EAAP,KAAmBC,EAAnB,KAAkCC,EAAlC,KACA,EAA4Crf,mBAAS,IAArD,oBAAOsf,EAAP,KAAuBC,EAAvB,KACA,EAA0Cvf,mBAAS,IAAnD,oBAAOwf,EAAP,KAAsBC,EAAtB,KACA,EAAqEP,MAAY,GAAjF,oBAAOQ,EAAP,KAAsBC,EAAtB,KAAwCC,EAAxC,KACA,EAAkD5f,mBAAS,IAA3D,oBAAO6f,EAAP,KAA0BC,EAA1B,KACA,EAAsC9f,oBAAS,GAA/C,oBAAOuc,EAAP,KAAoBC,EAApB,KACgBuD,EAAW7O,eAAnBrJ,OACR,EAAiB9C,eAAVC,EAAP,qBACM6N,EAAUC,eACVnY,EAAY2F,eAEZoc,EAAc,WAClBuC,EAAc,IACdQ,EAAiB,IACjBL,GAAc,GACdO,GAAiB,GACjBJ,EAAkB,IAClBO,EAAqB,IACrB3D,KAGI6D,EAAyB,uCAAG,sBAAA9iC,EAAA,yDAChCs/B,GAAe,GACf4C,GAAc,GACdO,GAAiB,GACjBJ,EAAkB,IAClBO,EAAqB,IACwB,IAAzCd,EAAWzZ,QAAQ,MAAO,IAAIrnB,QAChCkhC,GAAc,GACdG,EAAkB5kB,EAAU,0EACnBqkB,EAAWzZ,QAAQ,MAAO,IAAIrnB,SAAW8gC,EAAW9gC,SAC7DkhC,GAAc,GACdG,EAAkB5kB,EAAU,yEAEkB,IAA5C6kB,EAAcja,QAAQ,MAAO,IAAIrnB,QACnCyhC,GAAiB,GACjBG,EAAqBnlB,EAAU,6EACtB6kB,EAAcja,QAAQ,MAAO,IAAIrnB,SAAWshC,EAActhC,SACnEyhC,GAAiB,GACjBG,EAAqBnlB,EAAU,4EAG5B0kB,EAAuBY,SAAYL,EAA0BK,QArBlC,kCAsBxBjb,EACJ,CACEzoB,KAAMwK,YAAkB,uBACxB/J,SAAUZ,EAAamJ,QACvB8f,QAAS,CACP6a,SAAQ,OAAEH,QAAF,IAAEA,OAAF,EAAEA,EAAQxiC,GAClB0J,MAAO+3B,EACP/zB,SAAUu0B,IAGd,CAAEla,eAAe,IAhCW,QAkC9BuN,IACA6J,IAnC8B,4CAAH,qDAuC/B,OACE,gBAACX,GAAA,EAAD,CAAQpc,KAAMA,EAAMid,QAASF,EAA7B,UACE,eAAC,GAAD,CACE/c,KAAM4c,EACNT,OAAQ,kBAAMU,GAAe,IAC7BX,QAASmE,EACT1Y,OAAO,sBACPhrB,OAAO,QAET,eAAC0/B,GAAA,EAAD,UACGrhB,EAAU,yDAEb,gBAACkiB,GAAA,EAAD,WACE,eAAC,KAAD,CACEje,UAAWN,EAAQwgB,eACnBnb,MAAOhJ,EAAU,6DACjB7L,QAAQ,WACRhD,MAAOkzB,EACP1U,SAAU,SAACO,GAAD,OAAOoU,EAAcpU,EAAE9O,OAAOjQ,QACxCgxB,WAAS,EACTlhB,MAAOujB,EACPpU,WAAYuU,IAEd,eAAC,KAAD,CACE1gB,UAAWN,EAAQwgB,eACnBnb,MAAOhJ,EAAU,gEACjB7L,QAAQ,WACRhD,MAAO0zB,EACPlV,SAAU,SAACO,GAAD,OAAO4U,EAAiB5U,EAAE9O,OAAOjQ,QAC3CgxB,WAAS,EACTvgC,KAAK,WACL4jC,aAAa,eACbvkB,MAAO8jB,EACP3U,WAAY8U,OAGhB,eAAC5D,GAAA,EAAD,UACE,gBAAC7M,GAAA,EAAD,WACE,eAAC9L,GAAA,EAAD,CAAQxU,QAAQ,YAAY4P,QAAS,kBAAM8d,GAAe,IAA1D,SACG7hB,EAAU,oBAEb,eAAC2I,GAAA,EAAD,CAAQxU,QAAQ,YAAY4P,QAASge,EAArC,SACG/hB,EAAU,2BAQVylB,GAAsB,SAAC,GAM7B,IALLzgB,EAKI,EALJA,KACAwc,EAII,EAJJA,MAKM7d,EAAUnB,KAChB,EAA0B6C,mBAAS,IAAnC,oBAAOlU,EAAP,KAAcswB,EAAd,KACA,EAAsCpc,oBAAS,GAA/C,oBAAOuc,EAAP,KAAoBC,EAApB,KACgBuD,EAAW7O,eAAnBrJ,OACR,EAAiB9C,eAAVC,EAAP,qBACM6N,EAAUC,eACVnY,EAAY2F,eAEZoc,EAAc,WAClBN,EAAS,IACTD,KAGIkE,EAAoB,uCAAG,sBAAAnjC,EAAA,6DAC3Bs/B,GAAe,GADY,SAErBxX,EACJ,CACEzoB,KAAMwK,YAAkB,kBACxB/J,SAAUZ,EAAamJ,QACvB8f,QAAS,CACP6a,SAAQ,OAAEH,QAAF,IAAEA,OAAF,EAAEA,EAAQxiC,GAClB+iC,WAAYx0B,IAGhB,CAAEwZ,eAAe,IAXQ,OAa3B8W,EAAS,IACTvJ,IACAsJ,IAf2B,2CAAH,qDAwB1B,OANApJ,qBAAU,WACJpT,IAAI,OAAIogB,QAAJ,IAAIA,OAAJ,EAAIA,EAAQO,aAClBlE,EAAQ,OAAC2D,QAAD,IAACA,OAAD,EAACA,EAAQO,cAElB,CAAC3gB,EAAD,OAAOogB,QAAP,IAAOA,OAAP,EAAOA,EAAQO,aAGhB,gBAACvE,GAAA,EAAD,CAAQpc,KAAMA,EAAMid,QAASF,EAA7B,UACE,eAAC,GAAD,CACE/c,KAAM4c,EACNT,OAAQ,kBAAMU,GAAe,IAC7BX,QAASwE,EACT/Y,OAAO,iBACPhrB,OAAO,QAET,eAAC0/B,GAAA,EAAD,UACGrhB,EAAU,oDAEb,eAACkiB,GAAA,EAAD,UACE,gBAACxN,GAAA,EAAD,CACEzQ,UAAWN,EAAQwgB,eACnBhwB,QAAQ,WACRhD,MAAOA,EACPwe,SAAU,SAACO,GAAD,OAAOuR,EAASvR,EAAE9O,OAAOjQ,QACnCgxB,WAAS,EALX,UAME,eAACte,GAAA,EAAD,CAAU1S,MAAOoyB,GAAWqC,UAA5B,SAAwC5lB,EAAU,+BAAD,OAAgCujB,GAAWqC,cAC5F,eAAC/hB,GAAA,EAAD,CAAU1S,MAAOoyB,GAAWsC,WAA5B,SAAyC7lB,EAAU,+BAAD,OAAgCujB,GAAWsC,eAC7F,eAAChiB,GAAA,EAAD,CAAU1S,MAAOoyB,GAAWuC,OAA5B,SAAqC9lB,EAAU,+BAAD,OAAgCujB,GAAWuC,gBAG7F,eAACxE,GAAA,EAAD,UACE,gBAAC7M,GAAA,EAAD,WACE,eAAC9L,GAAA,EAAD,CAAQxU,QAAQ,YAAY4P,QAAS,kBAAM8d,GAAe,IAA1D,SACG7hB,EAAU,oBAEb,eAAC2I,GAAA,EAAD,CAAQxU,QAAQ,YAAY4P,QAASge,EAArC,SACG/hB,EAAU,2BAQVoiB,GAAY,SAAC,GAMnB,IALLpd,EAKI,EALJA,KACAwc,EAII,EAJJA,MAKM7d,EAAUnB,KAChB,EAA0B6C,mBAAS,IAAnC,oBAAOlU,EAAP,KAAcswB,EAAd,KACA,EAA0Bpc,oBAAS,GAAnC,oBAAOpE,EAAP,KAAckJ,EAAd,KACA,EAAkC9E,mBAAS,IAA3C,oBAAOqc,EAAP,KAAkBC,EAAlB,KACA,EAAsCtc,oBAAS,GAA/C,oBAAOuc,EAAP,KAAoBC,EAApB,KACgBuD,EAAW7O,eAAnBrJ,OACR,EAAiB9C,eAAVC,EAAP,qBACM6N,EAAUC,eACVnY,EAAY2F,eAEZoc,EAAc,WAClBN,EAAS,IACTtX,GAAS,GACTwX,EAAa,IACbH,KAGIa,EAAU,uCAAG,sBAAA9/B,EAAA,yDACjBs/B,GAAe,GACyB,IAApC1wB,EAAMyZ,QAAQ,MAAO,IAAIrnB,OAFZ,gBAGf4mB,GAAS,GACTwX,EAAa3hB,EAAU,oDAJR,0BAKN7O,EAAMyZ,QAAQ,MAAO,IAAIrnB,SAAW4N,EAAM5N,OALpC,iBAMf4mB,GAAS,GACTwX,EAAa3hB,EAAU,mDAPR,yCASTqK,EACJ,CACEzoB,KAAMwK,YAAkB,QACxB/J,SAAUZ,EAAamJ,QACvB8f,QAAS,CACP6a,SAAQ,OAAEH,QAAF,IAAEA,OAAF,EAAEA,EAAQxiC,GAClBkb,SAAU3M,IAGd,CAAEwZ,eAAe,IAlBJ,QAoBfoX,IACA7J,IArBe,4CAAH,qDAyBhB,OACE,gBAACkJ,GAAA,EAAD,CAAQpc,KAAMA,EAAMid,QAASF,EAA7B,UACE,eAAC,GAAD,CACE/c,KAAM4c,EACNT,OAAQ,kBAAMU,GAAe,IAC7BX,QAASmB,EACT1V,OAAO,OACPhrB,OAAO,QAET,eAAC0/B,GAAA,EAAD,UACGrhB,EAAU,0CAEb,eAACkiB,GAAA,EAAD,UACE,eAAC,KAAD,CACEje,UAAWN,EAAQwgB,eACnBhwB,QAAQ,WACRhD,MAAOA,EACPwe,SAAU,SAACO,GAAD,OAAOuR,EAASvR,EAAE9O,OAAOjQ,QACnCgxB,WAAS,EACTlhB,MAAOA,EACPmP,WAAYsR,MAGhB,eAACJ,GAAA,EAAD,UACE,gBAAC7M,GAAA,EAAD,WACE,eAAC9L,GAAA,EAAD,CAAQxU,QAAQ,YAAY4P,QAAS,kBAAM8d,GAAe,IAA1D,SACG7hB,EAAU,oBAEb,eAAC2I,GAAA,EAAD,CAAQxU,QAAQ,YAAY4P,QAASge,EAArC,SACG/hB,EAAU,2BCvTjB+d,GAAY,SAACr7B,GACjB,IACU0iC,EACN1iC,EADFwqB,OAEIlN,EAAY2F,eAClB,OACE,kCACG3F,EAAU,iCADb,YACiDolB,QADjD,IACiDA,OADjD,EACiDA,EAAQxiC,GADzD,YAC+DwiC,QAD/D,IAC+DA,OAD/D,EAC+DA,EAAQ3hC,SAKrE6+B,GAAiB,WACrB,IAAgB8C,EAAW7O,eAAnBrJ,OACR,EAA0C7H,oBAAS,GAAnD,oBAAOod,EAAP,KAAsBC,EAAtB,KACA,EAAgDrd,oBAAS,GAAzD,oBAAOsd,EAAP,KAAyBC,EAAzB,KACA,EAAwDvd,oBAAS,GAAjE,oBAAO0gB,EAAP,KAA6BC,EAA7B,KACA,EAAgF3gB,oBAAS,GAAzF,oBAAO4gB,EAAP,KAAyCC,EAAzC,KACA,EAAkE7gB,oBAAS,GAA3E,oBAAO8gB,EAAP,KAAkCC,EAAlC,KACA,EAAiBhc,eAAVC,EAAP,qBACM6N,EAAUC,eACVnY,EAAY2F,eAMZ0gB,EAA4B,uCAAG,sBAAA9jC,EAAA,6DACnC2jC,GAAoC,GADD,SAE7B7b,EACJ,CACEzoB,KAAMwK,YAAkB,0BACxB/J,SAAUZ,EAAamJ,QACvB8f,QAAS,CACP6a,SAAQ,OAAEH,QAAF,IAAEA,OAAF,EAAEA,EAAQxiC,KAGtB,CAAE+nB,eAAe,IAVgB,OAYnCuN,IAZmC,2CAAH,qDAuB5BmK,EAAU,uCAAG,sBAAA9/B,EAAA,6DACjBqgC,GAAoB,GADH,SAEXvY,EACJ,CACEzoB,KAAMwK,YAAkB,UACxB/J,SAAUZ,EAAamJ,QACvB8f,QAAS,CACP6a,SAAQ,OAAEH,QAAF,IAAEA,OAAF,EAAEA,EAAQxiC,KAGtB,CAAE+nB,eAAe,IAVF,OAYjBuN,IAZiB,2CAAH,qDAoBhB,OACE,uCACE,eAAChH,GAAA,EAAD,IACA,eAAC,GAAD,CACElM,KAAMmhB,EACN3E,MAAO,kBAAM4E,GAA6B,MAE5C,eAAC,GAAD,CACEphB,KAAM+gB,EACNvE,MAAO,kBAAMwE,GAAwB,MAEvC,eAAC,GAAD,CAAWhhB,KAAMyd,EAAejB,MAAO,kBAAMkB,GAAiB,MAC9D,eAAC,GAAD,CACE1d,KAAM2d,EACNzB,QAASmB,EACT1V,OAAO,OACPwU,OAAQ,kBAAMyB,GAAoB,IAClCjhC,OAAO,WAET,eAAC,GAAD,CACEqjB,KAAMihB,EACN/E,QAASmF,EACT1Z,OAAO,sBACPwU,OAAQ,kBAAM+E,GAAoC,IAClDvkC,OAAO,WAET,gBAAC0mB,GAAA,EAAD,CAAKxW,EAAG,EAAGoW,QAAQ,OAAO6G,eAAe,WAAzC,UACE,eAACnG,GAAA,EAAD,CACExU,QAAQ,YACR4P,QA5EgC,WACtCqiB,GAA6B,IA4EvBhjC,MAAM,UACNyiB,MAAO,CAAE4Z,YAAa,OAJxB,SAMGzf,EAAU,mDAEb,eAAC2I,GAAA,EAAD,CACExU,QAAQ,YACR4P,QAjEmC,WACzCmiB,GAAoC,IAiE9B9iC,MAAM,UACNyiB,MAAO,CAAE4Z,YAAa,OAJxB,SAMGzf,EAAU,sDAEb,eAAC2I,GAAA,EAAD,CACExU,QAAQ,YACR4P,QArE2B,WACjCiiB,GAAwB,IAqElB5iC,MAAM,UACNyiB,MAAO,CAAE4Z,YAAa,OAJxB,SAMGzf,EAAU,8CAEb,eAAC2I,GAAA,EAAD,CACExU,QAAQ,YACR4P,QA1DiB,YACvB,OAAIqhB,QAAJ,IAAIA,OAAJ,EAAIA,EAAQxxB,UAAUgvB,GAAoB,GACrCF,GAAiB,IAyDhBt/B,MAAM,UACNyiB,MAAO,CAAE4Z,YAAa,OAJxB,UAMS,OAAN2F,QAAM,IAANA,OAAA,EAAAA,EAAQxxB,UACLoM,EAAU,oCACVA,EAAU,oCAEhB,eAAC0f,GAAA,EAAD,CAAY7O,SAAS,WAAW3D,OAAQkY,EAAQjxB,QAAQ,qBAM1D8pB,GAAc,SAAC,GAAoD,IAAlDtR,EAAiD,EAAjDA,OACrB,EAA4FmB,eAA9EiV,EAAd,EAAQrgC,KAAoBoP,EAA5B,EAA4BA,IAAK2jB,EAAjC,EAAiCA,aAAcyI,EAA/C,EAA+CA,YAAa56B,EAA5D,EAA4DA,MAAgB66B,EAA5E,EAAmE5D,QACnE,EAAoChE,eAApB6O,EAAhB,EAAQlY,OAAgBqN,EAAxB,EAAwBA,QACxB,EAA2D6D,aAAS,CAClEx8B,KAAMwK,YAAkBqe,KACxBpoB,SAAUsqB,EAAO0R,oBACjB3T,QAAS,CACPrZ,OAAO,eACFokB,GAEL7iB,KAAMsrB,GAAe,CACnBrrB,MAAO,KACPC,MAAO,QAETC,WAAY,CACVC,KAAM,EACNC,QAAS3P,GAAS,MAbVg7B,EAAd,EAAQ57B,KAA4B67B,EAApC,EAA2BhE,QAiBrBva,EAAY2F,eAClB,EAAiByE,eAAVC,EAAP,qBACMJ,EAASC,eACT4C,EAAeX,KAEfyS,EAAa,SAACC,GAA0B,IAAD,IAC3C,OAAQlS,GACN,IAAK,SACH,cAAOyY,QAAP,IAAOA,GAAP,UAAOA,EAAQ77B,iBAAf,aAAO,EAAmBuL,SAAS+pB,GACrC,IAAK,YACH,cAAOuG,QAAP,IAAOA,GAAP,UAAOA,EAAQ9mB,oBAAf,aAAO,EAAsBxJ,SAAS+pB,GACxC,QAEE,OADA5U,EAAO,WAAD,OAAY0C,EAAZ,+BACC,IAIPqS,EAAY,uCAAG,WAAOC,GAAP,SAAA18B,EAAA,2DACXoqB,EADW,OAEZ,WAFY,OAeZ,cAfY,sCAGTtC,EACJ,CACEzoB,KAAMwK,YAAkB,gBACxB/J,SAAUZ,EAAamJ,QACvB8f,QAAS,CACP6a,SAAQ,OAAEH,QAAF,IAAEA,OAAF,EAAEA,EAAQxiC,GAClB2G,UAAW01B,IAGf,CAAEtU,eAAe,IAZJ,0DAgBTN,EACJ,CACEzoB,KAAMwK,YAAkB,mBACxB/J,SAAUZ,EAAamJ,QACvB8f,QAAS,CACP6a,SAAQ,OAAEH,QAAF,IAAEA,OAAF,EAAEA,EAAQxiC,GAClB0b,aAAc2gB,IAGlB,CAAEtU,eAAe,IAzBJ,0CA6BfV,EAAO,WAAD,OAAY0C,EAAZ,8BA7BS,QA+BnBwR,IACI5D,GACFA,IAjCiB,4CAAH,sDAqCZ2E,EAAY,uCAAG,WAAOC,GAAP,SAAA58B,EAAA,2DACXoqB,EADW,OAEZ,WAFY,OAeZ,cAfY,sCAGTtC,EACJ,CACEzoB,KAAMwK,YAAkB,gBACxB/J,SAAUZ,EAAamJ,QACvB8f,QAAS,CACP6a,SAAQ,OAAEH,QAAF,IAAEA,OAAF,EAAEA,EAAQxiC,GAClB2G,UAAW41B,IAGf,CAAExU,eAAe,IAZJ,0DAgBTN,EACJ,CACEzoB,KAAMwK,YAAkB,mBACxB/J,SAAUZ,EAAamJ,QACvB8f,QAAS,CACP6a,SAAQ,OAAEH,QAAF,IAAEA,OAAF,EAAEA,EAAQxiC,GAClB0b,aAAc6gB,IAGlB,CAAExU,eAAe,IAzBJ,0CA6BfV,EAAO,WAAD,OAAY0C,EAAZ,8BA7BS,QA+BnBwR,IACI5D,GACFA,IAjCiB,4CAAH,sDA+ClB,OACE,gBAACjB,GAAA,EAAD,WACE,gBAAC7E,GAAA,EAAD,WACE,eAAC9L,GAAA,EAAD,CAAQxU,QAAQ,YACRP,SAAqB,WAAX+Y,IAAwBG,EAAajc,GAAU6a,aACzD3H,QAAS,kBAdrBwa,SACAS,EAAaV,EAAY7tB,KAAI,SAACyc,GAAD,cAAoCA,QAApC,IAAoCA,OAApC,EAAoCA,EAAQtqB,QAWrE,SAGGod,EAAU,yCAEb,eAAC2I,GAAA,EAAD,CAAQxU,QAAQ,YACRP,SAAqB,WAAX+Y,IAAwBG,EAAajc,GAAU6a,aACzD3H,QAAS,kBAdrBwa,SACAW,EAAaZ,EAAY7tB,KAAI,SAACyc,GAAD,cAAoCA,QAApC,IAAoCA,OAApC,EAAoCA,EAAQtqB,QAWrE,SAGGod,EAAU,4CAGf,gBAACuZ,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,UACE,gBAACC,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,UAEM1Z,EADQ,cAAX2M,EACa,2CACA,8CAEhB,eAAC+M,GAAA,EAAD,CAAW7T,MAAO,CAAEZ,MAAO,OAA3B,SACGjF,EAAU,uDAIjB,eAACsR,GAAA,EAAD,UACGxf,EAAIrB,KAAI,SAAC7N,GAAD,OACP,gBAAC62B,GAAA,EAAD,WACE,gBAACC,GAAA,EAAD,WACc,cAAX/M,GACC,eAAC0B,GAAA,EAAD,CAAW1B,OAAO,OAAOO,OAAQ6V,EAAangC,KAEpC,WAAX+pB,GACC,eAAC0B,GAAA,EAAD,CAAW1B,OAAO,OAAOO,OAAQ6V,EAAangC,QAGlD,eAAC82B,GAAA,EAAD,UACE,eAAC0F,GAAA,EAAD,CACExrB,SAAqB,WAAX+Y,IAAwBG,EAAajc,GAAU6a,aACzDwI,QAAS0K,EAAWh8B,GACpBmhB,QACE6a,EAAWh8B,GACP,kBAAMs8B,EAAa,CAACt8B,KACpB,kBAAMo8B,EAAa,CAACp8B,WAhBjBA,eA4BrB0jC,GAAa,WACjB,IAAMtmB,EAAY2F,eAClB,EAAqC4Q,eAArB6O,EAAhB,EAAQlY,OAAgB2D,EAAxB,EAAwBA,SAClB/D,EAAeX,KAErB,OACE,gBAACyQ,GAAA,EAAD,WACE,gBAACN,GAAA,EAAD,CAAKtT,MAAOhJ,EAAU,kCAAtB,UACE,eAACqO,GAAA,EAAD,CAAWrF,MAAM,KAAK2D,OAAO,OAC7B,eAAC0B,GAAA,EAAD,CAAWrF,MAAM,gCAAgC2D,OAAO,SACxD,eAACK,GAAA,EAAD,CACEhE,MAAM,qCACN2D,OAAO,YACPM,OAAQ,SAACC,GAAD,OACA,OAANA,QAAM,IAANA,OAAA,EAAAA,EAAQ1P,WAAYwC,EAAU,aAAeA,EAAU,eAG3D,eAACwN,GAAA,EAAD,CACExE,MAAM,uCACN2D,OAAO,cACPgB,UAAQ,EACR1N,QAAS,CAAEgjB,IAAK,UAAWC,MAAO,UAAWC,KAAM,UAAWC,KAAM,UAAWC,OAAQ,aAEzF,eAAChV,GAAA,EAAD,CACErF,MAAM,mCACN2D,OAAO,YAET,eAACK,GAAA,EAAD,CACEhE,MAAM,qCACN2D,OAAO,YACPM,OAAQ,SAACC,GAAD,OAAgClN,EAAU,mCAAD,cAAoCkN,QAApC,IAAoCA,OAApC,EAAoCA,EAAQnc,eAE/F,eAACsd,GAAA,EAAD,CACErF,MAAM,sCACN2D,OAAO,gBAEF,OAANyY,QAAM,IAANA,OAAA,EAAAA,EAAQxxB,WACP,eAACya,GAAA,EAAD,CACErF,MAAM,oCACN2D,OAAO,aAGX,eAACK,GAAA,EAAD,CACEhE,MAAM,sCACN2D,OAAO,aACPM,OAAQ,SAACC,GAAD,OAAgClN,EAAU,+BAAD,cAAgCkN,QAAhC,IAAgCA,OAAhC,EAAgCA,EAAQyY,gBAE3F,eAAC3Y,GAAA,EAAD,CACEhE,MAAM,2CACN2D,OAAO,kBACPM,OAAQ,SAACC,GAAD,OACA,OAANA,QAAM,IAANA,OAAA,EAAAA,EAAQxP,iBACJsC,EAAU,aACVA,EAAU,eAGlB,eAACgN,GAAA,EAAD,CACEhE,MAAM,wCACN2D,OAAO,eACPM,OAAQ,SAACC,GAAD,OAAgClN,EAAU,kCAAD,cAAmCkN,QAAnC,IAAmCA,OAAnC,EAAmCA,EAAQvP,kBAE9F,eAAC,GAAD,OAEDmP,EAAajc,GAAU4a,cACtB,eAAC6Q,GAAA,EAAD,CAAKtT,MAAOhJ,EAAU,iCAAtB,SACE,eAAC4S,GAAA,EAAD,CAAyBzhB,MAAO1P,EAAauJ,OAA7C,SACE,eAAC,KAAD,CACE6lB,SAAUA,EACVxf,OAAQ,CAAEk0B,SAAQ,OAAEH,QAAF,IAAEA,OAAF,EAAEA,EAAQxiC,IAC5B6rB,UAAU,EACVpK,MAAM,IACNmK,QAAS,CAAC,eAAC9B,GAAA,EAAD,CAAWC,OAAO,OAAOC,UAAQ,KAC3Cha,KAAM,CAAEC,MAAO,YAAaC,MAAO,QACnCC,WAAY,eAAC2b,GAAA,EAAD,CAAYC,mBAAoB,CAAC,GAAI,GAAI,GAAI,OACzD1b,QAAS,GARX,SAUE,eAAC,GAAD,CAAa0Z,OAAO,iBAK5B,eAAC2P,GAAA,EAAD,CAAKtT,MAAOhJ,EAAU,oCAAtB,SACE,eAAC4S,GAAA,EAAD,CAAyBzhB,MAAO1P,EAAaqJ,UAA7C,SACE,eAAC,KAAD,CACE+lB,SAAUA,EACVxf,OAAQ,CAAEk0B,SAAQ,OAAEH,QAAF,IAAEA,OAAF,EAAEA,EAAQxiC,IAC5B6rB,UAAU,EACVpK,MAAM,IACNmK,QAAS,CAAC,eAAC9B,GAAA,EAAD,CAAWC,OAAO,OAAOC,UAAQ,KAC3C7Z,WAAY,eAAC2b,GAAA,EAAD,CAAYC,mBAAoB,CAAC,GAAI,GAAI,GAAI,OACzD1b,QAAS,GAPX,SASE,eAAC,GAAD,CAAa0Z,OAAO,wBAQnB4Z,GAAa,SAACpjB,GAAD,OACxB,eAACyY,GAAA,EAAD,2BAAUzY,GAAV,IAAiBoL,SAAS,EAAOlK,MAAO,eAAC,GAAD,IAAxC,SACE,eAAC,GAAD,QCpaEub,GAAY,SAACl9B,GACjB,IACEwqB,EACExqB,EADFwqB,OAEIlN,EAAY2F,eAClB,OACE,kCACG3F,EAAU,iCADb,YACiDkN,QADjD,IACiDA,OADjD,EACiDA,EAAQtqB,GADzD,YAC+DsqB,QAD/D,IAC+DA,OAD/D,EAC+DA,EAAQzpB,KAAM,QAK3E+/B,GAAc,SAAC,GAA6C,IAA3C7W,EAA0C,EAA1CA,OACbO,EAAWuW,eAAXvW,OACR,OACE,qCACGA,GAAUA,EAAOP,IAChB,eAACkK,GAAA,EAAD,CAAS7N,MAAM,oCAAf,SACE,eAAC7E,GAAA,EAAD,CAAYQ,UAAU,OAAOvhB,MAAM,cAAnC,SACG8pB,EAAOP,UAQdkT,GAAc,SAAC1c,GAAD,OAClB,gBAAC,KAAD,2BAAaA,GAAb,cACE,eAAC2c,GAAA,EAAD,IACA,eAAClP,GAAA,EAAD,CAAYjO,KAAM,eAACod,GAAA,EAAD,IAAY/W,MAAM,sBAI3Bwd,GAAa,SAACrjB,GACzB,IAAMnD,EAAY2F,eAClB,OACE,eAACsa,GAAA,EAAD,2BAAU9c,GAAV,IAAiBwgB,SAAS,EAAOtf,MAAO,eAAC,GAAD,IAAxC,SACE,gBAAC6b,GAAA,EAAD,CAAYC,SAAS,OAAOC,QAAS,eAAC,GAAD,IAArC,UACE,eAAC/R,GAAA,EAAD,CAAW1B,OAAO,KAAK3D,MAAM,OAC7B,eAAC0D,GAAA,EAAD,CAAWC,OAAO,SAClB,eAACiX,GAAA,EAAD,CAAcjX,OAAO,cACrB,eAAC0T,GAAA,EAAD,CAAe1T,OAAO,gBACtB,eAACD,GAAA,EAAD,CAAWC,OAAO,YAClB,eAACmF,GAAA,EAAD,CACEnF,OAAO,YACPoF,QAAS,CACP,CAAEnvB,GAAI8F,EAAgBgK,GAAIjP,KAAMuc,EAAU,uCAC1C,CAAEpd,GAAI8F,EAAgBm7B,IAAKpgC,KAAMuc,EAAU,wCAC3C,CAAEpd,GAAI8F,EAAgBo7B,KAAMrgC,KAAMuc,EAAU,4CAGhD,eAAC0M,GAAA,EAAD,CAAWC,OAAO,eAClB,eAACK,GAAA,EAAD,CAAeL,OAAO,aAAaM,OAAQ,SAACC,GAAD,OAAgClN,EAAU,+BAAD,cAAgCkN,QAAhC,IAAgCA,OAAhC,EAAgCA,EAAQyY,gBAC5H,eAAC,GAAD,CAAahZ,OAAO,aACpB,eAACiX,GAAA,EAAD,CAAcjX,OAAO,oBACrB,eAACmF,GAAA,EAAD,CACEnF,OAAO,eACPoF,QAAS,CACP,CAAEnvB,GAAIo0B,GAAe+M,OAAQtgC,KAAMuc,EAAU,0CAC7C,CAAEpd,GAAIo0B,GAAegN,SAAUvgC,KAAMuc,EAAU,4CAC/C,CAAEpd,GAAIo0B,GAAeiN,UAAWxgC,KAAMuc,EAAU,uD,iDCrEtDymB,GAAc,WAClB,IAAMzmB,EAAY2F,eAClB,OACE,gCAAO3F,EAAU,qCAIf0mB,GAAe,SAAC,GAA4C,IAA1C/Z,EAAyC,EAAzCA,OAChB3M,EAAY2F,eAElB,EAEI+J,aAAS/C,GADXiD,MAASD,EADX,EACWA,SAAUxe,EADrB,EACqBA,MAGrB,EAAwD2c,eAAhDprB,EAAR,EAAQA,KAAMoP,EAAd,EAAcA,IAAK2jB,EAAnB,EAAmBA,aAAcyI,EAAjC,EAAiCA,YAAa56B,EAA9C,EAA8CA,MAE9C,EAA2D86B,aAAS,CAClEx8B,KAAMwK,YAAkBqe,KACxBpoB,SAAUZ,EAAa2J,QACvBsf,QAAS,CACPrZ,OAAO,eACFokB,GAEL7iB,KAAMsrB,GAAe,CACnBrrB,MAAO,KACPC,MAAO,QAETC,WAAY,CACVC,KAAM,EACNC,QAAS3P,GAAS,MAbVg7B,EAAd,EAAQ57B,KAA4B67B,EAApC,EAA2BhE,QAkBrByE,EAAe,SAAC2H,GACpBhX,EAAS,GAAD,oBAAKxe,GAAL,aAAew1B,MAGnBzH,EAAe,SAACyH,GACpBhX,EAASxe,EAAME,QAAO,SAAC2G,GAAD,OAAwB2uB,EAAU7xB,SAASkD,QAa7D4mB,EAAa,SAACh8B,GAAD,OACjBuO,EAAM2D,SAASlS,IAGjB,OACE,gBAAC02B,GAAA,EAAD,WACE,gBAAC7E,GAAA,EAAD,WACE,eAAC9L,GAAA,EAAD,CAAQxU,QAAQ,YAAY4P,QAAS,kBAhBzCwa,SACAS,EAAaV,IAeT,SACGte,EAAU,wCACb,eAAC2I,GAAA,EAAD,CAAQxU,QAAQ,YAAY4P,QAAS,kBAbzCwa,SACAW,EAAaZ,IAYT,SACGte,EAAU,2CAEf,gBAACuZ,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,UACE,gBAACC,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,UACG1Z,EAAU,6CAEb,eAAC0Z,GAAA,EAAD,CAAW7T,MAAO,CAAEZ,MAAO,OAA3B,SACGjF,EAAU,sDAIjB,eAACsR,GAAA,EAAD,UACGxf,EAAIrB,KAAI,SAAC7N,GAAD,OACP,gBAAC62B,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,UACE,eAACrL,GAAA,EAAD,CAAW1B,OAAO,OAAOO,OAAQxqB,EAAKE,OAExC,eAAC82B,GAAA,EAAD,UACE,eAAC0F,GAAA,EAAD,CACElL,QAAS0K,EAAWh8B,GACpBmhB,QACE6a,EAAWh8B,GACP,kBAAMs8B,EAAa,CAACt8B,KACpB,kBAAMo8B,EAAa,CAACp8B,WAVjBA,eAsBdgkC,GAAc,SAACzjB,GAC1B,IAAQ0N,EAAa1N,EAAb0N,SACF7Q,EAAY2F,eAClB,OACE,eAACkhB,GAAA,EAAD,2BAAY1jB,GAAZ,IAAmBkB,MAAO,eAAC,GAAD,IAA1B,SACE,gBAACyiB,GAAA,EAAD,CAAY3G,SAAS,OAArB,UACE,gBAAC4G,GAAA,EAAD,CAAS/d,MAAOhJ,EAAU,iCAA1B,UACE,eAAC0M,GAAA,EAAD,CAAWC,OAAO,OAAOqa,YAAU,EAACC,SAAUC,iBAC9C,eAAC7G,GAAA,EAAD,CAAe1T,OAAO,YAAYqa,YAAU,EAACC,SAAUC,iBACvD,eAAC7G,GAAA,EAAD,CAAe1T,OAAO,UAAUqa,YAAU,EAACC,SAAUC,iBACrD,eAACxa,GAAA,EAAD,CAAWC,OAAO,eAClB,eAACD,GAAA,EAAD,CAAWC,OAAO,UAClB,eAACiX,GAAA,EAAD,CAAcjX,OAAO,cAEvB,eAACoa,GAAA,EAAD,CAAS/d,MAAOhJ,EAAU,iCAA1B,SACE,eAAC4S,GAAA,EAAD,CAAyBzhB,MAAO1P,EAAa2J,QAA7C,SACE,eAAC,KAAD,CAAMylB,SAAUA,EAAUxM,MAAM,IAAIkK,SAAS,EAC3Ctb,QAAS,GAAIF,WAAY,eAAC2b,GAAA,EAAD,CAAYC,mBAAoB,CAAC,GAAI,GAAI,MADpE,SAEE,eAAC,GAAD,CAAchC,OAAO,4BCtGtBwa,GAAsC,SACjDrb,GADiD,MAE9C,CACH,eAACsb,GAAA,EAAD,CACEzkB,KAAM0kB,KACN5jC,KAAMhC,EAAaiK,YACnB47B,KAAMzR,KAER,eAACuR,GAAA,EAAD,CAAU3jC,KAAMhC,EAAamK,eAAgB27B,KAAM5K,KACnD,eAACyK,GAAA,EAAD,CAAU3jC,KAAMhC,EAAayI,cAAeo9B,KAAM1M,KAClD,eAACwM,GAAA,EAAD,CACEzkB,KAAM6kB,KACN/jC,KAAMhC,EAAaiJ,cACnB48B,KAAM9G,KAER,eAAC4G,GAAA,EAAD,CAAU3jC,KAAMhC,EAAa+I,iBAAkB+8B,KAAMxG,KACrDjU,GAAajc,GAAU0a,UAAWO,IAChC,eAACsb,GAAA,EAAD,CAAU3jC,KAAMhC,EAAayJ,KAAMo8B,KAAM3V,KAE3C7E,GAAajc,GAAU4a,YAAaK,IAClC,eAACsb,GAAA,EAAD,CACE3jC,KAAMhC,EAAauJ,OACnBs8B,KAAMhZ,GACNiZ,KAAM5H,GACN8H,KAAM3a,GAAajc,GAAU6a,YAAaI,GAAekU,QAAY1jB,EACrE3Z,OAAQmqB,GAAajc,GAAU8a,cAAeG,GAAe8a,QAActqB,IAG/EwQ,GAAajc,GAAU2a,wBAAyBM,IAC9C,eAACsb,GAAA,EAAD,CACEzkB,KAAM+kB,KACNjkC,KAAMhC,EAAawK,wBACnBq7B,KAAMvK,KAGVjQ,GAAajc,GAAU2a,wBAAyBM,IAC9C,eAACsb,GAAA,EAAD,CACEzkB,KAAM+kB,KACNjkC,KAAMhC,EAAasK,mBACnBw7B,KAAMzJ,KAGV,eAACsJ,GAAA,EAAD,CACE3jC,KAAMhC,EAAa6J,MACnBg8B,KAAMtG,GACNuG,KAAMjE,GACNmE,KAAM/D,KAER,eAAC0D,GAAA,EAAD,CAAU3jC,KAAMhC,EAAaqI,eAC7B,eAACs9B,GAAA,EAAD,CAAU3jC,KAAMhC,EAAauI,WAC7B,eAACo9B,GAAA,EAAD,CAAU3jC,KAAMhC,EAAa2I,WAC7B,eAACg9B,GAAA,EAAD,CAAU3jC,KAAMhC,EAAa6I,YAC7B,eAAC88B,GAAA,EAAD,CACE3jC,KAAMhC,EAAamJ,QACnB08B,KAAMpD,GACNqD,KAAMhB,GACNkB,KAAMjB,KAER,eAACY,GAAA,EAAD,CAAU3jC,KAAMhC,EAAaqJ,YAC7B,eAACs8B,GAAA,EAAD,CAAU3jC,KAAMhC,EAAa2J,UAC7B,eAACg8B,GAAA,EAAD,CAAU3jC,KAAMhC,EAAaqK,gBC/EzBxK,GAA4C,CAChDwxB,oBACE,WAAC1xB,aACEC,QAAQ8wB,WADX,cAAC,GAEGnlB,MAAM,OAA4B,IAGpC26B,GAAO,SAACjmC,GACZ,IAAQoxB,EAAuBpxB,EAAvBoxB,mBAMR,OALIA,EAAmBvvB,OACrBnC,aAAaS,QAAQswB,GAAyBW,EAAmBniB,QAEjEvP,aAAawP,WAAWuhB,IAEnBzwB,GAGIkmC,GAAmB,WAGG,IAFjClmC,EAEgC,uDAFxBJ,GAEwB,yCAD9BM,EAC8B,EAD9BA,KAAe+xB,EACe,EADxBjJ,QAER,GAAI9oB,IAASV,EAAkB,CAC7B,IAAQ4xB,EAAuBpxB,EAAvBoxB,mBACR,OAAIA,EAAmBhe,SAAS6e,GACvBgU,GAAK,2BACPjmC,GADM,IAEToxB,mBAAoBA,EAAmBzhB,QACrC,SAACjN,GAAD,OAAOA,IAAMuvB,QAIZgU,GAAK,2BACPjmC,GADM,IAEToxB,mBAAmB,GAAD,oBAAMA,GAAN,CAA0Ba,OAGhD,OAAOjyB,GCZMmmC,GAtBH,WACV,MCG8B,SAC9BC,GAEA,OAAQA,GACN,IAAK,aACH,MAAO,CACLz7B,aAAc6U,GAA4B7U,IAC1CwU,gBACAknB,iBAEJ,IAAK,cACH,MAAO,CACL17B,gBACAwU,gBACAknB,iBAEJ,QACE,MAAO,CACL17B,aAAc27B,GACdnnB,aAAconB,GACdF,kBDvB+CG,CACnDh5B,cADM7C,EAAR,EAAQA,aAAcwU,EAAtB,EAAsBA,aAAcknB,EAApC,EAAoCA,aAGpC,OACE,eAACI,EAAA,EAAD,CACEpV,UAAWF,GACXxmB,aAAcA,EACdwU,aAAcA,EACdknB,aAAcA,EACdK,eAAgB,CACd1lB,MAAOlhB,EACPuxB,UAAW6U,IAEbS,aAAcC,GACdC,OAAQ9gB,GAVV,SAYG0f,MEbQqB,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBz6B,MAAK,YAAkD,IAA/C06B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,8BCJRtnC,GAAWC,aAAaC,QAAQ,YAChC2nC,GAAM7nC,IAAYC,aAAaC,QAAb,UAAwBF,GAAxB,SAExB+e,KAAK+oB,IAAIC,MACNC,KAAK,CACJH,IAAKA,IAAO,KACZI,YAAa,KACbC,OAAO,EACPC,cAAe,CACbC,aAAa,GAEfC,UAAW,CACTC,GAAI,CAAEC,YAAaC,IACnBC,GAAI,CAAEF,YAAaG,OAIV3pB,GAAf,ECfA4pB,IAAS7c,OACP,eAAC,IAAM8c,WAAP,UACE,eAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BzB,O","file":"static/js/main.3237b790.chunk.js","sourcesContent":["export const CHANGE_THEME = 'change-theme'\nexport const UPDATE_DASHBOARD = 'dashboard/update'\n","import { Action } from 'redux'\nimport { CHANGE_THEME } from '../constants/reducer.actions'\n\nconst identity = localStorage.getItem('username')\n\nexport type ThemeState = {\n  theme: {\n    darkMode: 'light' | 'dark'\n  }\n}\n\nconst initialState = {\n  darkMode: localStorage.getItem(`${identity}.darkMode`) === 'dark' ? 'dark' : 'light',\n}\n\nfunction themeReducer(state = initialState, action: Action<any>) {\n    if (action.type === CHANGE_THEME) {\n        if (state.darkMode === 'dark') localStorage.setItem(`${identity}.darkMode`, 'light')\n        else localStorage.setItem(`${identity}.darkMode`, 'dark')\n        return {\n            ...state,\n            darkMode: state.darkMode === 'dark' ? 'light' : 'dark'\n        }\n    }\n    return state\n}\n\nexport default themeReducer","export enum ResourceName {\n  ACCESS_DATES = 'access-dates',\n  ACCESSES = 'accesses',\n  ACCESS_USINGS = 'access-usings',\n  BOOKINGS = 'bookings',\n  ENGINES = 'engines',\n  EVENTS = 'events',\n  COMPANIES = 'companies',\n  CUSTOMER_DETAILS = 'customer-details',\n  CUSTOMER_INFO = 'customer-info',\n  LOGS = 'logs',\n  OBJECTS = 'objects',\n  PALMS = 'palms',\n  TICKETS = 'tickets',\n  TICKET_DETAILS = 'ticket-details',\n  TICKET_INFO = 'ticket-info',\n  TICKET_LOGS = 'ticket-logs',\n  STATS_OVERALL_VIEW_LIST = \"stats-overall-view-list\",\n  STATS_OVERALL_VIEW = \"stats-overall-view\",\n  ENTRANCES = 'entrances'\n}\n","export enum TicketType {\n  K = 'K',\n  M = 'M',\n  Z = 'Z',\n  N = 'N',\n  P = 'P',\n  U = 'U',\n  R = 'R',\n}\n","export enum BookingType {\n  NORMAL = 'NORMAL',\n  ABO = 'ABO',\n  INFIX = 'INFIX',\n  SERVICE = 'SERVICE',\n  POINTS = 'POINTS',\n}\n","export enum BookingDisabledOption {\n  ADMIN = 'ADMIN',\n  BAN = 'BAN',\n  STORNO = 'STORNO',\n  MISTAKE = 'MISTAKE',\n}\n","export enum CustomerDocumentType {\n  OTHER = 'OTHER',\n  ID_CARD = 'ID_CARD',\n  PASSPORT = 'PASSPORT',\n  STUDENT_CARD = 'STUDENT_CARD',\n  SCHOOL_ID = 'SCHOOL_ID',\n  DRIVING_LICENSE = 'DRIVING_LICENSE',\n}\n","export enum Gender {\n  MALE = 'MALE',\n  FEMALE = 'FEMALE',\n}\n","import { CreateResult, DataProvider, UpdateManyResult } from 'react-admin'\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  updateMany: async (resource, params): Promise<UpdateManyResult> =>\n    Promise.resolve({\n      data: [1],\n    }),\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  create: async (resource, params): Promise<CreateResult<unknown>> =>\n    Promise.resolve({\n      data: { id: 1 },\n    }),\n} as DataProvider\n\nexport default provider\n","import { DataProvider, UpdateResult } from 'react-admin'\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  update: async (resource, params): Promise<UpdateResult<unknown>> =>\n    Promise.resolve({\n      data: { id: 1 },\n    }),\n} as DataProvider\n\nexport default provider\n","import { DataProvider } from 'react-admin'\nimport { ExtendedLog } from '../../logs/extended-log'\n\nconst fakeLogs: ExtendedLog[] = [\n  {\n    id: 1,\n    date: '2021-07-15T08:50:27.2054',\n    ticketCode: 'A',\n    bookingId: 52815,\n    deviceName: 'Device name',\n    text: 'MF',\n    color: 'transparent',\n  },\n  {\n    id: 2,\n    date: '2021-07-15T08:50:27.2054',\n    ticketCode: 'A',\n    bookingId: 52816,\n    deviceName: 'Device name',\n    text: 'MF',\n    color: 'transparent',\n  },\n  {\n    id: 3,\n    date: '2021-07-15T08:50:27.2054',\n    ticketCode: 'A',\n    bookingId: 1111,\n    deviceName: 'Device name',\n    text: 'MF',\n    color: 'transparent',\n  },\n  {\n    id: 4,\n    date: '2021-07-15T08:50:27.2054',\n    ticketCode: 'A',\n    bookingId: 11112,\n    deviceName: 'Device name',\n    text: 'MF',\n    color: 'transparent',\n  },\n  {\n    id: 5,\n    date: '2021-07-15T08:50:27.2054',\n    ticketCode: 'A',\n    bookingId: 16612,\n    deviceName: 'Device name',\n    text: 'MF',\n    color: 'transparent',\n  },\n  {\n    id: 6,\n    date: '2021-07-15T08:50:27.2054',\n    ticketCode: 'A',\n    bookingId: 167782,\n    deviceName: 'Device name',\n    text: 'MF',\n    color: 'transparent',\n  },\n  {\n    id: 7,\n    date: '2021-07-15T08:50:27.2054',\n    ticketCode: 'A',\n    bookingId: 122782,\n    deviceName: 'Device name',\n    text: 'MF',\n    color: 'transparent',\n  },\n  {\n    id: 8,\n    date: '2021-07-15T08:50:27.2054',\n    ticketCode: 'A',\n    bookingId: 189782,\n    deviceName: 'Device name',\n    text: 'MF',\n    color: 'transparent',\n  },\n  {\n    id: 9,\n    date: '2021-07-15T08:50:27.2054',\n    ticketCode: 'A',\n    bookingId: 183332,\n    deviceName: 'Device name',\n    text: 'MF',\n    color: 'transparent',\n  },\n  {\n    id: 10,\n    date: '2021-07-15T08:50:27.2054',\n    ticketCode: 'A',\n    bookingId: 656565,\n    deviceName: 'Device name',\n    text: 'MF',\n    color: 'transparent',\n  },\n]\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getList: (resource, params) =>\n    Promise.resolve({ data: fakeLogs, total: fakeLogs.length }),\n} as DataProvider\n\nexport default provider\n","import { DataProvider } from 'react-admin'\nimport { EventOverallView } from '../../stats/overall-view/event-overall-view'\n\nconst fakeStatsOverallViewList: EventOverallView[] = [\n  {\n    id: 1,\n    name: \"\",\n    dateStart: '2021-07-13T15:11:06.771267',\n    dateEnd: '2021-07-13T15:11:06.771267'\n  },\n  {\n    id: 2,\n    name: \"\",\n    dateStart: '2021-07-13T15:11:06.771267',\n    dateEnd: '2021-07-13T15:11:06.771267'\n  },\n  {\n    id: 3,\n    name: \"\",\n    dateStart: '2021-07-13T15:11:06.771267',\n    dateEnd: '2021-07-13T15:11:06.771267'\n  },\n  {\n    id: 4,\n    name: \"\",\n    dateStart: '2021-07-13T15:11:06.771267',\n    dateEnd: '2021-07-13T15:11:06.771267'\n  },\n  {\n    id: 5,\n    name: \"\",\n    dateStart: '2021-07-13T15:11:06.771267',\n    dateEnd: '2021-07-13T15:11:06.771267'\n  },\n]\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getList: (resource, params) =>\n    Promise.resolve({ data: fakeStatsOverallViewList, total: fakeStatsOverallViewList.length }),\n} as DataProvider\n\nexport default provider","import { DataProvider } from 'react-admin'\nimport { DateTime } from '../../common/date-time'\nimport { OverallView } from '../../stats/overall-view/overall-view'\n\nconst fakeStatsOverallViewList: OverallView[] = [\n  {\n    id: 1,\n    eventName: \"\",\n    capacity: 0,\n    sold: 0,\n    entered: 0,\n    objects: [],\n    date: \"01-01-2021T00:00.00\" as DateTime\n  },\n  {\n    id: 2,\n    eventName: \"\",\n    capacity: 0,\n    sold: 0,\n    entered: 0,\n    objects: [],\n    date: \"01-01-2021T00:00.00\" as DateTime\n  },\n  {\n    id: 3,\n    eventName: \"\",\n    capacity: 0,\n    sold: 0,\n    entered: 0,\n    objects: [],\n    date: \"01-01-2021T00:00.00\" as DateTime\n  },\n  {\n    id: 4,\n    eventName: \"\",\n    capacity: 0,\n    sold: 0,\n    entered: 0,\n    objects: [],\n    date: \"01-01-2021T00:00.00\" as DateTime\n  },\n  {\n    id: 5,\n    eventName: \"\",\n    capacity: 0,\n    sold: 0,\n    entered: 0,\n    objects: [],\n    date: \"01-01-2021T00:00.00\" as DateTime\n  },\n]\n\nconst provider = {\n  getOne: (resource, { id }: { id: string }) => {\n    const found = fakeStatsOverallViewList.find((v) => `${v.id}` === id)\n    if (found) {\n      return Promise.resolve({\n        data: found,\n      })\n    }\n    return Promise.reject(new Error())\n  },\n} as DataProvider\n\nexport default provider","import { DataProvider } from 'react-admin'\nimport { TicketType } from '../../enum/TicketType'\nimport { TicketDetails } from '../../ticket-details/ticket-details'\nimport { BookingType } from '../../enum/BookingType'\nimport { BookingDisabledOption } from '../../enum/BookingDisabledOption'\nimport { CustomerDocumentType } from '../../enum/CustomerDocumentType'\nimport { Gender } from '../../enum/Gender'\n\nconst fakeTicketDetailsList: TicketDetails[] = [\n  {\n    id: 1,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    accessesIds: [10],\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56424,\n        ticketCode: '060000020917',\n        ticketType: TicketType.K,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n      {\n        id: 56425,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.M,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    bookingDisabled: BookingDisabledOption.STORNO,\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    documentNumber: \"12345678901\",\n    nationality: \"Poland\",\n    gender: Gender.MALE,\n    seatId: null,\n    blockId: null,\n    accesses: [],\n    objectName: null,\n    tribuneName: null,\n    blockName: null,\n    rowNumber: null\n  },\n  {\n    id: 2,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    accessesIds: [10],\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56424,\n        ticketCode: '060000020917',\n        ticketType: TicketType.K,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n      {\n        id: 56425,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.M,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    bookingDisabled: BookingDisabledOption.STORNO,\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    documentNumber: \"12345678901\",\n    nationality: \"Poland\",\n    gender: Gender.MALE,\n    seatId: null,\n    blockId: null,\n    accesses: [],\n    objectName: null,\n    tribuneName: null,\n    blockName: null,\n    rowNumber: null\n  },\n  {\n    id: 3,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    accessesIds: [10],\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56424,\n        ticketCode: '060000020917',\n        ticketType: TicketType.K,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n      {\n        id: 56425,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.M,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    bookingDisabled: null,\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    documentNumber: \"12345678901\",\n    nationality: \"Poland\",\n    gender: Gender.MALE,\n    seatId: null,\n    blockId: null,\n    accesses: [],\n    objectName: null,\n    tribuneName: null,\n    blockName: null,\n    rowNumber: null\n  },\n  {\n    id: 4,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    accessesIds: [10],\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56424,\n        ticketCode: '060000020917',\n        ticketType: TicketType.K,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n      {\n        id: 56425,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.M,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    bookingDisabled: null,\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    documentNumber: \"12345678901\",\n    nationality: \"Poland\",\n    gender: Gender.MALE,\n    seatId: null,\n    blockId: null,\n    accesses: [],\n    objectName: null,\n    tribuneName: null,\n    blockName: null,\n    rowNumber: null\n  },\n  {\n    id: 5,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    accessesIds: [10],\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56424,\n        ticketCode: '060000020917',\n        ticketType: TicketType.K,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n      {\n        id: 56425,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.M,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    bookingDisabled: null,\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    documentNumber: \"12345678901\",\n    nationality: \"Poland\",\n    gender: Gender.MALE,\n    seatId: null,\n    blockId: null,\n    accesses: [],\n    objectName: null,\n    tribuneName: null,\n    blockName: null,\n    rowNumber: null\n  },\n  {\n    id: 6,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    accessesIds: [10],\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56424,\n        ticketCode: '060000020917',\n        ticketType: TicketType.K,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n      {\n        id: 56425,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.M,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    bookingDisabled: null,\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    documentNumber: \"12345678901\",\n    nationality: \"Poland\",\n    gender: Gender.MALE,\n    seatId: null,\n    blockId: null,\n    accesses: [],\n    objectName: null,\n    tribuneName: null,\n    blockName: null,\n    rowNumber: null\n  },\n  {\n    id: 7,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    accessesIds: [10],\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56424,\n        ticketCode: '060000020917',\n        ticketType: TicketType.K,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n      {\n        id: 56425,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.M,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    bookingDisabled: null,\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    documentNumber: \"12345678901\",\n    nationality: \"Poland\",\n    gender: Gender.MALE,\n    seatId: null,\n    blockId: null,\n    accesses: [],\n    objectName: null,\n    tribuneName: null,\n    blockName: null,\n    rowNumber: null\n  },\n  {\n    id: 8,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    accessesIds: [10],\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56424,\n        ticketCode: '060000020917',\n        ticketType: TicketType.K,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n      {\n        id: 56425,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.M,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    bookingDisabled: null,\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    documentNumber: \"12345678901\",\n    nationality: \"Poland\",\n    gender: Gender.MALE,\n    seatId: null,\n    blockId: null,\n    accesses: [],\n    objectName: null,\n    tribuneName: null,\n    blockName: null,\n    rowNumber: null\n  },\n  {\n    id: 9,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    accessesIds: [10],\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56424,\n        ticketCode: '060000020917',\n        ticketType: TicketType.K,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n      {\n        id: 56425,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.M,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    bookingDisabled: null,\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    documentNumber: \"12345678901\",\n    nationality: \"Poland\",\n    gender: Gender.MALE,\n    seatId: null,\n    blockId: null,\n    accesses: [],\n    objectName: null,\n    tribuneName: null,\n    blockName: null,\n    rowNumber: null\n  },\n  {\n    id: 10,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    accessesIds: [10],\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56424,\n        ticketCode: '060000020917',\n        ticketType: TicketType.K,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n      {\n        id: 56425,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.M,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    bookingDisabled: null,\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    documentNumber: \"12345678901\",\n    nationality: \"Poland\",\n    gender: Gender.MALE,\n    seatId: null,\n    blockId: null,\n    accesses: [],\n    objectName: null,\n    tribuneName: null,\n    blockName: null,\n    rowNumber: null\n  },\n]\n\nconst provider = {\n  getOne: (resource, { id }: { id: string }) => {\n    const found = fakeTicketDetailsList.find((v) => `${v.id}` === id)\n    if (found) {\n      return Promise.resolve({\n        data: found,\n      })\n    }\n    return Promise.reject(new Error())\n  },\n} as DataProvider\n\nexport default provider\n","export enum AccessActivePeriodStartingOptions {\n  NO_LIMIT = 'NO_LIMIT',\n  PURCHASE_DATE = 'PURCHASE_DATE',\n  FIRST_USE = 'FIRST_USE',\n}\n","export enum AccessBonuses {\n  N = 'N',\n  Y = 'Y',\n  Z = 'Z',\n  D = 'D',\n}\n","export enum DayOfWeek {\n  SUNDAY = 'Sunday',\n  MONDAY = 'Monday',\n  TUESDAY = 'Tuesday',\n  WEDNESDAY = 'Wednesday',\n  THURSDAY = 'Thursday',\n  FRIDAY = 'Friday',\n  SATURDAY = 'Saturday',\n}\n","import { DataProvider } from 'react-admin'\nimport { TicketType } from '../../enum/TicketType'\nimport { TicketInfo } from '../../ticket-info/ticket-info'\n\nconst fakeTicketInfoList: TicketInfo[] = [\n  {\n    id: 1,\n    firstname: 'Marek',\n    lastname: 'Pies',\n    pesel: '47120554776',\n    eventId: 0,\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    eventDate: '2021-07-15T08:50:27.2054',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n    bookingId: 0\n  },\n  {\n    id: 2,\n    firstname: 'Janek',\n    lastname: 'Krużganek',\n    pesel: '47120554776',\n    eventId: 0,\n    eventName: 'POGOŃ SZCZECIN 20/21',\n    eventDate: '2021-07-15T08:50:27.2054',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n    bookingId: 0\n  },\n  {\n    id: 3,\n    firstname: 'Wacław',\n    lastname: 'Rymski',\n    pesel: '9988711225',\n    eventId: 0,\n    eventName: 'POGOŃ SZCZECIN 20/21',\n    eventDate: '2021-07-15T08:50:27.2054',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n    bookingId: 0\n  },\n  {\n    id: 4,\n    firstname: 'Mirka',\n    lastname: 'Korzeń',\n    pesel: '56483978659',\n    eventId: 0,\n    eventName: 'POGOŃ SZCZECIN 20/21',\n    eventDate: '2021-07-15T08:50:27.2054',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n    bookingId: 0\n  },\n  {\n    id: 5,\n    firstname: 'Tis',\n    lastname: 'Lomasz',\n    pesel: '47120554776',\n    eventId: 0,\n    eventName: 'POGOŃ SZCZECIN 20/21',\n    eventDate: '2021-07-15T08:50:27.2054',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n    bookingId: 0\n  },\n  {\n    id: 6,\n    firstname: 'Bogdana',\n    lastname: 'Jaruzelska',\n    pesel: '47120554776',\n    eventId: 0,\n    eventName: 'POGOŃ SZCZECIN 20/21',\n    eventDate: '2021-07-15T08:50:27.2054',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n    bookingId: 0\n  },\n  {\n    id: 7,\n    firstname: 'Jeremi',\n    lastname: 'Pomidor',\n    pesel: '12345678900',\n    eventId: 0,\n    eventName: 'POGOŃ SZCZECIN 20/21',\n    eventDate: '2021-07-15T08:50:27.2054',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n    bookingId: 0\n  },\n  {\n    id: 8,\n    firstname: 'Roman',\n    lastname: 'Zoman',\n    pesel: '13243567890',\n    eventId: 0,\n    eventName: 'POGOŃ SZCZECIN 20/21',\n    eventDate: '2021-07-15T08:50:27.2054',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n    bookingId: 0\n  },\n  {\n    id: 9,\n    firstname: 'Bacha',\n    lastname: 'Kaszalot',\n    pesel: '98097612678',\n    eventId: 0,\n    eventName: 'POGOŃ SZCZECIN 20/21',\n    eventDate: '2021-07-15T08:50:27.2054',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n    bookingId: 0\n  },\n  {\n    id: 10,\n    firstname: 'Jadwiga',\n    lastname: 'Ogórek',\n    pesel: '47120554776',\n    eventId: 0,\n    eventName: 'POGOŃ SZCZECIN 20/21',\n    eventDate: '2021-07-15T08:50:27.2054',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n    bookingId: 0\n  },\n]\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getList: (resource, params) =>\n    Promise.resolve({\n      data: fakeTicketInfoList,\n      total: fakeTicketInfoList.length,\n    }),\n} as DataProvider\n\nexport default provider\n","import { DataProvider } from 'react-admin'\nimport { TicketDto } from '../../dto/ticket.dto'\nimport { TicketType } from '../../enum/TicketType'\n\nconst fakeTickets: TicketDto[] = [\n  {\n    id: 1,\n    ticketCode: 'A',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52815,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n  {\n    id: 2,\n    ticketCode: 'A',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52816,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n  {\n    id: 3,\n    ticketCode: '010000011492',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52817,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n  {\n    id: 4,\n    ticketCode: '411000006572',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52818,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n  {\n    id: 5,\n    ticketCode: '871000006824',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52819,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n  {\n    id: 6,\n    ticketCode: '370000011495',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52820,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n  {\n    id: 7,\n    ticketCode: '450000011501',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52821,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n  {\n    id: 8,\n    ticketCode: '630000011502',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52822,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n  {\n    id: 9,\n    ticketCode: '020000011503',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52823,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n  {\n    id: 10,\n    ticketCode: '310000011504',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52824,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n]\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getList: (resource, params) =>\n    Promise.resolve({ data: fakeTickets, total: fakeTickets.length }),\n} as DataProvider\n\nexport default provider\n","import { DataProvider } from 'react-admin'\nimport { Access } from '../../accesses/access'\nimport { AccessActivePeriodStartingOptions } from '../../enum/AccessActivePeriodStartingOptions'\nimport { AccessBonuses } from '../../enum/AccessBonuses'\nimport { DayOfWeek } from '../../enum/DayOfWeek'\n\nconst fakeAccesses: Access[] = [\n  {\n    id: 1,\n    name: 'access1',\n    bonus: AccessBonuses.N,\n    entranceId: 0,\n    allowReenter: false,\n    multipleEntry: false,\n    multiple: 0,\n    usePriority: 0,\n    isTicketUnlockWithNextDay: false,\n    releaseTime: '2021-07-15T08:50:27.2054',\n    releaseDayOfWeek: DayOfWeek.FRIDAY,\n    releaseDayOfMonth: 1,\n    delay: '',\n    activePeriod: '',\n    activePeriodStartingFrom: AccessActivePeriodStartingOptions.FIRST_USE,\n    variantsIds: [],\n    accessDatesIds: [],\n    createdById: 0,\n    modifiedById: 0,\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    createdByName: \"abc\",\n    modifiedByName: \"abc\"\n  },\n  {\n    id: 2,\n    name: 'access2',\n    bonus: AccessBonuses.N,\n    entranceId: 0,\n    allowReenter: false,\n    multipleEntry: false,\n    multiple: 0,\n    usePriority: 0,\n    isTicketUnlockWithNextDay: false,\n    releaseTime: '2021-07-15T08:50:27.2054',\n    releaseDayOfWeek: DayOfWeek.FRIDAY,\n    releaseDayOfMonth: 1,\n    delay: '',\n    activePeriod: '',\n    activePeriodStartingFrom: AccessActivePeriodStartingOptions.FIRST_USE,\n    variantsIds: [],\n    accessDatesIds: [],\n    createdById: 0,\n    modifiedById: 0,\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    createdByName: \"abc\",\n    modifiedByName: \"abc\"\n  },\n  {\n    id: 3,\n    name: 'access3',\n    bonus: AccessBonuses.N,\n    entranceId: 0,\n    allowReenter: false,\n    multipleEntry: false,\n    multiple: 0,\n    usePriority: 0,\n    isTicketUnlockWithNextDay: false,\n    releaseTime: '2021-07-15T08:50:27.2054',\n    releaseDayOfWeek: DayOfWeek.FRIDAY,\n    releaseDayOfMonth: 1,\n    delay: '',\n    activePeriod: '',\n    activePeriodStartingFrom: AccessActivePeriodStartingOptions.FIRST_USE,\n    variantsIds: [],\n    accessDatesIds: [],\n    createdById: 0,\n    modifiedById: 0,\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    createdByName: \"abc\",\n    modifiedByName: \"abc\"\n  },\n  {\n    id: 4,\n    name: 'access4',\n    bonus: AccessBonuses.N,\n    entranceId: 0,\n    allowReenter: false,\n    multipleEntry: false,\n    multiple: 0,\n    usePriority: 0,\n    isTicketUnlockWithNextDay: false,\n    releaseTime: '2021-07-15T08:50:27.2054',\n    releaseDayOfWeek: DayOfWeek.FRIDAY,\n    releaseDayOfMonth: 1,\n    delay: '',\n    activePeriod: '',\n    activePeriodStartingFrom: AccessActivePeriodStartingOptions.FIRST_USE,\n    variantsIds: [],\n    accessDatesIds: [],\n    createdById: 0,\n    modifiedById: 0,\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    createdByName: \"abc\",\n    modifiedByName: \"abc\"\n  },\n  {\n    id: 5,\n    name: 'access5',\n    bonus: AccessBonuses.N,\n    entranceId: 0,\n    allowReenter: false,\n    multipleEntry: false,\n    multiple: 0,\n    usePriority: 0,\n    isTicketUnlockWithNextDay: false,\n    releaseTime: '2021-07-15T08:50:27.2054',\n    releaseDayOfWeek: DayOfWeek.FRIDAY,\n    releaseDayOfMonth: 1,\n    delay: '',\n    activePeriod: '',\n    activePeriodStartingFrom: AccessActivePeriodStartingOptions.FIRST_USE,\n    variantsIds: [],\n    accessDatesIds: [],\n    createdById: 0,\n    modifiedById: 0,\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    createdByName: \"abc\",\n    modifiedByName: \"abc\"\n  },\n  {\n    id: 6,\n    name: 'access6',\n    bonus: AccessBonuses.N,\n    entranceId: 0,\n    allowReenter: false,\n    multipleEntry: false,\n    multiple: 0,\n    usePriority: 0,\n    isTicketUnlockWithNextDay: false,\n    releaseTime: '2021-07-15T08:50:27.2054',\n    releaseDayOfWeek: DayOfWeek.FRIDAY,\n    releaseDayOfMonth: 1,\n    delay: '',\n    activePeriod: '',\n    activePeriodStartingFrom: AccessActivePeriodStartingOptions.FIRST_USE,\n    variantsIds: [],\n    accessDatesIds: [],\n    createdById: 0,\n    modifiedById: 0,\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    createdByName: \"abc\",\n    modifiedByName: \"abc\"\n  },\n  {\n    id: 7,\n    name: 'access7',\n    bonus: AccessBonuses.N,\n    entranceId: 0,\n    allowReenter: false,\n    multipleEntry: false,\n    multiple: 0,\n    usePriority: 0,\n    isTicketUnlockWithNextDay: false,\n    releaseTime: '2021-07-15T08:50:27.2054',\n    releaseDayOfWeek: DayOfWeek.FRIDAY,\n    releaseDayOfMonth: 1,\n    delay: '',\n    activePeriod: '',\n    activePeriodStartingFrom: AccessActivePeriodStartingOptions.FIRST_USE,\n    variantsIds: [],\n    accessDatesIds: [],\n    createdById: 0,\n    modifiedById: 0,\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    createdByName: \"abc\",\n    modifiedByName: \"abc\"\n  },\n  {\n    id: 8,\n    name: 'access8',\n    bonus: AccessBonuses.N,\n    entranceId: 0,\n    allowReenter: false,\n    multipleEntry: false,\n    multiple: 0,\n    usePriority: 0,\n    isTicketUnlockWithNextDay: false,\n    releaseTime: '2021-07-15T08:50:27.2054',\n    releaseDayOfWeek: DayOfWeek.FRIDAY,\n    releaseDayOfMonth: 1,\n    delay: '',\n    activePeriod: '',\n    activePeriodStartingFrom: AccessActivePeriodStartingOptions.FIRST_USE,\n    variantsIds: [],\n    accessDatesIds: [],\n    createdById: 0,\n    modifiedById: 0,\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    createdByName: \"abc\",\n    modifiedByName: \"abc\"\n  },\n  {\n    id: 9,\n    name: 'access9',\n    bonus: AccessBonuses.N,\n    entranceId: 0,\n    allowReenter: false,\n    multipleEntry: false,\n    multiple: 0,\n    usePriority: 0,\n    isTicketUnlockWithNextDay: false,\n    releaseTime: '2021-07-15T08:50:27.2054',\n    releaseDayOfWeek: DayOfWeek.FRIDAY,\n    releaseDayOfMonth: 1,\n    delay: '',\n    activePeriod: '',\n    activePeriodStartingFrom: AccessActivePeriodStartingOptions.FIRST_USE,\n    variantsIds: [],\n    accessDatesIds: [],\n    createdById: 0,\n    modifiedById: 0,\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    createdByName: \"abc\",\n    modifiedByName: \"abc\"\n  },\n  {\n    id: 10,\n    name: 'access10',\n    bonus: AccessBonuses.N,\n    entranceId: 0,\n    allowReenter: false,\n    multipleEntry: false,\n    multiple: 0,\n    usePriority: 0,\n    isTicketUnlockWithNextDay: false,\n    releaseTime: '2021-07-15T08:50:27.2054',\n    releaseDayOfWeek: DayOfWeek.FRIDAY,\n    releaseDayOfMonth: 1,\n    delay: '',\n    activePeriod: '',\n    activePeriodStartingFrom: AccessActivePeriodStartingOptions.FIRST_USE,\n    variantsIds: [],\n    accessDatesIds: [],\n    createdById: 0,\n    modifiedById: 0,\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    createdByName: \"abc\",\n    modifiedByName: \"abc\"\n  },\n]\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getList: (resource, params) =>\n    Promise.resolve({ data: fakeAccesses, total: fakeAccesses.length }),\n} as DataProvider\n\nexport default provider\n","export enum EventStatus {\n  INACTIVE = 'INACTIVE',\n  ACTIVE = 'ACTIVE',\n  IN_TRANSITION = 'IN_TRANSITION',\n}\n","import { DataProvider } from 'react-admin'\nimport { EventDto } from '../../dto/event/event.dto'\nimport { EventStatus } from '../../enum/EventStatus'\n\nconst fakeEvents: EventDto[] = [\n  {\n    id: 1,\n    name: \"Event1\",\n    dateStart: '2021-07-15T08:50:27.2054',\n    dateEnd: '2021-07-15T08:50:27.2054',\n    status: EventStatus.INACTIVE,\n    externalId: '1',\n    infix: 'abc123',\n    objectsIds: [1, 2, 3]\n  },\n  {\n    id: 2,\n    name: \"Event2\",\n    dateStart: '2021-07-15T08:50:27.2054',\n    dateEnd: '2021-07-15T08:50:27.2054',\n    status: EventStatus.INACTIVE,\n    externalId: '1',\n    infix: 'abc123',\n    objectsIds: [1, 2, 3]\n  },\n  {\n    id: 3,\n    name: \"Event3\",\n    dateStart: '2021-07-15T08:50:27.2054',\n    dateEnd: '2021-07-15T08:50:27.2054',\n    status: EventStatus.INACTIVE,\n    externalId: '1',\n    infix: 'abc123',\n    objectsIds: [1, 2, 3]\n  },\n  {\n    id: 4,\n    name: \"Event4\",\n    dateStart: '2021-07-15T08:50:27.2054',\n    dateEnd: '2021-07-15T08:50:27.2054',\n    status: EventStatus.INACTIVE,\n    externalId: '1',\n    infix: 'abc123',\n    objectsIds: [1, 2, 3]\n  },\n  {\n    id: 5,\n    name: \"Event5\",\n    dateStart: '2021-07-15T08:50:27.2054',\n    dateEnd: '2021-07-15T08:50:27.2054',\n    status: EventStatus.INACTIVE,\n    externalId: '1',\n    infix: 'abc123',\n    objectsIds: [1, 2, 3]\n  },\n  {\n    id: 6,\n    name: \"Event6\",\n    dateStart: '2021-07-15T08:50:27.2054',\n    dateEnd: '2021-07-15T08:50:27.2054',\n    status: EventStatus.INACTIVE,\n    externalId: '1',\n    infix: 'abc123',\n    objectsIds: [1, 2, 3]\n  },\n  {\n    id: 7,\n    name: \"Event7\",\n    dateStart: '2021-07-15T08:50:27.2054',\n    dateEnd: '2021-07-15T08:50:27.2054',\n    status: EventStatus.INACTIVE,\n    externalId: '1',\n    infix: 'abc123',\n    objectsIds: [1, 2, 3]\n  },\n  {\n    id: 8,\n    name: \"Event8\",\n    dateStart: '2021-07-15T08:50:27.2054',\n    dateEnd: '2021-07-15T08:50:27.2054',\n    status: EventStatus.INACTIVE,\n    externalId: '1',\n    infix: 'abc123',\n    objectsIds: [1, 2, 3]\n  },\n  {\n    id: 9,\n    name: \"Event9\",\n    dateStart: '2021-07-15T08:50:27.2054',\n    dateEnd: '2021-07-15T08:50:27.2054',\n    status: EventStatus.INACTIVE,\n    externalId: '1',\n    infix: 'abc123',\n    objectsIds: [1, 2, 3]\n  },\n  {\n    id: 10,\n    name: \"Event10\",\n    dateStart: '2021-07-15T08:50:27.2054',\n    dateEnd: '2021-07-15T08:50:27.2054',\n    status: EventStatus.INACTIVE,\n    externalId: '1',\n    infix: 'abc123',\n    objectsIds: [1, 2, 3]\n  },\n]\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getList: (resource, params) =>\n    Promise.resolve({ data: fakeEvents, total: fakeEvents.length })\n} as DataProvider\n\nexport default provider","export enum DeviceDirection {\n  IN = 'IN',\n  OUT = 'OUT',\n  INFO = 'INFO',\n}\n","import { DataProvider } from 'react-admin'\nimport { CustomerDetails } from \"../../customer-details/customer-details\";\nimport { CustomerDocumentType } from '../../enum/CustomerDocumentType'\nimport { Gender } from '../../enum/Gender'\n\nconst fakeCustomerDetailsList: CustomerDetails[] = [\n  {\n    id: 1,\n    type: \"MANUAL\",\n    firstname: \"Jan\",\n    lastname: \"Kowalski\",\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    pesel: \"12345678901\",\n    documentNumber: null,\n    nationality: \"PL\",\n    gender: Gender.MALE,\n    bookingsIds: []\n  },\n  {\n    id: 2,\n    type: \"MANUAL\",\n    firstname: \"Jan\",\n    lastname: \"Kowalski\",\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    pesel: \"12345678901\",\n    documentNumber: null,\n    nationality: \"PL\",\n    gender: Gender.MALE,\n    bookingsIds: []\n  },\n  {\n    id: 3,\n    type: \"MANUAL\",\n    firstname: \"Jan\",\n    lastname: \"Kowalski\",\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    pesel: \"12345678901\",\n    documentNumber: null,\n    nationality: \"PL\",\n    gender: Gender.MALE,\n    bookingsIds: []\n  },\n  {\n    id: 4,\n    type: \"MANUAL\",\n    firstname: \"Jan\",\n    lastname: \"Kowalski\",\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    pesel: \"12345678901\",\n    documentNumber: null,\n    nationality: \"PL\",\n    gender: Gender.MALE,\n    bookingsIds: []\n  },\n  {\n    id: 5,\n    type: \"MANUAL\",\n    firstname: \"Jan\",\n    lastname: \"Kowalski\",\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    pesel: \"12345678901\",\n    documentNumber: null,\n    nationality: \"PL\",\n    gender: Gender.MALE,\n    bookingsIds: []\n  },\n  {\n    id: 6,\n    type: \"MANUAL\",\n    firstname: \"Jan\",\n    lastname: \"Kowalski\",\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    pesel: \"12345678901\",\n    documentNumber: null,\n    nationality: \"PL\",\n    gender: Gender.MALE,\n    bookingsIds: []\n  },\n  {\n    id: 7,\n    type: \"MANUAL\",\n    firstname: \"Jan\",\n    lastname: \"Kowalski\",\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    pesel: \"12345678901\",\n    documentNumber: null,\n    nationality: \"PL\",\n    gender: Gender.MALE,\n    bookingsIds: []\n  },\n  {\n    id: 8,\n    type: \"MANUAL\",\n    firstname: \"Jan\",\n    lastname: \"Kowalski\",\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    pesel: \"12345678901\",\n    documentNumber: null,\n    nationality: \"PL\",\n    gender: Gender.MALE,\n    bookingsIds: []\n  },\n  {\n    id: 9,\n    type: \"MANUAL\",\n    firstname: \"Jan\",\n    lastname: \"Kowalski\",\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    pesel: \"12345678901\",\n    documentNumber: null,\n    nationality: \"PL\",\n    gender: Gender.MALE,\n    bookingsIds: []\n  },\n  {\n    id: 10,\n    type: \"MANUAL\",\n    firstname: \"Jan\",\n    lastname: \"Kowalski\",\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    pesel: \"12345678901\",\n    documentNumber: null,\n    nationality: \"PL\",\n    gender: Gender.MALE,\n    bookingsIds: []\n  },\n]\n\nconst provider = {\n  getOne: (resource, { id }: { id: string }) => {\n    const found = fakeCustomerDetailsList.find((c) => `${c.id}` === id)\n    if(found) {\n      return Promise.resolve({\n        data: found\n      })\n    }\n    return Promise.reject(new Error())\n  }\n} as DataProvider\n\nexport default provider","import { DataProvider } from 'react-admin'\nimport { CustomerInfo } from '../../customer-info/customer-info'\n\nconst fakeCustomerInfoList: CustomerInfo[] = [\n  {\n    id: 1,\n    firstname: \"jan\",\n    lastname: \"kowalski\",\n    pesel: \"12345678901\",\n    documentNumber: \"12345678901\"\n  },\n  {\n    id: 2,\n    firstname: \"jan\",\n    lastname: \"kowalski\",\n    pesel: \"12345678901\",\n    documentNumber: \"12345678901\"\n  },\n  {\n    id: 3,\n    firstname: \"jan\",\n    lastname: \"kowalski\",\n    pesel: \"12345678901\",\n    documentNumber: \"12345678901\"\n  },\n  {\n    id: 4,\n    firstname: \"jan\",\n    lastname: \"kowalski\",\n    pesel: \"12345678901\",\n    documentNumber: \"12345678901\"\n  },\n  {\n    id: 5,\n    firstname: \"jan\",\n    lastname: \"kowalski\",\n    pesel: \"12345678901\",\n    documentNumber: \"12345678901\"\n  },\n  {\n    id: 6,\n    firstname: \"jan\",\n    lastname: \"kowalski\",\n    pesel: \"12345678901\",\n    documentNumber: \"12345678901\"\n  },\n  {\n    id: 7,\n    firstname: \"jan\",\n    lastname: \"kowalski\",\n    pesel: \"12345678901\",\n    documentNumber: \"12345678901\"\n  },\n  {\n    id: 8,\n    firstname: \"jan\",\n    lastname: \"kowalski\",\n    pesel: \"12345678901\",\n    documentNumber: \"12345678901\"\n  },\n  {\n    id: 9,\n    firstname: \"jan\",\n    lastname: \"kowalski\",\n    pesel: \"12345678901\",\n    documentNumber: \"12345678901\"\n  },\n  {\n    id: 10,\n    firstname: \"jan\",\n    lastname: \"kowalski\",\n    pesel: \"12345678901\",\n    documentNumber: \"12345678901\"\n  },\n]\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getList: (resource, params) =>\n    Promise.resolve({ data: fakeCustomerInfoList, total: fakeCustomerInfoList.length })\n} as DataProvider\n\nexport default provider","import { DataProvider } from 'react-admin'\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getList: (resource, params) =>\n    Promise.resolve({ data: {}, total: 0 }),\n} as DataProvider\n\nexport default provider","import { DataProvider } from \"react-admin\"\nimport { CompanyDto } from \"../../dto/company.dto\"\n\nconst fakeCompanies: CompanyDto[] = [\n  {\n    id: 0,\n    name: \"0\",\n    usersIds: [],\n    eventsIds: []\n  },\n  {\n    id: 1,\n    name: \"1\",\n    usersIds: [],\n    eventsIds: []\n  },\n  {\n    id: 2,\n    name: \"2\",\n    usersIds: [],\n    eventsIds: []\n  },\n  {\n    id: 3,\n    name: \"3\",\n    usersIds: [],\n    eventsIds: []\n  },\n  {\n    id: 4,\n    name: \"4\",\n    usersIds: [],\n    eventsIds: []\n  },\n  {\n    id: 5,\n    name: \"5\",\n    usersIds: [],\n    eventsIds: []\n  },\n  {\n    id: 6,\n    name: \"6\",\n    usersIds: [],\n    eventsIds: []\n  },\n  {\n    id: 7,\n    name: \"7\",\n    usersIds: [],\n    eventsIds: []\n  },\n  {\n    id: 8,\n    name: \"8\",\n    usersIds: [],\n    eventsIds: []\n  },\n  {\n    id: 9,\n    name: \"9\",\n    usersIds: [],\n    eventsIds: []\n  },\n]\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getList: (resource, params) =>\n    Promise.resolve({ data: fakeCompanies, total: fakeCompanies.length })\n} as DataProvider\n\nexport default provider","import { DataProvider } from 'react-admin'\nimport { ObjectDto } from '../../dto/object.dto'\n\nconst fakeObjects: ObjectDto[] = [\n  {\n    id: 0,\n    name: \"0\",\n    tribunesIds: [],\n    eventsIds: []\n  },\n  {\n    id: 1,\n    name: \"1\",\n    tribunesIds: [],\n    eventsIds: []\n  },\n  {\n    id: 2,\n    name: \"2\",\n    tribunesIds: [],\n    eventsIds: []\n  },\n  {\n    id: 3,\n    name: \"3\",\n    tribunesIds: [],\n    eventsIds: []\n  },\n  {\n    id: 4,\n    name: \"4\",\n    tribunesIds: [],\n    eventsIds: []\n  },\n  {\n    id: 5,\n    name: \"5\",\n    tribunesIds: [],\n    eventsIds: []\n  },\n  {\n    id: 6,\n    name: \"6\",\n    tribunesIds: [],\n    eventsIds: []\n  },\n  {\n    id: 7,\n    name: \"7\",\n    tribunesIds: [],\n    eventsIds: []\n  },\n  {\n    id: 8,\n    name: \"8\",\n    tribunesIds: [],\n    eventsIds: []\n  },\n  {\n    id: 9,\n    name: \"9\",\n    tribunesIds: [],\n    eventsIds: []\n  },\n]\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getList: (resource, params) =>\n    Promise.resolve({ data: fakeObjects, total: fakeObjects.length })\n} as DataProvider\n\nexport default provider","import { DataProvider } from 'react-admin';\nimport { PalmDto } from '../../dto/device/palm/palm.dto';\n\nconst fakePalms: PalmDto[] = []\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getList: (resource, params) =>\n    Promise.resolve({ data: fakePalms, total: fakePalms.length })\n} as DataProvider\n\nexport default provider","import { DataProvider } from 'react-admin'\nimport { EngineDto } from '../../dto/device/engine/engine.dto'\n\nconst fakeEngines: EngineDto[] = []\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getList: (resource, params) =>\n    Promise.resolve({ data: fakeEngines, total: fakeEngines.length })\n} as DataProvider\n\nexport default provider","import { DataProvider } from 'react-admin'\nimport { EntranceDto } from '../../dto/entrance.dto'\n\nconst fakeEntrances: EntranceDto[] = []\n\nconst provider = {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    getList: (resource, params) =>\n        Promise.resolve({ data: fakeEntrances, total: fakeEntrances.length })\n} as DataProvider\n\nexport default provider","import { DataProvider, sanitizeFetchType } from 'react-admin'\nimport { ResourceName } from '../ResourceName'\nimport fakeAccessUsingsProvider from './providers/fake-access-usings.provider'\nimport fakeBookingsProvider from './providers/fake-bookings.provider'\nimport fakeLogsProvider from './providers/fake-logs.provider'\nimport fakeStatsOverallViewListProvider from './providers/fake-stats-overall-view-list.provider'\nimport fakeStatsOverallViewProvider from './providers/fake-stats-overall-view.provider'\nimport fakeTicketDetailsProvider from './providers/fake-ticket-details.provider'\nimport fakeTicketInfoProvider from './providers/fake-ticket-info.provider'\nimport fakeTicketsProvider from './providers/fake-tickets.provider'\nimport fakeAccessesProvider from './providers/fake-accesses.provider'\nimport fakeEventsProvider from './providers/fake-events.provider'\nimport fakeCustomerDetailsProvider from './providers/fake-customer-details.provider'\nimport fakeCustomerInfoProvider from './providers/fake-customer-info.provider'\nimport fakeAccessDatesProvider from './providers/fake-access-dates.provider'\nimport fakeCompaniesProvider from './providers/fake-companies.provider'\nimport fakeObjectsProvider from './providers/fake-objects.provider'\nimport fakePalmsProvider from './providers/fake-palms.provider'\nimport fakeEnginesProvider from './providers/fake-engines.provider'\nimport fakeEntrancesProvider from './providers/fake-entrances.provider'\n\nconst dataProviders: Record<ResourceName, DataProvider> = {\n  [ResourceName.ACCESS_DATES]: fakeAccessDatesProvider,\n  [ResourceName.ACCESSES]: fakeAccessesProvider,\n  [ResourceName.ACCESS_USINGS]: fakeAccessUsingsProvider,\n  [ResourceName.BOOKINGS]: fakeBookingsProvider,\n  [ResourceName.COMPANIES]: fakeCompaniesProvider,\n  [ResourceName.CUSTOMER_DETAILS]: fakeCustomerDetailsProvider,\n  [ResourceName.CUSTOMER_INFO]: fakeCustomerInfoProvider,\n  [ResourceName.ENGINES]: fakeEnginesProvider,\n  [ResourceName.ENTRANCES]: fakeEntrancesProvider,\n  [ResourceName.EVENTS]: fakeEventsProvider,\n  [ResourceName.LOGS]: fakeLogsProvider,\n  [ResourceName.OBJECTS]: fakeObjectsProvider,\n  [ResourceName.PALMS]: fakePalmsProvider,\n  [ResourceName.TICKETS]: fakeTicketsProvider,\n  [ResourceName.TICKET_INFO]: fakeTicketInfoProvider,\n  [ResourceName.TICKET_DETAILS]: fakeTicketDetailsProvider,\n  [ResourceName.TICKET_LOGS]: fakeLogsProvider,\n  [ResourceName.STATS_OVERALL_VIEW]: fakeStatsOverallViewProvider,\n  [ResourceName.STATS_OVERALL_VIEW_LIST]: fakeStatsOverallViewListProvider,\n}\n\nexport default (\n  fetchType: string,\n  resource: string,\n  params: unknown,\n): Promise<unknown> => {\n  const selectedProvider = dataProviders[resource as ResourceName]\n  const type = sanitizeFetchType(fetchType)\n  return selectedProvider[type](resource, params)\n}\n","import { AuthProvider } from 'react-admin'\n\nconst authProvider: AuthProvider = {\n  login: () => Promise.resolve(),\n  logout: () => Promise.resolve(),\n  checkError: () => Promise.resolve(),\n  checkAuth: () => Promise.resolve(),\n  getPermissions: () => Promise.resolve(new Set([])),\n  getIdentity: () =>\n    Promise.resolve({\n      id: 'no-auth',\n      fullName: 'no-auth',\n    }),\n}\n\nexport default authProvider\n","export type ContentRangeHeaderValue = `bytes ${number}-${number}/${number}`\n\nexport const contentRangeParser = (headerValue: ContentRangeHeaderValue) => {\n  if (!headerValue) {\n    // 'content-range' header should exist otherwise pagination doesn't work\n    return {\n      total: 0,\n    }\n  }\n  const summary = headerValue.split(' ')[1]\n  const split = summary.split('-')\n  const rangeFrom = split[0]\n  const summarySecondPartSplit = split[1].split('/')\n  const rangeTo = summarySecondPartSplit[0]\n  const total = summarySecondPartSplit[1]\n  return {\n    rangeFrom: parseInt(rangeFrom, 10),\n    rangeTo: parseInt(rangeTo, 10),\n    total: parseInt(total, 10),\n  }\n}\n","import { fetchUtils } from 'react-admin'\nimport { ContentRangeHeaderValue, contentRangeParser } from './header.parser'\n\nconst getToken = () => localStorage.getItem('token') as string\n\nconst baseHeaders: HeadersInit = {\n  'Content-Type': 'application/json',\n}\n\nconst authHeaders = (token = getToken()): HeadersInit => ({\n  ...baseHeaders,\n  Authorization: `Bearer ${token}`,\n})\n\nconst getWithHeaders = <T>(url: string, headers: HeadersInit) =>\n  fetchUtils\n    .fetchJson(url, {\n      method: 'GET',\n      headers: new Headers(headers),\n    })\n    .then(({ json }) => json as Promise<T>)\n\nconst postWithHeaders = <T, K>(url: string, body: T, headers: HeadersInit) =>\n  fetchUtils\n    .fetchJson(url, {\n      method: 'POST',\n      body: JSON.stringify(body),\n      headers: new Headers(headers),\n    })\n    .then(({ json }) => json as Promise<K>)\n\nexport const get = <T>(baseUrl: string, path?: string) =>\n  getWithHeaders<T>(`${baseUrl}${path || ''}`, authHeaders())\n\nexport const getWithToken = <T>(url: string, token: string) =>\n  getWithHeaders<T>(url, authHeaders(token))\n\nexport const getByConditions = <T>(\n  baseUrl: string,\n  path: string,\n): Promise<T[]> =>\n  getWithHeaders<T[]>(`${baseUrl}/GetByConditions/${path}`, authHeaders())\n\nexport const getWithPagination = <T>(baseUrl: string, path: string) =>\n  fetchUtils\n    .fetchJson(`${baseUrl}${path}`, {\n      method: 'GET',\n      headers: new Headers(authHeaders()),\n    })\n    .then(({ json, headers }) =>\n      Promise.resolve({\n        data: json as T,\n        range: contentRangeParser(\n          headers.get('content-range') as ContentRangeHeaderValue,\n        ),\n      }),\n    )\n\nexport const authPost = <T, K>(url: string, body: T) =>\n  postWithHeaders<T, K>(url, body, baseHeaders)\n\nexport const post = <T, K>(url: string, body: T) =>\n  postWithHeaders<T, K>(url, body, authHeaders())\n\nexport const patch = <T, K>(baseUrl: string, body: T) =>\n  fetchUtils\n    .fetchJson(baseUrl, {\n      method: 'PATCH',\n      body: JSON.stringify(body),\n      headers: new Headers(authHeaders()),\n    })\n    .then(({ json }) => json as Promise<K>)\n\nexport const put = <T, K>(baseUrl: string, body: T) =>\n  fetchUtils\n    .fetchJson(baseUrl, {\n      method: 'PUT',\n      body: JSON.stringify(body),\n      headers: new Headers(authHeaders()),\n    })\n    .then(({ json }) => json as Promise<K>)\n","const API_V1 = `${process.env.REACT_APP_API_BASE_URL}/api/v1`\nexport const AUTH_URL = `${API_V1}/Authorization/Authenticate`\nexport const ROLES_URL = `${API_V1}/User/GetRoles`\nexport const ACCESS_USINGS = `${API_V1}/ticketManagement/AccessUsings`\nexport const ACCESSES_URL = `${API_V1}/ticketManagement/Accesses`\nexport const ACCESS_DATES = `${API_V1}/ticketManagement/AccessDates`\nexport const BOOKINGS_URL = `${API_V1}/ticketManagement/Bookings`\nexport const CUSTOMERS_URL = `${API_V1}/ticketManagement/Customers`\nexport const EVENTS_URL = `${API_V1}/ticketManagement/Events`\nexport const EXTENDED_LOGS_URL = `${API_V1}/ticketManagement/Logs/GetExtendedLogByConditions`\nexport const TICKETS_URL = `${API_V1}/ticketManagement/Tickets`\nexport const VARIANTS_URL = `${API_V1}/ticketManagement/Variants`\nexport const SEATS_URL = `${API_V1}/ticketManagement/Seats`\nexport const BLOCKS_URL = `${API_V1}/ticketManagement/Blocks`\nexport const TRIBUNES_URL = `${API_V1}/ticketManagement/Tribunes`\nexport const OBJECTS_URL = `${API_V1}/ticketManagement/Objects`\nexport const ENGINES_URL = `${API_V1}/deviceManagement/Engines`\nexport const PALMS_URL = `${API_V1}/deviceManagement/Palms`\nexport const COMPANIES_URL = `${API_V1}/Administrator/GetCompaniesByConditions`\nexport const USERS_URL = `${API_V1}/Administrator/GetUserById/`\nexport const ENTRANCES_URL = `${API_V1}/deviceManagement/Entrances`","import { AuthProvider } from 'react-admin'\nimport { authPost, getWithToken } from '../common/fetch.utils'\nimport { AuthDto } from '../dto/auth.dto'\nimport { AUTH_URL, ROLES_URL } from '../api-urls'\nimport { AuthRequest } from './auth.request'\nimport { RoleDto } from '../dto/role.dto'\n\nconst authProvider: AuthProvider = {\n  login: async ({ username, password }) => {\n    const { token } = await authPost<AuthRequest, AuthDto>(AUTH_URL, {\n      login: username,\n      password,\n    })\n    const roleDtos = await getWithToken<RoleDto[]>(ROLES_URL, token)\n    const roles = roleDtos.map((r) => r.name)\n    localStorage.setItem('username', username)\n    localStorage.setItem('token', token)\n    localStorage.setItem('roles', roles.join())\n  },\n  logout: () => {\n    localStorage.removeItem('username')\n    localStorage.removeItem('token')\n    localStorage.removeItem('roles')\n    return Promise.resolve()\n  },\n  checkError: ({ status }) => {\n    if (status === 401 || status === 403) {\n      localStorage.removeItem('username')\n      localStorage.removeItem('token')\n      localStorage.removeItem('roles')\n      return Promise.reject()\n    }\n    return Promise.resolve()\n  },\n  checkAuth: () =>\n    localStorage.getItem('token') ? Promise.resolve() : Promise.reject(),\n  getPermissions: (): Promise<Set<string>> => {\n    const roles = localStorage.getItem('roles') as string\n    return Promise.resolve(new Set(roles?.split(',') || []))\n  },\n  getIdentity: () =>\n    Promise.resolve({\n      id: localStorage.getItem('username') as string,\n    }),\n}\n\nexport default authProvider\n","import { AccessUsingDto } from \"../dto/access-using.dto\"\n\nconst mapping: Partial<Record<keyof AccessUsingDto, string>> = {\n  id: 'au=>au.Id',\n  date: 'au=>au.Date',\n  direction: 'au=>au.Direction',\n  active: 'au=>au.Active',\n  ticketId: 'au=>au.TicketId',\n  accessId: 'au=>au.AccessId'\n}\n\nexport const mapSortAccessUsingsParam = (key: keyof AccessUsingDto) => mapping[key]","export enum Authority {\n  VIEW_LOGS,\n  VIEW_STATS_OVERALL_VIEW,\n  VIEW_EVENTS,\n  EDIT_EVENTS,\n  CREATE_EVENTS,\n}","import { AccessUsingDto } from \"../dto/access-using.dto\"\n\nconst mapping: Partial<\n  Record<keyof AccessUsingDto, (lambdaParameter: string, value: string | number) => string>\n> = {\n  id: (lambdaParameter, value) => `${(lambdaParameter)}.Id.ToString().Contains(\"${value}\")`,\n  ticketId: (lambdaParameter, value) => `\"${value}\".Contains(${(lambdaParameter)}.TicketId.ToString())`,\n  accessId: (lambdaParameter, value) => `${(lambdaParameter)}.AccessId.ToString().Contains(\"${value}\")`,\n}\n\nexport const getFilterMapper = (key: keyof AccessUsingDto) =>\n  mapping[key] as (lambdaParameter: string, value: string | number) => string\n","import {\n  CreateParams,\n  CreateResult,\n  DataProvider,\n  UpdateManyParams,\n  UpdateManyResult,\n  GetListResult\n} from 'react-admin'\nimport { AccessUsingsCreateParams } from './access-usings-create.params'\nimport { AccessUsingDto } from '../dto/access-using.dto'\nimport { DeviceDirection } from '../enum/DeviceDirection'\nimport { DateTime } from '../common/date-time'\nimport { getByConditions, getWithPagination, patch, post } from '../common/fetch.utils'\nimport { ACCESS_USINGS, TICKETS_URL } from '../api-urls'\nimport { AccessUsingsListParams } from './access-usings-list.params'\nimport { mapSortAccessUsingsParam } from './access-usings-sort.mapper'\nimport { getFilterMapper } from './access-usings-filter.mapper'\nimport { TicketDto } from '../dto/ticket.dto'\nimport { AccessUsing } from './access-using'\n\nconst getFilterParams = (filter: Partial<AccessUsingDto>) => {\n  if (Object.keys(filter).length) {\n    const filterParams = Object.entries(filter).map(([key, value]) => {\n      const mapper = getFilterMapper(key as keyof AccessUsingDto)\n      return mapper(\"au\", value as string)\n    })\n    return filterParams.reduce((p, c) => `${p}&&${c}`)\n  }\n  return \"true\"\n}\n\ntype CreateAccessUsingRequest = Array<\n  Omit<AccessUsingDto, 'id' | 'verifierDeviceId'> & { verifierDeviceId: null }\n>\ntype UpdateAccessUsingRequest = Pick<AccessUsingDto, 'id'> & { active: false }\n\nconst provider = {\n  updateMany: async (\n    resource,\n    { ids, data: { active = false } }: UpdateManyParams,\n  ): Promise<UpdateManyResult> => {\n    const pendingUpdates = ids\n      .map((auId) => ({ id: auId, active } as UpdateAccessUsingRequest))\n      .map((req) =>\n        patch<UpdateAccessUsingRequest, AccessUsingDto>(ACCESS_USINGS, req),\n      )\n    const accessUsings = await Promise.all(pendingUpdates)\n    return Promise.resolve({\n      data: accessUsings.map((au) => au.id),\n    })\n  },\n  create: async (\n    resource,\n    { data }: CreateParams<AccessUsingsCreateParams>,\n  ): Promise<CreateResult> => {\n    const { ticketIds, accessIds } = data\n    const request: CreateAccessUsingRequest = accessIds.flatMap((accessId) =>\n      ticketIds.map((ticketId) => ({\n        date: new Date().toISOString() as DateTime,\n        direction: DeviceDirection.IN,\n        active: true,\n        accessId,\n        ticketId,\n        verifierDeviceId: null,\n      })),\n    )\n    await post<CreateAccessUsingRequest, AccessUsingDto[]>(\n      ACCESS_USINGS,\n      request,\n    )\n    return Promise.resolve({\n      data: { id: 0 }, // need to return something\n    })\n  },\n  getList: async (\n    resource: string,\n    {\n      filter,\n      sort: { field, order },\n      pagination: { page, perPage }\n    }: AccessUsingsListParams\n  ): Promise<GetListResult<AccessUsingDto>> => {\n    const filterParams = `au=>${getFilterParams(filter).toString()}`\n    const queryParams: string[] = []\n    queryParams.push(`sortBy=${mapSortAccessUsingsParam(field)}`)\n    queryParams.push(`sortOrder=${order}`)\n    queryParams.push(`rangeFrom=${page * perPage - perPage}`)\n    queryParams.push(`rangeTo=${page * perPage}`)\n\n    const pathParams = queryParams.reduce((p, c) => `${p}&${c}`)\n    const path = `/${filterParams}?${pathParams}`\n\n    const {\n      data,\n      range: { total }\n    } = await getWithPagination<AccessUsingDto[]>(`${ACCESS_USINGS}/GetByConditions`, path)\n\n    const tickets = await getByConditions<TicketDto>\n      (TICKETS_URL, `t=>${filter?.ticketId?.toString().split(\" \").map((tId) => `t.Id==${tId}`).join(\"||\")}`)\n\n    const accessUsings = data.map(({\n      id, date, direction, active, ticketId, accessId, verifierDeviceId\n    }) => ({\n      id, date, direction, active, ticketId, accessId, verifierDeviceId,\n      ticketCode: tickets.find((ticket) => ticket.id === ticketId)?.ticketCode\n    } as AccessUsing))\n\n    return Promise.resolve({\n      data: accessUsings,\n      total\n    })\n  }\n} as DataProvider\n\nexport default provider\n","import { BookingDto } from '../dto/booking.dto'\n\nconst mapping: Partial<\n  Record<keyof BookingDto, (lambdaParameter: string, value: string | number) => string>\n> = {\n  id: (lambdaParameter, value) => value?.toString().split(\",\").length > 1 ?\n    `\"${value}\".Contains(${(lambdaParameter)}.Id.ToString())` :\n    `${(lambdaParameter)}.Id==${value}`,\n}\n\nexport const getFilterMapper = (key: keyof BookingDto) =>\n  mapping[key] as (lambdaParameters: string, value: string | number) => string","import { BookingDto } from \"../dto/booking.dto\"\n\nconst mapping: Partial<Record<keyof BookingDto, string>> = {\n  id: 'l=>l.Id',\n}\n\nexport const mapSortBookingParam = (key: keyof BookingDto) => mapping[key]\n","import { BookingDto } from \"../dto/booking.dto\";\nimport { EventDto } from \"../dto/event/event.dto\";\nimport { VariantDto } from \"../dto/variant.dto\";\nimport { Booking } from \"./booking\";\n\nexport const mapToBookings = (\n  {\n    id,\n    type,\n    disabled,\n    activeFrom,\n    activeTo,\n    eventId,\n    seatId,\n    blockId,\n    customerId,\n    variantId,\n    ticketsIds,\n    createdAt,\n    modifiedAt\n  }: BookingDto,\n  events: EventDto[],\n  variants: VariantDto[]\n): Booking => {\n  const foundEvent = events.find((event) => event.id === eventId)\n  const foundVariant = variants.find((variant) => variant.id === variantId)\n  return({\n    id,\n    type,\n    disabled,\n    activeFrom,\n    activeTo,\n    eventId,\n    seatId,\n    blockId,\n    customerId,\n    variantId,\n    ticketsIds,\n    createdAt,\n    modifiedAt,\n    eventName: foundEvent?.name,\n    eventDateStart: foundEvent?.dateStart,\n    variantName: foundVariant?.name\n  })\n}","import { DataProvider, UpdateParams, UpdateResult, GetListResult } from 'react-admin'\nimport { getByConditions, getWithPagination, patch } from '../common/fetch.utils'\nimport { BOOKINGS_URL, EVENTS_URL, VARIANTS_URL } from '../api-urls'\nimport { BookingUpdateRequest } from './booking-update.request'\nimport { BookingDto } from '../dto/booking.dto'\nimport { BookingListParams } from './booking-list.params'\nimport { getFilterMapper } from './booking-filter.mapper'\nimport { mapSortBookingParam } from './booking-sort.mapper'\nimport { Booking } from './booking'\nimport { EventDto } from '../dto/event/event.dto'\nimport { mapToBookings } from './bookings.mapper'\nimport { VariantDto } from '../dto/variant.dto'\n\nconst getFilterParams = (filter: Partial<BookingDto>) => {\n  if (Object.keys(filter).length) {\n    const filterParams = Object.entries(filter).map(([key, value]) => {\n      const mapper = getFilterMapper(key as keyof BookingDto)\n      return mapper(\"b\", value as string)\n    })\n    return filterParams.reduce((p, c) => `${p}&&${c}`)\n  }\n  return \"true\"\n}\n\nconst provider = {\n  update: async (\n    resource: string,\n    { data }: UpdateParams<BookingUpdateRequest>,\n  ): Promise<UpdateResult<BookingDto>> => {\n    const booking = await patch<BookingUpdateRequest, BookingDto>(\n      BOOKINGS_URL,\n      data,\n    )\n    return Promise.resolve({\n      data: booking,\n    })\n  },\n  getList: async (\n    resource: string,\n    {\n      filter,\n      sort: { field, order },\n      pagination: { page, perPage },\n    }: BookingListParams\n  ): Promise<GetListResult<Booking>> => {\n    const filterParams = `b=>${getFilterParams(filter).toString()}`\n    const queryParams: string [] = []\n    queryParams.push(`sortBy=${mapSortBookingParam(field)}`)\n    queryParams.push(`sortOrder=${order}`)\n    queryParams.push(`rangeFrom=${page * perPage - perPage}`)\n    queryParams.push(`rangeTo=${page * perPage}`)\n\n    const pathParams = queryParams.reduce((p, c) => `${p}&${c}`)\n    const path = `/${filterParams}?${pathParams}`\n\n    const {\n      data,\n    } = await getWithPagination<BookingDto[]>(`${BOOKINGS_URL}/GetByConditions`, path)\n\n    const eventIds = data.map((booking) => booking.eventId)\n    const events = await getByConditions<EventDto>(EVENTS_URL, `e=>\"${eventIds.join(\",\")}\".Contains(e.Id.ToString())`)\n\n    const variantIds = data.map((booking) => booking.variantId)\n    const variants = await getByConditions<VariantDto>(VARIANTS_URL, `v=>\"${variantIds.join(\",\")}\".Contains(v.Id.ToString())`)\n\n    return {\n      data: data.map((booking) => mapToBookings(booking, events, variants)),\n      total: data.length\n    }\n  }\n} as DataProvider\n\nexport default provider\n","import { ExtendedLogFilterValues } from './extended-log'\n\nconst mapping: Partial<\n  Record<\n    keyof ExtendedLogFilterValues,\n    (lambdaParameter: string, value: string | number) => string\n  >\n> = {\n  ticketCode: (lambdaParameter, value) => `${(lambdaParameter)}.TicketCode.Contains(\"${value}\")`,\n  bookingId: (lambdaParameter, value) => value?.toString().split(\",\").length > 1 ?\n    `\"${value}\".Contains(${(lambdaParameter)}.BookingId.ToString())` :\n    `${(lambdaParameter)}.BookingId.ToString().Contains(\"${value}\")`,\n  date: (lambdaParameter, value) => `${(lambdaParameter)}.Date > DateTimeOffset.FromUnixTimeMilliseconds(${value.toString().split(';')[0]}).DateTime && l.Date < DateTimeOffset.FromUnixTimeMilliseconds(${value.toString().split(';')[1]}).DateTime`,\n  deviceName: (lambdaParameter, value) => `${(lambdaParameter)}.Device.Name.Contains(\"${value}\")`,\n  text: (lambdaParameter, value) => `${(lambdaParameter)}.Data.Text.Contains(\"${value}\")`,\n  event: (lambdaParameter, value) => `${(lambdaParameter)}.Booking.Event.Name.Contains(\"${value}\")`\n}\n\nexport const getFilterMapper = (key: keyof ExtendedLogFilterValues) =>\n  mapping[key] as (lambdaParameter: string, value: string | number) => string\n","import { ExtendedLog } from './extended-log'\n\nconst mapping: Partial<Record<keyof ExtendedLog, string>> = {\n  id: 'l=>l.Id',\n  date: 'l=>l.Date',\n  deviceName: 'l=>l.Device.Name',\n  ticketCode: 'l=>l.TicketCode',\n  bookingId: 'l=>l.BookingId',\n}\n\nexport const mapSortLogParam = (key: keyof ExtendedLog) => mapping[key]\n","import { ExtendedLog } from './extended-log'\nimport { ExtendedLogDto } from '../dto/extended-log.dto'\n\nexport const mapToExtendedLog = (\n  {\n    id,\n    date,\n    ticketCode,\n    bookingId,\n    scheme,\n    device: { name: deviceName },\n    data,\n  }: ExtendedLogDto,\n  locale: string,\n): ExtendedLog => {\n  const logEntry = data.filter(({ language }) => language.includes(locale))[0]\n  return {\n    id,\n    date,\n    deviceName,\n    ticketCode,\n    text: logEntry?.text || scheme,\n    color: data[0].color || 'transparent',\n    bookingId,\n  }\n}\n","import { DataProvider, GetListResult } from 'react-admin'\nimport { EXTENDED_LOGS_URL } from '../api-urls'\nimport { getWithPagination } from '../common/fetch.utils'\nimport { ExtendedLogDto } from '../dto/extended-log.dto'\nimport { ExtendedLog, ExtendedLogFilterValues } from './extended-log'\nimport { LogListParams } from './log-list.params'\nimport { getFilterMapper } from './log-filter.mapper'\nimport { mapSortLogParam } from './log-sort.mapper'\nimport { mapToExtendedLog } from './extended-logs.mapper'\n\nconst getFilterParams = (\n  partialValues: Partial<ExtendedLogFilterValues>,\n): string => {\n  if (Object.keys(partialValues).length) {\n    const filterParams = Object.entries(partialValues).map(([key, value]) => {\n      const mapper = getFilterMapper(key as keyof ExtendedLogFilterValues)\n      return mapper('l', value as string)\n    })\n    return filterParams.reduce((p, c) => `${p}&&${c}`)\n  }\n  return 'true'\n}\n\nconst provider = {\n  getList: async (\n    resource: string,\n    {\n      filter: { locale, ...partialFilterValues },\n      sort: { field, order },\n      pagination: { page, perPage },\n    }: LogListParams,\n  ): Promise<GetListResult<ExtendedLog>> => {\n    const filterParams = `l=>${getFilterParams(partialFilterValues)}`\n    const queryParams: string[] = []\n    queryParams.push(`sortBy=${mapSortLogParam(field)}`)\n    queryParams.push(`sortOrder=${order}`)\n    queryParams.push(`rangeFrom=${page * perPage - perPage}`)\n    queryParams.push(`rangeTo=${page * perPage}`)\n\n    const pathParams = queryParams.reduce((p, c) => `${p}&${c}`)\n    const path = `/${filterParams}?${pathParams}`\n\n    const {\n      data,\n      range: { total },\n    } = await getWithPagination<ExtendedLogDto[]>(EXTENDED_LOGS_URL, path)\n    const extendedLogs = data.map((dto) => mapToExtendedLog(dto, locale))\n\n    return Promise.resolve({\n      data: extendedLogs,\n      total,\n    })\n  },\n} as DataProvider\n\nexport default provider\n","export const ALL_RESULTS = 'l=>true'\n","import { EventOverallView } from \"./event-overall-view\"\n\nconst mapping: Partial<Record<keyof EventOverallView, string>> = {\n  id: 'e=>e.Id',\n  name: 'e=>e.Name',\n  dateStart: 'e=>e.DateStart',\n  dateEnd: 'e=>e.DateEnd'\n}\n\nexport const mapSortOverallViewParam = (key: keyof EventOverallView) => mapping[key]","import { EventDto } from \"../../dto/event/event.dto\"\nimport { EventOverallView } from \"./event-overall-view\"\n\nexport const mapToEventOverallView = (\n  event: EventDto\n): EventOverallView => ({\n  id: event.id,\n  name: event.name,\n  dateStart: event.dateStart,\n  dateEnd: event.dateEnd\n})","import { DataProvider, GetListResult } from \"react-admin\"\nimport { EVENTS_URL } from '../../api-urls'\nimport { getWithPagination } from '../../common/fetch.utils'\nimport { ALL_RESULTS } from \"../../common/filter.values\"\nimport { NameFilter } from \"../../common/name.filter\"\nimport { EventDto } from \"../../dto/event/event.dto\"\nimport { EventOverallView } from \"./event-overall-view\"\nimport { mapSortOverallViewParam } from \"./overall-view-list-sort.mapper\"\nimport { mapToEventOverallView } from \"./overall-view-list.mapper\"\n\nconst provider = {\n  getList: async (\n    resource: string,\n    { filter, sort: { order, field }, pagination: { page, perPage } }: NameFilter,\n  ): Promise<GetListResult<EventOverallView>> => {\n    const queryParams: string[] = []\n    queryParams.push(`sortBy=${mapSortOverallViewParam(field)}`)\n    queryParams.push(`sortOrder=${order}`)\n    queryParams.push(`rangeFrom=${page * perPage - perPage}`)\n    queryParams.push(`rangeTo=${page * perPage}`)\n\n    const pathParams = queryParams.reduce((p, c) => `${p}&${c}`)\n    const path = `${filter.name ? `e=>e.Name.Contains(\"${filter.name}\")` : ALL_RESULTS}?${pathParams}`\n\n    const { data, range: { total } } = await getWithPagination<EventDto[]>(\n      `${EVENTS_URL}/GetByConditions/`, path)\n\n    const overallViewList = data.map((event) => mapToEventOverallView(event))\n\n    return {\n      data: overallViewList,\n      total\n    }\n  },\n} as DataProvider\n\nexport default provider","import { BlockDto } from '../../dto/block.dto'\nimport { BookingDto } from '../../dto/booking.dto'\nimport { EventDto } from '../../dto/event/event.dto'\nimport { ObjectDto } from '../../dto/object.dto'\nimport { SeatDto } from '../../dto/seat.dto'\nimport { TribuneDto } from '../../dto/tribune.dto'\nimport { BookingType } from '../../enum/BookingType'\nimport {\n  BlockOverallView,\n  ObjectOverallView,\n  OverallView,\n  TribuneOverallView,\n} from './overall-view'\n\nconst calculateCapacity = (seats: SeatDto[], bookings: BookingDto[]) =>\n  seats.length + bookings.filter((b) => b.seatId == null).length\n\nconst mapToBlockOverallView = (\n  block: BlockDto,\n  seats: SeatDto[],\n  bookings: BookingDto[],\n  enteredBookings: BookingDto[],\n): BlockOverallView => ({\n  id: block.id,\n  name: block.name,\n  capacity: calculateCapacity(seats, bookings),\n  sold: bookings.length,\n  entered: enteredBookings.length,\n  soldNormal: bookings.filter((b) => b.type === BookingType.NORMAL).length,\n  enteredNormal: enteredBookings.filter((b) => b.type === BookingType.NORMAL)\n    .length,\n  soldAbo: bookings.filter((b) => b.type === BookingType.ABO).length,\n  enteredAbo: enteredBookings.filter((b) => b.type === BookingType.ABO).length,\n  soldInfix: bookings.filter((b) => b.type === BookingType.INFIX).length,\n  enteredInfix: enteredBookings.filter((b) => b.type === BookingType.INFIX)\n    .length,\n  soldService: bookings.filter((b) => b.type === BookingType.SERVICE).length,\n  enteredService: enteredBookings.filter((b) => b.type === BookingType.SERVICE)\n    .length,\n  soldPoints: bookings.filter((b) => b.type === BookingType.POINTS).length,\n  enteredPoints: enteredBookings.filter((b) => b.type === BookingType.POINTS)\n    .length,\n})\n\nconst mapToTribuneOverallView = (\n  tribune: TribuneDto,\n  blocks: BlockDto[],\n  seats: SeatDto[],\n  bookings: BookingDto[],\n  enteredBookingIds: number[],\n): TribuneOverallView => ({\n  id: tribune.id,\n  name: tribune.name,\n  capacity: calculateCapacity(seats, bookings),\n  sold: bookings.length,\n  entered: enteredBookingIds.length,\n  blocks: blocks\n    .filter((b) => tribune.blocksIds.includes(b.id))\n    .map((block) => {\n      const filteredSeats = seats.filter((s) => s.blockId === block.id)\n      const filteredBookingIds = block.bookingsIds.concat(\n        filteredSeats.flatMap((s) => s.bookingsIds),\n      )\n      const filteredBookings = bookings.filter((book) =>\n        filteredBookingIds.includes(book.id),\n      )\n      const filteredEnteredBookingIds = enteredBookingIds.filter(\n        (enteredBookingId) => filteredBookingIds.includes(enteredBookingId),\n      )\n      const filteredEnteredBookings = bookings.filter((book) =>\n        filteredEnteredBookingIds.includes(book.id),\n      )\n      return mapToBlockOverallView(\n        block,\n        filteredSeats,\n        filteredBookings,\n        filteredEnteredBookings,\n      )\n    }),\n})\n\nconst mapToObjectOverallView = (\n  object: ObjectDto,\n  tribunes: TribuneDto[],\n  blocks: BlockDto[],\n  seats: SeatDto[],\n  bookings: BookingDto[],\n  enteredBookingIds: number[],\n): ObjectOverallView => ({\n  id: object.id,\n  name: object.name,\n  capacity: calculateCapacity(seats, bookings),\n  sold: bookings.length,\n  entered: enteredBookingIds.length,\n  tribunes: tribunes\n    .filter((t) => object.tribunesIds.includes(t.id))\n    .map((tribune) => {\n      const filteredBlocks = blocks.filter((b) => b.tribuneId === tribune.id)\n      const filteredSeatIds = filteredBlocks.flatMap((b) => b.seatsIds)\n      const filteredSeats = seats.filter((s) => filteredSeatIds.includes(s.id))\n      const filteredBookingIds = filteredBlocks\n        .flatMap((b) => b.bookingsIds)\n        .concat(filteredSeats.flatMap((s) => s.bookingsIds))\n      const filteredBookings = bookings.filter((book) =>\n        filteredBookingIds.includes(book.id),\n      )\n      const filteredEnteredBookingIds = enteredBookingIds.filter(\n        (enteredBookingId) => filteredBookingIds.includes(enteredBookingId),\n      )\n      return mapToTribuneOverallView(\n        tribune,\n        filteredBlocks,\n        filteredSeats,\n        filteredBookings,\n        filteredEnteredBookingIds,\n      )\n    }),\n})\n\nexport const mapToOverallView = (\n  selectedEvent: EventDto,\n  objects: ObjectDto[],\n  tribunes: TribuneDto[],\n  blocks: BlockDto[],\n  seats: SeatDto[],\n  bookings: BookingDto[],\n  enteredBookings: BookingDto[],\n): OverallView => {\n  const enteredBookingIds = enteredBookings.map((book) => book.id)\n  return {\n    id: selectedEvent.id,\n    eventName: selectedEvent.name,\n    capacity: calculateCapacity(seats, bookings),\n    sold: bookings.length,\n    entered: enteredBookings.length,\n    date: selectedEvent.dateStart,\n    objects: objects\n      .filter((o) => selectedEvent.objectsIds.includes(o.id))\n      .map((object) => {\n        const filteredTribunes = tribunes.filter(\n          (t) => t.objectId === object.id,\n        )\n        const filteredBlocks = blocks.filter((b) =>\n          filteredTribunes.flatMap((t) => t.blocksIds).includes(b.id),\n        )\n        const filteredSeatIds = filteredBlocks.flatMap((b) => b.seatsIds)\n        const filteredSeats = seats.filter((s) =>\n          filteredSeatIds.includes(s.id),\n        )\n        const filteredBookingIds = filteredBlocks\n          .flatMap((b) => b.bookingsIds)\n          .concat(filteredSeats.flatMap((s) => s.bookingsIds))\n        const filteredBookings = bookings.filter((book) =>\n          filteredBookingIds.includes(book.id),\n        )\n        const filteredEnteredBookingIds = enteredBookingIds.filter(\n          (enteredBookingId) => filteredBookingIds.includes(enteredBookingId),\n        )\n        return mapToObjectOverallView(\n          object,\n          filteredTribunes,\n          filteredBlocks,\n          filteredSeats,\n          filteredBookings,\n          filteredEnteredBookingIds,\n        )\n      }),\n  }\n}\n","import { DataProvider, GetOneParams, GetOneResult } from 'react-admin'\nimport {\n  BLOCKS_URL,\n  BOOKINGS_URL,\n  EVENTS_URL,\n  OBJECTS_URL,\n  SEATS_URL,\n  TRIBUNES_URL,\n} from '../../api-urls'\nimport { get, getByConditions } from '../../common/fetch.utils'\nimport { BlockDto } from '../../dto/block.dto'\nimport { BookingDto } from '../../dto/booking.dto'\nimport { EventDto } from '../../dto/event/event.dto'\nimport { ObjectDto } from '../../dto/object.dto'\nimport { SeatDto } from '../../dto/seat.dto'\nimport { TribuneDto } from '../../dto/tribune.dto'\nimport { OverallView } from './overall-view'\nimport { mapToOverallView } from './overall-view.mapper'\n\nconst provider = {\n  getOne: async (\n    resource: string,\n    { id: eventId }: GetOneParams,\n  ): Promise<GetOneResult<OverallView>> => {\n    const pendingSelectedEvent = get<EventDto>(EVENTS_URL, `/${eventId}`)\n    const pendingObjects = getByConditions<ObjectDto>(\n      OBJECTS_URL,\n      `o=>o.Events.Any(e => e.Id.Equals(${eventId}))?sortBy=o=>o.Name&sortOrder=ASC`,\n    )\n    const pendingTribunes = getByConditions<TribuneDto>(\n      TRIBUNES_URL,\n      `t=>t.Object.Events.Any(e => e.Id.Equals(${eventId}))?sortBy=t=>t.Name&sortOrder=ASC`,\n    )\n    const pendingBlocks = getByConditions<BlockDto>(\n      BLOCKS_URL,\n      `b=>b.Tribune.Object.Events.Any(e => e.Id.Equals(${eventId}))?sortBy=b=>b.Name&sortOrder=ASC`,\n    )\n    const pendingSeats = getByConditions<SeatDto>(\n      SEATS_URL,\n      `s=>s.Block.Tribune.Object.Events.Any(e => e.Id.Equals(${eventId}))`,\n    )\n    const bookingsCondition = `b=>b.EventId.Equals(${eventId}) && b.Disabled != TicketAPI.Models.Enums.TicketManagement.BookingDisabledOptions.STORNO`\n    const pendingBookings = getByConditions<BookingDto>(\n      BOOKINGS_URL,\n      bookingsCondition,\n    )\n    const pendingEnteredBookings = getByConditions<BookingDto>(\n      BOOKINGS_URL,\n      `${bookingsCondition} && b.Tickets.SelectMany(t => t.AccessUsings).Any(au => au.Active == true && au.Direction.Equals(TicketAPI.Models.Enums.DeviceManagement.DeviceDirections.IN))`,\n    )\n\n    const [\n      selectedEvent,\n      objects,\n      tribunes,\n      blocks,\n      seats,\n      bookings,\n      enteredBookings,\n    ] = await Promise.all([\n      pendingSelectedEvent,\n      pendingObjects,\n      pendingTribunes,\n      pendingBlocks,\n      pendingSeats,\n      pendingBookings,\n      pendingEnteredBookings,\n    ])\n\n    const overallViewData = mapToOverallView(\n      selectedEvent,\n      objects,\n      tribunes,\n      blocks,\n      seats,\n      bookings,\n      enteredBookings,\n    )\n\n    return {\n      data: overallViewData,\n    }\n  },\n} as DataProvider\n\nexport default provider\n","export const buildFilterByIdsCondition = (ids: number[]): string => {\n  const [firstId, ...restIds] = ids\n  return (restIds || []).reduce(\n    (prev, curr) => `${prev as string}||v.Id==${curr}`,\n    `v=>v.Id==${firstId}`,\n  )\n}\n","export const toMapById = <T extends { id: number }>(values: T[]) =>\n  new Map(values.map((v): [number, T] => [v.id, v]))\n\nexport const toUniqueValues = (values: number[]) => Array.from(new Set(values))\n","import { CustomerDto } from '../dto/customer.dto'\nimport { EventDto } from '../dto/event/event.dto'\nimport { TicketDto } from '../dto/ticket.dto'\nimport { VariantDto } from '../dto/variant.dto'\nimport { TicketDetails } from './ticket-details'\nimport { BookingDto } from '../dto/booking.dto'\nimport { AccessUsingDto } from '../dto/access-using.dto'\nimport { Ticket } from './ticket'\nimport { toMapById } from '../common/mapper.utils'\nimport { BlockDto } from '../dto/block.dto'\nimport { TribuneDto } from '../dto/tribune.dto'\nimport { SeatDto } from '../dto/seat.dto'\nimport { ObjectDto } from '../dto/object.dto'\n\nconst mapToTicket = (\n  { id, ticketCode, ticketType, createdAt, accessUsingsIds }: TicketDto,\n  accessUsingById: Map<number, AccessUsingDto>,\n): Ticket => ({\n  id,\n  ticketCode,\n  ticketType,\n  createdAt,\n  accessUsings: accessUsingsIds.map(\n    (auId) => accessUsingById.get(auId) as AccessUsingDto,\n  ),\n})\n\nexport const mapToTicketDetails = (\n  {\n    id: bookingId,\n    disabled: bookingDisabled,\n    type: bookingType,\n    activeFrom,\n    activeTo,\n    createdAt,\n    modifiedAt,\n    seatId,\n    blockId\n  }: BookingDto,\n  {\n    firstname,\n    lastname,\n    pesel,\n    company,\n    birthdate,\n    documentType,\n    documentNumber,\n    nationality,\n    gender\n  }: CustomerDto,\n  event: EventDto | null,\n  { name: variantName, accessesIds }: VariantDto,\n  tickets: TicketDto[],\n  accessUsings: AccessUsingDto[],\n  block: BlockDto | null,\n  tribune: TribuneDto | null,\n  object: ObjectDto | null,\n  seat: SeatDto | null\n): TicketDetails => {\n  const accessUsingById = toMapById(accessUsings)\n  return {\n    id: bookingId,\n    firstname,\n    lastname,\n    eventName: event?.name || null,\n    pesel,\n    variantName,\n    accessesIds,\n    bookingType,\n    activeFrom,\n    activeTo,\n    tickets: tickets.map((t) => mapToTicket(t, accessUsingById)),\n    createdAt,\n    modifiedAt,\n    bookingDisabled,\n    company,\n    birthdate,\n    documentType,\n    documentNumber,\n    nationality,\n    gender,\n    seatId,\n    blockId,\n    objectName: object?.name || null,\n    tribuneName: tribune?.name || null,\n    blockName: block?.name || null,\n    rowNumber: seat?.rowAlias || null,\n    seatNumber: seat?.numberAlias\n  }\n}\n","import { DataProvider, GetOneParams, GetOneResult } from 'react-admin'\nimport {\n  ACCESS_USINGS,\n  BLOCKS_URL,\n  BOOKINGS_URL,\n  CUSTOMERS_URL,\n  EVENTS_URL,\n  OBJECTS_URL,\n  SEATS_URL,\n  TICKETS_URL,\n  TRIBUNES_URL,\n  VARIANTS_URL,\n} from '../api-urls'\nimport { get, getByConditions } from '../common/fetch.utils'\nimport { BookingDto } from '../dto/booking.dto'\nimport { TicketDto } from '../dto/ticket.dto'\nimport { CustomerDto } from '../dto/customer.dto'\nimport { EventDto } from '../dto/event/event.dto'\nimport { buildFilterByIdsCondition } from '../common/condition.builder'\nimport { mapToTicketDetails } from './ticket-details.mapper'\nimport { VariantDto } from '../dto/variant.dto'\nimport { TicketDetails } from './ticket-details'\nimport { toUniqueValues } from '../common/mapper.utils'\nimport { AccessUsingDto } from '../dto/access-using.dto'\nimport { TribuneDto } from '../dto/tribune.dto'\nimport { BlockDto } from '../dto/block.dto'\nimport { SeatDto } from '../dto/seat.dto'\nimport { ObjectDto } from '../dto/object.dto'\n\nconst fetchTicketsWithAccessUsings = async (ticketIds: number[]) => {\n  const tickets = await getByConditions<TicketDto>(\n    TICKETS_URL,\n    buildFilterByIdsCondition(ticketIds),\n  )\n  const accessUsingIds = tickets.flatMap((t) => t.accessUsingsIds)\n  const accessUsings = accessUsingIds.length\n    ? await getByConditions<AccessUsingDto>(\n        ACCESS_USINGS,\n        buildFilterByIdsCondition(toUniqueValues(accessUsingIds)),\n      )\n    : []\n  return {\n    tickets,\n    accessUsings,\n  }\n}\n\nconst provider = {\n  getOne: async (\n    resource: string,\n    { id: bookingId }: GetOneParams,\n  ): Promise<GetOneResult<TicketDetails>> => {\n    const booking = await get<BookingDto>(BOOKINGS_URL, `/${bookingId}`)\n    const { customerId, eventId, variantId } = booking\n\n    const pendingCustomer = get<CustomerDto>(CUSTOMERS_URL, `/${customerId}`)\n    const pendingEvent = eventId ? get<EventDto>(EVENTS_URL, `/${eventId}`) : null\n    const pendingVariant = get<VariantDto>(VARIANTS_URL, `/${variantId}`)\n    const pendingTicketsWithAccessUsings = fetchTicketsWithAccessUsings(\n      booking.ticketsIds,\n    )\n\n    const seat = booking.seatId\n      ? await get<SeatDto>(SEATS_URL, `/${booking.seatId.toString()}`)\n      : null\n\n    const getBlock = () => {\n      if (seat) {\n        return get<BlockDto>(BLOCKS_URL, `/${seat.blockId.toString()}`)\n      }\n      if (booking?.blockId) {\n        return get<BlockDto>(BLOCKS_URL, `/${booking?.blockId?.toString()}`)\n      }\n      return null\n    }\n\n    const block = await getBlock()\n    \n    const tribune = block\n      ? await get<TribuneDto>(TRIBUNES_URL, `/${block?.tribuneId?.toString()}`)\n      : null\n    const object = tribune\n      ? await get<ObjectDto>(OBJECTS_URL, `/${tribune?.objectId?.toString()}`)\n      : null\n\n    const [customer, event, variant, { tickets, accessUsings }] =\n      await Promise.all([\n        pendingCustomer,\n        pendingEvent,\n        pendingVariant,\n        pendingTicketsWithAccessUsings,\n      ])\n\n    return {\n      data: mapToTicketDetails(\n        booking,\n        customer,\n        event,\n        variant,\n        tickets,\n        accessUsings,\n        block,\n        tribune,\n        object,\n        seat,\n      ),\n    }\n  },\n} as DataProvider\n\nexport default provider\n","import { toMapById } from '../common/mapper.utils'\nimport { BookingDto } from '../dto/booking.dto'\nimport { CustomerDto } from '../dto/customer.dto'\nimport { EventDto } from '../dto/event/event.dto'\nimport { TicketDto } from '../dto/ticket.dto'\nimport { TicketInfo } from './ticket-info'\n\nexport const mapToTicketBaseInfo = (\n  { firstname, lastname, pesel }: CustomerDto,\n  event: EventDto | null,\n  { id, bookingId, ticketCode, ticketType }: TicketDto,\n): TicketInfo => ({\n  id,\n  firstname,\n  lastname,\n  pesel,\n  eventId: event?.id || null,\n  eventName: event?.name || null,\n  eventDate: event?.dateStart || null,\n  ticketCode,\n  ticketType,\n  bookingId\n})\n\nexport const mapToTicketBaseInfoList = (\n  bookings: BookingDto[],\n  customers: CustomerDto[],\n  events: EventDto[],\n  tickets: TicketDto[],\n): TicketInfo[] => {\n  const bookingById = toMapById(bookings)\n  const customerById = toMapById(customers)\n  const eventById = toMapById(events)\n  return tickets.map((ticket) => {\n    const { customerId, eventId } = bookingById.get(\n      ticket.bookingId,\n    ) as BookingDto\n    const customer = customerById.get(customerId) as CustomerDto\n    const event = eventById.get(eventId) as EventDto | null\n    return mapToTicketBaseInfo(customer, event, ticket)\n  })\n}\n","import { TicketInfo } from './ticket-info'\n\nconst mapping: Partial<Record<keyof TicketInfo, string>> = {\n  id: 't=>t.Id',\n  ticketCode: 't=>t.TicketCode',\n  bookingId: 't=>t.BookingId'\n}\n\nexport const mapSortTicketParams = (key: keyof TicketInfo) => mapping[key]","import { TicketInfo } from \"./ticket-info\"\n\nconst mapping: Partial<\n  Record<\n    keyof TicketInfo,\n    (lambdaParameter: string, value: string | number) => string\n  >\n> = {\n  ticketCode: (lambdaParameter, value) => `${(lambdaParameter)}.TicketCode.Contains(\"${value}\")`,\n}\n\nexport const getFilterMapper = (key: keyof TicketInfo) =>\n  mapping[key] as (lambdaParameter: string, value: string | number) => string\n","import { DataProvider, GetListResult } from 'react-admin'\nimport {\n  BOOKINGS_URL,\n  CUSTOMERS_URL,\n  EVENTS_URL,\n  TICKETS_URL,\n} from '../api-urls'\nimport { getByConditions, getWithPagination } from '../common/fetch.utils'\nimport { BookingDto } from '../dto/booking.dto'\nimport { TicketInfo } from './ticket-info'\nimport { TicketDto } from '../dto/ticket.dto'\nimport { CustomerDto } from '../dto/customer.dto'\nimport { EventDto } from '../dto/event/event.dto'\nimport { mapToTicketBaseInfoList } from './ticket-info.mapper'\nimport { buildFilterByIdsCondition } from '../common/condition.builder'\nimport { TicketCodeFilter } from '../common/ticket-code.filter'\nimport { toUniqueValues } from '../common/mapper.utils'\nimport { mapSortTicketParams } from './ticket-info-sort.mapper'\nimport { getFilterMapper } from './ticket-info-filter.mapper'\n\nconst getFilterParams = (\n  partialValues: Partial<TicketInfo>,\n): string => {\n  if (Object.keys(partialValues).length) {\n    const filterParams = Object.entries(partialValues).map(([key, value]) => {\n      const mapper = getFilterMapper(key as keyof TicketInfo)\n      return mapper('t', value as string)\n    })\n    return filterParams.reduce((p, c) => `${p}&&${c}`)\n  }\n  return 'true'\n}\nconst getByUniqueIds = <T>(baseUrl: string, ids: number[]): Promise<T[]> => {\n  const uniqueIds = toUniqueValues(ids)\n  return getByConditions<T>(baseUrl, buildFilterByIdsCondition(uniqueIds))\n}\n\nconst provider = {\n  getList: async (\n    resource: string,\n    {\n      filter,\n      pagination: { page, perPage },\n      sort: { field, order }\n    }: TicketCodeFilter,\n  ): Promise<GetListResult<TicketInfo>> => {\n    const filterParams = `t=>${getFilterParams(filter)}`\n    const queryParams: string[] = []\n    if (!!page && !!field) {\n      queryParams.push(`sortBy=${mapSortTicketParams(field)}`)\n      queryParams.push(`sortOrder=${order}`)\n      queryParams.push(`rangeFrom=${page * perPage - perPage}`)\n      queryParams.push(`rangeTo=${page * perPage}`)\n    }\n    else queryParams.push('')\n\n    const pathParams = queryParams.reduce((p, c) => `${p}&${c}`)\n    const path = `/${filterParams}?${pathParams}`\n    const { data: tickets, range: { total } } = await getWithPagination<TicketDto[]>(\n      `${TICKETS_URL}/GetByConditions`, path\n    )\n\n    const bookingIds = tickets.map((v) => v.bookingId)\n    const bookings = await getByUniqueIds<BookingDto>(BOOKINGS_URL, bookingIds)\n\n    const customerIds = bookings.map((v) => v.customerId)\n    const eventIds = bookings.map((v) => v.eventId)\n\n    const pendingCustomers = getByUniqueIds<CustomerDto>(\n      CUSTOMERS_URL,\n      customerIds,\n    )\n    const pendingEvents = getByUniqueIds<EventDto>(EVENTS_URL, eventIds)\n    const [customers, events] = await Promise.all([\n      pendingCustomers,\n      pendingEvents,\n    ])\n\n    const ticketBaseInfoList = mapToTicketBaseInfoList(\n      bookings,\n      customers,\n      events,\n      tickets,\n    )\n    return Promise.resolve({\n      data: ticketBaseInfoList,\n      total\n    })\n  },\n} as DataProvider\n\nexport default provider\n","import { DataProvider, GetListResult } from 'react-admin'\nimport { getByConditions } from '../common/fetch.utils'\nimport { TICKETS_URL } from '../api-urls'\nimport { TicketCodeFilter } from '../common/ticket-code.filter'\nimport { TicketDto } from '../dto/ticket.dto'\n\nconst provider = {\n  getList: async (\n    resource: string,\n    { filter }: TicketCodeFilter,\n  ): Promise<GetListResult<TicketDto>> => {\n    const filterByTicketCodeCondition = `t=>t.TicketCode.Contains(\"${filter.ticketCode}\")`\n    const tickets = await getByConditions<TicketDto>(\n      TICKETS_URL,\n      filterByTicketCodeCondition,\n    )\n    return Promise.resolve({\n      data: tickets,\n      total: tickets.length,\n    })\n  },\n} as DataProvider\n\nexport default provider\n","import { Access } from './access'\n\nconst mapping: Partial<\n  Record<\n    keyof Access,\n    (lambdaParameter: string, value: string | number) => string\n  >\n> = {\n  id: (lambdaParameter, value) => value.toString().split(\",\").map((v) => `${v}==${lambdaParameter}.Id`).join(\"&&\"),\n}\n\nexport const getFilterMapper = (key: keyof Access) =>\n  mapping[key] as (lambdaParameter: string, value: string | number) => string\n","import { Access } from './access'\n\nconst mapping: Partial<Record<keyof Access, string>> = {\n  id: 'a=>a.Id',\n}\n\nexport const mapSortAccessParam = (key: keyof Access) => mapping[key]\n","import {\n  DataProvider,\n  GetListResult,\n  GetOneParams,\n  GetOneResult,\n} from 'react-admin'\nimport { ACCESSES_URL, ENTRANCES_URL, USERS_URL } from '../api-urls'\nimport { getWithPagination, get } from '../common/fetch.utils'\nimport { AccessDto } from '../dto/access.dto'\nimport { EntranceDto } from '../dto/entrance.dto'\nimport { UserDto } from '../dto/user.dto'\nimport { Access } from './access'\nimport { getFilterMapper } from './access-filter.mapper'\nimport { mapSortAccessParam } from './access-sort.mapper'\nimport { AccessParams } from './access.params'\n\nconst getFilterParams = (filter: Partial<Access>) => {\n  if (Object.keys(filter).length) {\n    const filterParams = Object.entries(filter).map(([key, value]) => {\n      const mapper = getFilterMapper(key as keyof Access)\n      return mapper('a', value as string)\n    })\n    return filterParams.reduce((p, c) => `${p}&&${c}`)\n  }\n  return 'true'\n}\n\nconst provider = {\n  getList: async (\n    resource: string,\n    {\n      filter,\n      sort: { field, order },\n      pagination: { page, perPage },\n    }: AccessParams,\n  ): Promise<GetListResult<Access>> => {\n    const filterParams = `a=>${getFilterParams(filter).toString()}`\n    const queryParams: string[] = []\n    queryParams.push(`sortBy=${mapSortAccessParam(field)}`)\n    queryParams.push(`sortOrder=${order}`)\n    queryParams.push(`rangeFrom=${page * perPage - perPage}`)\n    queryParams.push(`rangeTo=${page * perPage}`)\n\n    const pathParams = queryParams.reduce((p, c) => `${p}&${c}`)\n    const path = `/${filterParams}?${pathParams}`\n\n    const { data } = await getWithPagination<AccessDto[]>(\n      `${ACCESSES_URL}/GetByConditions`,\n      path,\n    )\n    const accesses = data.map(\n      ({\n        id,\n        name,\n        bonus,\n        entranceId,\n        allowReenter,\n        multipleEntry,\n        multiple,\n        usePriority,\n        isTicketUnlockWithNextDay,\n        releaseTime,\n        releaseDayOfWeek,\n        releaseDayOfMonth,\n        delay,\n        activePeriod,\n        activePeriodStartingFrom,\n        variantsIds,\n        accessDatesIds,\n        createdById,\n        modifiedById,\n        createdAt,\n        modifiedAt,\n      }) =>\n      ({\n        id,\n        name,\n        bonus,\n        entranceId,\n        allowReenter,\n        multipleEntry,\n        multiple,\n        usePriority,\n        isTicketUnlockWithNextDay,\n        releaseTime,\n        releaseDayOfWeek,\n        releaseDayOfMonth,\n        delay,\n        activePeriod,\n        activePeriodStartingFrom,\n        variantsIds,\n        accessDatesIds,\n        createdById,\n        modifiedById,\n        createdAt,\n        modifiedAt,\n      } as Access),\n    )\n\n    return Promise.resolve({\n      data: accesses,\n      total: accesses.length,\n    })\n  },\n  getOne: async (\n    resource: string,\n    { id }: GetOneParams,\n  ): Promise<GetOneResult<Access>> => {\n    const access = await get<AccessDto>(ACCESSES_URL, `/${id}`)\n    const modifiedBy = await get<UserDto>(\n      USERS_URL,\n      access.modifiedById.toString(),\n    )\n    const createdBy =\n      access.modifiedById === access.createdById\n        ? modifiedBy\n        : await get<UserDto>(USERS_URL, access.createdById.toString())\n    const entrance = await get<EntranceDto>(ENTRANCES_URL, `/${access.entranceId}`)\n    return {\n      data: {\n        ...access,\n        modifiedByName: modifiedBy.userName,\n        createdByName: createdBy.userName,\n        entranceNote: entrance.note\n      },\n    }\n  },\n} as DataProvider\n\nexport default provider\n","import { EventDto } from \"../dto/event/event.dto\"\n\nconst mapping: Partial<Record<keyof EventDto, string>> = {\n  id: 'e=>e.Id',\n  name: 'e=>e.Name',\n  dateStart: 'e=>e.DateStart',\n  dateEnd: 'e=>e.DateEnd',\n  status: 'e=>e.Status'\n}\n\nexport const mapSortEventParam = (key: keyof EventDto) => mapping[key]\n","import { DataProvider, GetListParams, GetListResult, GetOneParams, GetOneResult, Identifier, UpdateParams, UpdateResult, CreateParams, CreateResult } from \"react-admin\"\nimport { EVENTS_URL } from \"../api-urls\"\nimport { CacheableDataProviderExtensionResult, DataProviderExtensionResult } from \"../common/data-provider\"\nimport { DateTime } from \"../common/date-time\"\nimport { get, getWithPagination, patch, post, put } from \"../common/fetch.utils\"\nimport { ALL_RESULTS } from \"../common/filter.values\"\nimport { EventCompaniesDto } from \"../dto/event/event-companies.dto\"\nimport { EventDevicesDto } from \"../dto/event/event-devices.dto\"\nimport { EventObjectsDto } from \"../dto/event/event-objects.dto\"\nimport { EventDto } from \"../dto/event/event.dto\"\nimport { EventStatus } from \"../enum/EventStatus\"\nimport { mapSortEventParam } from './event-sort.mapper'\n\ntype EventUpdateRequest = {\n  id: number,\n  name?: string,\n  dateStart?: DateTime,\n  dateEnd?: DateTime,\n  status?: EventStatus\n}\n\ninterface EventListParams extends GetListParams {\n  readonly sort: {\n    readonly field: keyof EventDto\n    readonly order: 'ASC' | 'DESC'\n  }\n  readonly filter:\n  {\n    readonly name: string\n  }\n}\n\nconst provider = {\n  getList: async (\n    resource: string,\n    {\n      filter: { name },\n      sort: { field, order },\n      pagination: { page, perPage }\n    }: EventListParams,\n  ): Promise<GetListResult<EventDto>> => {\n\n    const queryParams: string[] = []\n    queryParams.push(`sortBy=${mapSortEventParam(field)}`)\n    queryParams.push(`sortOrder=${order}`)\n    queryParams.push(`rangeFrom=${page * perPage - perPage}`)\n    queryParams.push(`rangeTo=${page * perPage}`)\n    const pathParams = queryParams.reduce((p, c) => `${p}&${c}`)\n    const { data, range: { total } } = await getWithPagination<EventDto[]>(`${EVENTS_URL}/GetByConditions/`, `${name ? `e=>e.Name.Contains(\"${name}\")` : ALL_RESULTS}?${pathParams}`)\n\n    return Promise.resolve({\n      data,\n      total\n    })\n  },\n  getOne: async (\n    resource: string,\n    { id }: GetOneParams\n  ): Promise<GetOneResult<EventDto>> => {\n    const event = await get<EventDto>(EVENTS_URL, `/${id}`)\n\n    return {\n      data: event\n    }\n  },\n  create: async (\n    resource: string,\n    { data }: CreateParams\n  ): Promise<CreateResult<EventDto>> => {\n    const event = await post<CreateEventRequest[], EventDto[]>(EVENTS_URL, [{\n      ...data,\n      dateStart:\n        new Date(new Date(data?.dateStart).getTime() - (new Date(data?.dateStart).getTimezoneOffset() * 60000)).toJSON() as DateTime,\n      dateEnd:\n        new Date(new Date(data?.dateEnd).getTime() - (new Date(data?.dateEnd).getTimezoneOffset() * 60000)).toJSON() as DateTime\n    }])\n\n    return {\n      data: event[0]\n    }\n  },\n  update: async (\n    resource: string,\n    { id, data, previousData }: UpdateParams\n  ): Promise<UpdateResult> => {\n    const { name, dateStart, dateEnd } = data\n\n    let eventUpdate = data\n    if (previousData) {\n      const { name: previousName, dateStart: previousDateStart, dateEnd: previousDateEnd } = previousData\n      eventUpdate = await patch<EventUpdateRequest, EventDto>(EVENTS_URL, {\n        id: parseInt(id as string, 10),\n        name: name ?? previousName,\n        dateStart: dateStart ?\n          new Date(new Date(dateStart).getTime() - (new Date(dateStart).getTimezoneOffset() * 60000)).toJSON() as DateTime :\n          previousDateStart,\n        dateEnd: dateEnd ?\n          new Date(new Date(dateEnd).getTime() - (new Date(dateEnd).getTimezoneOffset() * 60000)).toJSON() as DateTime :\n          previousDateEnd\n      })\n    }\n\n    return Promise.resolve({\n      data: { id, ...data, ...eventUpdate }\n    })\n  },\n  activate: async (\n    resource: string,\n    { eventId }: ChangeStateParams\n  ): Promise<DataProviderExtensionResult<ChangeStateResponse>> => {\n    const activate = await put<undefined, ChangeStateResponse>\n      (`${EVENTS_URL}/ActivateAsyncJob/${eventId}`, undefined)\n    return {\n      data: activate\n    }\n  },\n  deactivate: async (\n    resource: string,\n    { eventId }: ChangeStateParams\n  ): Promise<DataProviderExtensionResult<ChangeStateResponse>> => {\n    const deactivate = await put<undefined, ChangeStateResponse>\n      (`${EVENTS_URL}/DeactivateAsyncJob/${eventId}`, undefined)\n    return {\n      data: deactivate\n    }\n  },\n  getCompaniesList: async (\n    resource: string,\n    { eventId }: GetCompaniesParams\n  ): Promise<CacheableDataProviderExtensionResult<EventCompaniesDto>> => {\n    const companies = await get<EventCompaniesDto>\n      (`${EVENTS_URL}`, `/GetCompanies/${eventId}`)\n    return {\n      data: companies\n    }\n  },\n  attachCompanies: async (\n    resource: string,\n    params: EventCompaniesDto\n  ): Promise<CacheableDataProviderExtensionResult<EventCompaniesDto>> => {\n    const eventCompanies = await put<EventCompaniesDto, EventCompaniesDto>\n      (`${EVENTS_URL}/AttachCompanies`, params)\n    return {\n      data: eventCompanies\n    }\n  },\n  detachCompanies: async (\n    resource: string,\n    params: EventCompaniesDto\n  ): Promise<CacheableDataProviderExtensionResult<EventCompaniesDto>> => {\n    const eventCompanies = await put<EventCompaniesDto, EventCompaniesDto>\n      (`${EVENTS_URL}/DetachCompanies`, params)\n    return {\n      data: eventCompanies\n    }\n  },\n  attachObjects: async (\n    resource: string,\n    params: EventObjectsDto\n  ): Promise<CacheableDataProviderExtensionResult<EventObjectsDto>> => {\n    const eventObjects = await put<EventObjectsDto, EventObjectsDto>\n      (`${EVENTS_URL}/AttachObjects`, params)\n    return {\n      data: eventObjects\n    }\n  },\n  detachObjects: async (\n    resource: string,\n    params: EventObjectsDto\n  ): Promise<CacheableDataProviderExtensionResult<EventObjectsDto>> => {\n    const eventObjects = await put<EventObjectsDto, EventObjectsDto>\n      (`${EVENTS_URL}/DetachObjects`, params)\n    return {\n      data: eventObjects\n    }\n  },\n  getDevicesList: async (\n    resource: string,\n    { eventId }: GetDevicesParams\n  ): Promise<CacheableDataProviderExtensionResult<EventDevicesDto>> => {\n    const devices = await get<EventDevicesDto>\n      (`${EVENTS_URL}`, `/GetDevices/${eventId}`)\n    return {\n      data: devices\n    }\n  },\n  attachDevices: async (\n    resource: string,\n    params: EventDevicesDto\n  ): Promise<CacheableDataProviderExtensionResult<EventDevicesDto>> => {\n    const eventDevices = await put<EventDevicesDto, EventDevicesDto>\n      (`${EVENTS_URL}/AttachDevices`, params)\n    return {\n      data: eventDevices\n    }\n  },\n  detachDevices: async (\n    resource: string,\n    params: EventDevicesDto\n  ): Promise<CacheableDataProviderExtensionResult<EventDevicesDto>> => {\n    const eventDevices = await put<EventDevicesDto, EventDevicesDto>\n      (`${EVENTS_URL}/DetachDevices`, params)\n    return {\n      data: eventDevices\n    }\n  }\n} as EventDataProvider\n\ninterface EventDataProvider extends DataProvider {\n  activate: (\n    resource: string,\n    params: ChangeStateParams\n  ) => Promise<DataProviderExtensionResult<ChangeStateResponse>>;\n\n  deactivate: (\n    resource: string,\n    params: ChangeStateParams\n  ) => Promise<DataProviderExtensionResult<ChangeStateResponse>>;\n\n  getCompaniesList: (\n    resource: string,\n    params: GetCompaniesParams\n  ) => Promise<CacheableDataProviderExtensionResult<EventCompaniesDto>>;\n\n  attachCompanies: (\n    resource: string,\n    params: EventCompaniesDto\n  ) => Promise<CacheableDataProviderExtensionResult<EventCompaniesDto>>;\n\n  detachCompanies: (\n    resource: string,\n    params: EventCompaniesDto\n  ) => Promise<CacheableDataProviderExtensionResult<EventCompaniesDto>>;\n\n  getObjectsList: (\n    resource: string,\n    params: GetObjectsParams\n  ) => Promise<CacheableDataProviderExtensionResult<EventObjectsDto>>;\n\n  attachObjects: (\n    resource: string,\n    params: EventObjectsDto\n  ) => Promise<CacheableDataProviderExtensionResult<EventObjectsDto>>;\n\n  detachObjects: (\n    resource: string,\n    params: EventObjectsDto\n  ) => Promise<CacheableDataProviderExtensionResult<EventObjectsDto>>;\n\n  getDevicesList: (\n    resource: string,\n    params: GetDevicesParams\n  ) => Promise<CacheableDataProviderExtensionResult<EventDevicesDto>>;\n\n  attachDevices: (\n    resource: string,\n    params: EventDevicesDto\n  ) => Promise<CacheableDataProviderExtensionResult<EventDevicesDto>>;\n\n  detachDevices: (\n    resource: string,\n    params: EventDevicesDto\n  ) => Promise<CacheableDataProviderExtensionResult<EventDevicesDto>>;\n};\n\nexport interface ChangeStateParams {\n  eventId: Identifier;\n}\n\nexport interface ChangeStateResponse {\n  jobId: Identifier;\n}\n\nexport interface GetCompaniesParams {\n  eventId: Identifier;\n}\n\nexport interface GetObjectsParams {\n  eventId: Identifier;\n}\n\nexport interface GetDevicesParams {\n  eventId: Identifier;\n}\n\nexport interface CreateEventRequest {\n  readonly name: string\n  readonly status?: EventStatus\n  readonly dateStart: DateTime\n  readonly dateEnd: DateTime\n  readonly externalId?: string\n  readonly infix?: string\n  readonly objectsIds?: number[]\n}\n\nexport default provider","import { DataProvider, GetOneParams, GetOneResult } from \"react-admin\"\nimport { CustomerDetails } from \"./customer-details\"\nimport { CustomerDto } from \"../dto/customer.dto\"\nimport { CUSTOMERS_URL } from \"../api-urls\"\nimport { get } from '../common/fetch.utils'\n\nconst provider = {\n  getOne: async (\n    resource: string,\n    { id: customerId }: GetOneParams,\n  ): Promise<GetOneResult<CustomerDetails>> => {\n    const customer = await get<CustomerDto>(CUSTOMERS_URL, `/${customerId}`)\n    return {\n      data: customer as CustomerDetails\n    }\n  }\n} as DataProvider\n\nexport default provider","import { CustomerInfo } from \"./customer-info\"\n\nconst mapping: Partial<\n  Record<\n    keyof CustomerInfo | 'info',\n    (lambdaParameter: string, value: string | number) => string\n  >\n> = {\n  firstname: (lambdaParameter, value) => `${(lambdaParameter)}.Firstname.Contains(\"${value}\")`,\n  lastname: (lambdaParameter, value) => `${(lambdaParameter)}.Lastname.Contains(\"${value}\")`,\n  pesel: (lambdaParameter, value) => `${(lambdaParameter)}.Pesel.Contains(\"${value}\")`,\n  documentNumber: (lambdaParameter, value) => `${(lambdaParameter)}.DocumentNumber.Contains(\"${value}\")`,\n  info: (lambdaParameter, value) => `${value.toString().split(\" \").map((q) =>\n    `(${(lambdaParameter)}.Firstname+${(lambdaParameter)}.Lastname+${(lambdaParameter)}.Pesel+${(lambdaParameter)}.DocumentNumber).Contains(\"${q}\")`).join(\"&&\")}`,\n}\n\nexport const getFilterMapper = (key: keyof CustomerInfo) =>\n  mapping[key] as (lambdaParameter: string, value: string | number) => string\n","import { CustomerInfo } from './customer-info'\n\nconst mapping: Partial<Record<keyof CustomerInfo, string>> = {\n  id: 'c=>c.Id',\n  firstname: 'c=>c.Firstname',\n  lastname: 'c=>c.Lastname',\n  pesel: 'c=>c.Pesel',\n  documentNumber: 'c=>c.DocumentNumber'\n}\n\nexport const mapSortCustomerParams = (key: keyof CustomerInfo) => mapping[key]","import { GetListResult, DataProvider } from \"react-admin\";\nimport { CUSTOMERS_URL } from \"../api-urls\";\nimport { getWithPagination } from \"../common/fetch.utils\";\nimport { CustomerDto } from \"../dto/customer.dto\";\nimport { CustomerInfo } from \"./customer-info\";\nimport { getFilterMapper } from \"./customer-info-filter.mapper\";\nimport { mapSortCustomerParams } from \"./customer-info-sort.mapper\";\nimport { CustomerInfoFilter } from \"./customer-info.params\";\n\nconst getFilterParams = (\n  partialValues: Partial<CustomerInfo> & { readonly info: string },\n): string => {\n  if (Object.keys(partialValues).length) {\n    const filterParams = Object.entries(partialValues).map(([key, value]) => {\n      const mapper = getFilterMapper(key as keyof CustomerInfo)\n      return mapper('c', value as string)\n    })\n    return filterParams.reduce((p, c) => `${p}&&${c}`)\n  }\n  return 'true'\n}\n\nconst provider = {\n  getList: async (\n    resource: string,\n    { filter, sort, pagination }: CustomerInfoFilter\n  ): Promise<GetListResult<CustomerInfo>> => {\n    const filterParams = `c=>${getFilterParams(filter)}`\n    const queryParams: string[] = []\n    if (!!pagination && !!sort) {\n      queryParams.push(`sortBy=${mapSortCustomerParams(sort.field)}`)\n      queryParams.push(`sortOrder=${sort.order}`)\n      queryParams.push(`rangeFrom=${pagination.page * pagination.perPage - pagination.perPage}`)\n      queryParams.push(`rangeTo=${pagination.page * pagination.perPage}`)\n    }\n    else queryParams.push('')\n    const pathParams = queryParams.reduce((p, c) => `${p}&${c}`)\n    const path = `/${filterParams}?${pathParams}`\n\n    const { data, range: { total } } = await getWithPagination<CustomerDto[]>(\n      `${CUSTOMERS_URL}/GetByConditions`,\n      path\n    )\n\n    return Promise.resolve({\n      data,\n      total\n    })\n  }\n} as DataProvider\n\nexport default provider","import { AccessDateDto } from '../dto/access-date.dto'\n\nconst mapping: Partial<\n  Record<keyof AccessDateDto, (lambdaParameter: string, value: string | number) => string>\n> = {\n  id: (lambdaParameter, value) => value.toString().split(\",\").map((v) => `${lambdaParameter}.Id==${v}`).join(\"||\"),\n}\n\nexport const getFilterMapper = (key: keyof AccessDateDto) =>\n  mapping[key] as (lambdaParameter: string, value: string | number) => string\n","import { AccessDateDto } from \"../dto/access-date.dto\"\n\nconst mapping: Partial<Record<keyof AccessDateDto, string>> = {\n  id: 'ad=>ad.Id',\n  activeFrom: 'ad=>ad.ActiveFrom',\n  activeTo: 'ad=>ad.ActiveTo',\n  type: 'ad=>ad.Type'\n}\n\nexport const mapSortAccessDatesParam = (key: keyof AccessDateDto) => mapping[key]","import {\n  DataProvider, GetListResult\n} from 'react-admin'\nimport { AccessDateDto } from '../dto/access-date.dto'\nimport { getFilterMapper } from './access-dates-filter.mapper'\nimport { AccessDatesListParams } from './access-dates-list.params'\nimport { mapSortAccessDatesParam } from './access-dates-sort.mapper'\nimport { getWithPagination } from '../common/fetch.utils'\nimport { ACCESS_DATES } from '../api-urls'\n\nconst getFilterParams = (filter: Partial<AccessDateDto>) => {\n  if (Object.keys(filter).length) {\n    const filterParams = Object.entries(filter).map(([key, value]) => {\n      const mapper = getFilterMapper(key as keyof AccessDateDto)\n      return mapper(\"ad\", value as string)\n    })\n    return filterParams.reduce((p, c) => `${p}&&${c}`)\n  }\n  return \"true\"\n}\n\nconst provider = {\n  getList: async (\n    resource: string,\n    {\n      filter,\n      sort: { field, order },\n      pagination: { page, perPage }\n    }: AccessDatesListParams\n  ): Promise<GetListResult<AccessDateDto>> => {\n    const filterParams = `ad=>${getFilterParams(filter).toString()}`\n    const queryParams: string[] = []\n    queryParams.push(`sortBy=${mapSortAccessDatesParam(field)}`)\n    queryParams.push(`sortOrder=${order}`)\n    queryParams.push(`rangeFrom=${page * perPage - perPage}`)\n    queryParams.push(`rangeTo=${page * perPage}`)\n\n    const pathParams = queryParams.reduce((p, c) => `${p}&${c}`)\n    const path = `/${filterParams}?${pathParams}`\n\n    const {\n      data,\n      range: { total }\n    } = await getWithPagination<AccessDateDto[]>(`${ACCESS_DATES}/GetByConditions`, path)\n\n    return Promise.resolve({\n      data,\n      total\n    })\n  }\n} as DataProvider\n\nexport default provider","import { CompanyDto } from \"../dto/company.dto\"\n\nconst mapping: Partial<\n  Record<\n    keyof CompanyDto,\n    (lambdaParameter: string, value: string | number) => string\n  >\n> = {\n  name: (lambdaParameter, value) => `${(lambdaParameter)}.Name.Contains(\"${value}\")`\n}\n\nexport const getFilterMapper = (key: keyof CompanyDto) =>\n  mapping[key] as (lambdaParameter: string, value: string | number) => string\n","import { CompanyDto } from \"../dto/company.dto\"\n\nconst mapping: Partial<Record<keyof CompanyDto, string>> = {\n  id: 'c=>c.Id'\n}\n\nexport const mapSortCompanyParam = (key: keyof CompanyDto) => mapping[key]\n","import { DataProvider, GetListResult } from \"react-admin\"\nimport { COMPANIES_URL } from \"../api-urls\"\nimport { getWithPagination } from \"../common/fetch.utils\"\nimport { CompanyDto } from \"../dto/company.dto\"\nimport { getFilterMapper } from \"./company-filter.mapper\"\nimport { CompanyListParams } from \"./company-list.params\"\nimport { mapSortCompanyParam } from \"./company-sort.mapper\"\n\nconst getFilterParams = (\n  partialValues: Partial<CompanyDto>\n): string => {\n  if (Object.keys(partialValues).length) {\n    const filterParams = Object.entries(partialValues).map(([key, value]) => {\n      const mapper = getFilterMapper(key as keyof CompanyDto)\n      return mapper('c', value as string)\n    })\n    return filterParams.reduce((p, c) => `${p}&&${c}`)\n  }\n  return 'true'\n}\n\nconst provider = {\n  getList: async (\n    resource: string,\n    {\n      filter: { ...filter },\n      sort: { field, order },\n      pagination: { page, perPage }\n    }: CompanyListParams\n  ): Promise<GetListResult<CompanyDto>> => {\n\n    const filterParams = `c=>${getFilterParams(filter)}`\n    const queryParams: string[] = []\n    queryParams.push(`sortBy=${mapSortCompanyParam(field)}`)\n    queryParams.push(`sortOrder=${order}`)\n    queryParams.push(`rangeFrom=${page * perPage - perPage}`)\n    queryParams.push(`rangeTo=${page * perPage}`)\n    const pathParams = queryParams.reduce((p, c) => `${p}&${c}`)\n    const path = `/${filterParams}?${pathParams}`\n\n    const { data, range: { total } } = await getWithPagination<CompanyDto[]>(COMPANIES_URL, path)\n\n    return Promise.resolve({\n      data,\n      total\n    })\n  }\n} as DataProvider\n\nexport default provider","import { ObjectDto } from \"../dto/object.dto\"\n\nconst mapping: Partial<\n  Record<\n    keyof ObjectDto,\n    (lambdaParameter: string, value: string | number) => string\n  >\n> = {\n  name: (lambdaParameter, value) => `${(lambdaParameter)}.Name.Contains(\"${value}\")`\n}\n\nexport const getFilterMapper = (key: keyof ObjectDto) =>\n  mapping[key] as (lambdaParameter: string, value: string | number) => string\n","import { ObjectDto } from \"../dto/object.dto\"\n\nconst mapping: Partial<Record<keyof ObjectDto, string>> = {\n  id: 'l=>l.Id'\n}\n\nexport const mapSortCompanyParam = (key: keyof ObjectDto) => mapping[key]\n","import { DataProvider, GetListResult } from \"react-admin\"\nimport { OBJECTS_URL } from \"../api-urls\"\nimport { getWithPagination } from \"../common/fetch.utils\"\nimport { ObjectDto } from \"../dto/object.dto\"\nimport { getFilterMapper } from \"./object-filter.mapper\"\nimport { ObjectListParams } from \"./object-list.params\"\nimport { mapSortCompanyParam } from \"./object-sort.mapper\"\n\nconst getFilterParams = (\n  partialValues: Partial<ObjectDto>\n): string => {\n  if (Object.keys(partialValues).length > 0) {\n    const filterParams = Object.entries(partialValues).map(([key, value]) => {\n      const mapper = getFilterMapper(key as keyof ObjectDto)\n      return mapper('o', value as string)\n    })\n    return filterParams.reduce((p, c) => `${p}&&${c}`)\n  }\n  return 'true'\n}\n\nconst provider = {\n  getList: async (\n    resource: string,\n    {\n      filter: { ...filter },\n      sort: { field, order },\n      pagination: { page, perPage }\n    }: ObjectListParams\n  ): Promise<GetListResult<ObjectDto>> => {\n\n    const filterParams = `o=>${getFilterParams(filter)}`\n    const queryParams: string[] = []\n    queryParams.push(`sortBy=${mapSortCompanyParam(field)}`)\n    queryParams.push(`sortOrder=${order}`)\n    queryParams.push(`rangeFrom=${page * perPage - perPage}`)\n    queryParams.push(`rangeTo=${page * perPage}`)\n    const pathParams = queryParams.reduce((p, c) => `${p}&${c}`)\n    const path = `/${filterParams}?${pathParams}`\n\n    const { data, range: { total } } = await getWithPagination<ObjectDto[]>(`${OBJECTS_URL}/GetByConditions`, path)\n\n    return Promise.resolve({\n      data,\n      total\n    })\n  }\n} as DataProvider\n\nexport default provider","import { PalmDto } from \"../../dto/device/palm/palm.dto\"\n\nconst mapping: Partial<\n  Record<\n    keyof PalmDto,\n    (lambdaParameter: string, value: string | number) => string\n  >\n> = {\n  name: (lambdaParameter, value) => `${(lambdaParameter)}.Name.Contains(\"${value}\")`,\n  categoryId: (lambdaParameter, value) => `${(lambdaParameter)}.CategoryId==${value}`\n}\n\nexport const getFilterMapper = (key: keyof PalmDto) =>\n  mapping[key] as (lambdaParameter: string, value: string | number) => string","import { PalmDto } from \"../../dto/device/palm/palm.dto\"\n\n\nconst mapping: Partial<Record<keyof PalmDto, string>> = {\n  id: 'p=>p.Id',\n  name: \"p=>p.Name\"\n}\n\nexport const mapSortPalmParam = (key: keyof PalmDto) => mapping[key]\n","import { DataProvider, GetListResult, GetOneParams, GetOneResult, Identifier, UpdateParams, UpdateResult } from \"react-admin\"\nimport { PALMS_URL } from \"../../api-urls\"\nimport { CacheableDataProviderExtensionResult, DataProviderExtensionResult } from \"../../common/data-provider\"\nimport { DateTime } from \"../../common/date-time\"\nimport { get, getWithPagination, patch, put } from \"../../common/fetch.utils\"\nimport { PalmEntrancesDto } from \"../../dto/device/palm/palm-entrances.dto\"\nimport { PalmEventsDto } from \"../../dto/device/palm/palm-events.dto\"\nimport { PalmDto } from \"../../dto/device/palm/palm.dto\"\nimport { PalmLockResult } from \"../../enum/PalmLockResult\"\nimport { PalmResetMobileDeviceIdResults } from \"../../enum/PalmResetMobileDeviceIdResults\"\nimport { PalmSetMobileDeviceIdResults } from \"../../enum/PalmSetMobileDeviceIdResults\"\nimport { PalmUnlockResult } from \"../../enum/PalmUnlockResult\"\nimport { getFilterMapper } from \"./palm-filter.mapper\"\nimport { PalmListParams } from \"./palm-list.params\"\nimport { mapSortPalmParam } from \"./palm-sort.mapper\"\n\nconst getFilterParams = (\n  partialValues: Partial<PalmDto>\n): string => {\n  if (Object.keys(partialValues).length) {\n    const filterParams = Object.entries(partialValues).map(([key, value]) => {\n      const mapper = getFilterMapper(key as keyof PalmDto)\n      return mapper('o', value as string)\n    })\n    return filterParams.reduce((p, c) => `${p}&&${c}`)\n  }\n  return 'true'\n}\n\nconst provider = {\n  getList: async (\n    resource: string,\n    {\n      filter: { ...filter },\n      sort: { field, order },\n      pagination: { page, perPage }\n    }: PalmListParams\n  ): Promise<GetListResult<PalmDto>> => {\n\n    const filterParams = `o=>${getFilterParams(filter)}`\n    const queryParams: string[] = []\n    queryParams.push(`sortBy=${mapSortPalmParam(field)}`)\n    queryParams.push(`sortOrder=${order}`)\n    queryParams.push(`rangeFrom=${page * perPage - perPage}`)\n    queryParams.push(`rangeTo=${page * perPage - 1}`)\n    const pathParams = queryParams.reduce((p, c) => `${p}&${c}`)\n    const path = `/${filterParams}?${pathParams}`\n\n    const { data, range: { total } } = await getWithPagination<PalmDto[]>(`${PALMS_URL}/GetByConditions`, path)\n\n    return Promise.resolve({\n      data,\n      total\n    })\n  },\n  getOne: async (\n    resource: string,\n    { id }: GetOneParams\n  ): Promise<GetOneResult<PalmDto>> => {\n    const data = await get<PalmDto>(PALMS_URL, `/${id}`)\n    return Promise.resolve({\n      data\n    })\n  },\n  update: async (\n    resource: string,\n    { id, data, previousData }: UpdateParams\n  ): Promise<UpdateResult> => {\n    const update = await patch<{ id: Identifier, [n: string]: any }, PalmDto>(PALMS_URL, {\n      id,\n      name: data.name || previousData.name,\n      isWatched: data.isWatched,\n      lastRefresh: new Date(new Date(data.lastRefresh).getTime() - (new Date(data.lastRefresh).getTimezoneOffset() * 60000)).toJSON() as DateTime || previousData.lastRefresh,\n      direction: data.direction || previousData.direction,\n      categoryId: data.categoryId || previousData.categoryId,\n      onlineInfixCeck: data.onlineInfixCeck,\n      multiplicity: data.multiplicity || previousData.multiplicity\n    })\n    return Promise.resolve({ data: update })\n  },\n  lock: async (\n    resource: string,\n    { palmId, lockName }: LockParams\n  ): Promise<DataProviderExtensionResult<LockResponse>> => {\n    const data = await put<LockParams, LockResponse>(`${PALMS_URL}/Lock`, {\n      palmId,\n      lockName\n    })\n    return Promise.resolve({ data })\n  },\n  unlock: async (\n    resource: string,\n    { palmId }: UnlockParams\n  ): Promise<DataProviderExtensionResult<UnlockResponse>> => {\n    const data = await put<UnlockParams, UnlockResponse>(`${PALMS_URL}/Unlock`, {\n      palmId\n    })\n    return Promise.resolve({ data: { ...data, disabled: undefined } })\n  },\n  setMobileDeviceId: async (\n    resource: string,\n    { palmId, mobileDeviceId }: SetMobileDeviceIdParams\n  ): Promise<DataProviderExtensionResult<SetMobileDeviceIdResponse>> => {\n    const data = await put<SetMobileDeviceIdParams, SetMobileDeviceIdResponse>(`${PALMS_URL}/SetMobileDeviceId`, {\n      palmId,\n      mobileDeviceId\n    })\n    return Promise.resolve({ data })\n  },\n  resetMobileDeviceId: async (\n    resource: string,\n    { palmId }: ResetMobileDeviceIdParams\n  ): Promise<DataProviderExtensionResult<ResetMobileDeviceIdResponse>> => {\n    const data = await put<ResetMobileDeviceIdParams, ResetMobileDeviceIdResponse>(`${PALMS_URL}/ResetMobileDeviceId`, {\n      palmId\n    })\n    return Promise.resolve({ data: { ...data, mobileDeviceId: undefined } })\n  },\n  attachEvents: async (\n    resource: string,\n    { palmId, eventsIds }: PalmEventsDto\n  ): Promise<CacheableDataProviderExtensionResult<PalmEventsDto>> => {\n    const data = await put<PalmEventsDto, PalmEventsDto>(`${PALMS_URL}/AttachEvents`, {\n      palmId,\n      eventsIds\n    })\n    return Promise.resolve({ data })\n  },\n  detachEvents: async (\n    resource: string,\n    { palmId, eventsIds }: PalmEventsDto\n  ): Promise<CacheableDataProviderExtensionResult<PalmEventsDto>> => {\n    const data = await put<PalmEventsDto, PalmEventsDto>(`${PALMS_URL}/DetachEvents`, {\n      palmId,\n      eventsIds\n    })\n    return Promise.resolve({ data })\n  },\n  attachEntrances: async (\n    resource: string,\n    { palmId, entrancesIds }: PalmEntrancesDto\n  ): Promise<CacheableDataProviderExtensionResult<PalmEntrancesDto>> => {\n    const data = await put<PalmEntrancesDto, PalmEntrancesDto>(`${PALMS_URL}/AttachEntrances`, {\n      palmId,\n      entrancesIds\n    })\n    return Promise.resolve({ data })\n  },\n  detachEntrances: async (\n    resource: string,\n    { palmId, entrancesIds }: PalmEntrancesDto\n  ): Promise<CacheableDataProviderExtensionResult<PalmEntrancesDto>> => {\n    const data = await put<PalmEntrancesDto, PalmEntrancesDto>(`${PALMS_URL}/DetachEntrances`, {\n      palmId,\n      entrancesIds\n    })\n    return Promise.resolve({ data })\n  }\n} as PalmDataProvider\n\ninterface PalmDataProvider extends DataProvider {\n  lock: (\n    resource: string,\n    params: LockParams\n  ) => Promise<DataProviderExtensionResult<LockResponse>>,\n\n  unlock: (\n    resource: string,\n    params: UnlockParams\n  ) => Promise<DataProviderExtensionResult<UnlockResponse>>,\n\n  setMobileDeviceId: (\n    resource: string,\n    params: SetMobileDeviceIdParams\n  ) => Promise<DataProviderExtensionResult<SetMobileDeviceIdResponse>>,\n\n  resetMobileDeviceId: (\n    resource: string,\n    params: ResetMobileDeviceIdParams\n  ) => Promise<DataProviderExtensionResult<ResetMobileDeviceIdResponse>>,\n\n  attachEvents: (\n    resource: string,\n    params: PalmEventsDto\n  ) => Promise<CacheableDataProviderExtensionResult<PalmEventsDto>>,\n\n  detachEvents: (\n    resource: string,\n    params: PalmEventsDto\n  ) => Promise<CacheableDataProviderExtensionResult<PalmEventsDto>>,\n\n  attachEntrances: (\n    resource: string,\n    params: PalmEntrancesDto\n  ) => Promise<CacheableDataProviderExtensionResult<PalmEntrancesDto>>,\n\n  detachEntrances: (\n    resource: string,\n    params: PalmEntrancesDto\n  ) => Promise<CacheableDataProviderExtensionResult<PalmEntrancesDto>>\n}\n\nexport interface LockParams {\n  palmId: Identifier,\n  lockName: string\n}\n\nexport interface LockResponse {\n  palmId: Identifier,\n  lockName: string,\n  lockResult: PalmLockResult\n}\n\nexport interface UnlockParams {\n  palmId: Identifier\n}\n\nexport interface UnlockResponse {\n  palmId: Identifier,\n  unlockResult: PalmUnlockResult\n}\n\nexport interface SetMobileDeviceIdParams {\n  palmId: Identifier,\n  mobileDeviceId: string\n}\n\nexport interface SetMobileDeviceIdResponse {\n  palmId: Identifier,\n  mobileDeviceId: string,\n  setResult: PalmSetMobileDeviceIdResults\n}\n\nexport interface ResetMobileDeviceIdParams {\n  palmId: Identifier\n}\n\nexport interface ResetMobileDeviceIdResponse {\n  palmId: Identifier,\n  resetResult: PalmResetMobileDeviceIdResults\n}\n\nexport default provider","import { EngineDto } from \"../../dto/device/engine/engine.dto\"\n\nconst mapping: Partial<\n  Record<\n    keyof EngineDto,\n    (lambdaParameter: string, value: string | number) => string\n  >\n> = {\n  name: (lambdaParameter, value) => `${(lambdaParameter)}.Name.Contains(\"${value}\")`,\n  categoryId: (lambdaParameter, value) => `${(lambdaParameter)}.CategoryId==${value}`\n}\n\nexport const getFilterMapper = (key: keyof EngineDto) =>\n  mapping[key] as (lambdaParameter: string, value: string | number) => string\n","import { EngineDto } from \"../../dto/device/engine/engine.dto\"\n\nconst mapping: Partial<Record<keyof EngineDto, string>> = {\n  id: 'l=>l.Id',\n  name: \"p=>p.Name\",\n  address: \"p=>p.Address\"\n}\n\nexport const mapSortEngineParam = (key: keyof EngineDto) => mapping[key]\n","import { DataProvider, GetListResult, GetOneParams, GetOneResult, Identifier, UpdateParams, UpdateResult } from \"react-admin\"\nimport { ENGINES_URL } from \"../../api-urls\"\nimport { CacheableDataProviderExtensionResult, DataProviderExtensionResult } from \"../../common/data-provider\"\nimport { DateTime } from \"../../common/date-time\"\nimport { get, getWithPagination, patch, put } from \"../../common/fetch.utils\"\nimport { EngineEntrancesDto } from \"../../dto/device/engine/engine-entrances.dto\"\nimport { EngineEventsDto } from \"../../dto/device/engine/engine-events.dto\"\nimport { EngineDto } from \"../../dto/device/engine/engine.dto\"\nimport { RemoveTSCanCredentialsDto } from \"../../dto/device/engine/remove-tscan-credentials.dto\"\nimport { SetStandbyModeDto } from \"../../dto/device/engine/set-standby-mode.dto\"\nimport { SetTSCanCredentialsDto } from \"../../dto/device/engine/set-tscan-credentials.dto\"\nimport { EngineLockResults } from \"../../enum/EngineLockResults\"\nimport { EngineUnlockResults } from \"../../enum/EngineUnlockResults\"\nimport { getFilterMapper } from \"./engine-filter.mapper\"\nimport { EngineListParams } from \"./engine-list.params\"\nimport { mapSortEngineParam } from \"./engine-sort.mapper\"\n\nconst getFilterParams = (\n  partialValues: Partial<EngineDto>\n): string => {\n  if (Object.keys(partialValues).length) {\n    const filterParams = Object.entries(partialValues).map(([key, value]) => {\n      const mapper = getFilterMapper(key as keyof EngineDto)\n      return mapper('o', value as string)\n    })\n    return filterParams.reduce((p, c) => `${p}&&${c}`)\n  }\n  return 'true'\n}\n\nconst provider = {\n  getList: async (\n    resource: string,\n    {\n      filter: { ...filter },\n      sort: { field, order },\n      pagination: { page, perPage }\n    }: EngineListParams\n  ): Promise<GetListResult<EngineDto>> => {\n\n    const filterParams = `o=>${getFilterParams(filter)}`\n    const queryParams: string[] = []\n    queryParams.push(`sortBy=${mapSortEngineParam(field)}`)\n    queryParams.push(`sortOrder=${order}`)\n    queryParams.push(`rangeFrom=${page * perPage - perPage}`)\n    queryParams.push(`rangeTo=${page * perPage - 1}`)\n    const pathParams = queryParams.reduce((p, c) => `${p}&${c}`)\n    const path = `/${filterParams}?${pathParams}`\n\n    const { data, range: { total } } = await getWithPagination<EngineDto[]>(`${ENGINES_URL}/GetByConditions`, path)\n\n    return Promise.resolve({\n      data,\n      total\n    })\n  },\n  getOne: async (\n    resource: string,\n    { id }: GetOneParams\n  ): Promise<GetOneResult<EngineDto>> => {\n    const data = await get<EngineDto>(ENGINES_URL, `/${id}`)\n    return Promise.resolve({\n      data\n    })\n  },\n  update: async (\n    resource: string,\n    { id, data, previousData }: UpdateParams\n  ): Promise<UpdateResult> => {\n    const update = await patch<{ id: Identifier, [n: string]: any }, EngineDto>(ENGINES_URL, {\n      id,\n      name: data.name || previousData.name,\n      isWatched: data.isWatched,\n      lastRefresh: new Date(new Date(data.lastRefresh).getTime() - (new Date(data.lastRefresh).getTimezoneOffset() * 60000)).toJSON() as DateTime || previousData.lastRefresh,\n      address: data.address || previousData.address,\n      direction: data.direction || previousData.direction,\n      categoryId: data.categoryId || previousData.categoryId,\n      onlineInfixCeck: data.onlineInfixCeck,\n      multiplicity: data.multiplicity || previousData.multiplicity\n    })\n    return Promise.resolve({ data: update })\n  },\n  attachEvents: async (\n    resource: string,\n    params: EngineEventsDto\n  ): Promise<CacheableDataProviderExtensionResult<EngineEventsDto>> => {\n    const engineEvents = await put<EngineEventsDto, EngineEventsDto>\n      (`${ENGINES_URL}/AttachEvents`, params)\n    return {\n      data: engineEvents\n    }\n  },\n  detachEvents: async (\n    resource: string,\n    params: EngineEventsDto\n  ): Promise<CacheableDataProviderExtensionResult<EngineEventsDto>> => {\n    const engineEvents = await put<EngineEventsDto, EngineEventsDto>\n      (`${ENGINES_URL}/DetachEvents`, params)\n    return {\n      data: engineEvents\n    }\n  },\n  attachEntrances: async (\n    resource: string,\n    params: EngineEntrancesDto\n  ): Promise<CacheableDataProviderExtensionResult<EngineEntrancesDto>> => {\n    const engineEntrances = await put<EngineEntrancesDto, EngineEntrancesDto>\n      (`${ENGINES_URL}/AttachEntrances`, params)\n    return {\n      data: engineEntrances\n    }\n  },\n  detachEntrances: async (\n    resource: string,\n    params: EngineEntrancesDto\n  ): Promise<CacheableDataProviderExtensionResult<EngineEntrancesDto>> => {\n    const engineEntrances = await put<EngineEntrancesDto, EngineEntrancesDto>\n      (`${ENGINES_URL}/DetachEntrances`, params)\n    return {\n      data: engineEntrances\n    }\n  },\n  setTSCanCredentials: async (\n    resource: string,\n    params: SetTSCanCredentialsDto\n  ): Promise<DataProviderExtensionResult<SetTSCanCredentialsDto>> => {\n    const setTSCanCredentials = await put<SetTSCanCredentialsDto, SetTSCanCredentialsDto>\n      (`${ENGINES_URL}/SetTSCanCredentials`, params)\n    return {\n      data: setTSCanCredentials\n    }\n  },\n  removeTSCanCredentials: async (\n    resource: string,\n    params: RemoveTSCanCredentialsDto\n  ): Promise<DataProviderExtensionResult<RemoveTSCanCredentialsDto>> => {\n    const removeTSCanCredentials = await put<RemoveTSCanCredentialsDto, RemoveTSCanCredentialsDto>\n      (`${ENGINES_URL}/RemoveTSCanCredentials`, params)\n    return {\n      data: removeTSCanCredentials\n    }\n  },\n  lock: async (\n    resource: string,\n    params: LockParams\n  ): Promise<DataProviderExtensionResult<LockResponse>> => {\n    const lock = await put<LockParams, LockResponse>\n      (`${ENGINES_URL}/Lock`, params)\n    return {\n      data: lock\n    }\n  },\n  unlock: async (\n    resource: string,\n    params: UnlockParams\n  ): Promise<DataProviderExtensionResult<UnlockResponse>> => {\n    const unlock = await put<UnlockParams, UnlockResponse>\n      (`${ENGINES_URL}/Unlock`, params)\n    return {\n      data: unlock\n    }\n  },\n  setStandbyMode: async (\n    resource: string,\n    params: SetStandbyModeDto\n  ): Promise<DataProviderExtensionResult<SetStandbyModeDto>> => {\n    const setStandbyMode = await put<SetStandbyModeDto, SetStandbyModeDto>\n      (`${ENGINES_URL}/SetStandbyMode`, params)\n    return {\n      data: setStandbyMode\n    }\n  }\n} as EngineDataProvider\n\ninterface EngineDataProvider extends DataProvider {\n  attachEvents: (\n    resource: string,\n    params: EngineEventsDto\n  ) => Promise<CacheableDataProviderExtensionResult<EngineEventsDto>>;\n\n  detachEvents: (\n    resource: string,\n    params: EngineEventsDto\n  ) => Promise<CacheableDataProviderExtensionResult<EngineEventsDto>>;\n\n  attachEntrances: (\n    resource: string,\n    params: EngineEntrancesDto\n  ) => Promise<CacheableDataProviderExtensionResult<EngineEntrancesDto>>;\n\n  detachEntrances: (\n    resource: string,\n    params: EngineEntrancesDto\n  ) => Promise<CacheableDataProviderExtensionResult<EngineEntrancesDto>>;\n\n  setTSCanCredentials: (\n    resource: string,\n    params: SetTSCanCredentialsDto\n  ) => Promise<DataProviderExtensionResult<SetTSCanCredentialsDto>>;\n\n  removeTSCanCredentials: (\n    resource: string,\n    params: RemoveTSCanCredentialsDto\n  ) => Promise<DataProviderExtensionResult<RemoveTSCanCredentialsDto>>;\n\n  lock: (\n    resource: string,\n    params: LockParams\n  ) => Promise<DataProviderExtensionResult<LockResponse>>;\n\n  unlock: (\n    resource: string,\n    params: UnlockParams\n  ) => Promise<DataProviderExtensionResult<UnlockResponse>>;\n\n  setStandbyMode: (\n    resource: string,\n    params: SetStandbyModeDto\n  ) => Promise<DataProviderExtensionResult<SetStandbyModeDto>>;\n};\n\nexport interface LockParams {\n  engineId: number\n  lockName: string\n}\n\nexport interface LockResponse {\n  engineId: number\n  lockName: string\n  lockResult: EngineLockResults\n}\n\nexport interface UnlockParams {\n  engineId: number\n}\n\nexport interface UnlockResponse {\n  engineId: number\n  unlockResult: EngineUnlockResults\n}\n\nexport default provider","import { EntranceDto } from '../dto/entrance.dto'\n\nconst mapping: Partial<Record<keyof EntranceDto, string>> = {\n  id: 'e=>e.Id',\n  note: 'e=>e.Note'\n}\n\nexport const mapSortEntranceParam = (key: keyof EntranceDto) => mapping[key]\n","import { DataProvider, GetListParams, GetListResult } from 'react-admin'\nimport { ENTRANCES_URL } from '../api-urls'\nimport { getWithPagination } from '../common/fetch.utils'\nimport { ALL_RESULTS } from '../common/filter.values'\nimport { EntranceDto } from '../dto/entrance.dto'\nimport { mapSortEntranceParam } from './entrance-sort.mapper'\n\ninterface EntranceListParams extends GetListParams {\n  readonly sort: {\n    readonly field: keyof EntranceDto\n    readonly order: 'ASC' | 'DESC'\n  }\n  readonly filter:\n  {\n    readonly note: string\n  }\n}\n\nconst provider = {\n  getList: async (\n    resource: string,\n    {\n      filter: { note },\n      sort: { field, order },\n      pagination: { page, perPage }\n    }: EntranceListParams,\n  ): Promise<GetListResult<EntranceDto>> => {\n\n    const queryParams: string[] = []\n    queryParams.push(`sortBy=${mapSortEntranceParam(field)}`)\n    queryParams.push(`sortOrder=${order}`)\n    queryParams.push(`rangeFrom=${page * perPage - perPage}`)\n    queryParams.push(`rangeTo=${page * perPage}`)\n    const pathParams = queryParams.reduce((p, c) => `${p}&${c}`)\n    const { data, range: { total } } = await getWithPagination<EntranceDto[]>(`${ENTRANCES_URL}/GetByConditions/`, `${note ? `e=>e.Note.Contains(\"${note}\")` : ALL_RESULTS}?${pathParams}`)\n\n    return Promise.resolve({\n      data,\n      total\n    })\n  }\n} as DataProvider\n\nexport default provider","import { DataProvider, sanitizeFetchType } from 'react-admin'\nimport accessUsingsProvider from './access-usings/access-usings.provider'\nimport bookingsProvider from './bookings/bookings.provider'\nimport logsProvider from './logs/extended-logs.provider'\nimport { ResourceName } from './ResourceName'\nimport statsOverallViewListProvider from './stats/overall-view/overall-view-list.provider'\nimport statsOverallViewProvider from './stats/overall-view/overall-view.provider'\nimport ticketDetailsProvider from './ticket-details/ticket-details.provider'\nimport ticketInfoProvider from './ticket-info/ticket-info.provider'\nimport ticketsProvider from './tickets/tickets.provider'\nimport accessesProvider from './accesses/access.provider'\nimport eventsProvider from './events/event.provider'\nimport customersDetailsProvider from './customer-details/customer-details.provider'\nimport customersInfoProvider from './customer-info/customer-info.provider'\nimport accessDatesProvider from './access-dates/access-dates.provider'\nimport companiesProvider from './companies/companies.provider'\nimport objectsProvider from './objects/objects.provider'\nimport palmProvider from './devices/palms/palms.provider'\nimport engineProvider from './devices/engines/engines.provider'\nimport entrancesProvider from './entrances/entrance.provider'\n\nconst dataProviders: Record<ResourceName, DataProvider> = {\n  [ResourceName.ACCESS_DATES]: accessDatesProvider,\n  [ResourceName.ACCESSES]: accessesProvider,\n  [ResourceName.ACCESS_USINGS]: accessUsingsProvider,\n  [ResourceName.BOOKINGS]: bookingsProvider,\n  [ResourceName.COMPANIES]: companiesProvider,\n  [ResourceName.CUSTOMER_DETAILS]: customersDetailsProvider,\n  [ResourceName.CUSTOMER_INFO]: customersInfoProvider,\n  [ResourceName.ENGINES]: engineProvider,\n  [ResourceName.ENTRANCES]: entrancesProvider,\n  [ResourceName.EVENTS]: eventsProvider,\n  [ResourceName.LOGS]: logsProvider,\n  [ResourceName.OBJECTS]: objectsProvider,\n  [ResourceName.PALMS]: palmProvider,\n  [ResourceName.TICKETS]: ticketsProvider,\n  [ResourceName.TICKET_INFO]: ticketInfoProvider,\n  [ResourceName.TICKET_DETAILS]: ticketDetailsProvider,\n  [ResourceName.TICKET_LOGS]: logsProvider,\n  [ResourceName.STATS_OVERALL_VIEW]: statsOverallViewProvider,\n  [ResourceName.STATS_OVERALL_VIEW_LIST]: statsOverallViewListProvider,\n}\n\nexport default (\n  fetchType: string,\n  resource: string,\n  params: unknown,\n): Promise<unknown> => {\n  const selectedProvider = dataProviders[resource as ResourceName]\n  const type = sanitizeFetchType(fetchType)\n  return selectedProvider[type](resource, params)\n}\n","import i18n from 'i18next'\n\nconst provider = {\n  translate: (key: string, options: any): string => i18n.t(key, options),\n  changeLocale: async (locale: string): Promise<void> => {\n    const identity = localStorage.getItem('username') as string\n    localStorage.setItem(`${identity}.lng`, locale)\n    await i18n.changeLanguage(locale)\n  },\n  getLocale: (): string => i18n.language,\n}\n\nexport default provider","import { AuthProvider } from 'react-admin'\nimport { get } from '../common/fetch.utils'\nimport { RoleDto } from '../dto/role.dto'\nimport { ROLES_URL } from '../api-urls'\n\nconst areRolesOutOfSync = (local: Set<string>, remote: string[]) =>\n  local.size !== remote.length || !remote.every((value) => local.has(value))\n\nconst validateRoles = async (\n  dataProvider: AuthProvider,\n  params: any,\n  rolesFromRemote: string[],\n): Promise<Set<string>> => {\n  const rolesFromLocalStorage = (await dataProvider.getPermissions(\n    params,\n  )) as Set<string>\n  if (areRolesOutOfSync(rolesFromLocalStorage, rolesFromRemote)) {\n    // eslint-disable-next-line no-console\n    console.error('Corrupted permissions')\n    await dataProvider.logout('')\n    return Promise.resolve(new Set([]))\n  }\n  return Promise.resolve(rolesFromLocalStorage)\n}\n\nexport const withSynchronizedPermissions = (dataProvider: AuthProvider) => {\n  // this is set once on app initialization\n  let rolesFromRemote: string[] | null = null\n\n  return new Proxy<AuthProvider>(dataProvider, {\n    get:\n      (target, name: string) =>\n      async (params: any): Promise<any> => {\n        switch (name as keyof AuthProvider) {\n          // avoid re-executing getRoles call\n          case 'login': {\n            await dataProvider.login(params)\n            const rolesFromLocalStorage = (await dataProvider.getPermissions(\n              params,\n            )) as Set<string>\n            rolesFromRemote = Array.from(rolesFromLocalStorage)\n            return Promise.resolve()\n          }\n          case 'getPermissions': {\n            if (rolesFromRemote) {\n              // compares the status of local and remote roles each time it checks for permissions\n              return validateRoles(dataProvider, params, rolesFromRemote)\n            }\n            // after reloading the page it needs to fetch roles from remote\n            const roleDtos = await get<RoleDto[]>(ROLES_URL)\n            const roles = roleDtos.map((v) => v.name)\n            rolesFromRemote = roles\n            localStorage.setItem('roles', roles.join())\n            return Promise.resolve(new Set(roles))\n          }\n          default: {\n            return dataProvider[name](params)\n          }\n        }\n      },\n  })\n}\n","import { defaultTheme } from 'react-admin'\nimport { deepPurple, green } from '@material-ui/core/colors'\nimport { ThemeOptions } from '@material-ui/core'\n\nconst overriddenTheme: ThemeOptions = {\n  ...defaultTheme,\n  typography: {\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Arial',\n      'sans-serif',\n    ].join(','),\n    body1: {\n      fontWeight: 300,\n    },\n    body2: {\n      fontWeight: 300,\n    },\n    h5: {\n      fontWeight: 200,\n    },\n  },\n}\n\nexport const LightTheme: ThemeOptions = {\n  ...overriddenTheme,\n  palette: {\n    primary: deepPurple,\n    secondary: green,\n    type: 'light'\n  },\n}\n\nexport const DarkTheme: ThemeOptions = {\n  ...overriddenTheme,\n  palette: {\n    primary: {\n      light: deepPurple[100],\n      main: deepPurple[200],\n      dark: deepPurple[300],\n      contrastText: '#F1F1F1'\n    },\n    secondary: green,\n    type: 'dark'\n  },\n\n}","import { MenuItem, Collapse, Tooltip, ListItemIcon, Typography, List } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ExpandMore } from '@material-ui/icons';\nimport React, { ReactElement, ReactNode } from 'react';\nimport { useSelector } from 'react-redux';\nimport { ReduxState } from 'react-admin';\n\nconst useStyles = makeStyles(theme => ({\n  icon: {\n    minWidth: theme.spacing(5)\n  },\n  sidebarIsOpen: {\n    '& a': {\n      transition: 'padding-left 195ms cubic-bezier(0.4, 0, 0.6, 1) 0ms',\n      paddingLeft: theme.spacing(4),\n    },\n  },\n  sidebarIsClosed: {\n    '& a': {\n      transition: 'padding-left 195ms cubic-bezier(0.4, 0, 0.6, 1) 0ms',\n      paddingLeft: theme.spacing(2),\n    },\n  },\n}));\n\ninterface SubMenuProps {\n  handleToggle: () => void\n  icon: ReactElement\n  isOpen: boolean\n  name: string\n  children: ReactNode\n}\n\nexport const SubMenu = (props: SubMenuProps) => {\n  const { handleToggle, icon, isOpen, name, children } = props\n  const sidebarOpen = useSelector((state: ReduxState) => state?.admin.ui.sidebarOpen)\n  const classes = useStyles()\n\n  const header = (\n    <MenuItem button onClick={handleToggle}>\n      <ListItemIcon className={classes.icon}>\n        {isOpen ? <ExpandMore /> : icon}\n      </ListItemIcon>\n      <Typography variant=\"inherit\" color=\"textSecondary\">\n        {name}\n      </Typography>\n    </MenuItem>\n  )\n\n  return (\n    <>\n      {sidebarOpen || isOpen ? (\n        header\n      ) : (\n        <Tooltip title={name} placement=\"right\">\n          {header}\n        </Tooltip>\n      )}\n      <Collapse in={isOpen} timeout=\"auto\" unmountOnExit>\n        <List\n          component=\"div\"\n          disablePadding\n          className={sidebarOpen ? classes.sidebarIsOpen : classes.sidebarIsClosed}>\n          {children}\n        </List>\n      </Collapse>\n    </>\n  )\n}\n","import * as React from 'react';\nimport createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M 23.921875 8.652344 L 20.859375 3.347656 L 19.09375 4.367188 L 18.816406 4.527344 C 18.292969 4.050781 17.71875 3.625 17.097656 3.261719 C 16.449219 2.882812 15.769531 2.582031 15.0625 2.355469 L 15.0625 0 L 8.9375 0 L 8.9375 2.355469 C 8.230469 2.582031 7.550781 2.882812 6.902344 3.261719 C 6.28125 3.625 5.707031 4.050781 5.183594 4.527344 L 4.90625 4.367188 L 3.140625 3.347656 L 0.078125 8.652344 L 1.84375 9.671875 L 2.117188 9.832031 C 1.960938 10.539062 1.882812 11.265625 1.882812 12 C 1.882812 12.734375 1.960938 13.460938 2.117188 14.167969 L 1.84375 14.328125 L 0.078125 15.347656 L 3.140625 20.652344 L 4.90625 19.632812 L 5.183594 19.472656 C 5.707031 19.949219 6.285156 20.375 6.902344 20.738281 C 7.550781 21.117188 8.230469 21.417969 8.9375 21.644531 L 8.9375 24 L 14.863281 24 C 13.722656 22.835938 13.019531 21.242188 13.019531 19.488281 C 13.019531 18.84375 13.117188 18.222656 13.289062 17.636719 C 12.875 17.734375 12.445312 17.785156 12 17.785156 C 8.808594 17.785156 6.214844 15.191406 6.214844 12 C 6.214844 8.808594 8.808594 6.214844 12 6.214844 C 15.191406 6.214844 17.785156 8.808594 17.785156 12 C 17.785156 12.445312 17.734375 12.875 17.636719 13.289062 C 18.222656 13.117188 18.84375 13.019531 19.488281 13.019531 C 20.378906 13.019531 21.226562 13.203125 22 13.53125 C 22.078125 13.027344 22.117188 12.515625 22.117188 12 C 22.117188 11.265625 22.039062 10.539062 21.882812 9.832031 L 22.15625 9.671875 Z M 23.921875 8.652344\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M 12 8.257812 C 9.9375 8.257812 8.257812 9.9375 8.257812 12 C 8.257812 14.0625 9.9375 15.742188 12 15.742188 C 14.0625 15.742188 15.742188 14.0625 15.742188 12 C 15.742188 9.9375 14.0625 8.257812 12 8.257812 Z M 12 8.257812\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M 19.488281 15.0625 C 17.046875 15.0625 15.0625 17.046875 15.0625 19.488281 C 15.0625 21.925781 17.046875 23.910156 19.488281 23.910156 C 21.925781 23.910156 23.910156 21.925781 23.910156 19.488281 C 23.910156 17.046875 21.925781 15.0625 19.488281 15.0625 Z M 19.011719 22.019531 L 16.925781 19.9375 L 18.371094 18.492188 L 19.011719 19.132812 L 21.011719 17.132812 L 22.453125 18.574219 Z M 19.011719 22.019531\"\n})), 'Ver');","import { makeStyles } from '@material-ui/core/styles'\nimport {\n  Event,\n  List,\n  Person,\n  PhoneAndroid,\n  Receipt,\n  Sort,\n  VideoLabel,\n  ViewComfy,\n} from '@material-ui/icons'\nimport React, { useState } from 'react'\nimport { getResources, ResourceDefinition } from 'ra-core'\nimport {\n  DashboardMenuItem,\n  MenuItemLink,\n  ReduxState,\n  useTranslate,\n} from 'react-admin'\nimport { useSelector } from 'react-redux'\nimport { SubMenu } from './AppSubmenu'\nimport { ResourceName } from '../../core/ResourceName'\nimport EngineDevice from '../../assets/icons/EngineDevice'\n\nconst useStyles = makeStyles({\n  open: {\n    width: '240px',\n  },\n  closed: {\n    width: '55px',\n  },\n})\n\nexport const AppMenu = () => {\n  const sidebarOpen = useSelector(\n    (state: ReduxState) => state.admin.ui.sidebarOpen,\n  )\n  const theme = useStyles()\n  const [open, setOpen] = useState({\n    menuStats: true,\n    menuDevices: true,\n  })\n\n  const availableResources = new Set(\n    useSelector<ReduxState, ResourceDefinition[]>(getResources).map(\n      (r) => r.name as ResourceName,\n    ),\n  )\n  const translate = useTranslate()\n\n  const handleToggle = (menu: 'menuStats' | 'menuDevices') =>\n    setOpen((state) => ({ ...state, [menu]: !state[menu] }))\n\n  const anyStatsResourcesAvailable = (avRes: Set<ResourceName>) =>\n    avRes.has(ResourceName.STATS_OVERALL_VIEW_LIST)\n\n  const anyDeviceResourcesAvailable = (avRes: Set<ResourceName>) =>\n    avRes.has(ResourceName.PALMS) || avRes.has(ResourceName.ENGINES)\n\n  return (\n    <div\n      style={{ userSelect: 'none' }}\n      className={sidebarOpen ? theme.open : theme.closed}\n    >\n      <DashboardMenuItem />\n      {availableResources.has(ResourceName.TICKET_INFO) && (\n        <MenuItemLink\n          to={`/${ResourceName.TICKET_INFO}`}\n          primaryText={translate('resources.ticket-info.name')}\n          leftIcon={<Receipt />}\n        />\n      )}\n      {availableResources.has(ResourceName.CUSTOMER_INFO) && (\n        <MenuItemLink\n          to={`/${ResourceName.CUSTOMER_INFO}`}\n          primaryText={translate('resources.customer-info.name')}\n          leftIcon={<Person />}\n        />\n      )}\n      {availableResources.has(ResourceName.LOGS) && (\n        <MenuItemLink\n          to={`/${ResourceName.LOGS}`}\n          primaryText={translate('resources.logs.name')}\n          leftIcon={<List />}\n        />\n      )}\n      {availableResources.has(ResourceName.EVENTS) && (\n        <MenuItemLink\n          to={`/${ResourceName.EVENTS}`}\n          primaryText={translate('resources.events.name')}\n          leftIcon={<Event />}\n        />\n      )}\n      {anyStatsResourcesAvailable(availableResources) && (\n        <SubMenu\n          handleToggle={() => handleToggle('menuStats')}\n          isOpen={open.menuStats}\n          name={translate('side-menu.stats.name')}\n          icon={<ViewComfy />}\n        >\n          {availableResources.has(ResourceName.STATS_OVERALL_VIEW_LIST) && (\n            <MenuItemLink\n              to={`/${ResourceName.STATS_OVERALL_VIEW_LIST}`}\n              primaryText={translate('side-menu.stats.overall-view')}\n              leftIcon={<Sort style={{ transform: 'scaleX(-1)' }} />}\n            />\n          )}\n        </SubMenu>\n      )}\n      {anyDeviceResourcesAvailable(availableResources) && (\n        <SubMenu\n          handleToggle={() => handleToggle('menuDevices')}\n          isOpen={open.menuDevices}\n          name={translate('side-menu.devices.name')}\n          icon={<VideoLabel />}\n        >\n          {availableResources.has(ResourceName.PALMS) && (\n            <MenuItemLink\n              to=\"/palms\"\n              primaryText={translate('resources.palms.name')}\n              leftIcon={<PhoneAndroid />}\n            />\n          )}\n          {availableResources.has(ResourceName.ENGINES) && (\n            <MenuItemLink\n              to=\"/engines\"\n              primaryText={translate('resources.engines.name')}\n              leftIcon={<EngineDevice />}\n            />\n          )}\n        </SubMenu>\n      )}\n    </div>\n  )\n}\n","import { Typography } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Settings } from '@material-ui/icons'\nimport React from 'react'\nimport { AppBar, AppBarProps, CoreLayoutProps, Layout, UserMenu, UserMenuProps, MenuItemLink, useTranslate } from 'react-admin'\nimport { useSelector } from 'react-redux'\nimport { DarkTheme, LightTheme } from '../../app.theme'\nimport { ThemeState } from '../../core/common/theme.reducer'\nimport { AppMenu } from './AppMenu'\n\nconst useStyles = makeStyles({\n  title: {\n    flex: 1,\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n  },\n})\n\nconst AppUserMenu = (props: UserMenuProps) => {\n  const translate = useTranslate()\n  return (\n    <UserMenu {...props}>\n      <MenuItemLink\n        to=\"/configuration\"\n        primaryText={translate(\"settings.name\")}\n        leftIcon={<Settings />} />\n    </UserMenu>\n  )\n}\n\nconst AppTopBar = (props: AppBarProps) => {\n  const classes = useStyles()\n  return (\n    <AppBar {...props} userMenu={<AppUserMenu />}>\n      <Typography\n        variant=\"h6\"\n        className={classes.title}\n        id=\"react-admin-title\"\n      />\n    </AppBar>\n  )\n}\n\nexport const AppLayout = (props: CoreLayoutProps) => {\n  const theme = useSelector((state: ThemeState) =>\n    state.theme.darkMode === 'dark' ? DarkTheme : LightTheme,\n  )\n\n  return (\n    <Layout\n      {...props}\n      menu={AppMenu}\n      appBar={AppTopBar}\n      theme={theme} />)\n}\n","import React, { ChangeEvent, FC, useState } from 'react'\nimport {\n  Box,\n  Button,\n  FormControl,\n  FormHelperText,\n  Input,\n  withStyles,\n} from '@material-ui/core'\nimport SearchIcon from '@material-ui/icons/Search'\nimport { useTranslate } from 'react-admin'\n\nconst RoundInputBox = withStyles({\n  root: {\n    borderRadius: 16,\n    width: '90%',\n    marginLeft: '5%',\n    display: 'flex',\n    flexDirection: 'row-reverse',\n    border: 'solid',\n    borderColor: '#673ab7',\n  },\n})(Box)\n\nconst RoundInputBoxBtn = withStyles({\n  root: {\n    background: '#673ab7',\n    variant: 'contained',\n    borderRadius: 11,\n    borderTopLeftRadius: 0,\n    borderBottomLeftRadius: 0,\n    margin: 0,\n    fontWeight: 'bold',\n    '&:hover': {\n      background: '#7e57c2',\n    },\n  },\n})(Button)\n\nconst RoundInputBoxFC = withStyles({\n  root: {\n    width: '100%',\n    marginLeft: 13,\n    marginTop: 2,\n  },\n})(FormControl)\n\nexport type SearchInputProps = {\n  label: string\n  onValue: (value: string) => void\n  disabled: boolean\n  error: string\n}\n\nconst SearchInput: FC<Readonly<SearchInputProps>> = ({\n  label,\n  onValue,\n  disabled,\n  error,\n}) => {\n  const [inputError, setInputError] = useState(false)\n  const [inputValue, setInputValue] = useState('')\n  const t = useTranslate()\n\n  const handleInput = (event: ChangeEvent<HTMLInputElement>) => {\n    setInputValue(event.target.value)\n  }\n\n  const handleClick = () => {\n    if (inputValue) {\n      setInputError(false)\n      onValue(inputValue)\n    } else {\n      setInputError(true)\n    }\n  }\n\n  return (\n    <RoundInputBox>\n      <RoundInputBoxBtn onClick={handleClick} disabled={disabled}>\n        <SearchIcon style={{ color: 'white' }} />\n      </RoundInputBoxBtn>\n      <RoundInputBoxFC disabled={disabled}>\n        <Input\n          disableUnderline\n          placeholder={t(label)}\n          onInput={handleInput}\n          onKeyDown={(ev) => ev.key === 'Enter' && handleClick()}\n          error={inputError || !!error}\n        />\n        {inputError && (\n          <FormHelperText error>{t('ra.validation.required')}</FormHelperText>\n        )}\n        {!!error && <FormHelperText error>{t(error)}</FormHelperText>}\n      </RoundInputBoxFC>\n    </RoundInputBox>\n  )\n}\n\nexport default SearchInput\n","import React, { useCallback, useState } from 'react'\nimport {\n  useNotify,\n  useMutation,\n  useTranslate,\n  sanitizeFetchType,\n  GetListResult,\n  GET_LIST,\n} from 'react-admin'\nimport { useHistory } from 'react-router'\nimport { stringify } from 'querystring'\nimport { CardContent, CardHeader } from '@material-ui/core'\nimport { ResourceName } from '../../core/ResourceName'\nimport { CustomerInfoFilter } from '../../core/customer-info/customer-info.params'\nimport { CustomerInfo } from '../../core/customer-info/customer-info'\nimport SearchInput from './SearchInput'\n\nexport const FindCustomerByInfo = () => {\n  const history = useHistory()\n  const notify = useNotify()\n  const [error, setError] = useState('')\n  const [mutate, { loading }] = useMutation()\n  const t = useTranslate()\n\n  const fetchCustomers = useCallback(\n    (info: string) =>\n      mutate(\n        {\n          type: sanitizeFetchType(GET_LIST),\n          resource: ResourceName.CUSTOMER_INFO,\n          payload: { filter: { info } } as CustomerInfoFilter,\n        },\n        { returnPromise: true },\n      ) as Promise<GetListResult<CustomerInfo>>,\n    [mutate],\n  )\n\n  const onValue = useCallback(\n    async (info: string) => {\n      if (info.replace(/\\s/g, '').length === 0) {\n        setError('common.find-customer-by-info.invalidQuery')\n      } else if (info.length < 2) {\n        setError('common.find-customer-by-info.tooShort')\n      } else {\n        setError('')\n        try {\n          const {\n            total,\n            data: [onlyCustomer],\n          } = await fetchCustomers(info)\n          if (!total) {\n            setError('common.find-customer-by-info.error')\n          } else if (total === 1) {\n            history.push({\n              pathname: `/${ResourceName.CUSTOMER_DETAILS}/${onlyCustomer.id}/show`,\n            })\n          } else {\n            history.push({\n              pathname: `/${ResourceName.CUSTOMER_INFO}`,\n              search: stringify({\n                filter: JSON.stringify({\n                  info,\n                } as CustomerInfoFilter['filter']),\n              }),\n            })\n          }\n        } catch (err) {\n          notify((err as Error)?.message, 'error')\n        }\n      }\n    },\n    [fetchCustomers, history, notify],\n  )\n\n  return (\n    <>\n      <CardHeader title={t('common.find-customer-by-info.title')} />\n      <CardContent>\n        <SearchInput\n          label=\"common.find-customer-by-info.input-label\"\n          onValue={onValue}\n          disabled={loading}\n          error={error}\n        />\n      </CardContent>\n    </>\n  )\n}\n","import { stringify } from 'querystring'\nimport * as React from 'react'\nimport { useCallback, useState } from 'react'\nimport {\n  GET_LIST,\n  GetListResult,\n  sanitizeFetchType,\n  useMutation,\n  useNotify,\n  useTranslate,\n} from 'react-admin'\nimport { CardContent, CardHeader } from '@material-ui/core'\nimport { useHistory } from 'react-router-dom'\nimport { TicketCodeFilter } from '../../core/common/ticket-code.filter'\nimport { TicketDto } from '../../core/dto/ticket.dto'\nimport { ResourceName } from '../../core/ResourceName'\nimport SearchInput from './SearchInput'\n\nexport const FindUserByTicket = () => {\n  const history = useHistory()\n  const notify = useNotify()\n  const [error, setError] = useState('')\n  const [mutate, { loading }] = useMutation()\n  const t = useTranslate()\n\n  const fetchTickets = useCallback(\n    (ticketCode: string) =>\n      mutate(\n        {\n          type: sanitizeFetchType(GET_LIST),\n          resource: ResourceName.TICKETS,\n          payload: { filter: { ticketCode } } as TicketCodeFilter,\n        },\n        { returnPromise: true },\n      ) as Promise<GetListResult<TicketDto>>,\n    [mutate],\n  )\n\n  const onValue = useCallback(\n    async (ticketCode: string) => {\n      setError('')\n      try {\n        const {\n          total,\n          data: [onlyTicket],\n        } = await fetchTickets(ticketCode)\n        if (!total) {\n          setError('common.find-user-by-ticket.error')\n        } else if (total === 1) {\n          history.push({\n            pathname: `/${ResourceName.TICKET_DETAILS}/${onlyTicket.bookingId}/show`,\n          })\n        } else {\n          history.push({\n            pathname: `/${ResourceName.TICKET_INFO}`,\n            search: stringify({\n              filter: JSON.stringify({\n                ticketCode,\n              } as TicketCodeFilter['filter']),\n            }),\n          })\n        }\n      } catch (err) {\n        notify((err as Error)?.message, 'error')\n      }\n    },\n    [fetchTickets, history, notify],\n  )\n\n  return (\n    <>\n      <CardHeader title={t('common.find-user-by-ticket.title')} />\n      <CardContent>\n        <SearchInput\n          label=\"common.find-user-by-ticket.input-label\"\n          onValue={onValue}\n          disabled={loading}\n          error={error}\n        />\n      </CardContent>\n    </>\n  )\n}\n","import { Authority } from './Authority'\n\nconst mapping: Record<Authority, string[]> = {\n  [Authority.VIEW_LOGS]: ['ViewItems_Logs'],\n  [Authority.VIEW_STATS_OVERALL_VIEW]: ['ViewItems_Stats_OverallView'],\n  [Authority.VIEW_EVENTS]: ['ViewItems_Events_Show', 'ViewItems_Events_Edit', 'ViewItems_Events_Add'],\n  [Authority.EDIT_EVENTS]: ['ViewItems_Events_Edit'],\n  [Authority.CREATE_EVENTS]: ['ViewItems_Events_Add'],\n}\n\nexport const mapAuthorityToRequiredPermissions = (authority: Authority) => mapping[authority]","import { UPDATE_DASHBOARD } from '../constants/reducer.actions'\n\nconst identity = localStorage.getItem('username')\nexport const INACTIVE_COMPONENTS_KEY = `${identity}.inactiveComponents`\n\nexport enum DashboardItem {\n  TICKET_FINDER = 'ticket_finder',\n  LAST_LOGS = 'last_logs',\n  LAST_EVENTS = 'last_events',\n  CUSTOMER_FINDER = 'customer_finder'\n}\n\nexport type DashboardState = {\n  dashboard: {\n    inactiveComponents: DashboardItem[]\n  }\n}\n\nexport type DashboardAction = {\n  type: typeof UPDATE_DASHBOARD\n  payload: DashboardItem\n}\n","import { usePermissions } from 'react-admin'\nimport { Authority } from '../../core/auth/Authority'\nimport { mapAuthorityToRequiredPermissions } from '../../core/auth/authority.mapper'\n\nexport const hasAuthorityWithGivenPermissions = (authority: Authority, permissions: Set<string>) => {\n  const permissionSet = new Set(permissions)\n  const requiredPerms = mapAuthorityToRequiredPermissions(authority)\n  return requiredPerms.some(reqPerms => permissionSet.has(reqPerms))\n}\n\nexport const useHasAuthority = () => {\n  const { permissions, loaded } = usePermissions<Set<string>>()\n  return (authority: Authority) => {\n    if (loaded && !permissions) {\n      // eslint-disable-next-line no-console\n      console.error('\"useHasAuthority\" - No permissions or hook was used outside the react admin context')\n      return false\n    }\n    return hasAuthorityWithGivenPermissions(authority, permissions as Set<string>)\n  }\n}","import {\n  Datagrid,\n  DateField,\n  Filter,\n  FilterProps,\n  FunctionField,\n  Link,\n  List,\n  ListProps,\n  Pagination,\n  TextField,\n  TextInput,\n  useTranslate,\n} from 'react-admin'\nimport { useListContext } from 'ra-core'\nimport React from 'react'\nimport { IconButton, makeStyles, useMediaQuery, useTheme } from '@material-ui/core'\nimport { Event as EventIcon, Sort } from '@material-ui/icons'\nimport { ResourceName } from '../../core/ResourceName'\nimport { EventDto } from '../../core/dto/event/event.dto'\nimport { useHasAuthority } from '../hooks/useHasAuthority'\nimport { Authority } from '../../core/auth/Authority'\nimport { DateTime } from '../../core/common/date-time'\n\nconst useStyles = makeStyles((theme) => ({\n  actionColumnsWithoutPadding: {\n    // applies always for last column\n    '& tr > td:last-child': {\n      padding: 0,\n      width: theme.spacing(6),\n    },\n    // only applies when there are four columns and targets the penultimate column\n    '& tr > td:first-child:nth-last-child(4) ~ td:nth-last-child(2)': {\n      padding: 0,\n      width: theme.spacing(6),\n    },\n  },\n}))\n\nconst ListFilters = (props: Omit<FilterProps, 'children'>) => (\n  <Filter {...props}>\n    <TextInput source=\"name\" alwaysOn />\n  </Filter>\n)\n\nconst LastEvents = () => {\n  const t = useTranslate()\n  const classes = useStyles()\n  const hasAuthority = useHasAuthority()\n  return (\n    <Datagrid className={classes.actionColumnsWithoutPadding}>\n      <FunctionField<EventDto>\n        label={t('resources.events.fields.name')}\n        render={(record?: EventDto) => {\n          const { id, name } = record as EventDto\n          return `${id}. ${name}`\n        }}\n      />\n      <FunctionField<EventDto>\n        label={t('resources.events.fields.status')}\n        render={(record?: EventDto) => {\n          const { status } = record as EventDto\n          return t(`resources.enums.eventStatus.${status.toLowerCase()}`)\n        }}\n      />\n      <FunctionField<EventDto>\n        render={(record?: EventDto) => {\n          const { id } = record as EventDto\n          return (\n            <Link to={`/${ResourceName.EVENTS}/${id}/show`}>\n              <IconButton>\n                <EventIcon />\n              </IconButton>\n            </Link>\n          )\n        }}\n      />\n      {hasAuthority(Authority.VIEW_STATS_OVERALL_VIEW) && (\n        <FunctionField<EventDto>\n          render={(record?: EventDto) => {\n            const { id } = record as EventDto\n            return (\n              <Link to={`/${ResourceName.STATS_OVERALL_VIEW}/${id}/show`}>\n                <IconButton>\n                  <Sort style={{ transform: 'scaleX(-1)' }} />\n                </IconButton>\n              </Link>\n            )\n          }}\n        />\n      )}\n    </Datagrid>\n  )\n}\n\nconst EventDateField = ({ source, label }: { source: string, label?: string }) => (\n  <FunctionField<EventDto> source={source} label={label} render={(record?: EventDto) => {\n    const { dateStart, dateEnd } = {\n      dateStart: new Date(record?.dateStart as DateTime),\n      dateEnd: new Date(record?.dateEnd as DateTime)\n    }\n    if (dateStart.toDateString() === dateEnd.toDateString()) return (\n      <>\n        <DateField source=\"dateStart\" />\n        <span> {dateStart.getHours() < 10 && 0}{dateStart.getHours()}:</span>\n        <span>{dateStart.getMinutes() < 10 && 0}{dateStart.getMinutes()} - </span>\n        <span>{dateEnd.getHours() < 10 && 0}{dateEnd.getHours()}:</span>\n        <span>{dateEnd.getMinutes() < 10 && 0}{dateEnd.getMinutes()}</span>\n      </>\n    )\n    return (\n      <>\n        <span>\n          <DateField source=\"dateStart\" showTime />\n        </span>\n        <span> - </span>\n        <span>\n          <DateField source=\"dateEnd\" showTime />\n        </span>\n      </>\n    )\n  }} />\n)\n\nconst EventGrid = ({ compactMode }: { compactMode?: boolean }) => {\n  const { loading } = useListContext()\n  const t = useTranslate()\n  const theme = useTheme()\n  const smallScreen = useMediaQuery(theme.breakpoints.down('sm'))\n  return (\n    <>\n      {compactMode ? (\n        <LastEvents />\n      ) : (\n        <Datagrid\n          size=\"small\"\n          loaded={!loading}\n          rowClick={(id) => `${ResourceName.EVENTS}/${id}/show`}\n        >\n          <TextField source=\"id\" label=\"ID\" />\n          <TextField source=\"name\" />\n          {!smallScreen &&\n            <DateField source=\"dateStart\" showTime />}\n          {!smallScreen &&\n            <DateField source=\"dateEnd\" showTime />}\n          {smallScreen &&\n            <EventDateField source=\"dateStart\"\n              label=\"resources.events.fields.date\" />}\n          <FunctionField<EventDto>\n            resource=\"events\"\n            label={t('resources.events.fields.status')}\n            render={(r?: EventDto) =>\n              t(`resources.enums.eventStatus.${r?.status.toLowerCase()}`)\n            }\n          />\n        </Datagrid>\n      )}\n    </>\n  )\n}\n\ninterface EventListProps extends ListProps {\n  compactMode?: boolean\n}\n\nexport const EventList = ({ compactMode = false, ...props }: EventListProps) =>\n  compactMode ? (\n    <List\n      {...props}\n      actions={false}\n      filters={undefined}\n      perPage={10}\n      pagination={false}\n    >\n      <EventGrid compactMode />\n    </List>\n  ) : (\n    <List\n      {...props}\n      exporter={false}\n      filters={<ListFilters />}\n      perPage={20}\n      pagination={<Pagination rowsPerPageOptions={[10, 20, 50]} />}\n    >\n      <EventGrid />\n    </List>\n  )\n","import * as React from 'react'\nimport { TextField, makeStyles, Theme, createStyles } from '@material-ui/core'\nimport { useField } from 'react-final-form'\nimport ArrowRightAltIcon from '@material-ui/icons/ArrowRightAlt'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      display: 'flex',\n      justifyContent: 'center',\n      verticalAlign: 'center',\n      marginBottom: theme.spacing(1)\n    }\n  })\n)\n\nexport const DateFilterInput = ({ source }: { source: string }) => {\n  const classes = useStyles()\n  const defaultFromDate = React.useMemo(() => new Date(Date.now() - 2678400000), [])\n  defaultFromDate.setHours(0, 0, 0, 0)\n  const defaultToDate = new Date(Date.now())\n  defaultToDate.setHours(23, 59, 0, 0)\n  const [dateFrom, setDateFrom] = React.useState(\n    defaultFromDate.getTime().toString(),\n  )\n  const [dateTo, setDateTo] = React.useState(defaultToDate.getTime().toString())\n  const {\n    input: { onChange },\n    meta: { touched, error },\n  } = useField(source)\n\n  React.useEffect(() => {\n    onChange([\n      (parseInt(dateFrom, 10) - (defaultFromDate.getTimezoneOffset() * 60000)).toString(),\n      (parseInt(dateTo, 10) - (defaultFromDate.getTimezoneOffset() * 60000)).toString()].join(';'))\n  }, [dateFrom, dateTo, onChange, defaultFromDate])\n\n  const convertedDate = (date: Date) =>\n    new Date(date.getTime() - (defaultFromDate.getTimezoneOffset() * 60000)).toJSON().substring(0, 16)\n\n  return (\n    <span\n      key=\"date\"\n      className={classes.container}\n    >\n      <TextField\n        variant=\"filled\"\n        defaultValue={convertedDate(defaultFromDate)}\n        name={source}\n        type=\"datetime-local\"\n        onChange={(e) => setDateFrom(Date.parse(e.target.value).toString())}\n        error={!!(touched && error)}\n        helperText={touched && error}\n        style={{ alignSelf: 'center' }}\n        size=\"small\"\n      />\n      <ArrowRightAltIcon style={{ marginTop: '4%' }} />\n      <TextField\n        variant=\"filled\"\n        defaultValue={convertedDate(defaultToDate)}\n        name={source}\n        type=\"datetime-local\"\n        onChange={(e) => setDateTo(Date.parse(e.target.value).toString())}\n        error={!!(touched && error)}\n        helperText={touched && error}\n        size=\"small\"\n      />\n    </span>\n  )\n}\n","import { Grid, withStyles } from '@material-ui/core'\n\nexport const VCenterGrid = withStyles({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'column',\n  },\n})(Grid)\n\nexport const VHCenterGrid = withStyles({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n})(Grid)","import {\n  useMediaQuery,\n  useTheme,\n  Grid,\n  Divider,\n  TableBody,\n  Box,\n  Typography,\n} from '@material-ui/core'\nimport { Receipt } from '@material-ui/icons'\nimport React from 'react'\nimport {\n  List,\n  ListProps,\n  Pagination,\n  SelectInput,\n  TextInput,\n  useTranslate,\n  Datagrid,\n  TextField,\n  DateField,\n  Record,\n  FunctionField,\n  useLocale,\n  DatagridBodyProps,\n  DatagridRow,\n  DatagridHeader,\n  DatagridHeaderProps,\n  ShowButton\n} from 'react-admin'\nimport { useHistory } from 'react-router'\nimport { getContrastColor } from '../../core/common/visual.utils'\nimport { ExtendedLog } from '../../core/logs/extended-log'\nimport { DateFilterInput } from './DateFilterInput'\nimport { VCenterGrid, VHCenterGrid } from './LogsComponents'\n\ninterface LogExpandProps {\n  readonly noBooking?: boolean\n  readonly record?: ExtendedLog\n}\n\ninterface LogBodyProps extends DatagridBodyProps {\n  readonly noBooking?: boolean\n  readonly compactMode?: boolean\n}\n\ninterface LogHeaderProps extends DatagridHeaderProps {\n  readonly noBooking?: boolean\n  readonly compactMode?: boolean\n}\n\ninterface LogListProps extends ListProps {\n  readonly compactMode?: boolean\n  readonly noBooking?: boolean\n}\n\nconst BookingButton = ({ style }: { style?: any }) => {\n  const theme = useTheme()\n  const xSmallScreen = useMediaQuery(theme.breakpoints.down('xs'))\n  const history = useHistory()\n  return (\n    <FunctionField\n      source=\"bookingId\"\n      render={(record: Record | undefined) =>\n        record?.bookingId && (\n          <>\n            <ShowButton\n              basePath=\"/ticket-details\"\n              label={record.bookingId.toString()}\n              record={{ id: record.bookingId }}\n              icon={<Receipt />}\n              style={style}\n            />\n            {xSmallScreen &&\n              <Typography color=\"primary\" onClick={() => history.push(`/ticket-details/${record.bookingId}/show`)}>{record.bookingId}</Typography>}\n          </>\n        )\n      }\n    />\n  )\n}\n\nconst LogExpand = ({ noBooking, record }: LogExpandProps) => {\n  const translate = useTranslate()\n  return (\n    <Box padding={1}>\n      <Grid container spacing={1}>\n        <VCenterGrid item xs={4}>\n          {translate('resources.logs.fields.description')}:\n        </VCenterGrid>\n        <VCenterGrid item xs={8}>\n          <TextField source=\"text\" />\n        </VCenterGrid>\n        {!noBooking && record?.bookingId && (\n          <>\n            <Grid item xs={12}>\n              <Divider />\n            </Grid>\n            <VCenterGrid item xs={4}>\n              {translate('resources.logs.fields.bookingId')}:\n            </VCenterGrid>\n            <VHCenterGrid item xs={8}>\n              <BookingButton />\n            </VHCenterGrid>\n          </>\n        )}\n      </Grid>\n    </Box>\n  )\n}\n\nconst LogBody = ({\n  noBooking,\n  compactMode,\n  data,\n  ids,\n  rowStyle,\n  expand\n}: LogBodyProps) => (\n  <TableBody>\n    {data && rowStyle &&\n      ids?.map((id) => {\n        const style = rowStyle(data[id], id as number)\n        return (\n          <DatagridRow\n            key={id}\n            id={id}\n            record={data[id]}\n            resource=\"logs\"\n            expand={expand}\n            style={style}\n          >\n            <DateField\n              source=\"date\"\n              style={style}\n            />\n            <TextField\n              source=\"deviceName\"\n              style={style}\n            />\n            <TextField\n              source=\"ticketCode\"\n              style={style}\n            />\n            {!compactMode && (\n              <TextField\n                source=\"text\"\n                style={style}\n              />\n            )}\n            {!compactMode && !noBooking && (\n              <BookingButton style={style} />\n            )}\n          </DatagridRow>\n        )\n      })}\n  </TableBody>\n)\n\nconst LogHeader = ({ noBooking, compactMode, ...props }: LogHeaderProps) => (\n  <DatagridHeader {...props}>\n    <DateField source=\"date\"\n      label=\"resources.logs.fields.date\" />\n    <TextField source=\"deviceName\"\n      label=\"resources.logs.fields.deviceName\" />\n    <TextField source=\"ticketCode\"\n      label=\"resources.logs.fields.ticketCode\" />\n    {!compactMode && (\n      <TextField\n        source=\"text\"\n        sortable={false}\n        label=\"resources.logs.fields.description\"\n      />\n    )}\n    {!noBooking && !compactMode && <TextField source=\"bookingId\"\n      label=\"resources.logs.fields.bookingId\" />}\n  </DatagridHeader>\n)\n\nexport const LogList = ({\n  compactMode = false,\n  noBooking = false,\n  ...props\n}: LogListProps) => {\n  const { filter, ...listProps } = props\n  const theme = useTheme()\n  const smallScreen = useMediaQuery(theme.breakpoints.down('sm'))\n  const xSmallScreen = useMediaQuery(theme.breakpoints.down('xs'))\n  const locale = useLocale()\n  return (\n    <List\n      perPage={20}\n      exporter={false}\n      pagination={<Pagination rowsPerPageOptions={[20, 50, 100]} />}\n      filters={[\n        <TextInput source=\"ticketCode\" alwaysOn />,\n        <SelectInput\n          source=\"deviceName\"\n          choices={[\n            {\n              id: 'Czytnik',\n              name: 'resources.logs.fields.deviceNameChoices.reader',\n            },\n            {\n              id: 'Przej\\u015Bcie',\n              name: 'resources.logs.fields.deviceNameChoices.gateway',\n            },\n          ]}\n        />,\n        <DateFilterInput source=\"date\" key=\"date\" />,\n        <TextInput source=\"bookingId\" />,\n        <TextInput source=\"event\" />,\n      ]}\n      filter={{ ...filter, locale }}\n      sort={{ field: 'date', order: 'DESC' }}\n      {...listProps}\n    >\n      <>\n        <Datagrid\n          header={\n            <LogHeader\n              compactMode={smallScreen ? true : compactMode}\n              noBooking={noBooking}\n            />\n          }\n          body={\n            <LogBody\n              compactMode={smallScreen ? true : compactMode}\n              noBooking={noBooking}\n            />\n          }\n          isRowExpandable={() => smallScreen || compactMode}\n          expand={<LogExpand noBooking={noBooking} />}\n          rowStyle={(record: Record) => ({\n            background: record.color,\n            color: record.color !== 'transparent' ? getContrastColor(record.color) : 'inherit'\n          })}\n          padding={xSmallScreen ? \"none\" : \"default\"}\n        >\n          <div />\n        </Datagrid>\n      </>\n    </List>\n  )\n}","export const getContrastColor = (hexcolor: string) => {\n    const r = parseInt(hexcolor.substr(1, 2), 16);\n    const g = parseInt(hexcolor.substr(3, 2), 16);\n    const b = parseInt(hexcolor.substr(5, 2), 16);\n    const yiq = ((r * 299) + (g * 587) + (b * 114)) / 1000;\n    return (yiq >= 128) ? 'black' : 'white';\n  }","import {\n  Card,\n  CardContent,\n  CardHeader,\n  createStyles,\n  Grid,\n  makeStyles,\n  Theme,\n} from '@material-ui/core'\nimport React from 'react'\nimport { useSelector } from 'react-redux'\nimport { ResourceContextProvider, useTranslate } from 'react-admin'\nimport { ResourceName } from '../core/ResourceName'\nimport { FindCustomerByInfo } from './common/FindCustomerByInfo'\nimport { FindUserByTicket } from './common/FindUserByTicket'\nimport { EventList } from './events/EventList'\nimport { LogList } from './logs/LogList'\nimport { DashboardItem, DashboardState } from '../core/common/dashboard'\nimport { useHasAuthority } from './hooks/useHasAuthority'\nimport { Authority } from '../core/auth/Authority'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    header: {\n      textAlign: 'center',\n      letterSpacing: theme.spacing(0.2),\n    },\n    lastLogs: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'flex-end',\n      width: '10%',\n    },\n  }),\n)\n\nconst TicketFinder = () => (\n  <Card style={{ width: '100%', marginBottom: '5px' }}>\n    <FindUserByTicket />\n  </Card>\n)\n\nconst CustomerFinder = () => (\n  <Card style={{ width: '100%', marginBottom: '5px' }}>\n    <FindCustomerByInfo />\n  </Card>\n)\n\nconst LastLogs = () => {\n  const t = useTranslate()\n  return (\n    <Card style={{ width: '100%', marginBottom: '5px' }}>\n      <CardHeader title={t('dashboard.cards.last-logs.title')} />\n      <CardContent>\n        <ResourceContextProvider value={ResourceName.LOGS}>\n          <LogList\n            basePath=\"/\"\n            title=\" \"\n            compactMode\n            pagination={false}\n            perPage={10}\n            actions={false}\n            filters={undefined}\n          />\n        </ResourceContextProvider>\n      </CardContent>\n    </Card>\n  )\n}\n\nconst LastEvents = () => {\n  const t = useTranslate()\n  return (\n    <Card style={{ width: '100%', marginBottom: '5px' }}>\n      <CardHeader title={t('dashboard.cards.last-events.title')} />\n      <CardContent>\n        <ResourceContextProvider value={ResourceName.EVENTS}>\n          <EventList\n            sort={{ field: 'status', order: 'DESC' }}\n            compactMode\n            basePath=\"/\"\n            title=\" \"\n          />\n        </ResourceContextProvider>\n      </CardContent>\n    </Card>\n  )\n}\n\nexport const Dashboard = () => {\n  const classes = useStyles()\n  const t = useTranslate()\n  const hasAuthority = useHasAuthority()\n  const inactiveComponents = useSelector(\n    (state: DashboardState) => state.dashboard.inactiveComponents,\n  )\n  const isItemActive = (item: DashboardItem, inactiveItems: DashboardItem[]) =>\n    !inactiveItems.includes(item)\n\n  return (\n    <Grid container spacing={1}>\n      <Grid item xs={12}>\n        <Card>\n          <CardHeader\n            className={classes.header}\n            title={t('dashboard.welcome')}\n            titleTypographyProps={{ variant: 'h4' }}\n          />\n        </Card>\n      </Grid>\n      <Grid item sm={6} xs={12}>\n        {isItemActive(DashboardItem.TICKET_FINDER, inactiveComponents) && (\n          <TicketFinder />\n        )}\n        {hasAuthority(Authority.VIEW_EVENTS) &&\n          isItemActive(DashboardItem.LAST_EVENTS, inactiveComponents) && (\n            <LastEvents />\n          )}\n      </Grid>\n      <Grid className={classes.lastLogs} item sm={6} xs={12}>\n        {isItemActive(DashboardItem.CUSTOMER_FINDER, inactiveComponents) && (\n          <CustomerFinder />\n        )}\n        {hasAuthority(Authority.VIEW_LOGS) &&\n          isItemActive(DashboardItem.LAST_LOGS, inactiveComponents) && (\n            <LastLogs />\n          )}\n      </Grid>\n    </Grid>\n  )\n}\n","export enum ToggleType {\n  BLOCK = 'BLOCK',\n  UNBLOCK = 'UNBLOCK',\n  DISABLED = 'DISABLED',\n}\n\nexport type ToggleButtonState = {\n  type: ToggleType\n  text: string\n}\n\nexport type ToggleButtonAction = { type: ToggleType }\n","import {\n  Button,\n  ButtonGroup,\n  Card,\n  CardContent,\n  createStyles,\n  FormControlLabel,\n  Grid,\n  makeStyles,\n  MenuItem,\n  Paper,\n  Select,\n  Switch,\n  Theme,\n  Typography,\n} from '@material-ui/core'\nimport React, { Dispatch, ReactElement } from 'react'\nimport { Title, useLocale, useSetLocale, useTranslate } from 'react-admin'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Event, List, Search, Person } from '@material-ui/icons'\nimport { ThemeState } from '../../core/common/theme.reducer'\nimport {\n  CHANGE_THEME,\n  UPDATE_DASHBOARD,\n} from '../../core/constants/reducer.actions'\nimport {\n  DashboardAction,\n  DashboardItem,\n  DashboardState,\n} from '../../core/common/dashboard'\nimport { useHasAuthority } from '../hooks/useHasAuthority'\nimport { Authority } from '../../core/auth/Authority'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    label: { width: '15vw', display: 'inline-block' },\n    button: { margin: theme.spacing(2) },\n    select: { width: '40vw', margin: theme.spacing(2) },\n    compsContainer: {\n      width: '40vw',\n      display: 'inline-block',\n      margin: theme.spacing(2),\n    },\n  }),\n)\n\ntype DashboardItemSwitchProps = {\n  dashboardItem: DashboardItem\n  label: string\n  icon: ReactElement\n}\n\nconst DashboardItemSwitch = ({\n  dashboardItem,\n  label,\n  icon,\n}: DashboardItemSwitchProps) => {\n  const t = useTranslate()\n  const dispatch = useDispatch<Dispatch<DashboardAction>>()\n  const inactiveComponents = useSelector(\n    (state: DashboardState) => state.dashboard.inactiveComponents,\n  )\n  const onSwitch = ({\n    target: { name },\n  }: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch({ type: UPDATE_DASHBOARD, payload: name as DashboardItem })\n  }\n  return (\n    <Grid item xs={6}>\n      <Paper>\n        {icon}\n        <FormControlLabel\n          control={\n            <Switch\n              checked={!inactiveComponents.includes(dashboardItem)}\n              name={dashboardItem}\n              onChange={onSwitch}\n            />\n          }\n          label={t(label)}\n          labelPlacement=\"top\"\n          style={{ margin: '5%', textAlign: 'center', width: '90%' }}\n        />\n      </Paper>\n    </Grid>\n  )\n}\n\nconst DashboardCustomization = () => {\n  const hasAuthority = useHasAuthority()\n  return (\n    <Grid container spacing={1}>\n      <DashboardItemSwitch\n        dashboardItem={DashboardItem.TICKET_FINDER}\n        label=\"dashboard.settings.ticket-finder-label\"\n        icon={<Search />}\n      />\n      {hasAuthority(Authority.VIEW_LOGS) && (\n        <DashboardItemSwitch\n          dashboardItem={DashboardItem.LAST_LOGS}\n          label=\"dashboard.settings.last-logs-label\"\n          icon={<List />}\n        />\n      )}\n      <DashboardItemSwitch\n        dashboardItem={DashboardItem.LAST_EVENTS}\n        label=\"dashboard.settings.last-events-label\"\n        icon={<Event />}\n      />\n      <DashboardItemSwitch\n        dashboardItem={DashboardItem.CUSTOMER_FINDER}\n        label=\"dashboard.settings.customer-finder-label\"\n        icon={<Person />}\n      />\n    </Grid>\n  )\n}\n\nexport const Configuration = () => {\n  const dispatch = useDispatch()\n  const theme = useSelector(\n    (state: ThemeState) => state.theme.darkMode === 'dark',\n  )\n  const classes = useStyles()\n  const locale = useLocale()\n  const setLocale = useSetLocale()\n  const t = useTranslate()\n\n  return (\n    <Card>\n      <Title title={t('settings.name')} />\n      <CardContent>\n        <Typography className={classes.label}>\n          {t('settings.darkMode.name')}\n        </Typography>\n        <ButtonGroup className={classes.button}>\n          <Button\n            size=\"large\"\n            variant=\"contained\"\n            color={!theme ? 'primary' : 'default'}\n            onClick={() => theme && dispatch({ type: CHANGE_THEME })}\n          >\n            {t('settings.darkMode.light')}\n          </Button>\n          <Button\n            size=\"large\"\n            variant=\"contained\"\n            color={theme ? 'primary' : 'default'}\n            onClick={() => !theme && dispatch({ type: CHANGE_THEME })}\n          >\n            {t('settings.darkMode.dark')}\n          </Button>\n        </ButtonGroup>\n      </CardContent>\n      <CardContent>\n        <Typography className={classes.label}>\n          {t('settings.language.name')}\n        </Typography>\n        <Select\n          value={locale}\n          onChange={(e) => setLocale(e.target.value as string)}\n          className={classes.select}\n          variant=\"outlined\"\n        >\n          <MenuItem value=\"pl\">{t('settings.language.pl')}</MenuItem>\n          <MenuItem value=\"en\">{t('settings.language.en')}</MenuItem>\n        </Select>\n      </CardContent>\n      <CardContent>\n        <Typography className={classes.label}>\n          {t('dashboard.settings.title')}\n        </Typography>\n        <div className={classes.compsContainer}>\n          <DashboardCustomization />\n        </div>\n      </CardContent>\n    </Card>\n  )\n}\n","import * as React from 'react';\nimport { Route } from 'react-router-dom';\nimport { Configuration } from './Configuration'\n\nexport default [\n    <Route exact path=\"/configuration\" render={() => <Configuration/>} />\n]","/**\n * @example\n * maskMiddlePart('importantValue', 3) === 'imp********lue'\n */\nexport const maskMiddlePart = (word: string, threshold: number) => {\n  const firstChars = word.substring(0, threshold)\n  const lastChars = word.slice(-threshold)\n  const restCharsLength = word.length - firstChars.length - lastChars.length\n  return `${firstChars}${'*'.repeat(\n    restCharsLength > 0 ? restCharsLength : 0,\n  )}${lastChars}`\n}\n","import * as React from 'react'\nimport { TextField, TextFieldProps, useRecordContext } from 'react-admin'\nimport { maskMiddlePart } from '../../core/common/mask.utils'\n\nexport const MaskField = ({ source, ...rest }: TextFieldProps) => {\n  const record = useRecordContext()\n  const properRecord = record[source as string]\n    ? {\n      ...record,\n      [source as string]: maskMiddlePart(record[source as string], 2),\n    }\n    : record\n  return <TextField {...rest} record={properRecord} source={source} />\n}\n","import { Box, Divider, Typography, useMediaQuery, useTheme } from '@material-ui/core'\nimport * as React from 'react'\nimport {\n  Datagrid,\n  List,\n  ListProps,\n  TextField,\n  useListContext,\n  useTranslate,\n  FunctionField,\n  Record,\n  Pagination,\n  TextInput\n} from 'react-admin'\nimport { maskMiddlePart } from '../../core/common/mask.utils'\nimport { ResourceName } from '../../core/ResourceName'\nimport { MaskField } from '../common/MaskField'\n\nconst TicketInfoGrid = () => {\n  const {\n    loading,\n    filterValues: { ticketCode },\n    data\n  } = useListContext()\n  const t = useTranslate()\n  const theme = useTheme()\n  const smallScreen = useMediaQuery(theme.breakpoints.down('sm'))\n  return (\n    <>\n      {ticketCode &&\n        <Box m={2} display=\"inline-flex\" height=\"40px\">\n          <Typography variant=\"h5\" paragraph>\n            {t('resources.ticket-info.search-list-title', { ticketCode })}\n          </Typography>\n        </Box>\n      }\n      <Divider />\n      <Datagrid\n        padding={smallScreen ? \"checkbox\" : \"default\"}\n        loaded={!loading}\n        rowClick={(id) => `${ResourceName.TICKET_DETAILS}/${data[id]?.bookingId}/show`}\n      >\n        {!smallScreen && <TextField source=\"firstname\" sortable={false} />}\n        {!smallScreen && <TextField source=\"lastname\" sortable={false} />}\n        {!smallScreen && <MaskField source=\"pesel\" sortable={false} />}\n        {smallScreen && <FunctionField source=\"customer\"\n          render={(record: Record | undefined) =>\n            `${record?.firstname} ${record?.lastname} ${record?.pesel && maskMiddlePart(record.pesel, 2)}`\n          } />}\n        <TextField source=\"ticketCode\" sortable />\n        <FunctionField\n          label='resources.ticket-info.fields.eventName'\n          render={(record: Record | undefined) => record?.eventId ? `${record?.eventName} ${record?.eventDate?.replace(\"T\", \" \")} ${record?.eventId}` : \"-\" } />\n        <TextField source=\"bookingId\" sortable />\n      </Datagrid>\n    </>\n  )\n}\n\nexport const TicketInfoList = (props: ListProps) => (\n  <List exporter={false} perPage={20} sort={{ field: \"id\", order: \"DESC\" }}\n    pagination={<Pagination rowsPerPageOptions={[10, 20, 50]} />} {...props}\n    filters={[\n      <TextInput source=\"ticketCode\" alwaysOn />\n    ]}>\n    <TicketInfoGrid />\n  </List>\n)\n","import { TicketType } from '../enum/TicketType'\nimport { BookingType } from '../enum/BookingType'\n\nconst bookingTypeMapping: Record<BookingType, string> = {\n  [BookingType.NORMAL]: 'resources.enums.bookingType.normal',\n  [BookingType.ABO]: 'resources.enums.bookingType.abo',\n  [BookingType.INFIX]: 'resources.enums.bookingType.infix',\n  [BookingType.POINTS]: 'resources.enums.bookingType.points',\n  [BookingType.SERVICE]: 'resources.enums.bookingType.service',\n}\n\nconst ticketTypeMapping: Record<TicketType, string> = {\n  [TicketType.K]: 'resources.enums.ticketType.k',\n  [TicketType.M]: 'resources.enums.ticketType.m',\n  [TicketType.Z]: 'resources.enums.ticketType.z',\n  [TicketType.N]: 'resources.enums.ticketType.n',\n  [TicketType.P]: 'resources.enums.ticketType.p',\n  [TicketType.U]: 'resources.enums.ticketType.u',\n  [TicketType.R]: 'resources.enums.ticketType.r',\n}\n\nexport const mapFromBookingType = (bookingType: BookingType): string =>\n  bookingTypeMapping[bookingType]\n\nexport const mapFromTicketType = (ticketType: TicketType): string =>\n  ticketTypeMapping[ticketType]\n","import * as React from 'react'\nimport { useShowContext } from 'react-admin'\nimport {\n  Box,\n  createStyles,\n  makeStyles,\n  Theme,\n  Typography,\n} from '@material-ui/core'\nimport { TicketDetails } from '../../core/ticket-details/ticket-details'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    header: {\n      letterSpacing: theme.spacing(0.2),\n    },\n  }),\n)\nexport const TicketDetailsHeader = () => {\n  const classes = useStyles()\n  const { record } = useShowContext<TicketDetails>()\n  return (\n    <Box m={2}>\n      <Typography className={classes.header} variant=\"h5\" paragraph>\n        {record?.firstname} {record?.lastname}\n      </Typography>\n    </Box>\n  )\n}\n","import * as React from 'react'\nimport {\n  DateField,\n  Labeled,\n  TextField,\n  TextFieldProps,\n  useRecordContext,\n  useTranslate,\n} from 'react-admin'\nimport {\n  Box,\n  Chip,\n  createStyles,\n  makeStyles,\n  Paper,\n  Theme,\n} from '@material-ui/core'\nimport { mapFromTicketType } from '../../core/ticket-details/ticket-details-values.mapper'\nimport { TicketDetails } from '../../core/ticket-details/ticket-details'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ticketBox: {\n      display: 'flex',\n      flexDirection: 'column',\n      padding: theme.spacing(1),\n      marginLeft: theme.spacing(1),\n    },\n    ticketField: {\n      padding: theme.spacing(0),\n      margin: theme.spacing(0),\n      marginBottom: theme.spacing(0.5),\n    },\n  }),\n)\n\nexport const TicketDetailsTicketsField = ({ label }: TextFieldProps) => {\n  const classes = useStyles()\n  const t = useTranslate()\n  const record = useRecordContext<TicketDetails>()\n  const mappedRecords = (record.tickets || []).map(\n    ({ id, ticketType, createdAt, ticketCode }) => ({\n      id,\n      ticketCode,\n      ticketType: mapFromTicketType(ticketType),\n      createdAt,\n    }),\n  )\n  const fields = mappedRecords.map((mappedRecord) => (\n    <Paper\n      key={mappedRecord.id}\n      variant=\"elevation\"\n      className={classes.ticketBox}\n    >\n      <Labeled\n        className={classes.ticketField}\n        label=\"resources.ticket-details.fields.tickets.fields.id\"\n      >\n        <TextField\n          className={classes.ticketField}\n          record={mappedRecord}\n          source=\"id\"\n        />\n      </Labeled>\n      <Labeled\n        className={classes.ticketField}\n        label=\"resources.ticket-details.fields.tickets.fields.ticketCode\"\n      >\n        <TextField\n          className={classes.ticketField}\n          record={mappedRecord}\n          source=\"ticketCode\"\n        />\n      </Labeled>\n      <Labeled\n        className={classes.ticketField}\n        label=\"resources.ticket-details.fields.tickets.fields.ticketType\"\n      >\n        <Chip\n          label={t(mappedRecord.ticketType)}\n          className={classes.ticketField}\n        />\n      </Labeled>\n      <Labeled\n        className={classes.ticketField}\n        label=\"resources.ticket-details.fields.tickets.fields.createdAt\"\n      >\n        <DateField\n          className={classes.ticketField}\n          record={mappedRecord}\n          source=\"createdAt\"\n          showTime\n        />\n      </Labeled>\n    </Paper>\n  ))\n  return (\n    <Labeled label={label}>\n      <Box display=\"flex\" flexWrap=\"wrap\" flexDirection=\"row\">\n        {fields}\n      </Box>\n    </Labeled>\n  )\n}\n","import {\n  CREATE,\n  CreateParams,\n  sanitizeFetchType,\n  UPDATE_MANY,\n  UpdateManyParams,\n} from 'react-admin'\nimport { TicketDetails } from './ticket-details'\nimport { ResourceName } from '../ResourceName'\nimport { AccessUsingsCreateParams } from '../access-usings/access-usings-create.params'\nimport {\n  ToggleType,\n  ToggleButtonAction,\n  ToggleButtonState,\n} from './toggle-button'\n\ntype Mutation = {\n  type: string\n  resource: string\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  payload?: object\n}\n\nconst blockMutation = (ticketDetails: TicketDetails): Mutation => {\n  const { accessesIds, tickets } = ticketDetails\n  const ticketIds = tickets.map((t) => t.id)\n  return {\n    type: sanitizeFetchType(CREATE),\n    resource: ResourceName.ACCESS_USINGS,\n    payload: {\n      data: { ticketIds, accessIds: accessesIds },\n    } as CreateParams<AccessUsingsCreateParams>,\n  }\n}\n\nconst unblockMutation = ({ tickets }: TicketDetails): Mutation => {\n  const activeAccessUsingIds = tickets\n    .flatMap((t) => t.accessUsings)\n    .filter((au) => au.active)\n    .map((au) => au.id)\n  return {\n    type: sanitizeFetchType(UPDATE_MANY),\n    resource: ResourceName.ACCESS_USINGS,\n    payload: {\n      ids: activeAccessUsingIds,\n      data: {\n        active: false,\n      },\n    } as UpdateManyParams,\n  }\n}\n\ntype State = {\n  mutateQuery?: (ticketDetails: TicketDetails) => Mutation\n} & ToggleButtonState\n\nexport const blockAccessButtonInitialState = {\n  type: ToggleType.DISABLED,\n  text: 'resources.ticket-details.actions.blockAccessNA',\n}\n\nexport const toggleAccessButtonReducer = (\n  state: State,\n  { type }: ToggleButtonAction,\n): State => {\n  switch (type) {\n    case ToggleType.BLOCK: {\n      return {\n        type,\n        text: 'resources.ticket-details.actions.blockAccess',\n        mutateQuery: blockMutation,\n      }\n    }\n    case ToggleType.UNBLOCK: {\n      return {\n        type,\n        text: 'resources.ticket-details.actions.unblockAccess',\n        mutateQuery: unblockMutation,\n      }\n    }\n    case ToggleType.DISABLED: {\n      return blockAccessButtonInitialState\n    }\n    default:\n      throw new Error()\n  }\n}\n","export enum Multiplicities {\n  SINGLE = 'SINGLE',\n  MULTIPLE = 'MULTIPLE',\n  CHECK_ALL = 'CHECK_ALL'\n}","import * as React from 'react'\nimport { useEffect, useReducer } from 'react'\nimport {\n  useMutation,\n  useNotify,\n  useRecordContext,\n  useRefresh,\n  useShowContext,\n  useTranslate,\n} from 'react-admin'\nimport { Button, createStyles, makeStyles, Theme } from '@material-ui/core'\nimport { ToggleType } from '../../core/ticket-details/toggle-button'\nimport { TicketDetails } from '../../core/ticket-details/ticket-details'\nimport {\n  blockAccessButtonInitialState,\n  toggleAccessButtonReducer,\n} from '../../core/ticket-details/toggle-access-button.reducer'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    button: {\n      color: theme.palette.common.white,\n      marginLeft: theme.spacing(1),\n    },\n  }),\n)\n\nexport const ToggleAccessButton = () => {\n  const classes = useStyles()\n  const t = useTranslate()\n  const notify = useNotify()\n  const { loading } = useShowContext()\n  const [{ type, text, mutateQuery }, dispatch] = useReducer(\n    toggleAccessButtonReducer,\n    blockAccessButtonInitialState,\n  )\n  const ticketDetails = useRecordContext<TicketDetails>()\n  const [mutate, { loading: mutationLoading }] = useMutation()\n  const refresh = useRefresh()\n\n  const isActive = (td: TicketDetails) =>\n    td.tickets.some((ticket) => ticket.accessUsings.some((a) => a.active))\n\n  useEffect(() => {\n    if (isActive(ticketDetails)) {\n      dispatch({ type: ToggleType.UNBLOCK })\n    } else {\n      dispatch({ type: ToggleType.BLOCK })\n    }\n  }, [ticketDetails])\n\n  const onClick = async () => {\n    try {\n      const query = mutateQuery?.(ticketDetails)\n      await mutate(query, { returnPromise: true })\n      refresh()\n    } catch (err) {\n      notify((err as Error)?.message, 'error')\n    }\n  }\n\n  return (\n    <Button\n      disabled={type === ToggleType.DISABLED || loading || mutationLoading}\n      className={classes.button}\n      variant=\"contained\"\n      color=\"secondary\"\n      onClick={onClick}\n    >\n      {t(text)}\n    </Button>\n  )\n}\n","import {\n  ToggleType,\n  ToggleButtonAction,\n  ToggleButtonState,\n} from './toggle-button'\nimport { BookingUpdateRequest } from '../bookings/booking-update.request'\nimport { BookingDisabledOption } from '../enum/BookingDisabledOption'\n\ntype State = {\n  mutateParam?: BookingUpdateRequest['disabled']\n} & ToggleButtonState\n\nexport const blockTicketButtonInitialState = {\n  type: ToggleType.DISABLED,\n  text: 'resources.ticket-details.actions.blockTicketNA',\n}\n\nexport const toggleTicketButtonReducer = (\n  state: State,\n  { type }: ToggleButtonAction,\n): State => {\n  switch (type) {\n    case ToggleType.BLOCK: {\n      return {\n        type,\n        text: 'resources.ticket-details.actions.blockTicket',\n        mutateParam: BookingDisabledOption.ADMIN,\n      }\n    }\n    case ToggleType.UNBLOCK: {\n      return {\n        type,\n        text: 'resources.ticket-details.actions.unblockTicket',\n        mutateParam: null,\n      }\n    }\n    case ToggleType.DISABLED: {\n      return blockTicketButtonInitialState\n    }\n    default:\n      throw new Error()\n  }\n}\n","import * as React from 'react'\nimport { useEffect, useReducer } from 'react'\nimport {\n  sanitizeFetchType,\n  UPDATE,\n  UpdateParams,\n  useMutation,\n  useNotify,\n  useRecordContext,\n  useRefresh,\n  useShowContext,\n  useTranslate,\n} from 'react-admin'\nimport { Button, createStyles, makeStyles, Theme } from '@material-ui/core'\nimport { TicketDetails } from '../../core/ticket-details/ticket-details'\nimport { BookingUpdateRequest } from '../../core/bookings/booking-update.request'\nimport { BookingDisabledOption } from '../../core/enum/BookingDisabledOption'\nimport { ResourceName } from '../../core/ResourceName'\nimport {\n  blockTicketButtonInitialState,\n  toggleTicketButtonReducer,\n} from '../../core/ticket-details/toggle-ticket-button.reducer'\nimport { ToggleType } from '../../core/ticket-details/toggle-button'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    button: {\n      color: theme.palette.common.white,\n      marginLeft: theme.spacing(1),\n    },\n  }),\n)\n\nexport const ToggleTicketButton = () => {\n  const classes = useStyles()\n  const t = useTranslate()\n  const notify = useNotify()\n  const { loading } = useShowContext()\n  const [{ type, text, mutateParam }, dispatch] = useReducer(\n    toggleTicketButtonReducer,\n    blockTicketButtonInitialState,\n  )\n  const { id: bookingId, bookingDisabled } = useRecordContext<TicketDetails>()\n  const [mutate, { loading: mutationLoading }] = useMutation()\n  const refresh = useRefresh()\n\n  useEffect(() => {\n    if (bookingDisabled === null) {\n      dispatch({ type: ToggleType.BLOCK })\n    } else if (bookingDisabled === BookingDisabledOption.ADMIN) {\n      dispatch({ type: ToggleType.UNBLOCK })\n    } else {\n      dispatch({ type: ToggleType.DISABLED })\n    }\n  }, [bookingDisabled])\n\n  const onClick = async () => {\n    try {\n      await mutate(\n        {\n          type: sanitizeFetchType(UPDATE),\n          resource: ResourceName.BOOKINGS,\n          payload: {\n            data: { id: bookingId, disabled: mutateParam },\n          } as UpdateParams<BookingUpdateRequest>,\n        },\n        { returnPromise: true },\n      )\n      refresh()\n    } catch (err) {\n      notify((err as Error)?.message, 'error')\n    }\n  }\n\n  return (\n    <Button\n      disabled={type === ToggleType.DISABLED || loading || mutationLoading}\n      className={classes.button}\n      variant=\"contained\"\n      color=\"secondary\"\n      onClick={onClick}\n    >\n      {t(text)}\n    </Button>\n  )\n}\n","import * as React from 'react'\nimport { useListContext } from 'react-admin';\nimport { Button, Toolbar, Grid, Paper, ButtonGroup, Select, MenuItem } from '@material-ui/core';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\n\nexport const MobilePostPagination = () => {\n  const { page, perPage, total, setPage, setPerPage } = useListContext();\n  const nbPages = Math.ceil(total / perPage) || 1;\n  return (\n      nbPages > 1 ?\n        <Toolbar>\n          <Grid container>\n            <Grid item xs={3}>\n            <Paper elevation={0}\n              style={{height: '100%', display: 'flex', flexDirection: 'row', justifyContent: 'flex-end', alignItems: 'center'}}>\n              <Select value={perPage} style={{width: '100%', height: '70%', textAlign: 'center'}} variant='outlined'\n              onChange={e => setPerPage(parseInt(e.target.value as string, 10))}>\n                <MenuItem value={20}> 20 </MenuItem>\n                <MenuItem value={50}> 50 </MenuItem>\n                <MenuItem value={100}> 100 </MenuItem>\n              </Select>\n            </Paper>\n            </Grid>\n            <Grid item xs={4} />\n            <Grid item xs={5}>\n              <Paper elevation={0}\n              style={{height: '100%', display: 'flex', flexDirection: 'row', justifyContent: 'flex-end', alignItems: 'center'}}>\n                <ButtonGroup style={{height: '70%'}}>\n                  {page > 1 ?\n                    <Button variant=\"outlined\" color=\"primary\" key=\"prev\" onClick={() => setPage(page - 1)}>\n                      <ChevronLeft />\n                    </Button> :\n                    <Button variant=\"outlined\" color=\"primary\" disabled>\n                      <ChevronLeft />\n                    </Button> \n                  }\n                  <Button disabled variant=\"contained\"> {page} </Button>\n                  {page !== nbPages ?\n                    <Button variant=\"outlined\" color=\"primary\" key=\"next\" onClick={() => setPage(page + 1)}>\n                      <ChevronRight />\n                    </Button> :\n                    <Button variant=\"outlined\" color=\"primary\" disabled>\n                      <ChevronRight />\n                    </Button>\n                  }\n                </ButtonGroup>\n              </Paper>\n            </Grid>\n          </Grid>\n        </Toolbar> :\n        <div />\n  );\n}","import React from 'react'\nimport {\n  useMediaQuery,\n  useTheme,\n  TableContainer,\n  Table,\n  TableHead,\n  TableBody,\n  TableRow,\n  TableCell,\n} from '@material-ui/core'\nimport { ListProps, List, Pagination, useListContext, useTranslate } from 'react-admin'\nimport { MobilePostPagination } from '../../common/Pagination'\n\ninterface AccessListProps extends ListProps {\n  setSelected: (prop: number | undefined) => void\n}\n\nconst AccessGrid = ({\n  setSelected,\n}: {\n  setSelected: (prop: number | undefined) => void\n}) => {\n  const translate = useTranslate()\n  const { data, ids } = useListContext()\n\n  return (\n    <>\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>ID</TableCell>\n              <TableCell>{translate('resources.access.fields.name')}</TableCell>\n              <TableCell>{translate('resources.access.fields.entranceId')}</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {ids.map((id) => (\n              <TableRow key={id} style={{ cursor: 'pointer' }} hover>\n                <TableCell onClick={() => setSelected(id as number)}>\n                  {data[id]?.id}\n                </TableCell>\n                <TableCell onClick={() => setSelected(id as number)}>\n                  {data[id]?.name}\n                </TableCell>\n                <TableCell onClick={() => setSelected(id as number)}>\n                  {data[id]?.entranceId}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  )\n}\n\nexport const AccessList = ({setSelected, ...props}: AccessListProps) => {\n  const theme = useTheme()\n\n  return (\n    <List\n      perPage={20}\n      exporter={false}\n      pagination={\n        useMediaQuery(theme.breakpoints.up('md')) ? (\n          <Pagination rowsPerPageOptions={[20, 50, 100]} />\n        ) : (\n          <MobilePostPagination />\n        )\n      }\n      {...props}\n    >\n      <AccessGrid setSelected={setSelected} />\n    </List>\n  )\n}\n","import { ButtonBase, Typography, withStyles } from '@material-ui/core'\n\nexport const FullWidthButton = withStyles({\n  root: {\n    width: '100%',\n    height: '52px',\n    fontSize: '17px',\n    marginBottom: '1px',\n    '&:hover': {\n      color: 'lightgrey',\n    }\n  },\n})(ButtonBase)\n\nexport const BackButton = withStyles({\n  root: {\n    height: '100%',\n    writingMode: 'vertical-lr',\n    textOrientation: 'mixed',\n    width: '100%',\n    '&:hover': {\n      color: 'lightgrey'\n    }\n  }\n})(ButtonBase)\n\nexport const BackButtonText = withStyles({\n  root: {\n    writingMode: 'vertical-lr',\n    textOrientation: 'mixed',\n  }\n})(Typography)","import {\n  List,\n  ListProps,\n  useListContext,\n  useTranslate,\n  useMutation,\n  sanitizeFetchType,\n  UPDATE_MANY,\n  TextField,\n  DateField,\n  FunctionField,\n  DatagridHeaderProps,\n  DatagridHeader,\n  DatagridRow,\n  DatagridBodyProps,\n  Datagrid\n} from 'react-admin'\nimport React from 'react'\nimport {\n  Button,\n  IconButton,\n  TableBody,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core'\nimport { Power, PowerOff } from '@material-ui/icons'\nimport { AccessUsingDto } from '../../../core/dto/access-using.dto'\nimport { ResourceName } from '../../../core/ResourceName'\nimport { AccessUsing } from '../../../core/access-usings/access-using'\n\nconst AccessUsingsBody = ({ data, ids, expand }: DatagridBodyProps) => {\n  const translate = useTranslate()\n  const [mutate] = useMutation()\n  const { refetch } = useListContext()\n  const theme = useTheme()\n  const smallScreen = useMediaQuery(theme.breakpoints.down('sm'))\n\n  const patchAccess = async (access: AccessUsingDto) => {\n    await mutate(\n      {\n        type: sanitizeFetchType(UPDATE_MANY),\n        resource: ResourceName.ACCESS_USINGS,\n        payload: {\n          ids: [access.id],\n          data: {\n            active: !access.active,\n          },\n        },\n      },\n      { returnPromise: true },\n    )\n    refetch()\n  }\n\n  return (\n    <TableBody>\n      {ids && ids.map((id) =>\n        data && data[id] && (\n          <DatagridRow\n            expand={expand}\n            key={id}\n            id={id}\n            record={data[id]}\n            resource={ResourceName.ACCESS_USINGS}\n          >\n            <DateField\n              source=\"date\"\n              record={data[id] as AccessUsingDto}\n              showTime\n            />\n            <FunctionField<AccessUsing>\n              record={data[id] as AccessUsing}\n              render={(record?: AccessUsing) => (\n                translate(`resources.enums.deviceDirection.${record?.direction}`)\n              )} />\n            {!smallScreen &&\n              <FunctionField<AccessUsing>\n                render={(record?: AccessUsing) =>\n                  record?.active\n                    ? translate('const.yes')\n                    : translate('const.no')\n                }\n              />}\n            <TextField\n              source=\"ticketCode\"\n            />\n            <>\n              {smallScreen ?\n                <IconButton color=\"primary\" onClick={() =>\n                  patchAccess(data[id] as AccessUsingDto)}>\n                  {data[id].active ?\n                    <Power /> :\n                    <PowerOff />}\n                </IconButton> :\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  style={{ width: '100%', fontSize: '13px' }}\n                  onClick={() => patchAccess(data[id] as AccessUsingDto)}\n                >\n                  {translate(\n                    `resources.access-usings.actions.${data[id].active ? `deactivate` : `activate`\n                    }`,\n                  )}\n                </Button>\n              }\n            </>\n          </DatagridRow>\n        ))}\n    </TableBody>\n  )\n}\n\nconst AccessUsingsHeader = (props: DatagridHeaderProps) => (\n  <DatagridHeader {...props}>\n    <TextField source=\"date\" />\n    <TextField source=\"direction\" />\n    <TextField source=\"ticketId\" />\n    <TextField source=\"active\" />\n  </DatagridHeader>\n)\n\nexport const AccessUsingsList = (props: ListProps) => {\n  const theme = useTheme()\n  const xSmallScreen = useMediaQuery(theme.breakpoints.down('xs'))\n  return (\n    <List\n      {...props}\n      exporter={false}\n      perPage={20}\n      sort={{ field: 'date', order: 'DESC' }}\n    >\n      <>\n        <Datagrid\n          body={<AccessUsingsBody />}\n          header={<AccessUsingsHeader />}\n          padding={xSmallScreen ? \"checkbox\" : \"default\"}\n        >\n          <div />\n        </Datagrid>\n      </>\n    </List>\n  )\n}\n","import {\n  List,\n  ListProps,\n  TextField,\n  DateField,\n  Datagrid,\n  FunctionField,\n  useTranslate\n} from 'react-admin'\nimport React from 'react'\nimport { useMediaQuery, useTheme } from '@material-ui/core'\nimport { AccessDateDto } from '../../../core/dto/access-date.dto'\n\nexport const AccessDatesList = (props: ListProps) => {\n  const theme = useTheme()\n  const xSmallScreen = useMediaQuery(theme.breakpoints.down('xs'))\n  const translate = useTranslate()\n  return (\n    <List\n      {...props}\n      exporter={false}\n      perPage={20}\n      sort={{ field: 'id', order: 'DESC' }}\n    >\n      <>\n        <Datagrid\n          padding={xSmallScreen ? 'checkbox' : 'default'} >\n          <DateField source=\"activeFrom\" />\n          <DateField source=\"activeTo\" />\n          <FunctionField<AccessDateDto>\n            source=\"timeFrom\"\n            render={(r?: AccessDateDto) => (\n              r?.timeFrom.substring(11, 19)\n            )} />\n          <FunctionField<AccessDateDto>\n            source=\"timeTo\"\n            render={(r?: AccessDateDto) => (\n              r?.timeTo.substring(11, 19)\n            )} />\n          <FunctionField<AccessDateDto>\n            source=\"type\"\n            render={(r?: AccessDateDto) => (\n              translate(`resources.enums.accessDateTypes.${r?.type}`)\n            )} />\n          <TextField source=\"priority\" />\n          <TextField\n            source=\"dayOfWeek\"\n            label=\" \"\n          />\n        </Datagrid>\n      </>\n    </List>\n  )\n}\n","import React, { useState } from 'react'\nimport {\n  ShowProps,\n  Show,\n  useShowContext,\n  ResourceContextProvider,\n  useTranslate,\n  TextField,\n  DateField,\n  FunctionField,\n  Record,\n  Pagination\n} from 'react-admin'\nimport {\n  TableContainer,\n  Table,\n  TableBody,\n  TableRow,\n  TableCell,\n  Grid,\n  Paper,\n  Box,\n  useTheme,\n  useMediaQuery,\n} from '@material-ui/core'\nimport { Access } from '../../../core/accesses/access'\nimport { FullWidthButton } from '../TicketDetailsComponents'\nimport { ResourceName } from '../../../core/ResourceName'\nimport { AccessUsingsList } from './AccessUsingsList'\nimport { AccessDatesList } from './AccessDatesList'\nimport { AccessActivePeriodStartingOptions } from '../../../core/enum/AccessActivePeriodStartingOptions'\n\nconst TabButton = ({\n  value,\n  selected,\n  change,\n  children,\n}: {\n  value: number\n  selected: number\n  change: (prop: number) => void\n  children: any\n}) => (\n  <FullWidthButton\n    style={{\n      background: selected === value ? 'rgba(0,0,0,0.2)' : 'inherit',\n    }}\n    onClick={() => change(value)}\n  >\n    {children}\n  </FullWidthButton>\n)\n\nconst AccessDetails = () => {\n  const translate = useTranslate()\n  const { record: access } = useShowContext<Access>()\n  return (\n    <TableContainer>\n      <Table>\n        <TableBody>\n          <TableRow>\n            <TableCell style={{ width: '50%' }}>ID</TableCell>\n            <TableCell style={{ width: '50%' }}>\n              <TextField source=\"id\" />\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>{translate('resources.access.fields.name')}</TableCell>\n            <TableCell>\n              <TextField source=\"name\" />\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>{translate('resources.access.fields.bonus')}</TableCell>\n            <TableCell>\n              <FunctionField\n                render={(record: Record | undefined) =>\n                  translate(`resources.enums.bonus.${record?.bonus}`)\n                }\n              />\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              {translate('resources.access.fields.entranceId')}\n            </TableCell>\n            <TableCell>\n              <FunctionField<Access> render={(record?: Access) => `${record?.entranceId} (${record?.entranceNote})`} />\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              {translate('resources.access.fields.modifiedById')}\n            </TableCell>\n            <TableCell>\n              <TextField source=\"modifiedByName\" />\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              {translate('resources.access.fields.createdById')}\n            </TableCell>\n            <TableCell>\n              <TextField source=\"createdByName\" />\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              {translate('resources.access.fields.allowReenter')}\n            </TableCell>\n            <TableCell>\n              <FunctionField\n                render={(record: Record | undefined) =>\n                  record?.allowReenter\n                    ? translate('const.yes')\n                    : translate('const.no')\n                }\n              />\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              {translate('resources.access.fields.multipleEntry')}\n            </TableCell>\n            <TableCell>\n              <FunctionField\n                render={(record: Record | undefined) =>\n                  record?.multipleEntry\n                    ? translate('const.yes')\n                    : translate('const.no')\n                }\n              />\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              {translate('resources.access.fields.multiple')}\n            </TableCell>\n            <TableCell>\n              <TextField source=\"multiple\" />\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              {translate('resources.access.fields.usePriority')}\n            </TableCell>\n            <TableCell>\n              <TextField source=\"usePriority\" />\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>{translate('resources.access.fields.delay')}</TableCell>\n            <TableCell>\n              <TextField source=\"delay\" />\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              {translate('resources.access.fields.releaseTime')}\n            </TableCell>\n            <TableCell>\n              <DateField source=\"releaseTime\" />\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              {translate('resources.access.fields.releaseDayOfMonth')}\n            </TableCell>\n            <TableCell>\n              <TextField source=\"releaseDayOfMonth\" />\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              {translate('resources.access.fields.releaseDayOfWeek')}\n            </TableCell>\n            <TableCell>\n              <TextField source=\"releaseDayOfWeek\" />\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              {translate('resources.access.fields.createdAt')}\n            </TableCell>\n            <TableCell>\n              <DateField source=\"createdAt\" />\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              {translate('resources.access.fields.modifiedAt')}\n            </TableCell>\n            <TableCell>\n              <DateField source=\"modifiedAt\" />\n            </TableCell>\n          </TableRow>\n          {access?.activePeriodStartingFrom !==\n            AccessActivePeriodStartingOptions.NO_LIMIT && (\n              <TableRow>\n                <TableCell>\n                  {translate('resources.access.fields.activePeriod')}\n                </TableCell>\n                <TableCell>\n                  <TextField source=\"activePeriod\" />\n                </TableCell>\n              </TableRow>\n            )}\n          <TableRow>\n            <TableCell>\n              {translate('resources.access.fields.activePeriodStartingFrom')}\n            </TableCell>\n            <TableCell>\n              <FunctionField\n                render={(record: Record | undefined) =>\n                  translate(\n                    `resources.enums.activePeriodStartingFrom.${record?.activePeriodStartingFrom}`,\n                  )\n                }\n              />\n            </TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n\nconst AccessDates = () => {\n  const { basePath, record } = useShowContext<Access>()\n  return (\n    <Box>\n      <ResourceContextProvider value={ResourceName.ACCESS_DATES}>\n        <AccessDatesList\n          title=\" \"\n          basePath={basePath}\n          filter={{\n            id: record?.accessDatesIds.join(','),\n          }}\n          actions={false}\n          perPage={20}\n          pagination={<Pagination rowsPerPageOptions={[20, 50, 100]} />}\n        />\n      </ResourceContextProvider>\n    </Box>\n  )\n}\n\nconst AccessUses = ({ id, tickets }: { id: string; tickets: number[] }) => {\n  const { basePath } = useShowContext<Access>()\n  return (\n    <Box>\n      <ResourceContextProvider value={ResourceName.ACCESS_USINGS}>\n        <AccessUsingsList\n          title=\" \"\n          basePath={basePath}\n          filter={{\n            ticketId: tickets.join(' '),\n            accessId: id,\n          }}\n          actions={false}\n          perPage={20}\n          pagination={<Pagination rowsPerPageOptions={[20, 50, 100]} />}\n        />\n      </ResourceContextProvider>\n    </Box>\n  )\n}\n\nexport const AccessShow = (props: ShowProps) => {\n  const translate = useTranslate()\n  const [selectedTab, setSelectedTab] = useState(0)\n  const { record } = useShowContext()\n  const { id } = props\n  const theme = useTheme()\n  const smallScreen = useMediaQuery(theme.breakpoints.down('sm'))\n\n  const handleTabChange = (prop: number) => setSelectedTab(prop)\n\n  return (\n    <Show {...props}>\n      <>\n        <Grid container>\n          <Grid item xs={smallScreen ? 12 : 4}>\n            <Paper style={{ height: '100%' }}>\n              <Grid container>\n                <Grid item xs={smallScreen ? 4 : 12}>\n                  <TabButton\n                    value={0}\n                    selected={selectedTab}\n                    change={handleTabChange}\n                  >\n                    {translate('resources.access.tabs.details')}\n                  </TabButton>\n                </Grid>\n                <Grid item xs={smallScreen ? 4 : 12}>\n                  <TabButton\n                    value={1}\n                    selected={selectedTab}\n                    change={handleTabChange}\n                  >\n                    {translate('resources.access.tabs.dates')}\n                  </TabButton>\n                </Grid>\n                <Grid item xs={smallScreen ? 4 : 12}>\n                  <TabButton\n                    value={2}\n                    selected={selectedTab}\n                    change={handleTabChange}\n                  >\n                    {translate('resources.access.tabs.uses')}\n                  </TabButton>\n                </Grid>\n              </Grid>\n            </Paper>\n          </Grid>\n          <Grid item xs={smallScreen ? 12 : 8}>\n            <Paper style={{ height: '100%' }}>\n              {selectedTab === 0 && <AccessDetails />}\n              {selectedTab === 1 && <AccessDates />}\n              {selectedTab === 2 && (\n                <AccessUses\n                  id={id as string}\n                  tickets={\n                    record?.tickets.map((ticket: any) => ticket.id) as number[]\n                  }\n                />\n              )}\n            </Paper>\n          </Grid>\n        </Grid>\n      </>\n    </Show>\n  )\n}\n","import React, { useEffect } from 'react'\nimport {\n  ChipFieldProps,\n  DateField,\n  Labeled,\n  ResourceContextProvider,\n  Show,\n  ShowProps,\n  Tab,\n  TabbedShowLayout,\n  TextField,\n  useRecordContext,\n  useShowContext,\n  useTranslate,\n} from 'react-admin'\nimport { Box, Chip, Divider, Grid, Hidden, Typography } from '@material-ui/core'\nimport { TicketDetails } from '../../core/ticket-details/ticket-details'\nimport { mapFromBookingType } from '../../core/ticket-details/ticket-details-values.mapper'\nimport { TicketDetailsHeader } from './TicketDetailsHeader'\nimport { TicketDetailsTicketsField } from './TicketDetailsTicketsField'\nimport { ToggleAccessButton } from './ToggleAccessButton'\nimport { ToggleTicketButton } from './ToggleTicketButton'\nimport { ResourceName } from '../../core/ResourceName'\nimport { LogList } from '../logs/LogList'\nimport { AccessList } from './accesses/AccessList'\nimport { AccessShow } from './accesses/AccessShow'\nimport { BackButton, BackButtonText } from './TicketDetailsComponents'\nimport { useHasAuthority } from '../hooks/useHasAuthority'\nimport { Authority } from '../../core/auth/Authority'\n\nconst MappedChipField = <T extends unknown>({\n  mapper,\n  source,\n}: ChipFieldProps & { mapper: (value: T) => string }) => {\n  const record = useRecordContext<TicketDetails>()\n  const t = useTranslate()\n  const mappedValue = mapper(record[source as string])\n  return <Chip label={t(mappedValue)} />\n}\n\nconst AccessDetailsView = () => {\n  const { record, basePath } = useShowContext()\n  const translate = useTranslate()\n  const [selectedAccess, setSelectedAccess] = React.useState<\n    number | undefined\n  >(undefined)\n\n  const handleAccessChange = (prop: number | undefined) => {\n    setSelectedAccess(prop)\n  }\n\n  useEffect(() => {\n    if (record?.accessesIds && record.accessesIds.length === 1)\n      setSelectedAccess(record?.accessesIds.toString())\n  }, [record, setSelectedAccess])\n\n  return (\n    <>\n      <Divider />\n      <Hidden xlDown={!!selectedAccess && record?.accessesIds.length === 1}>\n        <Typography variant=\"h5\">\n          {translate('resources.access.actions.choose')}\n        </Typography>\n        <ResourceContextProvider value={ResourceName.ACCESSES}>\n          <AccessList\n            basePath={basePath}\n            actions={false}\n            filters={undefined}\n            filter={{ id: record?.accessesIds.toString() }}\n            title=\" \"\n            setSelected={handleAccessChange}\n          />\n        </ResourceContextProvider>\n      </Hidden>\n      {selectedAccess && (\n        <Box paddingY={2}>\n          <Grid container>\n            <Hidden xlDown={record?.accessesIds.length === 1}>\n              <Grid item xs={1}>\n                <BackButton onClick={() => setSelectedAccess(undefined)}>\n                  <BackButtonText>\n                    {translate('resources.access.actions.back')}\n                  </BackButtonText>\n                </BackButton>\n              </Grid>\n            </Hidden>\n            <Grid item xs={record?.accessesIds.length === 1 ? 12 : 11}>\n              <AccessShow\n                basePath={basePath}\n                actions={false}\n                id={selectedAccess.toString()}\n                resource={ResourceName.ACCESSES}\n                title=\" \"\n              />\n            </Grid>\n          </Grid>\n        </Box>\n      )}\n    </>\n  )\n}\n\nconst ProfileDetailsView = () => {\n  const { record } = useShowContext()\n  return (\n    <Tab label=\"resources.ticket-details.tabs.profile\">\n      {record?.documentType && (\n        <TextField\n          addLabel\n          label=\"resources.ticket-details.fields.documentType\"\n          source=\"documentType\"\n        />\n      )}\n      {record?.pesel && (\n        <TextField\n          label=\"resources.ticket-details.fields.pesel\"\n          source=\"pesel\"\n        />\n      )}\n      {record?.documentNumber && (\n        <TextField\n          label=\"resources.ticket-details.fields.documentNumber\"\n          source=\"documentNumber\"\n        />\n      )}\n      <TextField\n        label=\"resources.ticket-details.fields.firstname\"\n        source=\"firstname\"\n      />\n      <TextField\n        label=\"resources.ticket-details.fields.lastname\"\n        source=\"lastname\"\n      />\n      {record?.gender && (\n        <TextField\n          label=\"resources.ticket-details.fields.gender\"\n          source=\"gender\"\n        />\n      )}\n      {record?.birthdate && (\n        <DateField\n          label=\"resources.ticket-details.fields.birthdate\"\n          source=\"birthdate\"\n        />\n      )}\n      {record?.company && (\n        <TextField\n          label=\"resources.ticket-details.fields.company\"\n          source=\"company\"\n        />\n      )}\n      {record?.nationality && (\n        <TextField\n          label=\"resources.ticket-details.fields.nationality\"\n          source=\"nationality\"\n        />\n      )}\n    </Tab>\n  )\n}\n\nconst StatusButtons = () => (\n  <>\n    <Divider />\n    <Box p={1} display=\"flex\" justifyContent=\"flex-end\">\n      <ToggleAccessButton />\n      <ToggleTicketButton />\n    </Box>\n  </>\n)\n\nconst TicketMainView = () => {\n  const { record: ticketDetails } = useShowContext<TicketDetails>()\n  return (\n    <Tab label=\"resources.ticket-details.tabs.booking\">\n      {ticketDetails?.eventName && (\n        <TextField\n          label=\"resources.ticket-details.fields.eventName\"\n          source=\"eventName\"\n        />\n      )}\n      {ticketDetails?.seatId && (\n        <TextField\n          label=\"resources.ticket-details.fields.seatId\"\n          source=\"seatId\"\n        />\n      )}\n      {ticketDetails?.blockId && (\n        <TextField\n          label=\"resources.ticket-details.fields.blockId\"\n          source=\"blockId\"\n        />\n      )}\n      {ticketDetails?.objectName && (\n        <TextField\n          label=\"resources.ticket-details.fields.objectName\"\n          source=\"objectName\"\n        />\n      )}\n      {ticketDetails?.tribuneName && (\n        <TextField\n          label=\"resources.ticket-details.fields.tribuneName\"\n          source=\"tribuneName\"\n        />\n      )}\n      {ticketDetails?.blockName && (\n        <TextField\n          label=\"resources.ticket-details.fields.blockName\"\n          source=\"blockName\"\n        />\n      )}\n      {ticketDetails?.rowNumber && (\n        <TextField\n          label=\"resources.ticket-details.fields.rowNumber\"\n          source=\"rowNumber\"\n        />\n      )}\n      {ticketDetails?.seatNumber && (\n        <TextField\n          label=\"resources.ticket-details.fields.seatNumber\"\n          source=\"seatNumber\"\n        />\n      )}\n      <Labeled label=\"resources.ticket-details.fields.bookingType\">\n        <MappedChipField source=\"bookingType\" mapper={mapFromBookingType} />\n      </Labeled>\n      {ticketDetails?.activeFrom && (\n        <DateField\n          label=\"resources.ticket-details.fields.activeFrom\"\n          source=\"activeFrom\"\n          showTime\n        />\n      )}\n      {ticketDetails?.activeTo && (\n        <DateField\n          label=\"resources.ticket-details.fields.activeTo\"\n          source=\"activeTo\"\n          showTime\n        />\n      )}\n      <TicketDetailsTicketsField label=\"resources.ticket-details.fields.tickets.name\" />\n      <DateField\n        label=\"resources.ticket-details.fields.createdAt\"\n        source=\"createdAt\"\n        showTime\n      />\n      <DateField\n        label=\"resources.ticket-details.fields.modifiedAt\"\n        source=\"modifiedAt\"\n        showTime\n      />\n      <StatusButtons />\n    </Tab>\n  )\n}\n\nconst TicketLogsView = () => {\n  const { record, basePath } = useShowContext()\n  return (\n    <ResourceContextProvider value={ResourceName.TICKET_LOGS}>\n      <LogList\n        basePath={basePath}\n        filter={{ bookingId: record?.id }}\n        filters={undefined}\n        actions={false}\n        title=\" \"\n        noBooking\n      />\n    </ResourceContextProvider>\n  )\n}\n\nexport const TicketDetailsView = (props: ShowProps) => {\n  const hasAuthority = useHasAuthority()\n  return (\n    <Show {...props}>\n      <>\n        <TicketDetailsHeader />\n        <Divider />\n        <TabbedShowLayout syncWithLocation={false}>\n          <Tab label=\"resources.ticket-details.tabs.booking\">\n            <TicketMainView />\n          </Tab>\n          {hasAuthority(Authority.VIEW_LOGS) && (\n            <Tab label=\"resources.ticket-details.tabs.logs\">\n              <TicketLogsView />\n            </Tab>\n          )}\n          <Tab label=\"resources.ticket-details.tabs.profile\">\n            <ProfileDetailsView />\n          </Tab>\n          <Tab label=\"resources.ticket-details.tabs.accesses\">\n            <TextField\n              label=\"resources.ticket-details.fields.variantName\"\n              source=\"variantName\"\n            />\n            <AccessDetailsView />\n          </Tab>\n        </TabbedShowLayout>\n      </>\n    </Show>\n  )\n}\n","import * as React from 'react'\nimport {\n  Datagrid,\n  DateField,\n  Filter,\n  FilterProps,\n  List,\n  ListProps,\n  TextField,\n  TextInput,\n  useListContext,\n} from 'react-admin'\nimport { ResourceName } from '../../../core/ResourceName'\nimport { useHasAuthority } from '../../hooks/useHasAuthority'\nimport { Authority } from '../../../core/auth/Authority'\n\nconst ListFilters = (props: Omit<FilterProps, 'children'>) => (\n  <Filter {...props}>\n    <TextInput source=\"name\" alwaysOn />\n  </Filter>\n)\n\nconst OverallViewGrid = () => {\n  const { loading } = useListContext()\n  const hasAuthority = useHasAuthority()\n  // TODO: header doesn't change color when theme value is switched\n  //  the reason is the need to change the theme at <Admin> level - not at <Layout> level\n  //  the solution is here - https://stackoverflow.com/a/63967145 -> after that customReducer needs to be removed\n  return (\n    <Datagrid\n      loaded={!loading}\n      rowClick={\n        hasAuthority(Authority.VIEW_STATS_OVERALL_VIEW)\n          ? (id) => `${ResourceName.STATS_OVERALL_VIEW}/${id}/show`\n          : undefined\n      }\n    >\n      <TextField source=\"id\" />\n      <TextField source=\"name\" />\n      <DateField source=\"dateStart\" showTime />\n      <DateField source=\"dateEnd\" showTime />\n    </Datagrid>\n  )\n}\n\nexport const OverallViewList = (props: ListProps) => (\n  <List\n    {...props}\n    actions={false}\n    filters={<ListFilters />}\n    sort={{ field: 'id', order: 'DESC' }}\n  >\n    <OverallViewGrid />\n  </List>\n)\n","import React from 'react'\nimport {\n  makeStyles,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from '@material-ui/core'\nimport { Show, ShowProps, useTranslate, ArrayField, Datagrid, TextField } from 'react-admin'\n\nconst useStyles = makeStyles({\n  noBottomBorder: {\n    borderBottom: 'none',\n  },\n  quarterWidth: {\n    width: '25%',\n  },\n})\n\nconst ViewTitle = (record: any) => {\n  const {\n    record: { eventName, date, id },\n  } = record\n  const t = useTranslate()\n  const description = `${eventName} ${date.replace('T', ' ')} ${id}`\n  return (\n    <span>{`${t('resources.stats-overall-view.name')}: ${description}`}</span>\n  )\n}\n\nconst BlockGrid = (props: any) => {\n  const {\n    record: {\n      soldAbo, soldInfix, soldNormal, soldPoints, soldService\n    }\n  } = props\n  const classes = useStyles()\n  const translate = useTranslate()\n\n  const firstColumnEntries = [\n    { label: \"abo\", value: soldAbo },\n    { label: \"infix\", value: soldInfix },\n    { label: \"normal\", value: soldNormal },\n    { label: \"points\", value: soldPoints },\n    { label: \"service\", value: soldService },\n  ].map(({ label, value }) => (\n    !!value && (\n      <div key={label}>{translate(`resources.stats-overall-view.fields.${label}`)}</div>\n    )\n  ))\n\n  const secondColumnEntries = [\n    { label: \"enteredAbo\", value: soldAbo },\n    { label: \"enteredInfix\", value: soldInfix },\n    { label: \"enteredNormal\", value: soldNormal },\n    { label: \"enteredPoints\", value: soldPoints },\n    { label: \"enteredService\", value: soldService },\n  ].map(({ label, value }) =>\n    !!value && (\n      <TextField key={label} source={label} label=\" \" />\n    ))\n\n  const thirdColumnEntries = [\n    { label: \"soldAbo\", value: soldAbo },\n    { label: \"soldInfix\", value: soldInfix },\n    { label: \"soldNormal\", value: soldNormal },\n    { label: \"soldPoints\", value: soldPoints },\n    { label: \"soldService\", value: soldService },\n  ].map(({ label, value }) => (\n    !!value && (\n      <TextField key={label} source={label} label=\" \" />\n    )\n  ))\n\n  return (\n    <TableContainer style={{ paddingTop: \"10px\", marginBottom: \"10px\" }}>\n      <Table padding=\"none\">\n        <TableBody>\n          <TableRow>\n            <TableCell style={{ width: \"15%\" }} className={classes.noBottomBorder} />\n            <TableCell style={{ width: \"40%\" }} className={classes.noBottomBorder}>{firstColumnEntries}</TableCell>\n            <TableCell style={{ width: \"15%\" }} className={classes.noBottomBorder}>{secondColumnEntries}</TableCell>\n            <TableCell style={{ width: \"15%\" }} className={classes.noBottomBorder}>{thirdColumnEntries}</TableCell>\n            <TableCell style={{ width: \"15%\" }} className={classes.noBottomBorder} />\n          </TableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n\nconst TribuneGrid = () => {\n  const translate = useTranslate()\n\n  const TribuneHeader = () => (\n    <TableHead>\n      <TableRow>\n        <TableCell style={{ width: \"15%\" }} />\n        <TableCell style={{ width: \"40%\" }}>{translate('resources.stats-overall-view.fields.block')}</TableCell>\n        <TableCell style={{ width: \"15%\" }} />\n        <TableCell style={{ width: \"15%\" }} />\n        <TableCell style={{ width: \"15%\" }} />\n      </TableRow>\n    </TableHead>\n  )\n\n  return (\n    <ArrayField source=\"blocks\">\n      <Datagrid expand={<BlockGrid />} padding=\"none\" header={<TribuneHeader />} isRowExpandable={record => !!record.sold}>\n        <TextField source=\"name\" label=\"Sektor\" />\n        <TextField source=\"entered\" label=\" \" />\n        <TextField source=\"sold\" label=\" \" />\n        <TextField source=\"capacity\" label=\" \" />\n      </Datagrid>\n    </ArrayField>\n  )\n}\n\nconst ObjectGrid = () => {\n  const translate = useTranslate()\n\n  const objectHeader = () => (\n    <TableHead>\n      <TableRow>\n        <TableCell style={{ width: \"10%\" }} />\n        <TableCell style={{ width: \"45%\" }}>{translate('resources.stats-overall-view.fields.tribune')}</TableCell>\n        <TableCell style={{ width: \"15%\" }} />\n        <TableCell style={{ width: \"15%\" }} />\n        <TableCell style={{ width: \"15%\" }} />\n      </TableRow>\n    </TableHead>\n  )\n\n  return (\n    <ArrayField source=\"tribunes\">\n      <Datagrid expand={<TribuneGrid />} padding=\"none\" header={objectHeader}>\n        <TextField source=\"name\" label=\"Trybuna\" />\n        <TextField source=\"entered\" label=\" \" />\n        <TextField source=\"sold\" label=\" \" />\n        <TextField source=\"capacity\" label=\" \" />\n      </Datagrid>\n    </ArrayField>\n  )\n}\n\nexport const OverallView = (props: ShowProps) => {\n  const translate = useTranslate()\n\n  const overallHeader = () => (\n    <TableHead>\n      <TableRow>\n        <TableCell style={{ width: \"5%\" }} />\n        <TableCell style={{ width: \"50%\" }}>{translate('resources.stats-overall-view.fields.name')}</TableCell>\n        <TableCell style={{ width: \"15%\" }}>{translate('resources.stats-overall-view.fields.entered')}</TableCell>\n        <TableCell style={{ width: \"15%\" }}>{translate('resources.stats-overall-view.fields.sold')}</TableCell>\n        <TableCell style={{ width: \"15%\" }}>{translate('resources.stats-overall-view.fields.capacity')}</TableCell>\n      </TableRow>\n    </TableHead>\n  )\n\n  return (\n    <Show title={<ViewTitle />} {...props}>\n      <ArrayField source=\"objects\">\n        <Datagrid expand={<ObjectGrid />} padding=\"none\" header={overallHeader}>\n          <TextField source=\"name\" label=\"Obiekt\" />\n          <TextField source=\"entered\" />\n          <TextField source=\"sold\" />\n          <TextField source=\"capacity\" />\n        </Datagrid>\n      </ArrayField>\n    </Show>\n  )\n}","import { Box, Button, ButtonGroup, Checkbox, Divider, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core'\nimport React, { useMemo } from \"react\"\nimport { DateField, EditButton, FunctionField, GET_LIST, List, Pagination, Record, ResourceContextProvider, sanitizeFetchType, Show, ShowProps, Tab, TabbedShowLayout, TextField, TextInput, useListContext, useMutation, useNotify, useQuery, useRefresh, useShowContext, useTranslate } from \"react-admin\"\nimport { CompanyDto } from '../../core/dto/company.dto'\nimport { EngineDto } from \"../../core/dto/device/engine/engine.dto\"\nimport { PalmDto } from \"../../core/dto/device/palm/palm.dto\"\nimport { EventCompaniesDto } from '../../core/dto/event/event-companies.dto'\nimport { EventDevicesDto } from '../../core/dto/event/event-devices.dto'\nimport { EventDto } from '../../core/dto/event/event.dto'\nimport { ObjectDto } from '../../core/dto/object.dto'\nimport { EventStatus } from \"../../core/enum/EventStatus\"\nimport { ResourceName } from \"../../core/ResourceName\"\nimport { useHasAuthority } from '../hooks/useHasAuthority'\nimport { Authority } from '../../core/auth/Authority'\n\nconst ShowTitle = (record: any) => {\n  const { record: { name, dateStart, id } } = record\n  const translate = useTranslate()\n  const date = useMemo(() => !(dateStart instanceof Date) ? dateStart.replace('T', ' ') : '', [dateStart])\n  return (\n    <span>{translate('resources.events.titles.show')}: {name} {date} {id}</span>\n  )\n}\n\nconst Attachments = ({ source }: { source: 'COMPANIES' | 'OBJECTS' | 'ENGINES' | 'PALMS' }) => {\n  const translate = useTranslate()\n  const [mutate] = useMutation()\n  const notify = useNotify()\n  const hasAuthority = useHasAuthority()\n\n  const { data, ids, filterValues, currentSort, total, refetch: refetchList } = useListContext<CompanyDto | ObjectDto | EngineDto | PalmDto>()\n  const { record: event, refetch } = useShowContext<EventDto>()\n  const { data: allFiltered, refetch: refetchAllFiltered } = useQuery({\n    type: sanitizeFetchType(GET_LIST),\n    resource: source.toLocaleLowerCase(),\n    payload: {\n      filter: {\n        ...filterValues\n      },\n      sort: currentSort || {\n        field: \"id\",\n        order: \"DESC\"\n      },\n      pagination: {\n        page: 1,\n        perPage: total || 1\n      }\n    }\n  })\n\n  const getAttachmentsFetchType = () => {\n    switch (source) {\n      case 'COMPANIES':\n        return `getCompaniesList`\n      case 'ENGINES':\n      case 'PALMS':\n        return `getDevicesList`\n      default:\n        return ''\n    }\n  }\n\n  const { data: attachedDto, refetch: refetchAttachedIds } = useQuery({\n    type: sanitizeFetchType(getAttachmentsFetchType()),\n    resource: ResourceName.EVENTS,\n    payload: {\n      eventId: event?.id,\n    }\n  }, {\n    enabled: getAttachmentsFetchType() !== ''\n  })\n\n  const isAttached = (attachmentId: number) => {\n    switch (source) {\n      case 'COMPANIES':\n        return (attachedDto as EventCompaniesDto)?.companiesIds?.includes(attachmentId) === true\n      case 'OBJECTS':\n        return event?.objectsIds?.includes(attachmentId)\n      case 'ENGINES':\n      case 'PALMS':\n        return (attachedDto as EventDevicesDto)?.verifierDevicesIds?.includes(attachmentId) === true\n      default:\n        notify(`Source '${source}' is not implemented yet.`)\n        return false\n    }\n  }\n\n  const handleAttach = async (idsToAttach: number[]) => {\n    switch (source) {\n      case 'COMPANIES':\n        await mutate({\n          type: sanitizeFetchType(\"attachCompanies\"),\n          resource: ResourceName.EVENTS,\n          payload: {\n            eventId: event?.id,\n            companiesIds: idsToAttach\n          }\n        }, { returnPromise: true })\n        break;\n      case 'OBJECTS':\n        await mutate({\n          type: sanitizeFetchType(\"attachObjects\"),\n          resource: ResourceName.EVENTS,\n          payload: {\n            eventId: event?.id,\n            objectsIds: idsToAttach\n          }\n        }, { returnPromise: true })\n        break;\n      case 'ENGINES':\n      case 'PALMS':\n        await mutate({\n          type: sanitizeFetchType(\"attachDevices\"),\n          resource: ResourceName.EVENTS,\n          payload: {\n            eventId: event?.id,\n            verifierDevicesIds: idsToAttach\n          }\n        }, { returnPromise: true })\n        break;\n      default:\n        notify(`Source '${source}' is not implemented yet.`);\n    }\n    refetchList()\n    if (refetch) {\n      refetch()\n    }\n    refetchAttachedIds()\n  }\n\n  const handleDetach = async (idsToDetach: number[]) => {\n    switch (source) {\n      case 'COMPANIES':\n        await mutate({\n          type: sanitizeFetchType(\"detachCompanies\"),\n          resource: ResourceName.EVENTS,\n          payload: {\n            eventId: event?.id,\n            companiesIds: idsToDetach\n          }\n        }, { returnPromise: true })\n        break;\n      case 'OBJECTS':\n        await mutate({\n          type: sanitizeFetchType(\"detachObjects\"),\n          resource: ResourceName.EVENTS,\n          payload: {\n            eventId: event?.id,\n            objectsIds: idsToDetach\n          }\n        }, { returnPromise: true })\n        break;\n      case 'ENGINES':\n      case 'PALMS':\n        await mutate({\n          type: sanitizeFetchType(\"detachDevices\"),\n          resource: ResourceName.EVENTS,\n          payload: {\n            eventId: event && event.id,\n            verifierDevicesIds: idsToDetach\n          }\n        }, { returnPromise: true })\n        break;\n      default:\n        notify(`Source '${source}' is not implemented yet.`);\n    }\n    refetchList()\n    if (refetch) {\n      refetch()\n    }\n    refetchAttachedIds()\n  }\n\n  const handleAttachAll = () => {\n    refetchAllFiltered()\n    handleAttach(allFiltered.map((record: CompanyDto | EngineDto | PalmDto | ObjectDto) => record?.id))\n  }\n\n  const handleDetachAll = () => {\n    refetchAllFiltered()\n    handleDetach(allFiltered.map((record: CompanyDto | EngineDto | PalmDto | ObjectDto) => record?.id))\n  }\n\n  return (\n    <TableContainer>\n      <ButtonGroup>\n        <Button variant=\"contained\"\n                disabled={!hasAuthority(Authority.EDIT_EVENTS)}\n                onClick={() => handleAttachAll()}>\n          {translate('resources.events.actions.attachAll')}</Button>\n        <Button variant=\"contained\"\n                disabled={!hasAuthority(Authority.EDIT_EVENTS)}\n                onClick={() => handleDetachAll()}>\n          {translate('resources.events.actions.detachAll')}</Button>\n      </ButtonGroup>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>\n              {translate(`resources.events.fields.attachment.name`)}\n            </TableCell>\n            <TableCell style={{ width: \"10%\" }}>\n              {translate(`resources.events.fields.attachment.attached`)}\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {ids.map((id) => (\n            <TableRow key={id}>\n              <TableCell>\n                <TextField source=\"name\" record={data[id]} />\n              </TableCell>\n              <TableCell>\n                <Checkbox\n                  disabled={!hasAuthority(Authority.EDIT_EVENTS)}\n                  checked={isAttached(id as number)}\n                  onClick={\n                    isAttached(id as number)\n                      ? () => handleDetach([id as number])\n                      : () => handleAttach([id as number])\n                  }\n                />\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n\nconst GeneralEditButton = () => {\n  const { record } = useShowContext()\n  const [mutate] = useMutation()\n  const refresh = useRefresh()\n  const translate = useTranslate()\n  const hasAuthority = useHasAuthority()\n\n  const handleActivation = async () => {\n    if (record?.status !== EventStatus.IN_TRANSITION) {\n      if (record?.status === EventStatus.ACTIVE) {\n        await mutate({\n          type: sanitizeFetchType(\"deactivate\"),\n          resource: ResourceName.EVENTS,\n          payload: {\n            eventId: record?.id\n          }\n        }, { returnPromise: false })\n      }\n      else {\n        await mutate({\n          type: sanitizeFetchType(\"activate\"),\n          resource: ResourceName.EVENTS,\n          payload: {\n            eventId: record?.id\n          }\n        }, { returnPromise: false })\n      }\n      refresh()\n    }\n  }\n\n  return (\n    <>\n      <Divider />\n      <Box p={1} display=\"flex\" justifyContent=\"flex-end\">\n        <Button variant=\"contained\"\n                onClick={handleActivation}\n                color=\"primary\"\n                style={{ marginRight: '5px' }}\n                disabled={!hasAuthority(Authority.EDIT_EVENTS) || record?.status === EventStatus.IN_TRANSITION}>\n          {record?.status === EventStatus.INACTIVE ?\n            translate('resources.events.actions.activate') :\n            translate('resources.events.actions.deactivate')}\n        </Button>\n        <EditButton variant=\"contained\"\n                    basePath=\"/events\"\n                    record={record}\n                    disabled={!hasAuthority(Authority.EDIT_EVENTS)} />\n      </Box>\n    </>\n  )\n}\n\nexport const EventShow = (props: ShowProps) => {\n  const translate = useTranslate()\n  const { basePath } = props\n  return (\n    <Show {...props} title={<ShowTitle />} actions={false}>\n      <TabbedShowLayout>\n        <Tab label={translate(\"resources.events.tabs.general\")}>\n          <TextField source=\"id\" label=\"ID\" />\n          <TextField source=\"name\" />\n          <DateField source=\"dateStart\" showTime />\n          <DateField source=\"dateEnd\" showTime />\n          <FunctionField resource=\"events\" label={translate(\"resources.events.fields.status\")}\n            render={(r: Record | undefined) =>\n              (translate(`resources.enums.eventStatus.${r?.status.toLowerCase()}`))} />\n          <GeneralEditButton />\n        </Tab>\n        <Tab label={translate(\"resources.events.tabs.palms\")}>\n          <>\n            <Box paddingY={2}>\n              <ResourceContextProvider value={ResourceName.PALMS} >\n                <List basePath={basePath} exporter={false} title=\" \"\n                  perPage={20} pagination={<Pagination rowsPerPageOptions={[10, 20, 50]} />}\n                  filters={[\n                    <TextInput source=\"name\" alwaysOn />,\n                    <TextInput source=\"categoryId\" />\n                  ]}>\n                  <Attachments source=\"PALMS\" />\n                </List>\n              </ResourceContextProvider>\n            </Box>\n          </>\n        </Tab>\n        <Tab label={translate(\"resources.events.tabs.engines\")}>\n          <>\n            <Box paddingY={2}>\n              <ResourceContextProvider value={ResourceName.ENGINES}>\n                <List basePath={basePath} exporter={false} title=\" \"\n                  perPage={20} pagination={<Pagination rowsPerPageOptions={[10, 20, 50]} />}\n                  filters={[\n                    <TextInput source=\"name\" alwaysOn />,\n                    <TextInput source=\"categoryId\" />\n                  ]}>\n                  <Attachments source=\"ENGINES\" />\n                </List>\n              </ResourceContextProvider>\n            </Box>\n          </>\n        </Tab>\n        <Tab label={translate(\"resources.events.tabs.objects\")}>\n          <>\n            <Box paddingY={2}>\n              <ResourceContextProvider value={ResourceName.OBJECTS}>\n                <List basePath={basePath} exporter={false} title=\" \"\n                  perPage={20} pagination={<Pagination rowsPerPageOptions={[10, 20, 50, 100]} />}\n                  filters={[\n                    <TextInput source=\"name\" alwaysOn />\n                  ]}>\n                  <Attachments source=\"OBJECTS\" />\n                </List>\n              </ResourceContextProvider>\n            </Box>\n          </>\n        </Tab>\n        <Tab label={translate(\"resources.events.tabs.companies\")}>\n          <>\n            <Box paddingY={2}>\n              <ResourceContextProvider value={ResourceName.COMPANIES}>\n                <List basePath={basePath} exporter={false} title=\" \"\n                  perPage={20} pagination={<Pagination rowsPerPageOptions={[10, 20, 50, 100]} />}\n                  filters={[\n                    <TextInput source=\"name\" alwaysOn />\n                  ]}>\n                  <Attachments source=\"COMPANIES\" />\n                </List>\n              </ResourceContextProvider>\n            </Box>\n          </>\n        </Tab>\n      </TabbedShowLayout>\n    </Show>\n  )\n}","import {\n  Edit, EditProps, TextField, TextInput, FunctionField, SaveButton, ShowButton,\n  DateTimeInput, useTranslate, SimpleForm, Record, Toolbar, ToolbarProps\n} from \"react-admin\"\nimport React, { useMemo } from \"react\"\nimport { Cancel } from \"@material-ui/icons\"\n\nconst EditTitle = (record: any) => {\n  const { record: { name, dateStart, id } } = record\n  const translate = useTranslate()\n  const date = useMemo(() => !(dateStart instanceof Date) ? dateStart.replace('T', ' ') : '', [dateStart])\n  return (\n    <span>{translate('resources.events.titles.edit')}: {name} {date} {id}</span>\n  )\n}\n\nconst EditToolbar = (props: ToolbarProps) => (\n  <Toolbar {...props}>\n    <SaveButton />\n    <ShowButton label='const.cancel' icon={<Cancel />} />\n  </Toolbar>\n)\n\nexport const EventEdit = (props: EditProps) => {\n  const translate = useTranslate()\n  return (\n    <Edit {...props} title={<EditTitle />} actions={false}>\n      <SimpleForm redirect=\"show\" toolbar={<EditToolbar />}>\n        <TextField source=\"id\" label=\"ID\" />\n        <TextInput source=\"name\" />\n        <DateTimeInput source=\"dateStart\" />\n        <DateTimeInput source=\"dateEnd\" />\n        <FunctionField resource=\"events\" label={translate(\"resources.events.fields.status\")}\n          render={(r: Record | undefined) =>\n            (translate(`resources.enums.eventStatus.${r?.status.toLowerCase()}`))} />\n      </SimpleForm>\n    </Edit>\n  )\n}","import { Box, Typography, Divider, useMediaQuery, useTheme } from '@material-ui/core'\nimport React from 'react'\nimport {\n  List,\n  ListProps,\n  useListContext,\n  useTranslate,\n  Datagrid,\n  TextField,\n  TextInput,\n  FunctionField\n} from 'react-admin'\nimport { CustomerInfo } from '../../core/customer-info/customer-info'\nimport { ResourceName } from '../../core/ResourceName'\nimport { MaskField } from '../common/MaskField'\n\nconst CustomerInfoGrid = () => {\n  const {\n    loading,\n    filterValues: { info },\n  } = useListContext()\n  const t = useTranslate()\n  const theme = useTheme()\n  const smallDevice = useMediaQuery(theme.breakpoints.down('sm'))\n  return (\n    <>\n      {info &&\n        <Box m={2}>\n          <Typography variant=\"h5\" paragraph>\n            {t('resources.customer-info.search-list-title', { info })}\n          </Typography>\n        </Box>}\n      <Divider />\n      <Datagrid\n        loaded={!loading}\n        rowClick={(id) => `${ResourceName.CUSTOMER_DETAILS}/${id}/show`}\n      >\n        <TextField source=\"firstname\" />\n        <TextField source=\"lastname\" />\n        {smallDevice &&\n          <FunctionField<CustomerInfo> source=\"pesel\"\n            label=\"resources.customer-info.fields.documentNumber\"\n            render={(record?: CustomerInfo) => (\n              record?.pesel ?\n                <MaskField source=\"pesel\" /> :\n                <MaskField source=\"documentNumber\" />\n            )} />}\n        {!smallDevice && <MaskField source=\"pesel\" />}\n        {!smallDevice && <MaskField source=\"documentNumber\" />}\n      </Datagrid>\n    </>\n  )\n}\n\nexport const CustomerInfoList = (props: ListProps) => (\n  <List\n    exporter={false}\n    {...props}\n    sort={{ field: 'lastname', order: 'ASC' }}\n    filters={[\n      <TextInput source=\"firstname\" />,\n      <TextInput source=\"lastname\" />,\n      <TextInput source=\"pesel\" />,\n      <TextInput source=\"documentNumber\" />,\n      <TextInput source=\"info\" />,\n    ]}\n  >\n    <CustomerInfoGrid />\n  </List>\n)\n","import React from \"react\"\nimport { ListProps, List, useListContext, Pagination, useTranslate, FunctionField, Record, TextField } from \"react-admin\"\nimport { TableContainer, Table, TableHead, TableBody, TableRow, TableCell, useMediaQuery, useTheme } from \"@material-ui/core\"\nimport { useHistory } from \"react-router\"\nimport { MobilePostPagination } from '../common/Pagination'\nimport { ResourceName } from \"../../core/ResourceName\"\n\nconst BookingGrid = () => {\n  const { data, ids } = useListContext()\n  const history = useHistory()\n  const translate = useTranslate()\n  return (\n    <TableContainer>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>{translate(`resources.bookings.fields.eventId`)}</TableCell>\n            <TableCell>{translate(`resources.bookings.fields.id`)}</TableCell>\n            <TableCell>{translate(`resources.bookings.fields.variantName`)}</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {ids.map(id =>\n            <TableRow key={id} style={{ cursor: \"pointer\" }}>\n              <TableCell onClick={() =>\n                history.push({ pathname: `/${ResourceName.TICKET_DETAILS}/${id}/show`, })\n              }>\n                <FunctionField record={data[id]} render={(record: Record | undefined) => (\n                  `${record?.eventId}. ${record?.eventName} ${record?.eventDateStart.replace(\"T\", \" \").substring(0, 19)}`\n                )} />\n              </TableCell>\n              <TableCell onClick={() =>\n                history.push({ pathname: `/${ResourceName.TICKET_DETAILS}/${id}/show`, })\n              }>\n                <TextField record={data[id]} source=\"id\" />\n              </TableCell>\n              <TableCell onClick={() =>\n                history.push({ pathname: `/${ResourceName.TICKET_DETAILS}/${id}/show`, })\n              }>\n                <TextField record={data[id]} source=\"variantName\" />\n              </TableCell>\n            </TableRow>\n          )}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n\nexport const BookingList = (props: ListProps) => {\n  const theme = useTheme()\n  return (\n    <List\n      perPage={20}\n      exporter={false}\n      pagination={\n        useMediaQuery(theme.breakpoints.up('md')) ? (\n          <Pagination rowsPerPageOptions={[20, 50, 100]} />\n        ) : (\n          <MobilePostPagination />\n        )\n      }\n      sort={{ field: 'id', order: 'DESC' }}\n      {...props}\n    >\n      <BookingGrid />\n    </List>\n  )\n}","import {\n  DateField,\n  FunctionField,\n  Record,\n  ResourceContextProvider,\n  Show,\n  ShowProps,\n  Tab,\n  TabbedShowLayout,\n  TextField,\n  useShowContext,\n  useTranslate,\n} from 'react-admin'\nimport React, { useMemo } from 'react'\nimport { Box } from '@material-ui/core'\nimport { LogList } from '../logs/LogList'\nimport { ResourceName } from '../../core/ResourceName'\nimport { BookingList } from './CustomerBookingsList'\nimport { useHasAuthority } from '../hooks/useHasAuthority'\nimport { Authority } from '../../core/auth/Authority'\n\nconst CustomerBookingsView = () => {\n  const { record, basePath } = useShowContext()\n  return (\n    <Box paddingY={2}>\n      <ResourceContextProvider value={ResourceName.BOOKINGS}>\n        <BookingList\n          basePath={basePath}\n          filter={{ id: record?.bookingsIds.join(',') }}\n          filters={undefined}\n          actions={false}\n          title=\" \"\n        />\n      </ResourceContextProvider>\n    </Box>\n  )\n}\n\nconst CustomerLogsView = () => {\n  const { record, basePath } = useShowContext()\n  return (\n    <Box paddingY={2}>\n      <ResourceContextProvider value={ResourceName.TICKET_LOGS}>\n        <LogList\n          basePath={basePath}\n          filter={{ bookingId: record?.bookingsIds.join(',') }}\n          filters={undefined}\n          actions={false}\n          title=\" \"\n        />\n      </ResourceContextProvider>\n    </Box>\n  )\n}\n\nconst CustomerTabs = () => {\n  const { record } = useShowContext()\n  const translate = useTranslate()\n  const hasAuthority = useHasAuthority()\n  const bookingPresent = useMemo(() => record?.bookingsIds.length > 0, [record])\n  return (\n    <TabbedShowLayout>\n      <Tab label={translate('resources.customer-details.tabs.profile')}>\n        <TextField\n          source=\"firstname\"\n          label=\"resources.customer-details.fields.firstname\"\n        />\n        <TextField\n          source=\"lastname\"\n          label=\"resources.customer-details.fields.lastname\"\n        />\n        {record?.company && (\n          <TextField\n            source=\"company\"\n            label=\"resources.customer-details.fields.company\"\n          />\n        )}\n        {record?.birthdate && (\n          <>\n            {record.birthdate.split('.')[0].length === 1 && 0}\n            <DateField\n              source=\"birthdate\"\n              label=\"resources.customer-details.fields.birthdate\"\n            />\n          </>\n        )}\n        {record?.documentType && (\n          <TextField\n            source=\"documentType\"\n            label=\"resources.customer-details.fields.documentType\"\n          />\n        )}\n        {record?.pesel ? (\n          <TextField\n            source=\"pesel\"\n            label=\"resources.customer-details.fields.pesel\"\n          />\n        ) : (\n          <TextField\n            source=\"documentNumber\"\n            label=\"resources.customer-details.fields.documentNumber\"\n          />\n        )}\n        {record?.nationality && (\n          <TextField\n            source=\"nationality\"\n            label=\"resources.customer-details.fields.nationality\"\n          />\n        )}\n        {record?.gender && (\n          <FunctionField\n            label=\"resources.customer-details.fields.gender\"\n            render={(r: Record | undefined) =>\n              r && translate(`resources.enums.gender.${r.gender}`)\n            }\n          />\n        )}\n      </Tab>\n      {bookingPresent && (\n        <Tab label={translate('resources.customer-details.tabs.bookings')}>\n          <CustomerBookingsView />\n        </Tab>\n      )}\n      {bookingPresent && hasAuthority(Authority.VIEW_LOGS) && (\n        <Tab label={translate('resources.customer-details.tabs.logs')}>\n          <CustomerLogsView />\n        </Tab>\n      )}\n    </TabbedShowLayout>\n  )\n}\n\nexport const CustomerDetailsView = (props: ShowProps) => (\n  <Show {...props}>\n    <CustomerTabs />\n  </Show>\n)\n","import { useMediaQuery, useTheme } from '@material-ui/core'\nimport React from 'react'\nimport { List, Datagrid, TextField, ListProps, Pagination, TextInput } from 'react-admin'\nimport { ResourceName } from '../../../core/ResourceName'\n\nexport const PalmList = (props: ListProps) => {\n  const theme = useTheme()\n  const smallScreen = useMediaQuery(theme.breakpoints.down('sm'))\n  return (\n    <List\n      {...props}\n      perPage={20}\n      pagination={<Pagination rowsPerPageOptions={[10, 20, 50]} />}\n      exporter={false}\n      filters={[\n        <TextInput source=\"name\" alwaysOn />,\n        <TextInput source=\"categoryId\" />\n      ]}\n    >\n      <>\n        <Datagrid\n          size=\"small\"\n          rowClick={(id) => `${ResourceName.PALMS}/${id}/show`}\n        >\n          <TextField source=\"id\" label=\"ID\" />\n          <TextField source=\"name\" />\n          <TextField source=\"categoryId\" sortable={false} />\n          {!smallScreen &&\n            <TextField source=\"disabled\" sortable={false} />}\n          {!smallScreen &&\n            <TextField source=\"mobileDeviceId\" sortable={false} />}\n        </Datagrid>\n      </>\n    </List>\n  )\n}\n","import React, { useState } from 'react'\nimport {\n  useTranslate,\n  useShowContext,\n  useMutation,\n  useRefresh,\n  sanitizeFetchType,\n} from 'react-admin'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  TextField,\n  ButtonGroup,\n} from '@material-ui/core'\nimport { ResourceName } from '../../../core/ResourceName'\nimport { PalmDto } from '../../../core/dto/device/palm/palm.dto'\n\nexport const ConfirmDialog = ({\n  confirm,\n  cancel,\n  source,\n  open,\n  action,\n}: {\n  confirm: () => void\n  cancel: () => void\n  source: 'deviceId' | 'lock'\n  open: boolean\n  action: 'set' | 'remove'\n}) => {\n  const translate = useTranslate()\n  return (\n    <Dialog open={open}>\n      <DialogTitle>\n        {translate(`resources.palms.dialogs.confirm.${source}.${action}`)}\n      </DialogTitle>\n      <DialogActions>\n        <Button variant=\"contained\" onClick={confirm}>\n          {translate('ra.action.save')}\n        </Button>\n        <Button variant=\"contained\" onClick={cancel}>\n          {translate('const.cancel')}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nexport const DeviceIdModal = ({\n  open,\n  close,\n}: {\n  open: boolean\n  close: () => void\n}) => {\n  const [value, setValue] = useState('')\n  const [error, setError] = useState(false)\n  const [errorText, setErrorText] = useState('')\n  const [confirmOpen, setConfirmOpen] = useState(false)\n  const { record: palm } = useShowContext<PalmDto>()\n  const [mutate] = useMutation()\n  const refresh = useRefresh()\n  const translate = useTranslate()\n\n  const handleClose = () => {\n    setValue('')\n    setError(false)\n    setErrorText('')\n    close()\n  }\n\n  const handleSetMobileDeviceId = async () => {\n    setConfirmOpen(false)\n    if (value.replace(/\\s/g, '').length === 0) {\n      setError(true)\n      setErrorText(\n        translate('resources.palms.dialogs.deviceId.error-bad-string'),\n      )\n    } else if (value.replace(/\\s/g, '').length !== value.length) {\n      setError(true)\n      setErrorText(\n        translate('resources.palms.dialogs.deviceId.error-no-spaces'),\n      )\n    } else {\n      await mutate(\n        {\n          type: sanitizeFetchType('setMobileDeviceId'),\n          resource: ResourceName.PALMS,\n          payload: {\n            palmId: palm?.id,\n            mobileDeviceId: value,\n          },\n        },\n        { returnPromise: true },\n      )\n      setValue('')\n      setError(false)\n      setErrorText('')\n      refresh()\n      close()\n    }\n  }\n\n  return (\n    <Dialog open={open} onClose={handleClose}>\n      <ConfirmDialog\n        open={confirmOpen}\n        cancel={() => setConfirmOpen(false)}\n        confirm={handleSetMobileDeviceId}\n        source=\"deviceId\"\n        action=\"set\"\n      />\n      <DialogTitle>\n        {translate('resources.palms.dialogs.deviceId.title')}\n      </DialogTitle>\n      <DialogContent>\n        <TextField\n          variant=\"outlined\"\n          value={value}\n          onChange={(e) => setValue(e.target.value)}\n          fullWidth\n          error={error}\n          helperText={errorText}\n        />\n      </DialogContent>\n      <DialogActions>\n        <ButtonGroup>\n          <Button variant=\"contained\" onClick={() => setConfirmOpen(true)}>\n            {translate('ra.action.save')}\n          </Button>\n          <Button variant=\"contained\" onClick={handleClose}>\n            {translate('const.cancel')}\n          </Button>\n        </ButtonGroup>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nexport const LockModal = ({\n  open,\n  close,\n}: {\n  open: boolean\n  close: () => void\n}) => {\n  const [value, setValue] = useState('')\n  const [error, setError] = useState(false)\n  const [errorText, setErrorText] = useState('')\n  const [confirmOpen, setConfirmOpen] = useState(false)\n  const { record: palm } = useShowContext<PalmDto>()\n  const [mutate] = useMutation()\n  const refresh = useRefresh()\n  const translate = useTranslate()\n\n  const handleClose = () => {\n    setValue('')\n    setError(false)\n    setErrorText('')\n    close()\n  }\n\n  const handleLock = async () => {\n    setConfirmOpen(false)\n    if (value.replace(/\\s/g, '').length === 0) {\n      setError(true)\n      setErrorText(translate('resources.palms.dialogs.lock.error-bad-string'))\n    } else if (value.replace(/\\s/g, '').length !== value.length) {\n      setError(true)\n      setErrorText(translate('resources.palms.dialogs.lock.error-no-spaces'))\n    } else {\n      await mutate(\n        {\n          type: sanitizeFetchType('lock'),\n          resource: ResourceName.PALMS,\n          payload: {\n            palmId: palm?.id,\n            lockName: value,\n          },\n        },\n        { returnPromise: true },\n      )\n      handleClose()\n      refresh()\n    }\n  }\n\n  return (\n    <Dialog open={open} onClose={handleClose}>\n      <ConfirmDialog\n        open={confirmOpen}\n        cancel={() => setConfirmOpen(false)}\n        confirm={handleLock}\n        source=\"lock\"\n        action=\"set\"\n      />\n      <DialogTitle>\n        {translate('resources.palms.dialogs.lock.title')}\n      </DialogTitle>\n      <DialogContent>\n        <TextField\n          variant=\"outlined\"\n          value={value}\n          onChange={(e) => setValue(e.target.value)}\n          fullWidth\n          error={error}\n          helperText={errorText}\n        />\n      </DialogContent>\n      <DialogActions>\n        <ButtonGroup>\n          <Button variant=\"contained\" onClick={() => setConfirmOpen(true)}>\n            {translate('ra.action.save')}\n          </Button>\n          <Button variant=\"contained\" onClick={handleClose}>\n            {translate('const.cancel')}\n          </Button>\n        </ButtonGroup>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","import {\n  Box,\n  Button, ButtonGroup, Checkbox, Divider, Table, TableBody, TableCell, TableContainer, TableHead,\n  TableRow\n} from '@material-ui/core'\nimport React, { useState } from 'react'\nimport {\n  DateField, EditButton, FunctionField, GET_LIST, List, Pagination, Record, ResourceContextProvider, sanitizeFetchType, Show,\n  ShowProps, Tab, TabbedShowLayout, TextField, TextInput,\n  TitleProps, useListContext, useMutation, useNotify, useQuery, useRefresh, useShowContext, useTranslate\n} from 'react-admin'\nimport { PalmDto } from '../../../core/dto/device/palm/palm.dto'\nimport { EntranceDto } from '../../../core/dto/entrance.dto'\nimport { EventDto } from '../../../core/dto/event/event.dto'\nimport { ResourceName } from '../../../core/ResourceName'\nimport { ConfirmDialog, DeviceIdModal, LockModal } from './PalmDialogs'\nimport { useHasAuthority } from '../../hooks/useHasAuthority'\nimport { Authority } from '../../../core/auth/Authority'\n\ninterface PalmTitleProps extends TitleProps {\n  record?: PalmDto\n}\n\nconst ShowTitle = (data: PalmTitleProps) => {\n  const {\n    record: palm,\n  } = data\n  const translate = useTranslate()\n  return (\n    <span>\n      {translate('resources.palms.titles.show')}: {palm?.id}. {palm?.name}\n    </span>\n  )\n}\n\nconst GeneralActions = () => {\n  const { record: palm } = useShowContext<PalmDto>()\n  const [deviceIdModalOpen, setDeviceIdModalOpen] = useState(false)\n  const [lockModalOpen, setLockModalOpen] = useState(false)\n  const [unlockDialogOpen, setUnlockDialogOpen] = useState(false)\n  const [resetIdDialogOpen, setResetIdDialogOpen] = useState(false)\n  const [mutate] = useMutation()\n  const refresh = useRefresh()\n  const translate = useTranslate()\n\n  const handleSetMobileDeviceId = async () => {\n    setResetIdDialogOpen(false)\n    await mutate(\n      {\n        type: sanitizeFetchType('resetMobileDeviceId'),\n        resource: ResourceName.PALMS,\n        payload: {\n          palmId: palm?.id,\n        },\n      },\n      { returnPromise: true },\n    )\n    refresh()\n  }\n\n  const handleSetMobileDeviceIdDialog = () => {\n    if (palm?.mobileDeviceId) setResetIdDialogOpen(true)\n    else setDeviceIdModalOpen(true)\n  }\n\n  const handleLock = async () => {\n    setUnlockDialogOpen(false)\n    await mutate(\n      {\n        type: sanitizeFetchType('unlock'),\n        resource: ResourceName.PALMS,\n        payload: {\n          palmId: palm?.id,\n        },\n      },\n      { returnPromise: true },\n    )\n    refresh()\n  }\n\n  const handleLockDialog = () => {\n    if (palm?.disabled) setUnlockDialogOpen(true)\n    else setLockModalOpen(true)\n  }\n\n  return (\n    <>\n      <Divider />\n      <DeviceIdModal\n        open={deviceIdModalOpen}\n        close={() => setDeviceIdModalOpen(false)}\n      />\n      <LockModal open={lockModalOpen} close={() => setLockModalOpen(false)} />\n      <ConfirmDialog\n        open={unlockDialogOpen}\n        confirm={handleLock}\n        source=\"lock\"\n        cancel={() => setUnlockDialogOpen(false)}\n        action=\"remove\"\n      />\n      <ConfirmDialog\n        open={resetIdDialogOpen}\n        confirm={handleSetMobileDeviceId}\n        source=\"deviceId\"\n        cancel={() => setResetIdDialogOpen(false)}\n        action=\"remove\"\n      />\n      <Box p={1} display=\"flex\" justifyContent=\"flex-end\">\n        <Button\n          variant=\"contained\"\n          onClick={handleSetMobileDeviceIdDialog}\n          color=\"primary\"\n          style={{ marginRight: '5px' }}\n        >\n          {palm?.mobileDeviceId\n            ? translate('resources.palms.actions.resetMobileDeviceId')\n            : translate('resources.palms.actions.setMobileDeviceId')}\n        </Button>\n        <Button\n          variant=\"contained\"\n          onClick={handleLockDialog}\n          color=\"primary\"\n          style={{ marginRight: '5px' }}\n        >\n          {palm?.disabled\n            ? translate('resources.palms.actions.unlock')\n            : translate('resources.palms.actions.lock')}\n        </Button>\n        <EditButton basePath=\"/palms\" record={palm} variant=\"contained\" />\n      </Box>\n    </>\n  )\n}\n\nconst Attachments = ({ source }: { source: 'EVENTS' | 'ENTRANCES' }) => {\n  const { data: attachedList, ids, filterValues, currentSort, total, refetch: refetchList } = useListContext<EventDto | EntranceDto>()\n  const { record: palm, refetch } = useShowContext<PalmDto>()\n  const { data: allFiltered, refetch: refetchAllFiltered } = useQuery({\n    type: sanitizeFetchType(GET_LIST),\n    resource: source.toLocaleLowerCase(),\n    payload: {\n      filter: {\n        ...filterValues\n      },\n      sort: currentSort || {\n        field: \"id\",\n        order: \"DESC\"\n      },\n      pagination: {\n        page: 1,\n        perPage: total || 1\n      }\n    }\n  })\n  const translate = useTranslate()\n  const [mutate] = useMutation()\n  const notify = useNotify()\n  const hasAuthority = useHasAuthority()\n\n  const isAttached = (attachmentId: number) => {\n    switch (source) {\n      case 'EVENTS':\n        return palm?.eventsIds?.includes(attachmentId)\n      case 'ENTRANCES':\n        return palm?.entrancesIds?.includes(attachmentId)\n      default:\n        notify(`Source '${source}' is not implemented yet.`)\n        return false\n    }\n  }\n\n  const handleAttach = async (id: number[]) => {\n    switch (source) {\n      case 'EVENTS':\n        await mutate(\n          {\n            type: sanitizeFetchType('attachEvents'),\n            resource: ResourceName.PALMS,\n            payload: {\n              palmId: palm?.id,\n              eventsIds: id,\n            },\n          },\n          { returnPromise: true },\n        )\n        break\n      case 'ENTRANCES':\n        await mutate(\n          {\n            type: sanitizeFetchType('attachEntrances'),\n            resource: ResourceName.PALMS,\n            payload: {\n              palmId: palm?.id,\n              entrancesIds: id,\n            },\n          },\n          { returnPromise: true },\n        )\n        break\n      default:\n        notify(`Source '${source}' is not implemented yet.`)\n    }\n    refetchList()\n    if (refetch){\n      refetch()\n    }\n  }\n\n  const handleDetach = async (id: number[]) => {\n    switch (source) {\n      case 'EVENTS':\n        await mutate(\n          {\n            type: sanitizeFetchType('detachEvents'),\n            resource: ResourceName.PALMS,\n            payload: {\n              palmId: palm?.id,\n              eventsIds: id,\n            },\n          },\n          { returnPromise: true },\n        )\n        break\n      case 'ENTRANCES':\n        await mutate(\n          {\n            type: sanitizeFetchType('detachEntrances'),\n            resource: ResourceName.PALMS,\n            payload: {\n              palmId: palm?.id,\n              entrancesIds: id,\n            },\n          },\n          { returnPromise: true },\n        )\n        break\n      default:\n        notify(`Source '${source}' is not implemented yet.`)\n    }\n    refetchList()\n    if (refetch){\n      refetch()\n    }\n  }\n\n  const handleAttachAll = () => {\n    refetchAllFiltered()\n    handleAttach(allFiltered.map((record: EventDto | EntranceDto) => record?.id))\n  }\n\n  const handleDetachAll = () => {\n    refetchAllFiltered()\n    handleDetach(allFiltered.map((record: EventDto | EntranceDto) => record?.id))\n  }\n\n  return (\n    <TableContainer>\n      <ButtonGroup>\n        <Button\n          variant=\"contained\"\n          disabled={source === 'EVENTS' && !hasAuthority(Authority.EDIT_EVENTS)}\n          onClick={() => handleAttachAll()}\n        >\n          {translate('resources.palms.actions.attachAll')}\n        </Button>\n        <Button\n          variant=\"contained\"\n          disabled={source === 'EVENTS' && !hasAuthority(Authority.EDIT_EVENTS)}\n          onClick={() => handleDetachAll()}\n        >\n          {translate('resources.palms.actions.detachAll')}\n        </Button>\n      </ButtonGroup>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>\n              {source === 'ENTRANCES'\n                ? translate('resources.palms.fields.attachment.note')\n                : translate(`resources.palms.fields.attachment.name`)}\n            </TableCell>\n            <TableCell style={{ width: '10%' }}>\n              {translate(`resources.palms.fields.attachment.attached`)}\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {ids.map((id) => (\n            <TableRow key={id}>\n              <TableCell>\n                {source === 'ENTRANCES' && (\n                  <TextField source=\"note\" record={attachedList[id]} />\n                )}\n                {source === 'EVENTS' && (\n                  <TextField source=\"name\" record={attachedList[id]} />\n                )}\n              </TableCell>\n              <TableCell>\n                <Checkbox\n                  disabled={source === 'EVENTS' && !hasAuthority(Authority.EDIT_EVENTS)}\n                  checked={isAttached(id as number)}\n                  onClick={\n                    isAttached(id as number)\n                      ? () => handleDetach([id as number])\n                      : () => handleAttach([id as number])\n                  }\n                />\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n\nconst PalmTabs = () => {\n  const translate = useTranslate()\n  const { record: palm, basePath } = useShowContext<PalmDto>()\n  const hasAuthority = useHasAuthority()\n\n  return (\n    <TabbedShowLayout>\n      <Tab label={translate('resources.palms.tabs.general')}>\n        <TextField label=\"ID\" source=\"id\" />\n        <TextField label=\"resources.palms.fields.name\" source=\"name\" />\n        <FunctionField\n          label=\"resources.palms.fields.isWatched\"\n          source=\"isWatched\"\n          render={(record: Record | undefined) =>\n            record?.isWatched ? translate('const.yes') : translate('const.no')\n          }\n        />\n        <DateField\n          label=\"resources.palms.fields.lastRefresh\"\n          source=\"lastRefresh\"\n          showTime\n          options={{ day: \"2-digit\", month: \"2-digit\", year: \"numeric\", hour: \"2-digit\", minute: \"2-digit\" }}\n        />\n        <FunctionField\n          label=\"resources.palms.fields.direction\"\n          source=\"direction\"\n          render={(record: Record | undefined) => translate(`resources.enums.deviceDirection.${record?.direction}`)}\n        />\n        <TextField\n          label=\"resources.palms.fields.categoryId\"\n          source=\"categoryId\"\n        />\n        {palm?.disabled && (\n          <TextField\n            label=\"resources.palms.fields.disabled\"\n            source=\"disabled\"\n          />\n        )}\n        <FunctionField\n          label=\"resources.palms.fields.onlineInfixCeck\"\n          source=\"onlineInfixCeck\"\n          render={(record: Record | undefined) =>\n            record?.onlineInfixCeck\n              ? translate('const.yes')\n              : translate('const.no')\n          }\n        />\n        <FunctionField\n          label=\"resources.palms.fields.multiplicity\"\n          source=\"multiplicity\"\n          render={(record: Record | undefined) => translate(`resources.enums.multiplicities.${record?.multiplicity}`)}\n        />\n        {palm?.mobileDeviceId && (\n          <TextField\n            label=\"resources.palms.fields.mobileDeviceId\"\n            source=\"mobileDeviceId\"\n          />\n        )}\n        <GeneralActions />\n      </Tab>\n      {hasAuthority(Authority.VIEW_EVENTS) && (\n        <Tab label={translate('resources.palms.tabs.events')}>\n          <ResourceContextProvider value={ResourceName.EVENTS}>\n            <List\n              basePath={basePath}\n              filter={{ palmId: palm?.id }}\n              exporter={false}\n              title=\" \"\n              filters={[<TextInput source=\"name\" alwaysOn />]}\n              sort={{ field: 'dateStart', order: 'DESC' }}\n              pagination={<Pagination rowsPerPageOptions={[10, 20, 50, 100]} />}\n              perPage={20}\n            >\n              <Attachments source=\"EVENTS\" />\n            </List>\n          </ResourceContextProvider>\n        </Tab>\n      )}\n      <Tab label={translate('resources.palms.tabs.entrances')}>\n        <ResourceContextProvider value={ResourceName.ENTRANCES}>\n          <List\n            basePath={basePath}\n            filter={{ palmId: palm?.id }}\n            exporter={false}\n            title=\" \"\n            filters={[<TextInput source=\"note\" alwaysOn />]}\n            pagination={<Pagination rowsPerPageOptions={[10, 20, 50, 100]} />}\n            perPage={20}\n          >\n            <Attachments source=\"ENTRANCES\" />\n          </List>\n        </ResourceContextProvider>\n      </Tab>\n    </TabbedShowLayout>\n  )\n}\n\nexport const PalmShow = (props: ShowProps) => (\n  <Show {...props} actions={false} title={<ShowTitle />}>\n    <PalmTabs />\n  </Show>\n)\n","import {\n  Edit,\n  EditProps,\n  SimpleForm,\n  TextField,\n  TextInput,\n  BooleanInput,\n  DateTimeInput,\n  SelectInput,\n  useTranslate,\n  Labeled,\n  useEditContext,\n  TitleProps,\n  Toolbar,\n  ToolbarProps,\n  SaveButton,\n  ShowButton\n} from 'react-admin'\nimport React from 'react'\nimport { Typography } from '@material-ui/core'\nimport { Cancel } from '@material-ui/icons'\nimport { DeviceDirection } from '../../../core/enum/DeviceDirection'\nimport { Multiplicities } from '../../../core/enum/Multiplicities'\nimport { PalmDto } from '../../../core/dto/device/palm/palm.dto'\n\ninterface PalmTitleProps extends TitleProps {\n  record?: PalmDto\n}\n\nconst EditTitle = (data: PalmTitleProps) => {\n  const {\n    record,\n  } = data\n  const translate = useTranslate()\n  return (\n    <span>\n      {translate('resources.palms.titles.edit')}: {record?.id}. {record?.name}{' '}\n    </span>\n  )\n}\n\nconst HidingField = ({ source }: { source: keyof PalmDto }) => {\n  const { record } = useEditContext<PalmDto>()\n  return (\n    <>\n      {record && record[source] && (\n        <Labeled label=\"resources.palms.fields.disabled\">\n          <Typography component=\"span\" color=\"textPrimary\">\n            {record[source]}\n          </Typography>\n        </Labeled>\n      )}\n    </>\n  )\n}\n\nconst EditToolbar = (props: ToolbarProps) => (\n  <Toolbar {...props}>\n    <SaveButton />\n    <ShowButton icon={<Cancel />} label=\"const.cancel\" />\n  </Toolbar>\n)\n\nexport const PalmEdit = (props: EditProps) => {\n  const translate = useTranslate()\n  return (\n    <Edit {...props} hasShow={false} title={<EditTitle />}>\n      <SimpleForm redirect=\"show\" toolbar={<EditToolbar />}>\n        <TextField source=\"id\" label=\"ID\" />\n        <TextInput source=\"name\" />\n        <BooleanInput source=\"isWatched\" />\n        <DateTimeInput source=\"lastRefresh\" />\n        <SelectInput\n          source=\"direction\"\n          choices={[\n            { id: DeviceDirection.IN, name: translate(`resources.enums.deviceDirection.IN`) },\n            { id: DeviceDirection.OUT, name: translate(`resources.enums.deviceDirection.OUT`) },\n            { id: DeviceDirection.INFO, name: translate(`resources.enums.deviceDirection.INFO`) }\n          ]}\n        />\n        <TextInput source=\"categoryId\" />\n        <HidingField source=\"disabled\" />\n        <BooleanInput source=\"onlineInfixCeck\" />\n        <SelectInput\n          source=\"multiplicity\"\n          choices={[\n            { id: Multiplicities.SINGLE, name: translate(`resources.enums.multiplicities.SINGLE`) },\n            { id: Multiplicities.MULTIPLE, name: translate(`resources.enums.multiplicities.MULTIPLE`) },\n            { id: Multiplicities.CHECK_ALL, name: translate(`resources.enums.multiplicities.CHECK_ALL`) }\n          ]}\n        />\n        <TextField source=\"mobileDeviceId\" />\n      </SimpleForm>\n    </Edit>\n  )\n}\n","export enum StanbyMode {\n  SENSOR = 'Sensor',\n  ALWAYS_ON = 'AlwaysOn',\n  ALWAYS_OFF = 'AlwaysOff'\n}","import React from 'react'\nimport { List, Datagrid, TextField, ListProps, Pagination, TextInput } from 'react-admin'\nimport { ResourceName } from '../../../core/ResourceName'\n\nexport const EngineList = (props: ListProps) => (\n  <List\n    {...props}\n    perPage={20}\n    pagination={<Pagination rowsPerPageOptions={[10, 20, 50]} />}\n    exporter={false}\n    filters={[\n      <TextInput source=\"name\" alwaysOn />,\n      <TextInput source=\"categoryId\" />\n    ]}\n  >\n    <>\n      <Datagrid\n        size=\"small\"\n        rowClick={(id) => `${ResourceName.ENGINES}/${id}/show`}\n      >\n        <TextField source=\"id\" label=\"ID\" />\n        <TextField source=\"name\" />\n        <TextField source=\"address\" />\n        <TextField source=\"categoryId\" sortable={false} />\n        <TextField source=\"disabled\" sortable={false} />\n      </Datagrid>\n    </>\n  </List>\n)\n","import {\n  Button, ButtonGroup, createStyles, Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle, makeStyles, MenuItem, Select, TextField, Theme\n} from '@material-ui/core'\nimport React, { useEffect, useState } from 'react'\nimport {\n  sanitizeFetchType, useMutation,\n  useRefresh, useShowContext, useTranslate\n} from 'react-admin'\nimport useStateRef from 'react-usestateref'\nimport { EngineDto } from '../../../core/dto/device/engine/engine.dto'\nimport { StanbyMode } from '../../../core/enum/StanbyMode'\nimport { ResourceName } from '../../../core/ResourceName'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    dialogProperty: {\n      marginBottom: theme.spacing(1)\n    }\n  })\n)\n\nexport const ConfirmDialog = ({\n  confirm,\n  cancel,\n  source,\n  open,\n  action,\n}: {\n  confirm: () => void\n  cancel: () => void\n  source: 'setStandbyMode' | 'lock' | 'setTSCanCredentials'\n  open: boolean\n  action: 'set' | 'remove'\n}) => {\n  const translate = useTranslate()\n  return (\n    <Dialog open={open}>\n      <DialogTitle>\n        {translate(`resources.engines.dialogs.confirm.${source}.${action}`)}\n      </DialogTitle>\n      <DialogActions>\n        <Button variant=\"contained\" onClick={confirm}>\n          {translate('ra.action.save')}\n        </Button>\n        <Button variant=\"contained\" onClick={cancel}>\n          {translate('const.cancel')}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nexport const SetTSCanCredentialsModal = ({\n  open,\n  close,\n}: {\n  open: boolean\n  close: () => void\n}) => {\n  const classes = useStyles()\n  const [loginValue, setLoginValue] = useState('')\n  const [loginError, setLoginError, loginErrorCurrentValue] = useStateRef(false)\n  const [loginErrorText, setLoginErrorText] = useState('')\n  const [passwordValue, setPasswordValue] = useState('')\n  const [passwordError, setPasswordError, passwordErrorCurrentValue] = useStateRef(false)\n  const [passwordErrorText, setPasswordErrorText] = useState('')\n  const [confirmOpen, setConfirmOpen] = useState(false)\n  const { record: engine } = useShowContext<EngineDto>()\n  const [mutate] = useMutation()\n  const refresh = useRefresh()\n  const translate = useTranslate()\n\n  const handleClose = () => {\n    setLoginValue('')\n    setPasswordValue('')\n    setLoginError(false)\n    setPasswordError(false)\n    setLoginErrorText('')\n    setPasswordErrorText('')\n    close()\n  }\n\n  const handleSetTSCanCredentials = async () => {\n    setConfirmOpen(false)\n    setLoginError(false)\n    setPasswordError(false)\n    setLoginErrorText('')\n    setPasswordErrorText('')\n    if (loginValue.replace(/\\s/g, '').length === 0) {\n      setLoginError(true)\n      setLoginErrorText(translate('resources.engines.dialogs.setTSCanCredentials.login.error-bad-string'))\n    } else if (loginValue.replace(/\\s/g, '').length !== loginValue.length) {\n      setLoginError(true)\n      setLoginErrorText(translate('resources.engines.dialogs.setTSCanCredentials.login.error-no-spaces'))\n    }\n    if (passwordValue.replace(/\\s/g, '').length === 0) {\n      setPasswordError(true)\n      setPasswordErrorText(translate('resources.engines.dialogs.setTSCanCredentials.password.error-bad-string'))\n    } else if (passwordValue.replace(/\\s/g, '').length !== passwordValue.length) {\n      setPasswordError(true)\n      setPasswordErrorText(translate('resources.engines.dialogs.setTSCanCredentials.password.error-no-spaces'))\n    }\n\n    if (!loginErrorCurrentValue.current && !passwordErrorCurrentValue.current) {\n      await mutate(\n        {\n          type: sanitizeFetchType('setTSCanCredentials'),\n          resource: ResourceName.ENGINES,\n          payload: {\n            engineId: engine?.id,\n            login: loginValue,\n            password: passwordValue\n          },\n        },\n        { returnPromise: true },\n      )\n      refresh()\n      handleClose()\n    }\n  }\n\n  return (\n    <Dialog open={open} onClose={handleClose}>\n      <ConfirmDialog\n        open={confirmOpen}\n        cancel={() => setConfirmOpen(false)}\n        confirm={handleSetTSCanCredentials}\n        source=\"setTSCanCredentials\"\n        action=\"set\"\n      />\n      <DialogTitle>\n        {translate('resources.engines.dialogs.setTSCanCredentials.title')}\n      </DialogTitle>\n      <DialogContent>\n        <TextField\n          className={classes.dialogProperty}\n          label={translate('resources.engines.dialogs.setTSCanCredentials.login.label')}\n          variant=\"outlined\"\n          value={loginValue}\n          onChange={(e) => setLoginValue(e.target.value)}\n          fullWidth\n          error={loginError}\n          helperText={loginErrorText}\n        />\n        <TextField\n          className={classes.dialogProperty}\n          label={translate('resources.engines.dialogs.setTSCanCredentials.password.label')}\n          variant=\"outlined\"\n          value={passwordValue}\n          onChange={(e) => setPasswordValue(e.target.value)}\n          fullWidth\n          type='password'\n          autoComplete=\"new-password\"\n          error={passwordError}\n          helperText={passwordErrorText}\n        />\n      </DialogContent>\n      <DialogActions>\n        <ButtonGroup>\n          <Button variant=\"contained\" onClick={() => setConfirmOpen(true)}>\n            {translate('ra.action.save')}\n          </Button>\n          <Button variant=\"contained\" onClick={handleClose}>\n            {translate('const.cancel')}\n          </Button>\n        </ButtonGroup>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nexport const SetStandbyModeModal = ({\n  open,\n  close,\n}: {\n  open: boolean\n  close: () => void\n}) => {\n  const classes = useStyles()\n  const [value, setValue] = useState('')\n  const [confirmOpen, setConfirmOpen] = useState(false)\n  const { record: engine } = useShowContext<EngineDto>()\n  const [mutate] = useMutation()\n  const refresh = useRefresh()\n  const translate = useTranslate()\n\n  const handleClose = () => {\n    setValue('')\n    close()\n  }\n\n  const handleSetStandbyMode = async () => {\n    setConfirmOpen(false)\n    await mutate(\n      {\n        type: sanitizeFetchType('setStandbyMode'),\n        resource: ResourceName.ENGINES,\n        payload: {\n          engineId: engine?.id,\n          stanbyMode: value,\n        },\n      },\n      { returnPromise: true },\n    )\n    setValue('')\n    refresh()\n    close()\n  }\n\n  useEffect(() => {\n    if (open && engine?.stanbyMode) {\n      setValue(engine?.stanbyMode as string)\n    }\n  }, [open, engine?.stanbyMode])\n\n  return (\n    <Dialog open={open} onClose={handleClose}>\n      <ConfirmDialog\n        open={confirmOpen}\n        cancel={() => setConfirmOpen(false)}\n        confirm={handleSetStandbyMode}\n        source=\"setStandbyMode\"\n        action=\"set\"\n      />\n      <DialogTitle>\n        {translate('resources.engines.dialogs.setStandbyMode.title')}\n      </DialogTitle>\n      <DialogContent>\n        <Select\n          className={classes.dialogProperty}\n          variant=\"outlined\"\n          value={value}\n          onChange={(e) => setValue(e.target.value as string)}\n          fullWidth>\n          <MenuItem value={StanbyMode.ALWAYS_ON}>{translate(`resources.enums.standbyMode.${StanbyMode.ALWAYS_ON}`)}</MenuItem>\n          <MenuItem value={StanbyMode.ALWAYS_OFF}>{translate(`resources.enums.standbyMode.${StanbyMode.ALWAYS_OFF}`)}</MenuItem>\n          <MenuItem value={StanbyMode.SENSOR}>{translate(`resources.enums.standbyMode.${StanbyMode.SENSOR}`)}</MenuItem>\n        </Select>\n      </DialogContent>\n      <DialogActions>\n        <ButtonGroup>\n          <Button variant=\"contained\" onClick={() => setConfirmOpen(true)}>\n            {translate('ra.action.save')}\n          </Button>\n          <Button variant=\"contained\" onClick={handleClose}>\n            {translate('const.cancel')}\n          </Button>\n        </ButtonGroup>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nexport const LockModal = ({\n  open,\n  close,\n}: {\n  open: boolean\n  close: () => void\n}) => {\n  const classes = useStyles()\n  const [value, setValue] = useState('')\n  const [error, setError] = useState(false)\n  const [errorText, setErrorText] = useState('')\n  const [confirmOpen, setConfirmOpen] = useState(false)\n  const { record: engine } = useShowContext<EngineDto>()\n  const [mutate] = useMutation()\n  const refresh = useRefresh()\n  const translate = useTranslate()\n\n  const handleClose = () => {\n    setValue('')\n    setError(false)\n    setErrorText('')\n    close()\n  }\n\n  const handleLock = async () => {\n    setConfirmOpen(false)\n    if (value.replace(/\\s/g, '').length === 0) {\n      setError(true)\n      setErrorText(translate('resources.engines.dialogs.lock.error-bad-string'))\n    } else if (value.replace(/\\s/g, '').length !== value.length) {\n      setError(true)\n      setErrorText(translate('resources.engines.dialogs.lock.error-no-spaces'))\n    } else {\n      await mutate(\n        {\n          type: sanitizeFetchType('lock'),\n          resource: ResourceName.ENGINES,\n          payload: {\n            engineId: engine?.id,\n            lockName: value,\n          },\n        },\n        { returnPromise: true },\n      )\n      handleClose()\n      refresh()\n    }\n  }\n\n  return (\n    <Dialog open={open} onClose={handleClose}>\n      <ConfirmDialog\n        open={confirmOpen}\n        cancel={() => setConfirmOpen(false)}\n        confirm={handleLock}\n        source=\"lock\"\n        action=\"set\"\n      />\n      <DialogTitle>\n        {translate('resources.engines.dialogs.lock.title')}\n      </DialogTitle>\n      <DialogContent>\n        <TextField\n          className={classes.dialogProperty}\n          variant=\"outlined\"\n          value={value}\n          onChange={(e) => setValue(e.target.value)}\n          fullWidth\n          error={error}\n          helperText={errorText}\n        />\n      </DialogContent>\n      <DialogActions>\n        <ButtonGroup>\n          <Button variant=\"contained\" onClick={() => setConfirmOpen(true)}>\n            {translate('ra.action.save')}\n          </Button>\n          <Button variant=\"contained\" onClick={handleClose}>\n            {translate('const.cancel')}\n          </Button>\n        </ButtonGroup>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","import {\n  Box,\n  Button, ButtonGroup, Checkbox, Divider, Table, TableBody, TableCell, TableContainer, TableHead,\n  TableRow\n} from '@material-ui/core'\nimport React, { useState } from 'react'\nimport {\n  DateField, EditButton, FunctionField, GET_LIST, List, Pagination, Record, ResourceContextProvider, sanitizeFetchType, Show,\n  ShowProps, Tab, TabbedShowLayout, TextField, TextInput,\n  TitleProps, useListContext, useMutation, useNotify, useQuery, useRefresh, useShowContext, useTranslate\n} from 'react-admin'\nimport { EngineDto } from '../../../core/dto/device/engine/engine.dto'\nimport { EntranceDto } from '../../../core/dto/entrance.dto'\nimport { EventDto } from '../../../core/dto/event/event.dto'\nimport { ResourceName } from '../../../core/ResourceName'\nimport { ConfirmDialog, LockModal, SetStandbyModeModal, SetTSCanCredentialsModal } from './EngineDialogs'\nimport { useHasAuthority } from '../../hooks/useHasAuthority'\nimport { Authority } from '../../../core/auth/Authority'\n\ninterface EngineTitleProps extends TitleProps {\n  record?: EngineDto\n}\n\nconst ShowTitle = (data: EngineTitleProps) => {\n  const {\n    record: engine,\n  } = data\n  const translate = useTranslate()\n  return (\n    <span>\n      {translate('resources.engines.titles.show')}: {engine?.id}. {engine?.name}\n    </span>\n  )\n}\n\nconst GeneralActions = () => {\n  const { record: engine } = useShowContext<EngineDto>()\n  const [lockModalOpen, setLockModalOpen] = useState(false)\n  const [unlockDialogOpen, setUnlockDialogOpen] = useState(false)\n  const [standbyModeModalOpen, setStandbyModeModalOpen] = useState(false)\n  const [removeTSCanCredentialsDialogOpen, setRemoveTSCanCredentialsDialogOpen] = useState(false)\n  const [tsCanCredentialsModalOpen, setTSCanCredentialsModalOpen] = useState(false)\n  const [mutate] = useMutation()\n  const refresh = useRefresh()\n  const translate = useTranslate()\n\n  const handleSetTSCanCredentialsDialog = () => {\n    setTSCanCredentialsModalOpen(true)\n  }\n\n  const handleRemoveTSCanCredentials = async () => {\n    setRemoveTSCanCredentialsDialogOpen(false)\n    await mutate(\n      {\n        type: sanitizeFetchType('removeTSCanCredentials'),\n        resource: ResourceName.ENGINES,\n        payload: {\n          engineId: engine?.id,\n        },\n      },\n      { returnPromise: true },\n    )\n    refresh()\n  }\n\n  const handleRemoveTSCanCredentialsDialog = () => {\n    setRemoveTSCanCredentialsDialogOpen(true)\n  }\n\n  const handleSetStandbyModeDialog = () => {\n    setStandbyModeModalOpen(true)\n  }\n\n  const handleLock = async () => {\n    setUnlockDialogOpen(false)\n    await mutate(\n      {\n        type: sanitizeFetchType('unlock'),\n        resource: ResourceName.ENGINES,\n        payload: {\n          engineId: engine?.id,\n        },\n      },\n      { returnPromise: true },\n    )\n    refresh()\n  }\n\n  const handleLockDialog = () => {\n    if (engine?.disabled) setUnlockDialogOpen(true)\n    else setLockModalOpen(true)\n  }\n\n  return (\n    <>\n      <Divider />\n      <SetTSCanCredentialsModal\n        open={tsCanCredentialsModalOpen}\n        close={() => setTSCanCredentialsModalOpen(false)}\n      />\n      <SetStandbyModeModal\n        open={standbyModeModalOpen}\n        close={() => setStandbyModeModalOpen(false)}\n      />\n      <LockModal open={lockModalOpen} close={() => setLockModalOpen(false)} />\n      <ConfirmDialog\n        open={unlockDialogOpen}\n        confirm={handleLock}\n        source=\"lock\"\n        cancel={() => setUnlockDialogOpen(false)}\n        action=\"remove\"\n      />\n      <ConfirmDialog\n        open={removeTSCanCredentialsDialogOpen}\n        confirm={handleRemoveTSCanCredentials}\n        source=\"setTSCanCredentials\"\n        cancel={() => setRemoveTSCanCredentialsDialogOpen(false)}\n        action=\"remove\"\n      />\n      <Box p={1} display=\"flex\" justifyContent=\"flex-end\">\n        <Button\n          variant=\"contained\"\n          onClick={handleSetTSCanCredentialsDialog}\n          color=\"primary\"\n          style={{ marginRight: '5px' }}\n        >\n          {translate('resources.engines.actions.setTSCanCredentials')}\n        </Button>\n        <Button\n          variant=\"contained\"\n          onClick={handleRemoveTSCanCredentialsDialog}\n          color=\"primary\"\n          style={{ marginRight: '5px' }}\n        >\n          {translate('resources.engines.actions.removeTSCanCredentials')}\n        </Button>\n        <Button\n          variant=\"contained\"\n          onClick={handleSetStandbyModeDialog}\n          color=\"primary\"\n          style={{ marginRight: '5px' }}\n        >\n          {translate('resources.engines.actions.setStandbyMode')}\n        </Button>\n        <Button\n          variant=\"contained\"\n          onClick={handleLockDialog}\n          color=\"primary\"\n          style={{ marginRight: '5px' }}\n        >\n          {engine?.disabled\n            ? translate('resources.engines.actions.unlock')\n            : translate('resources.engines.actions.lock')}\n        </Button>\n        <EditButton basePath=\"/engines\" record={engine} variant=\"contained\" />\n      </Box>\n    </>\n  )\n}\n\nconst Attachments = ({ source }: { source: 'EVENTS' | 'ENTRANCES' }) => {\n  const { data: attachedList, ids, filterValues, currentSort, total, refetch: refetchList } = useListContext<EventDto | EntranceDto>()\n  const { record: engine, refetch } = useShowContext<EngineDto>()\n  const { data: allFiltered, refetch: refetchAllFiltered } = useQuery({\n    type: sanitizeFetchType(GET_LIST),\n    resource: source.toLocaleLowerCase(),\n    payload: {\n      filter: {\n        ...filterValues\n      },\n      sort: currentSort || {\n        field: \"id\",\n        order: \"DESC\"\n      },\n      pagination: {\n        page: 1,\n        perPage: total || 1\n      }\n    }\n  })\n  const translate = useTranslate()\n  const [mutate] = useMutation()\n  const notify = useNotify()\n  const hasAuthority = useHasAuthority()\n\n  const isAttached = (attachmentId: number) => {\n    switch (source) {\n      case 'EVENTS':\n        return engine?.eventsIds?.includes(attachmentId)\n      case 'ENTRANCES':\n        return engine?.entrancesIds?.includes(attachmentId)\n      default:\n        notify(`Source '${source}' is not implemented yet.`)\n        return false\n    }\n  }\n\n  const handleAttach = async (idsToAttach: number[]) => {\n    switch (source) {\n      case 'EVENTS':\n        await mutate(\n          {\n            type: sanitizeFetchType('attachEvents'),\n            resource: ResourceName.ENGINES,\n            payload: {\n              engineId: engine?.id,\n              eventsIds: idsToAttach,\n            },\n          },\n          { returnPromise: true },\n        )\n        break\n      case 'ENTRANCES':\n        await mutate(\n          {\n            type: sanitizeFetchType('attachEntrances'),\n            resource: ResourceName.ENGINES,\n            payload: {\n              engineId: engine?.id,\n              entrancesIds: idsToAttach,\n            },\n          },\n          { returnPromise: true },\n        )\n        break\n      default:\n        notify(`Source '${source}' is not implemented yet.`)\n    }\n    refetchList()\n    if (refetch) {\n      refetch()\n    }\n  }\n\n  const handleDetach = async (idsToDetach: number[]) => {\n    switch (source) {\n      case 'EVENTS':\n        await mutate(\n          {\n            type: sanitizeFetchType('detachEvents'),\n            resource: ResourceName.ENGINES,\n            payload: {\n              engineId: engine?.id,\n              eventsIds: idsToDetach,\n            },\n          },\n          { returnPromise: true },\n        )\n        break\n      case 'ENTRANCES':\n        await mutate(\n          {\n            type: sanitizeFetchType('detachEntrances'),\n            resource: ResourceName.ENGINES,\n            payload: {\n              engineId: engine?.id,\n              entrancesIds: idsToDetach,\n            },\n          },\n          { returnPromise: true },\n        )\n        break\n      default:\n        notify(`Source '${source}' is not implemented yet.`)\n    }\n    refetchList()\n    if (refetch) {\n      refetch()\n    }\n  }\n\n  const handleAttachAll = () => {\n    refetchAllFiltered()\n    handleAttach(allFiltered.map((record: EventDto | EntranceDto) => record?.id))\n  }\n\n  const handleDetachAll = () => {\n    refetchAllFiltered()\n    handleDetach(allFiltered.map((record: EventDto | EntranceDto) => record?.id))\n  }\n\n  return (\n    <TableContainer>\n      <ButtonGroup>\n        <Button variant='contained'\n                disabled={source === 'EVENTS' && !hasAuthority(Authority.EDIT_EVENTS)}\n                onClick={() => handleAttachAll()}>\n          {translate('resources.engines.actions.attachAll')}\n        </Button>\n        <Button variant='contained'\n                disabled={source === 'EVENTS' && !hasAuthority(Authority.EDIT_EVENTS)}\n                onClick={() => handleDetachAll()}>\n          {translate('resources.engines.actions.detachAll')}\n        </Button>\n      </ButtonGroup>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>\n              {source === 'ENTRANCES'\n                ? translate('resources.engines.fields.attachment.note')\n                : translate(`resources.engines.fields.attachment.name`)}\n            </TableCell>\n            <TableCell style={{ width: '10%' }}>\n              {translate(`resources.engines.fields.attachment.attached`)}\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {ids.map((id) => (\n            <TableRow key={id}>\n              <TableCell>\n                {source === 'ENTRANCES' && (\n                  <TextField source=\"note\" record={attachedList[id]} />\n                )}\n                {source === 'EVENTS' && (\n                  <TextField source=\"name\" record={attachedList[id]} />\n                )}\n              </TableCell>\n              <TableCell>\n                <Checkbox\n                  disabled={source === 'EVENTS' && !hasAuthority(Authority.EDIT_EVENTS)}\n                  checked={isAttached(id as number)}\n                  onClick={\n                    isAttached(id as number)\n                      ? () => handleDetach([id as number])\n                      : () => handleAttach([id as number])\n                  }\n                />\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n\nconst EngineTabs = () => {\n  const translate = useTranslate()\n  const { record: engine, basePath } = useShowContext<EngineDto>()\n  const hasAuthority = useHasAuthority()\n\n  return (\n    <TabbedShowLayout>\n      <Tab label={translate('resources.engines.tabs.general')}>\n        <TextField label=\"ID\" source=\"id\" />\n        <TextField label=\"resources.engines.fields.name\" source=\"name\" />\n        <FunctionField\n          label=\"resources.engines.fields.isWatched\"\n          source=\"isWatched\"\n          render={(record: Record | undefined) =>\n            record?.isWatched ? translate('const.yes') : translate('const.no')\n          }\n        />\n        <DateField\n          label=\"resources.engines.fields.lastRefresh\"\n          source=\"lastRefresh\"\n          showTime\n          options={{ day: \"2-digit\", month: \"2-digit\", year: \"numeric\", hour: \"2-digit\", minute: \"2-digit\" }}\n        />\n        <TextField\n          label=\"resources.engines.fields.address\"\n          source=\"address\"\n        />\n        <FunctionField\n          label=\"resources.engines.fields.direction\"\n          source=\"direction\"\n          render={(record: Record | undefined) => translate(`resources.enums.deviceDirection.${record?.direction}`)}\n        />\n        <TextField\n          label=\"resources.engines.fields.categoryId\"\n          source=\"categoryId\"\n        />\n        {engine?.disabled && (\n          <TextField\n            label=\"resources.engines.fields.disabled\"\n            source=\"disabled\"\n          />\n        )}\n        <FunctionField\n          label=\"resources.engines.fields.stanbyMode\"\n          source=\"stanbyMode\"\n          render={(record: Record | undefined) => translate(`resources.enums.standbyMode.${record?.stanbyMode}`)}\n        />\n        <FunctionField\n          label=\"resources.engines.fields.onlineInfixCeck\"\n          source=\"onlineInfixCeck\"\n          render={(record: Record | undefined) =>\n            record?.onlineInfixCeck\n              ? translate('const.yes')\n              : translate('const.no')\n          }\n        />\n        <FunctionField\n          label=\"resources.engines.fields.multiplicity\"\n          source=\"multiplicity\"\n          render={(record: Record | undefined) => translate(`resources.enums.multiplicities.${record?.multiplicity}`)}\n        />\n        <GeneralActions />\n      </Tab>\n      {hasAuthority(Authority.VIEW_EVENTS) && (\n        <Tab label={translate('resources.engines.tabs.events')}>\n          <ResourceContextProvider value={ResourceName.EVENTS}>\n            <List\n              basePath={basePath}\n              filter={{ engineId: engine?.id }}\n              exporter={false}\n              title=\" \"\n              filters={[<TextInput source=\"name\" alwaysOn />]}\n              sort={{ field: 'dateStart', order: 'DESC' }}\n              pagination={<Pagination rowsPerPageOptions={[10, 20, 50, 100]} />}\n              perPage={20}\n            >\n              <Attachments source=\"EVENTS\" />\n            </List>\n          </ResourceContextProvider>\n        </Tab>\n      )}\n      <Tab label={translate('resources.engines.tabs.entrances')}>\n        <ResourceContextProvider value={ResourceName.ENTRANCES}>\n          <List\n            basePath={basePath}\n            filter={{ engineId: engine?.id }}\n            exporter={false}\n            title=\" \"\n            filters={[<TextInput source=\"note\" alwaysOn />]}\n            pagination={<Pagination rowsPerPageOptions={[10, 20, 50, 100]} />}\n            perPage={20}\n          >\n            <Attachments source=\"ENTRANCES\" />\n          </List>\n        </ResourceContextProvider>\n      </Tab>\n    </TabbedShowLayout>\n  )\n}\n\nexport const EngineShow = (props: ShowProps) => (\n  <Show {...props} actions={false} title={<ShowTitle />}>\n    <EngineTabs />\n  </Show>\n)\n","import { Typography } from '@material-ui/core'\nimport { Cancel } from '@material-ui/icons'\nimport React from 'react'\nimport {\n  BooleanInput,\n  DateTimeInput, Edit,\n  EditProps, FunctionField, Labeled, Record, SaveButton, SelectInput, ShowButton, SimpleForm,\n  TextField,\n  TextInput, TitleProps,\n  Toolbar,\n  ToolbarProps, useEditContext, useTranslate\n} from 'react-admin'\nimport { EngineDto } from '../../../core/dto/device/engine/engine.dto'\nimport { DeviceDirection } from '../../../core/enum/DeviceDirection'\nimport { Multiplicities } from '../../../core/enum/Multiplicities'\n\ninterface EngineTitleProps extends TitleProps {\n  record?: EngineDto\n}\n\nconst EditTitle = (data: EngineTitleProps) => {\n  const {\n    record,\n  } = data\n  const translate = useTranslate()\n  return (\n    <span>\n      {translate('resources.engines.titles.edit')}: {record?.id}. {record?.name}{' '}\n    </span>\n  )\n}\n\nconst HidingField = ({ source }: { source: keyof EngineDto }) => {\n  const { record } = useEditContext<EngineDto>()\n  return (\n    <>\n      {record && record[source] && (\n        <Labeled label=\"resources.engines.fields.disabled\">\n          <Typography component=\"span\" color=\"textPrimary\">\n            {record[source]}\n          </Typography>\n        </Labeled>\n      )}\n    </>\n  )\n}\n\nconst EditToolbar = (props: ToolbarProps) => (\n  <Toolbar {...props}>\n    <SaveButton />\n    <ShowButton icon={<Cancel />} label=\"const.cancel\" />\n  </Toolbar>\n)\n\nexport const EngineEdit = (props: EditProps) => {\n  const translate = useTranslate()\n  return (\n    <Edit {...props} hasShow={false} title={<EditTitle />}>\n      <SimpleForm redirect=\"show\" toolbar={<EditToolbar />}>\n        <TextField source=\"id\" label=\"ID\" />\n        <TextInput source=\"name\" />\n        <BooleanInput source=\"isWatched\" />\n        <DateTimeInput source=\"lastRefresh\" />\n        <TextInput source=\"address\" />\n        <SelectInput\n          source=\"direction\"\n          choices={[\n            { id: DeviceDirection.IN, name: translate(`resources.enums.deviceDirection.IN`) },\n            { id: DeviceDirection.OUT, name: translate(`resources.enums.deviceDirection.OUT`) },\n            { id: DeviceDirection.INFO, name: translate(`resources.enums.deviceDirection.INFO`) }\n          ]}\n        />\n        <TextInput source=\"categoryId\" />\n        <FunctionField source=\"stanbyMode\" render={(record: Record | undefined) => translate(`resources.enums.standbyMode.${record?.stanbyMode}`)} />\n        <HidingField source=\"disabled\" />\n        <BooleanInput source=\"onlineInfixCeck\" />\n        <SelectInput\n          source=\"multiplicity\"\n          choices={[\n            { id: Multiplicities.SINGLE, name: translate(`resources.enums.multiplicities.SINGLE`) },\n            { id: Multiplicities.MULTIPLE, name: translate(`resources.enums.multiplicities.MULTIPLE`) },\n            { id: Multiplicities.CHECK_ALL, name: translate(`resources.enums.multiplicities.CHECK_ALL`) }\n          ]}\n        />\n      </SimpleForm>\n    </Edit>\n  )\n}\n\n\n\n","import {\n  Create, CreateProps, TextInput, DateTimeInput, useTranslate, BooleanInput, required,\n  ResourceContextProvider, TabbedForm, useListContext, TextField,\n  useQuery, sanitizeFetchType, GET_LIST, List, Pagination, FormTab\n} from \"react-admin\"\nimport React from \"react\"\nimport { useField } from \"react-final-form\"\nimport { ButtonGroup, TableContainer, Button, Table, TableHead, TableRow, TableCell, TableBody, Checkbox } from \"@material-ui/core\"\nimport { EventDto } from \"../../core/dto/event/event.dto\"\nimport { ResourceName } from \"../../core/ResourceName\"\nimport { ObjectDto } from \"../../core/dto/object.dto\"\n\nconst CreateTitle = () => {\n  const translate = useTranslate()\n  return (\n    <span>{translate('resources.events.titles.create')}</span>\n  )\n}\n\nconst ObjectsInput = ({ source }: { source: keyof EventDto }) => {\n  const translate = useTranslate()\n\n  const {\n    input: { onChange, value }\n  } = useField(source)\n\n  const { data, ids, filterValues, currentSort, total } = useListContext<ObjectDto>()\n\n  const { data: allFiltered, refetch: refetchAllFiltered } = useQuery({\n    type: sanitizeFetchType(GET_LIST),\n    resource: ResourceName.OBJECTS,\n    payload: {\n      filter: {\n        ...filterValues\n      },\n      sort: currentSort || {\n        field: \"id\",\n        order: \"DESC\"\n      },\n      pagination: {\n        page: 1,\n        perPage: total || 1\n      }\n    }\n  })\n\n  const handleAttach = (objectIds: number[]) => {\n    onChange([...value, ...objectIds])\n  }\n\n  const handleDetach = (objectIds: number[]) => {\n    onChange(value.filter((objectId: number) => !(objectIds.includes(objectId))))\n  }\n\n  const handleAttachAll = () => {\n    refetchAllFiltered()\n    handleAttach(allFiltered)\n  }\n\n  const handleDetachAll = () => {\n    refetchAllFiltered()\n    handleDetach(allFiltered)\n  }\n\n  const isAttached = (id: number) => (\n    value.includes(id)\n  )\n\n  return (\n    <TableContainer>\n      <ButtonGroup>\n        <Button variant=\"contained\" onClick={() => handleAttachAll()}>\n          {translate('resources.events.actions.attachAll')}</Button>\n        <Button variant=\"contained\" onClick={() => handleDetachAll()}>\n          {translate('resources.events.actions.detachAll')}</Button>\n      </ButtonGroup>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>\n              {translate(`resources.events.fields.attachment.name`)}\n            </TableCell>\n            <TableCell style={{ width: \"10%\" }}>\n              {translate(`resources.events.fields.attachment.attached`)}\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {ids.map((id) => (\n            <TableRow key={id}>\n              <TableCell>\n                <TextField source=\"name\" record={data[id]} />\n              </TableCell>\n              <TableCell>\n                <Checkbox\n                  checked={isAttached(id as number)}\n                  onClick={\n                    isAttached(id as number)\n                      ? () => handleDetach([id as number])\n                      : () => handleAttach([id as number])\n                  }\n                />\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n\nexport const EventCreate = (props: CreateProps) => {\n  const { basePath } = props\n  const translate = useTranslate()\n  return (\n    <Create {...props} title={<CreateTitle />}>\n      <TabbedForm redirect=\"show\">\n        <FormTab label={translate(\"resources.events.tabs.general\")}>\n          <TextInput source=\"name\" isRequired validate={required()} />\n          <DateTimeInput source=\"dateStart\" isRequired validate={required()} />\n          <DateTimeInput source=\"dateEnd\" isRequired validate={required()} />\n          <TextInput source=\"externalId\" />\n          <TextInput source=\"infix\" />\n          <BooleanInput source=\"active\" />\n        </FormTab>\n        <FormTab label={translate(\"resources.events.tabs.objects\")}>\n          <ResourceContextProvider value={ResourceName.OBJECTS}>\n            <List basePath={basePath} title=\" \" actions={false}\n              perPage={20} pagination={<Pagination rowsPerPageOptions={[10, 20, 50]} />}>\n              <ObjectsInput source=\"objectsIds\" />\n            </List>\n          </ResourceContextProvider>\n        </FormTab>\n      </TabbedForm>\n    </Create>\n  )\n}","import ViewComfyIcon from '@material-ui/icons/ViewComfy'\nimport PersonIcon from '@material-ui/icons/Person'\nimport React from 'react'\nimport { Resource } from 'react-admin'\nimport ReceiptIcon from '@material-ui/icons/Receipt'\nimport { ResourceName } from '../core/ResourceName'\nimport { TicketInfoList } from './ticket-info/TicketInfoList'\nimport { TicketDetailsView } from './ticket-details/TicketDetailsView'\nimport { LogList } from './logs/LogList'\nimport { OverallViewList } from './stats/overall-view/OverallViewList'\nimport { OverallView } from './stats/overall-view/OverallView'\nimport { AccessUsingsList } from './ticket-details/accesses/AccessUsingsList'\nimport { EventList } from './events/EventList'\nimport { EventShow } from './events/EventShow'\nimport { EventEdit } from './events/EventEdit'\nimport { CustomerInfoList } from './customer-info/CustomerInfoList'\nimport { CustomerDetailsView } from './customer-details/CustomerDetailsView'\nimport { PalmList } from './devices/palms/PalmList'\nimport { PalmShow } from './devices/palms/PalmShow'\nimport { PalmEdit } from './devices/palms/PalmEdit'\nimport { Authority } from '../core/auth/Authority'\nimport { hasAuthorityWithGivenPermissions as hasAuthority } from './hooks/useHasAuthority'\nimport { EngineList } from './devices/engines/EngineList'\nimport { EngineShow } from './devices/engines/EngineShow'\nimport { EngineEdit } from './devices/engines/EngineEdit'\nimport { EventCreate } from './events/EventCreate'\n\nexport const generateResourcesBasedOnPermissions = (\n  permissions: Set<string>,\n) => [\n  <Resource\n    icon={ReceiptIcon}\n    name={ResourceName.TICKET_INFO}\n    list={TicketInfoList}\n  />,\n  <Resource name={ResourceName.TICKET_DETAILS} show={TicketDetailsView} />,\n  <Resource name={ResourceName.ACCESS_USINGS} list={AccessUsingsList} />,\n  <Resource\n    icon={PersonIcon}\n    name={ResourceName.CUSTOMER_INFO}\n    list={CustomerInfoList}\n  />,\n  <Resource name={ResourceName.CUSTOMER_DETAILS} show={CustomerDetailsView} />,\n  hasAuthority(Authority.VIEW_LOGS, permissions) && (\n    <Resource name={ResourceName.LOGS} list={LogList} />\n  ),\n  hasAuthority(Authority.VIEW_EVENTS, permissions) && (\n    <Resource\n      name={ResourceName.EVENTS}\n      list={EventList}\n      show={EventShow}\n      edit={hasAuthority(Authority.EDIT_EVENTS, permissions) ? EventEdit : undefined}\n      create={hasAuthority(Authority.CREATE_EVENTS, permissions) ? EventCreate : undefined}\n    />\n  ),\n  hasAuthority(Authority.VIEW_STATS_OVERALL_VIEW, permissions) && (\n    <Resource\n      icon={ViewComfyIcon}\n      name={ResourceName.STATS_OVERALL_VIEW_LIST}\n      list={OverallViewList}\n    />\n  ),\n  hasAuthority(Authority.VIEW_STATS_OVERALL_VIEW, permissions) && (\n    <Resource\n      icon={ViewComfyIcon}\n      name={ResourceName.STATS_OVERALL_VIEW}\n      show={OverallView}\n    />\n  ),\n  <Resource\n    name={ResourceName.PALMS}\n    list={PalmList}\n    show={PalmShow}\n    edit={PalmEdit}\n  />,\n  <Resource name={ResourceName.ACCESS_DATES} />,\n  <Resource name={ResourceName.ACCESSES} />,\n  <Resource name={ResourceName.BOOKINGS} />,\n  <Resource name={ResourceName.COMPANIES} />,\n  <Resource\n    name={ResourceName.ENGINES}\n    list={EngineList}\n    show={EngineShow}\n    edit={EngineEdit}\n  />,\n  <Resource name={ResourceName.ENTRANCES} />,\n  <Resource name={ResourceName.OBJECTS} />,\n  <Resource name={ResourceName.TICKET_LOGS} />,\n]\n","import {\n  DashboardAction,\n  DashboardItem,\n  DashboardState,\n  INACTIVE_COMPONENTS_KEY,\n} from './dashboard'\nimport { UPDATE_DASHBOARD } from '../constants/reducer.actions'\n\nconst initialState: DashboardState['dashboard'] = {\n  inactiveComponents:\n    (localStorage\n      .getItem(INACTIVE_COMPONENTS_KEY)\n      ?.split(',') as DashboardItem[]) || [],\n}\n\nconst save = (state: DashboardState['dashboard']) => {\n  const { inactiveComponents } = state\n  if (inactiveComponents.length) {\n    localStorage.setItem(INACTIVE_COMPONENTS_KEY, inactiveComponents.join())\n  } else {\n    localStorage.removeItem(INACTIVE_COMPONENTS_KEY)\n  }\n  return state\n}\n\nexport const dashboardReducer = (\n  state = initialState,\n  { type, payload: dashboardItem }: DashboardAction,\n): DashboardState['dashboard'] => {\n  if (type === UPDATE_DASHBOARD) {\n    const { inactiveComponents } = state\n    if (inactiveComponents.includes(dashboardItem)) {\n      return save({\n        ...state,\n        inactiveComponents: inactiveComponents.filter(\n          (v) => v !== dashboardItem,\n        ),\n      })\n    }\n    return save({\n      ...state,\n      inactiveComponents: [...inactiveComponents, dashboardItem],\n    })\n  }\n  return state\n}\n","import React from 'react'\nimport { Admin } from 'react-admin'\nimport themeReducer from './core/common/theme.reducer'\nimport { providersFactory } from './core/providers.factory'\nimport { AppLayout } from './main/common/AppLayout'\nimport { Dashboard } from './main/Dashboard'\nimport routes from './main/common/routes'\nimport { generateResourcesBasedOnPermissions } from './main/Resources'\nimport { dashboardReducer } from './core/common/dashboard.reducer'\n\nconst App = () => {\n  const { authProvider, dataProvider, i18nProvider } = providersFactory(\n    process.env.NODE_ENV,\n  )\n  return (\n    <Admin\n      dashboard={Dashboard}\n      authProvider={authProvider}\n      dataProvider={dataProvider}\n      i18nProvider={i18nProvider}\n      customReducers={{\n        theme: themeReducer,\n        dashboard: dashboardReducer,\n      }}\n      customRoutes={routes}\n      layout={AppLayout}\n    >\n      {generateResourcesBasedOnPermissions}\n    </Admin>\n  )\n}\n\nexport default App\n","import { AuthProvider, DataProvider, I18nProvider, LegacyDataProvider } from 'react-admin'\nimport fakeDataProvider from './fake/fake-data.provider'\nimport fakeAuthProvider from './fake/providers/fake-auth.provider'\nimport authProvider from './auth/auth.provider'\nimport dataProvider from './data.provider'\nimport i18nProvider from './i18n.provider'\nimport { withSynchronizedPermissions } from './auth/withSyncPermissions'\n\ninterface Providers {\n  readonly authProvider: AuthProvider\n  readonly dataProvider: DataProvider | LegacyDataProvider\n  readonly i18nProvider: I18nProvider\n}\n\nexport const providersFactory = (\n  env: 'development' | 'test' | 'production',\n): Providers => {\n  switch (env) {\n    case 'production':\n      return {\n        authProvider: withSynchronizedPermissions(authProvider),\n        dataProvider,\n        i18nProvider,\n      }\n    case 'development':\n      return {\n        authProvider,\n        dataProvider,\n        i18nProvider,\n      }\n    default:\n      return {\n        authProvider: fakeAuthProvider,\n        dataProvider: fakeDataProvider,\n        i18nProvider,\n      }\n  }\n}\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import { initReactI18next } from 'react-i18next'\nimport i18n from 'i18next'\nimport plTranslation from './locales/pl/translation.json'\nimport enTranslation from './locales/en/translation.json'\n\nconst identity = localStorage.getItem('username')\nconst lng = identity && localStorage.getItem(`${identity}.lng`)\n\ni18n.use(initReactI18next)\n  .init({\n    lng: lng || 'pl',\n    fallbackLng: 'pl',\n    debug: false,\n    interpolation: {\n      escapeValue: false, // not needed for react as it escapes by default\n    },\n    resources: {\n      pl: { translation: plTranslation },\n      en: { translation: enTranslation },\n    },\n  })\n\nexport default i18n\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport './i18n.init'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}