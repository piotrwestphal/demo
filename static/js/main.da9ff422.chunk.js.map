{"version":3,"sources":["core/constants/reducer.actions.ts","core/common/theme.reducer.ts","core/ResourceName.ts","core/enum/TicketType.ts","core/enum/BookingType.ts","core/enum/BookingDisabledOption.ts","core/enum/CustomerDocumentType.ts","core/enum/Gender.ts","core/fake/providers/fake-access-usings.provider.ts","core/fake/providers/fake-bookings.provider.ts","core/fake/providers/fake-logs.provider.ts","core/fake/providers/fake-stats-overall-view-list.provider.ts","core/fake/providers/fake-stats-overall-view.provider.ts","core/fake/providers/fake-ticket-details.provider.ts","core/enum/AccessActivePeriodStartingOptions.ts","core/enum/AccessBonuses.ts","core/enum/DayOfWeek.ts","core/fake/providers/fake-ticket-info.provider.ts","core/fake/providers/fake-tickets.provider.ts","core/fake/providers/fake-accesses.provider.ts","core/enum/EventStatus.ts","core/fake/providers/fake-events.provider.ts","core/enum/DeviceDirection.ts","core/fake/providers/fake-customer-details.provider.ts","core/fake/providers/fake-customer-info.provider.ts","core/fake/providers/fake-access-dates.provider.ts","core/fake/providers/fake-companies.provider.ts","core/fake/providers/fake-objects.provider.ts","core/fake/providers/fake-palms.provider.ts","core/fake/providers/fake-engines.provider.ts","core/fake/providers/fake-entrances.provider.ts","core/fake/providers/fake-variants.provider.ts","core/fake/providers/fake-user.provider.ts","core/fake/fake-data.provider.ts","core/fake/providers/fake-auth.provider.ts","core/common/header.parser.ts","core/common/fetch.utils.ts","core/api-urls.ts","core/auth/auth.provider.ts","core/access-usings/access-usings-sort.mapper.ts","core/auth/Authority.ts","core/access-usings/access-usings-filter.mapper.ts","core/access-usings/access-usings.provider.ts","core/bookings/booking-filter.mapper.ts","core/bookings/booking-sort.mapper.ts","core/common/get-by-conditions.utils.ts","core/bookings/bookings.provider.ts","core/logs/log-filter.mapper.ts","core/logs/log-sort.mapper.ts","core/logs/extended-logs.mapper.ts","core/logs/extended-logs.provider.ts","core/stats/overall-view/overall-view-list-sort.mapper.ts","core/stats/overall-view/overall-view-list.mapper.ts","core/stats/overall-view/overall-view-list.provider.ts","core/stats/overall-view/overall-view.mapper.ts","core/stats/overall-view/overall-view.provider.ts","core/common/condition.builder.ts","core/common/mapper.utils.ts","core/ticket-details/ticket-details.mapper.ts","core/ticket-details/ticket-details.provider.ts","core/ticket-info/ticket-info.mapper.ts","core/ticket-info/ticket-info-sort.mapper.ts","core/ticket-info/ticket-info-filter.mapper.ts","core/ticket-info/ticket-info.provider.ts","core/tickets/tickets.provider.ts","core/accesses/access-filter.mapper.ts","core/accesses/access-sort.mapper.ts","core/accesses/access.provider.ts","core/events/event-filter.mapper.ts","core/events/event-sort.mapper.ts","core/events/event.provider.ts","core/customer-details/customer-details.provider.ts","core/customer-info/customer-info-filter.mapper.ts","core/customer-info/customer-info-sort.mapper.ts","core/customer-info/customer-info.provider.ts","core/access-dates/access-dates-filter.mapper.ts","core/access-dates/access-dates-sort.mapper.ts","core/access-dates/access-dates.provider.ts","core/companies/company-filter.mapper.ts","core/companies/company-sort.mapper.ts","core/companies/companies.provider.ts","core/objects/object-filter.mapper.ts","core/objects/object-sort.mapper.ts","core/objects/objects.provider.ts","core/devices/palms/palm-filter.mapper.ts","core/devices/palms/palm-sort.mapper.ts","core/devices/palms/palms.provider.ts","core/devices/engines/engine-filter.mapper.ts","core/devices/engines/engine-sort.mapper.ts","core/devices/engines/engines.provider.ts","core/entrances/entrance-filter.mapper.ts","core/entrances/entrance-sort.mapper.ts","core/entrances/entrance.provider.ts","core/variants/variants-filter.mapper.ts","core/variants/variants-sort.mapper.ts","core/variants/variants.provider.ts","core/users/user.provider.ts","core/data.provider.ts","core/i18n.provider.ts","core/auth/withSyncPermissions.ts","app.theme.ts","assets/icons/EngineDevice.js","main/common/AppSubmenu.tsx","main/common/AppMenu.tsx","main/common/AppLayout.tsx","main/common/SearchInput.tsx","main/common/FindCustomerByInfo.tsx","main/common/FindUserByTicket.tsx","core/auth/authority.mapper.ts","core/common/dashboard.ts","main/hooks/useHasAuthority.ts","main/events/EventList.tsx","main/logs/DateFilterInput.tsx","main/logs/LogsComponents.ts","main/logs/LogList.tsx","core/common/visual.utils.ts","main/Dashboard.tsx","main/common/Configuration.tsx","main/common/routes.tsx","core/common/date-time.ts","main/common/SelectWithPaginationInput.tsx","main/configuration/accesses/AccessCreate.tsx","main/configuration/accesses/AccessEdit.tsx","main/common/QuickFilter.tsx","main/configuration/accesses/AccessList.tsx","main/common/CheckboxField.tsx","main/common/customized-mui-components/Button.tsx","core/enum/Multiplicities.ts","main/configuration/accesses/AccessShow.tsx","main/configuration/variants/VariantCreate.tsx","main/configuration/variants/VariantEdit.tsx","main/configuration/variants/VariantList.tsx","main/configuration/variants/VariantShow.tsx","main/common/Pagination.tsx","main/customer-details/CustomerBookingsList.tsx","main/customer-details/CustomerDetailsView.tsx","core/common/mask.utils.ts","main/common/MaskField.tsx","main/customer-info/CustomerInfoList.tsx","main/devices/engines/EngineEdit.tsx","core/enum/StanbyMode.ts","main/devices/engines/EngineList.tsx","main/devices/engines/EngineDialogs.tsx","core/ticket-details/toggle-button.ts","main/devices/engines/EngineShow.tsx","main/devices/palms/PalmEdit.tsx","main/devices/palms/PalmList.tsx","main/devices/palms/PalmDialogs.tsx","main/devices/palms/PalmShow.tsx","main/events/EventCreate.tsx","main/events/EventEdit.tsx","main/events/EventShow.tsx","main/stats/overall-view/OverallView.tsx","main/stats/overall-view/OverallViewList.tsx","main/ticket-details/accesses/AccessUsingsList.tsx","core/ticket-details/ticket-details-values.mapper.ts","main/ticket-details/TicketDetailsHeader.tsx","main/ticket-details/TicketDetailsTicketsField.tsx","core/ticket-details/toggle-access-button.reducer.ts","main/ticket-details/ToggleAccessButton.tsx","core/ticket-details/toggle-ticket-button.reducer.ts","main/ticket-details/ToggleTicketButton.tsx","main/ticket-details/accesses/AccessList.tsx","main/ticket-details/TicketDetailsComponents.tsx","main/ticket-details/accesses/AccessDatesList.tsx","main/ticket-details/accesses/AccessShow.tsx","main/ticket-details/TicketDetailsView.tsx","main/ticket-info/TicketInfoList.tsx","main/Resources.tsx","core/common/dashboard.reducer.ts","App.tsx","core/providers.factory.ts","reportWebVitals.ts","i18n.init.ts","index.tsx"],"names":["CHANGE_THEME","UPDATE_DASHBOARD","identity","localStorage","getItem","initialState","darkMode","themeReducer","ResourceName","state","action","type","setItem","TicketType","BookingType","BookingDisabledOption","CustomerDocumentType","Gender","provider","updateMany","resource","params","a","Promise","resolve","data","create","id","update","fakeLogs","date","ticketCode","bookingId","deviceName","text","color","getList","total","length","fakeStatsOverallViewList","name","dateStart","dateEnd","eventName","capacity","sold","entered","objects","getOne","found","find","v","reject","Error","AccessActivePeriodStartingOptions","AccessBonuses","DayOfWeek","fakeTicketDetailsList","firstname","lastname","pesel","variantName","accessesIds","bookingType","NORMAL","activeFrom","activeTo","tickets","ticketType","K","accessUsings","createdAt","M","modifiedAt","bookingDisabled","STORNO","company","birthdate","documentType","ID_CARD","documentNumber","nationality","gender","MALE","seatId","blockId","accesses","objectName","tribuneName","blockName","rowNumber","fakeTicketInfoList","eventId","eventDate","fakeTickets","active","accessUsingsIds","EventStatus","fakeAccesses","bonus","N","entranceId","allowReenter","multipleEntry","multiple","usePriority","isTicketUnlockedWithNextDay","releaseTime","releaseDayOfWeek","Friday","releaseDayOfMonth","delay","activePeriod","activePeriodStartingFrom","FIRST_USE","variantsIds","accessDatesIds","createdById","modifiedById","DeviceDirection","fakeEvents","status","INACTIVE","externalId","infix","objectsIds","fakeCustomerDetailsList","bookingsIds","c","fakeCustomerInfoList","fakeCompanies","usersIds","eventsIds","fakeObjects","tribunesIds","fakePalms","fakeEngines","fakeEntrances","fakeVariants","fakeUsers","dataProviders","ACCESS_DATES","fakeAccessDatesProvider","ACCESSES","fakeAccessesProvider","ACCESS_USINGS","fakeAccessUsingsProvider","BOOKINGS","fakeBookingsProvider","COMPANIES","fakeCompaniesProvider","CUSTOMER_DETAILS","fakeCustomerDetailsProvider","CUSTOMER_INFO","fakeCustomerInfoProvider","ENGINES","fakeEnginesProvider","ENTRANCES","fakeEntrancesProvider","EVENTS","fakeEventsProvider","LOGS","fakeLogsProvider","OBJECTS","fakeObjectsProvider","PALMS","fakePalmsProvider","STATS_OVERALL_VIEW","fakeStatsOverallViewProvider","STATS_OVERALL_VIEW_LIST","fakeStatsOverallViewListProvider","TICKETS","fakeTicketsProvider","TICKET_INFO","fakeTicketInfoProvider","TICKET_DETAILS","fakeTicketDetailsProvider","TICKET_LOGS","USERS","fakeUsersProvider","VARIANTS","fakeVariantsProvider","fetchType","sanitizeFetchType","authProvider","login","logout","checkError","checkAuth","getPermissions","Set","getIdentity","fullName","contentRangeParser","headerValue","split","rangeFrom","summarySecondPartSplit","rangeTo","parseInt","getToken","baseHeaders","authHeaders","token","Authorization","getWithHeaders","url","headers","fetchUtils","fetchJson","method","Headers","then","json","postWithHeaders","body","JSON","stringify","get","baseUrl","path","getWithToken","getByConditions","getWithPagination","range","post","patch","put","API_V1","process","AUTH_URL","ROLES_URL","ACCESSES_URL","BOOKINGS_URL","CUSTOMERS_URL","EVENTS_URL","EXTENDED_LOGS_URL","TICKETS_URL","VARIANTS_URL","SEATS_URL","BLOCKS_URL","TRIBUNES_URL","OBJECTS_URL","ENGINES_URL","PALMS_URL","ADMINISTRATOR_URL","ENTRANCES_URL","username","password","roleDtos","roles","map","r","join","removeItem","Authority","mapping","direction","ticketId","accessId","lambdaParameter","value","getFilterParams","filter","Object","keys","entries","key","getFilterMapper","mapper","reduce","p","ids","pendingUpdates","auId","req","all","au","ticketIds","accessIds","request","flatMap","Date","toISOString","IN","verifierDeviceId","sort","field","order","pagination","page","perPage","filterParams","toString","queryParams","push","pathParams","tId","ticket","filterMapper","mapSortBookingParam","filterParamsComposer","filterValues","val","queryParamsComposer","sortMapper","booking","event","mapToExtendedLog","locale","scheme","device","logEntry","language","includes","partialValues","partialFilterValues","extendedLogs","dto","mapToEventOverallView","overallViewList","calculateCapacity","seats","bookings","b","mapToTribuneOverallView","tribune","blocks","enteredBookingIds","blocksIds","block","filteredSeats","s","filteredBookingIds","concat","filteredBookings","book","filteredEnteredBookingIds","enteredBookingId","filteredEnteredBookings","enteredBookings","soldNormal","enteredNormal","soldAbo","ABO","enteredAbo","soldInfix","INFIX","enteredInfix","soldService","SERVICE","enteredService","soldPoints","POINTS","enteredPoints","mapToBlockOverallView","mapToOverallView","selectedEvent","tribunes","o","object","filteredTribunes","t","objectId","filteredBlocks","filteredSeatIds","seatsIds","tribuneId","mapToObjectOverallView","pendingSelectedEvent","pendingObjects","pendingTribunes","pendingBlocks","pendingSeats","bookingsCondition","pendingBookings","pendingEnteredBookings","overallViewData","buildFilterByIdsCondition","firstId","prev","curr","toMapById","values","Map","toUniqueValues","Array","from","mapToTicketDetails","seat","disabled","accessUsingById","mapToTicket","rowAlias","seatNumber","numberAlias","fetchTicketsWithAccessUsings","accessUsingIds","customerId","variantId","pendingCustomer","pendingEvent","pendingVariant","pendingTicketsWithAccessUsings","ticketsIds","getBlock","customer","variant","mapToTicketBaseInfoList","customers","events","bookingById","customerById","eventById","mapToTicketBaseInfo","getByUniqueIds","uniqueIds","bookingIds","customerIds","eventIds","pendingCustomers","pendingEvents","ticketBaseInfoList","filterByTicketCodeCondition","filterVariantId","otherValues","mapSortAccessParam","previousData","undefined","created","attachVariants","accessVariants","detachVariants","filterVerifierDeviceId","mapSortEventParam","getTime","getTimezoneOffset","toJSON","getMany","activate","deactivate","getCompaniesList","companies","attachCompanies","eventCompanies","detachCompanies","attachObjects","eventObjects","detachObjects","getDevicesList","devices","attachDevices","eventDevices","detachDevices","info","q","filterEventId","mapSortCompanyParam","mapSortObjectParam","categoryId","mapSortPalmParam","isWatched","onlineInfixCeck","multiplicity","lock","palmId","lockName","unlock","setMobileDeviceId","mobileDeviceId","resetMobileDeviceId","attachEvents","detachEvents","attachEntrances","entrancesIds","detachEntrances","address","mapSortEngineParam","engineEvents","engineEntrances","setTSCanCredentials","removeTSCanCredentials","setStandbyMode","note","mapSortEntranceParam","getManyReference","filterAccessId","mapSortVariantParam","attachAccesses","variantAccesses","detachAccesses","accessDatesProvider","accessesProvider","accessUsingsProvider","bookingsProvider","companiesProvider","customersDetailsProvider","customersInfoProvider","engineProvider","entrancesProvider","eventsProvider","logsProvider","objectsProvider","palmProvider","statsOverallViewProvider","statsOverallViewListProvider","ticketsProvider","ticketInfoProvider","ticketDetailsProvider","usersProvider","variantsProvider","translate","options","i18n","changeLocale","changeLanguage","getLocale","areRolesOutOfSync","local","remote","size","every","has","validateRoles","dataProvider","rolesFromRemote","rolesFromLocalStorage","console","error","withSynchronizedPermissions","Proxy","target","overriddenTheme","defaultTheme","typography","fontFamily","body1","fontWeight","body2","h5","overrides","RaFilter","form","margin","LightTheme","palette","primary","deepPurple","secondary","green","DarkTheme","light","main","dark","contrastText","createSvgIcon","React","d","useStyles","makeStyles","theme","icon","minWidth","spacing","sidebarIsOpen","transition","paddingLeft","sidebarIsClosed","SubMenu","props","handleToggle","isOpen","children","sidebarOpen","useSelector","admin","ui","classes","header","MenuItem","button","onClick","ListItemIcon","className","ExpandMore","Typography","Tooltip","title","placement","Collapse","in","timeout","unmountOnExit","component","disablePadding","open","width","closed","AppMenu","avRes","useState","menuStats","menuDevices","menuConfiguration","setOpen","availableResources","getResources","useTranslate","menu","style","userSelect","DashboardMenuItem","MenuItemLink","to","primaryText","leftIcon","Receipt","Person","List","Event","ViewComfy","Sort","transform","anyDeviceResourcesAvailable","VideoLabel","PhoneAndroid","EngineDevice","anyConfigurationResourcesAvailable","SettingsApplications","ExitToApp","Assessment","flex","textOverflow","whiteSpace","overflow","AppUserMenu","UserMenu","Settings","AppTopBar","AppBar","userMenu","AppLayout","Layout","appBar","RoundInputBox","withStyles","root","borderRadius","marginLeft","display","flexDirection","border","borderColor","Box","RoundInputBoxBtn","background","borderTopLeftRadius","borderBottomLeftRadius","Button","RoundInputBoxFC","marginTop","FormControl","SearchInput","label","onValue","inputError","setInputError","inputValue","setInputValue","handleClick","Input","disableUnderline","placeholder","onInput","onKeyDown","ev","FormHelperText","FindCustomerByInfo","history","useHistory","notify","useNotify","setError","useMutation","mutate","loading","fetchCustomers","useCallback","GET_LIST","payload","returnPromise","replace","onlyCustomer","pathname","search","message","CardHeader","CardContent","FindUserByTicket","fetchTickets","onlyTicket","DashboardItem","VIEW_LOGS","VIEW_STATS_OVERALL_VIEW","VIEW_EVENTS","EDIT_EVENTS","CREATE_EVENTS","VIEW_USERS","EDIT_USERS","CREATE_USERS","VIEW_ROLES","EDIT_ROLES","CREATE_ROLES","VIEW_COMPANIES","EDIT_COMPANIES","CREATE_COMPANIES","VIEW_ACCESSES","EDIT_ACCESSES","CREATE_ACCESSES","VIEW_VARIANTS","EDIT_VARIANTS","CREATE_VARIANTS","hasAuthorityWithGivenPermissions","authority","permissions","permissionSet","mapAuthorityToRequiredPermissions","some","reqPerms","useHasAuthority","usePermissions","loaded","actionColumnsWithoutPadding","padding","LastEvents","hasAuthority","Datagrid","FunctionField","render","record","toLowerCase","Link","IconButton","EventDateField","source","toDateString","DateField","getHours","getMinutes","showTime","EventGrid","compactMode","useListContext","useTheme","smallScreen","useMediaQuery","breakpoints","down","rowClick","TextField","EventFilters","Filter","TextInput","alwaysOn","EventList","actions","filters","exporter","Pagination","rowsPerPageOptions","createStyles","container","justifyContent","verticalAlign","marginBottom","DateFilterInput","defaultFromDate","now","setHours","defaultToDate","dateFrom","setDateFrom","dateTo","setDateTo","useField","onChange","input","meta","touched","convertedDate","substring","defaultValue","e","parse","helperText","alignSelf","VCenterGrid","Grid","VHCenterGrid","alignItems","BookingButton","xSmallScreen","ShowButton","basePath","LogExpand","noBooking","item","xs","Divider","LogBody","rowStyle","expand","TableBody","DatagridRow","hour","minute","second","LogHeader","DatagridHeader","sortable","LogFilters","SelectInput","choices","LogList","listProps","useLocale","bulkActionButtons","isRowExpandable","hexcolor","substr","INACTIVE_COMPONENTS_KEY","textAlign","letterSpacing","lastLogs","TicketFinder","Card","CustomerFinder","LastLogs","ResourceContextProvider","Dashboard","inactiveComponents","dashboard","isItemActive","inactiveItems","titleTypographyProps","sm","TICKET_FINDER","LAST_EVENTS","CUSTOMER_FINDER","LAST_LOGS","select","compsContainer","DashboardItemSwitch","dashboardItem","dispatch","useDispatch","Paper","FormControlLabel","control","Switch","checked","labelPlacement","DashboardCustomization","Configuration","setLocale","useSetLocale","Title","ButtonGroup","Select","exact","formatTime","SelectWithPaginationInput","allowEmpty","createLabel","createValue","emptyText","emptyValue","format","onBlur","onCreate","onFocus","optionText","optionValue","paginationProps","translateChoice","validate","rest","warning","useChoices","getChoiceText","getChoiceValue","useInput","isRequired","submitError","renderEmptyItemOption","_","renderMenuItemOption","choice","handleChange","newItem","useSupportCreateSuggestion","getCreateItem","handleChangeWithCreateSupport","createElement","ResettableTextField","FieldTitle","clearAlwaysVisible","InputHelperText","createItem","renderCreateItem","defaultProps","disableValue","validateAccessCreate","errors","Number","isNaN","CreateTitle","AccessCreate","Create","SimpleForm","redirect","required","ReferenceInput","reference","BooleanInput","defaultChecked","DateTimeInput","validateAccessEdit","EditTitle","EditToolbar","Toolbar","SaveButton","Cancel","AccessEdit","Edit","hasShow","toolbar","QuickFilter","Chip","AccessFilters","AccessList","hasCreate","sanitizeFieldRestProps","addLabel","cellClassName","formClassName","fullWidth","headerClassName","linkType","link","refetch","sortBy","sortByOrder","CheckboxField","checkBySource","useRecordContext","Checkbox","labelRightIcon","paddingRight","smallIcon","fontSize","mediumIcon","largeIcon","alignIcon","useSmallVersion","useSmallVersionBreakpoint","isXSmall","restProps","handleSubmit","handleSubmitWithRedirect","invalid","onSave","pristine","saving","submitOnEnter","undoable","classnames","Multiplicities","ShowTitle","GeneralActions","access","useShowContext","EditButton","RelationTab","mode","handleAttach","idsToAttach","handleDetach","idsToDetach","isAttached","relatedRecordId","Actions","refetchList","getFilteredRelatedRecordsIds","handleAttachAll","handleDetachAll","TopToolbar","AttachedCheckbox","listFilters","filterDefaultValues","listSort","tableLayout","listColumns","AccessTabs","TabbedShowLayout","Tab","ReferenceField","NO_LIMIT","AccessShow","Show","validateVariantCreate","VariantCreate","validateVariantEdit","VariantEdit","VariantsFilters","VariantList","VariantTabs","VariantShow","MobilePostPagination","setPage","setPerPage","nbPages","Math","ceil","elevation","height","BookingList","up","CustomerBookingsView","paddingY","CustomerLogsView","CustomerTabs","bookingPresent","useMemo","CustomerDetailsView","maskMiddlePart","word","threshold","firstChars","lastChars","slice","restCharsLength","repeat","MaskField","properRecord","CustomerInfoGrid","smallDevice","m","paragraph","CustomerInfoFilters","CustomerInfoList","StanbyMode","validateEngineEdit","HidingField","useEditContext","Labeled","EngineEdit","day","month","year","OUT","INFO","stanbyMode","SINGLE","MULTIPLE","CHECK_ALL","EngineGrid","EngineList","ToggleType","dialogProperty","ConfirmDialog","confirm","cancel","Dialog","DialogTitle","DialogActions","SetTSCanCredentialsModal","close","loginValue","setLoginValue","useStateRef","loginError","setLoginError","loginErrorCurrentValue","loginErrorText","setLoginErrorText","passwordValue","setPasswordValue","passwordError","setPasswordError","passwordErrorCurrentValue","passwordErrorText","setPasswordErrorText","confirmOpen","setConfirmOpen","engine","refresh","useRefresh","handleClose","handleSetTSCanCredentials","current","engineId","onClose","DialogContent","autoComplete","SetStandbyModeModal","setValue","handleSetStandbyMode","useEffect","ALWAYS_ON","ALWAYS_OFF","SENSOR","LockModal","errorText","setErrorText","handleLock","lockModalOpen","setLockModalOpen","unlockDialogOpen","setUnlockDialogOpen","standbyModeModalOpen","setStandbyModeModalOpen","removeTSCanCredentialsDialogOpen","setRemoveTSCanCredentialsDialogOpen","tsCanCredentialsModalOpen","setTSCanCredentialsModalOpen","handleRemoveTSCanCredentials","EngineTabs","EngineShow","validatePalmEdit","PalmEdit","PalmGrid","PalmList","DeviceIdModal","palm","handleSetMobileDeviceId","deviceIdModalOpen","setDeviceIdModalOpen","resetIdDialogOpen","setResetIdDialogOpen","PalmTabs","PalmShow","validateEventCreate","RelationInputTab","sourceProperty","relationsIds","CreateToolbar","ListButton","EventCreate","TabbedForm","FormTab","validateEventEdit","EventEdit","handleActivation","IN_TRANSITION","ACTIVE","marginRight","getRelationsFetchType","useQuery","enabled","relationsDto","refetchRelationsIds","companiesIds","verifierDevicesIds","FilterButton","EventTabs","EventShow","noBottomBorder","borderBottom","quarterWidth","ViewTitle","description","BlockGrid","firstColumnEntries","secondColumnEntries","thirdColumnEntries","TableContainer","paddingTop","Table","TableRow","TableCell","TribuneGrid","TribuneHeader","TableHead","ArrayField","ObjectGrid","OverallView","OverallViewGrid","OverallViewFilters","OverallViewList","AccessUsingsExpand","AccessUsingsBody","patchAccess","UPDATE_MANY","Power","PowerOff","AccessUsingsHeader","AccessUsingsList","bookingTypeMapping","ticketTypeMapping","Z","P","U","R","mapFromBookingType","mapFromTicketType","TicketDetailsHeader","ticketBox","ticketField","TicketDetailsTicketsField","fields","mappedRecord","blockMutation","ticketDetails","CREATE","unblockMutation","activeAccessUsingIds","blockAccessButtonInitialState","DISABLED","toggleAccessButtonReducer","BLOCK","mutateQuery","UNBLOCK","common","white","ToggleAccessButton","useReducer","mutationLoading","query","blockTicketButtonInitialState","toggleTicketButtonReducer","mutateParam","ADMIN","ToggleTicketButton","UPDATE","AccessGrid","setSelected","cursor","hover","FullWidthButton","ButtonBase","BackButton","writingMode","textOrientation","BackButtonText","AccessDateExpand","timeFrom","dayOfWeek","timeTo","AccessDatesList","TabButton","selected","change","AccessDetails","entrance","useQueryWithStore","GET_ONE","createdBy","modifiedBy","AccessDates","AccessUses","selectedTab","setSelectedTab","handleTabChange","prop","MappedChipField","mappedValue","AccessDetailsView","selectedAccess","setSelectedAccess","Hidden","xlDown","ProfileDetailsView","StatusButtons","TicketMainView","TicketLogsView","TicketDetailsView","TicketInfoExpand","TicketInfoGrid","wordBreak","TicketInfoFilters","TicketInfoList","generateResourcesBasedOnPermissions","Resource","ReceiptIcon","list","show","PersonIcon","edit","ViewComfyIcon","save","dashboardReducer","App","env","i18nProvider","fakeAuthProvider","fakeDataProvider","providersFactory","Admin","customReducers","customRoutes","routes","layout","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","lng","use","initReactI18next","init","fallbackLng","debug","interpolation","escapeValue","resources","pl","translation","plTranslation","en","enTranslation","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.da9ff422.chunk.js","sourcesContent":["export const CHANGE_THEME = 'change-theme'\nexport const UPDATE_DASHBOARD = 'dashboard/update'\n","import { Action } from 'redux'\nimport { CHANGE_THEME } from '../constants/reducer.actions'\n\nconst identity = localStorage.getItem('username')\n\nexport type ThemeState = {\n  theme: {\n    darkMode: 'light' | 'dark'\n  }\n}\n\nconst initialState = {\n  darkMode: localStorage.getItem(`${identity}.darkMode`) === 'dark' ? 'dark' : 'light',\n}\n\nfunction themeReducer(state = initialState, action: Action<any>) {\n    if (action.type === CHANGE_THEME) {\n        if (state.darkMode === 'dark') localStorage.setItem(`${identity}.darkMode`, 'light')\n        else localStorage.setItem(`${identity}.darkMode`, 'dark')\n        return {\n            ...state,\n            darkMode: state.darkMode === 'dark' ? 'light' : 'dark'\n        }\n    }\n    return state\n}\n\nexport default themeReducer","export enum ResourceName {\n  ACCESS_DATES = 'access-dates',\n  ACCESSES = 'accesses',\n  ACCESS_USINGS = 'access-usings',\n  BOOKINGS = 'bookings',\n  ENGINES = 'engines',\n  ENTRANCES = 'entrances',\n  EVENTS = 'events',\n  COMPANIES = 'companies',\n  CUSTOMER_DETAILS = 'customer-details',\n  CUSTOMER_INFO = 'customer-info',\n  LOGS = 'logs',\n  OBJECTS = 'objects',\n  PALMS = 'palms',\n  STATS_OVERALL_VIEW_LIST = \"stats-overall-view-list\",\n  STATS_OVERALL_VIEW = \"stats-overall-view\",\n  TICKETS = 'tickets',\n  TICKET_DETAILS = 'ticket-details',\n  TICKET_INFO = 'ticket-info',\n  TICKET_LOGS = 'ticket-logs',\n  USERS = 'users',\n  VARIANTS = 'variants'\n}\n","export enum TicketType {\n  K = 'K',\n  M = 'M',\n  Z = 'Z',\n  N = 'N',\n  P = 'P',\n  U = 'U',\n  R = 'R',\n}\n","export enum BookingType {\n  NORMAL = 'NORMAL',\n  ABO = 'ABO',\n  INFIX = 'INFIX',\n  SERVICE = 'SERVICE',\n  POINTS = 'POINTS',\n}\n","export enum BookingDisabledOption {\n  ADMIN = 'ADMIN',\n  BAN = 'BAN',\n  STORNO = 'STORNO',\n  MISTAKE = 'MISTAKE',\n}\n","export enum CustomerDocumentType {\n  OTHER = 'OTHER',\n  ID_CARD = 'ID_CARD',\n  PASSPORT = 'PASSPORT',\n  STUDENT_CARD = 'STUDENT_CARD',\n  SCHOOL_ID = 'SCHOOL_ID',\n  DRIVING_LICENSE = 'DRIVING_LICENSE',\n}\n","export enum Gender {\n  MALE = 'MALE',\n  FEMALE = 'FEMALE',\n}\n","import { CreateResult, DataProvider, UpdateManyResult } from 'react-admin'\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  updateMany: async (resource, params): Promise<UpdateManyResult> =>\n    Promise.resolve({\n      data: [1],\n    }),\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  create: async (resource, params): Promise<CreateResult<unknown>> =>\n    Promise.resolve({\n      data: { id: 1 },\n    }),\n} as DataProvider\n\nexport default provider\n","import { DataProvider, UpdateResult } from 'react-admin'\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  update: async (resource, params): Promise<UpdateResult<unknown>> =>\n    Promise.resolve({\n      data: { id: 1 },\n    }),\n} as DataProvider\n\nexport default provider\n","import { DataProvider } from 'react-admin'\nimport { ExtendedLog } from '../../logs/extended-log'\n\nconst fakeLogs: ExtendedLog[] = [\n  {\n    id: 1,\n    date: '2021-07-15T08:50:27.2054',\n    ticketCode: 'A',\n    bookingId: 52815,\n    deviceName: 'Device name',\n    text: 'MF',\n    color: 'transparent',\n  },\n  {\n    id: 2,\n    date: '2021-07-15T08:50:27.2054',\n    ticketCode: 'A',\n    bookingId: 52816,\n    deviceName: 'Device name',\n    text: 'MF',\n    color: 'transparent',\n  },\n  {\n    id: 3,\n    date: '2021-07-15T08:50:27.2054',\n    ticketCode: 'A',\n    bookingId: 1111,\n    deviceName: 'Device name',\n    text: 'MF',\n    color: 'transparent',\n  },\n  {\n    id: 4,\n    date: '2021-07-15T08:50:27.2054',\n    ticketCode: 'A',\n    bookingId: 11112,\n    deviceName: 'Device name',\n    text: 'MF',\n    color: 'transparent',\n  },\n  {\n    id: 5,\n    date: '2021-07-15T08:50:27.2054',\n    ticketCode: 'A',\n    bookingId: 16612,\n    deviceName: 'Device name',\n    text: 'MF',\n    color: 'transparent',\n  },\n  {\n    id: 6,\n    date: '2021-07-15T08:50:27.2054',\n    ticketCode: 'A',\n    bookingId: 167782,\n    deviceName: 'Device name',\n    text: 'MF',\n    color: 'transparent',\n  },\n  {\n    id: 7,\n    date: '2021-07-15T08:50:27.2054',\n    ticketCode: 'A',\n    bookingId: 122782,\n    deviceName: 'Device name',\n    text: 'MF',\n    color: 'transparent',\n  },\n  {\n    id: 8,\n    date: '2021-07-15T08:50:27.2054',\n    ticketCode: 'A',\n    bookingId: 189782,\n    deviceName: 'Device name',\n    text: 'MF',\n    color: 'transparent',\n  },\n  {\n    id: 9,\n    date: '2021-07-15T08:50:27.2054',\n    ticketCode: 'A',\n    bookingId: 183332,\n    deviceName: 'Device name',\n    text: 'MF',\n    color: 'transparent',\n  },\n  {\n    id: 10,\n    date: '2021-07-15T08:50:27.2054',\n    ticketCode: 'A',\n    bookingId: 656565,\n    deviceName: 'Device name',\n    text: 'MF',\n    color: 'transparent',\n  },\n]\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getList: (resource, params) =>\n    Promise.resolve({ data: fakeLogs, total: fakeLogs.length }),\n} as DataProvider\n\nexport default provider\n","import { DataProvider } from 'react-admin'\nimport { EventOverallView } from '../../stats/overall-view/event-overall-view'\n\nconst fakeStatsOverallViewList: EventOverallView[] = [\n  {\n    id: 1,\n    name: \"\",\n    dateStart: '2021-07-13T15:11:06.771267',\n    dateEnd: '2021-07-13T15:11:06.771267'\n  },\n  {\n    id: 2,\n    name: \"\",\n    dateStart: '2021-07-13T15:11:06.771267',\n    dateEnd: '2021-07-13T15:11:06.771267'\n  },\n  {\n    id: 3,\n    name: \"\",\n    dateStart: '2021-07-13T15:11:06.771267',\n    dateEnd: '2021-07-13T15:11:06.771267'\n  },\n  {\n    id: 4,\n    name: \"\",\n    dateStart: '2021-07-13T15:11:06.771267',\n    dateEnd: '2021-07-13T15:11:06.771267'\n  },\n  {\n    id: 5,\n    name: \"\",\n    dateStart: '2021-07-13T15:11:06.771267',\n    dateEnd: '2021-07-13T15:11:06.771267'\n  },\n]\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getList: (resource, params) =>\n    Promise.resolve({ data: fakeStatsOverallViewList, total: fakeStatsOverallViewList.length }),\n} as DataProvider\n\nexport default provider","import { DataProvider } from 'react-admin'\nimport { DateTime } from '../../common/date-time'\nimport { OverallView } from '../../stats/overall-view/overall-view'\n\nconst fakeStatsOverallViewList: OverallView[] = [\n  {\n    id: 1,\n    eventName: \"\",\n    capacity: 0,\n    sold: 0,\n    entered: 0,\n    objects: [],\n    date: \"01-01-2021T00:00.00\" as DateTime\n  },\n  {\n    id: 2,\n    eventName: \"\",\n    capacity: 0,\n    sold: 0,\n    entered: 0,\n    objects: [],\n    date: \"01-01-2021T00:00.00\" as DateTime\n  },\n  {\n    id: 3,\n    eventName: \"\",\n    capacity: 0,\n    sold: 0,\n    entered: 0,\n    objects: [],\n    date: \"01-01-2021T00:00.00\" as DateTime\n  },\n  {\n    id: 4,\n    eventName: \"\",\n    capacity: 0,\n    sold: 0,\n    entered: 0,\n    objects: [],\n    date: \"01-01-2021T00:00.00\" as DateTime\n  },\n  {\n    id: 5,\n    eventName: \"\",\n    capacity: 0,\n    sold: 0,\n    entered: 0,\n    objects: [],\n    date: \"01-01-2021T00:00.00\" as DateTime\n  },\n]\n\nconst provider = {\n  getOne: (resource, { id }: { id: string }) => {\n    const found = fakeStatsOverallViewList.find((v) => `${v.id}` === id)\n    if (found) {\n      return Promise.resolve({\n        data: found,\n      })\n    }\n    return Promise.reject(new Error())\n  },\n} as DataProvider\n\nexport default provider","import { DataProvider } from 'react-admin'\nimport { TicketType } from '../../enum/TicketType'\nimport { TicketDetails } from '../../ticket-details/ticket-details'\nimport { BookingType } from '../../enum/BookingType'\nimport { BookingDisabledOption } from '../../enum/BookingDisabledOption'\nimport { CustomerDocumentType } from '../../enum/CustomerDocumentType'\nimport { Gender } from '../../enum/Gender'\n\nconst fakeTicketDetailsList: TicketDetails[] = [\n  {\n    id: 1,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    accessesIds: [10],\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56424,\n        ticketCode: '060000020917',\n        ticketType: TicketType.K,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n      {\n        id: 56425,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.M,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    bookingDisabled: BookingDisabledOption.STORNO,\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    documentNumber: \"12345678901\",\n    nationality: \"Poland\",\n    gender: Gender.MALE,\n    seatId: null,\n    blockId: null,\n    accesses: [],\n    objectName: null,\n    tribuneName: null,\n    blockName: null,\n    rowNumber: null\n  },\n  {\n    id: 2,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    accessesIds: [10],\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56424,\n        ticketCode: '060000020917',\n        ticketType: TicketType.K,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n      {\n        id: 56425,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.M,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    bookingDisabled: BookingDisabledOption.STORNO,\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    documentNumber: \"12345678901\",\n    nationality: \"Poland\",\n    gender: Gender.MALE,\n    seatId: null,\n    blockId: null,\n    accesses: [],\n    objectName: null,\n    tribuneName: null,\n    blockName: null,\n    rowNumber: null\n  },\n  {\n    id: 3,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    accessesIds: [10],\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56424,\n        ticketCode: '060000020917',\n        ticketType: TicketType.K,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n      {\n        id: 56425,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.M,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    bookingDisabled: null,\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    documentNumber: \"12345678901\",\n    nationality: \"Poland\",\n    gender: Gender.MALE,\n    seatId: null,\n    blockId: null,\n    accesses: [],\n    objectName: null,\n    tribuneName: null,\n    blockName: null,\n    rowNumber: null\n  },\n  {\n    id: 4,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    accessesIds: [10],\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56424,\n        ticketCode: '060000020917',\n        ticketType: TicketType.K,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n      {\n        id: 56425,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.M,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    bookingDisabled: null,\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    documentNumber: \"12345678901\",\n    nationality: \"Poland\",\n    gender: Gender.MALE,\n    seatId: null,\n    blockId: null,\n    accesses: [],\n    objectName: null,\n    tribuneName: null,\n    blockName: null,\n    rowNumber: null\n  },\n  {\n    id: 5,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    accessesIds: [10],\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56424,\n        ticketCode: '060000020917',\n        ticketType: TicketType.K,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n      {\n        id: 56425,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.M,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    bookingDisabled: null,\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    documentNumber: \"12345678901\",\n    nationality: \"Poland\",\n    gender: Gender.MALE,\n    seatId: null,\n    blockId: null,\n    accesses: [],\n    objectName: null,\n    tribuneName: null,\n    blockName: null,\n    rowNumber: null\n  },\n  {\n    id: 6,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    accessesIds: [10],\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56424,\n        ticketCode: '060000020917',\n        ticketType: TicketType.K,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n      {\n        id: 56425,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.M,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    bookingDisabled: null,\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    documentNumber: \"12345678901\",\n    nationality: \"Poland\",\n    gender: Gender.MALE,\n    seatId: null,\n    blockId: null,\n    accesses: [],\n    objectName: null,\n    tribuneName: null,\n    blockName: null,\n    rowNumber: null\n  },\n  {\n    id: 7,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    accessesIds: [10],\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56424,\n        ticketCode: '060000020917',\n        ticketType: TicketType.K,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n      {\n        id: 56425,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.M,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    bookingDisabled: null,\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    documentNumber: \"12345678901\",\n    nationality: \"Poland\",\n    gender: Gender.MALE,\n    seatId: null,\n    blockId: null,\n    accesses: [],\n    objectName: null,\n    tribuneName: null,\n    blockName: null,\n    rowNumber: null\n  },\n  {\n    id: 8,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    accessesIds: [10],\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56424,\n        ticketCode: '060000020917',\n        ticketType: TicketType.K,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n      {\n        id: 56425,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.M,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    bookingDisabled: null,\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    documentNumber: \"12345678901\",\n    nationality: \"Poland\",\n    gender: Gender.MALE,\n    seatId: null,\n    blockId: null,\n    accesses: [],\n    objectName: null,\n    tribuneName: null,\n    blockName: null,\n    rowNumber: null\n  },\n  {\n    id: 9,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    accessesIds: [10],\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56424,\n        ticketCode: '060000020917',\n        ticketType: TicketType.K,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n      {\n        id: 56425,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.M,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    bookingDisabled: null,\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    documentNumber: \"12345678901\",\n    nationality: \"Poland\",\n    gender: Gender.MALE,\n    seatId: null,\n    blockId: null,\n    accesses: [],\n    objectName: null,\n    tribuneName: null,\n    blockName: null,\n    rowNumber: null\n  },\n  {\n    id: 10,\n    firstname: 'Andrzej',\n    lastname: 'Nawrot',\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    pesel: '72052000192',\n    variantName: 'Normalny E1x',\n    accessesIds: [10],\n    bookingType: BookingType.NORMAL,\n    activeFrom: null,\n    activeTo: null,\n    tickets: [\n      {\n        id: 56424,\n        ticketCode: '060000020917',\n        ticketType: TicketType.K,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n      {\n        id: 56425,\n        ticketCode: 'DDEAF42C',\n        ticketType: TicketType.M,\n        accessUsings: [],\n        createdAt: '2021-07-15T08:50:27.2054',\n      },\n    ],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n    bookingDisabled: null,\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    documentNumber: \"12345678901\",\n    nationality: \"Poland\",\n    gender: Gender.MALE,\n    seatId: null,\n    blockId: null,\n    accesses: [],\n    objectName: null,\n    tribuneName: null,\n    blockName: null,\n    rowNumber: null\n  },\n]\n\nconst provider = {\n  getOne: (resource, { id }: { id: string }) => {\n    const found = fakeTicketDetailsList.find((v) => `${v.id}` === id)\n    if (found) {\n      return Promise.resolve({\n        data: found,\n      })\n    }\n    return Promise.reject(new Error())\n  },\n} as DataProvider\n\nexport default provider\n","export enum AccessActivePeriodStartingOptions {\n  NO_LIMIT = 'NO_LIMIT',\n  PURCHASE_DATE = 'PURCHASE_DATE',\n  FIRST_USE = 'FIRST_USE',\n}\n","export enum AccessBonuses {\n  N = 'N',\n  Y = 'Y',\n  Z = 'Z',\n  D = 'D',\n}\n","export enum DayOfWeek {\n  Sunday = 'Sunday',\n  Monday = 'Monday',\n  Tuesday = 'Tuesday',\n  Wednesday = 'Wednesday',\n  Thursday = 'Thursday',\n  Friday = 'Friday',\n  Saturday = 'Saturday',\n}\n","import { DataProvider } from 'react-admin'\nimport { TicketType } from '../../enum/TicketType'\nimport { TicketInfo } from '../../ticket-info/ticket-info'\n\nconst fakeTicketInfoList: TicketInfo[] = [\n  {\n    id: 1,\n    firstname: 'Marek',\n    lastname: 'Pies',\n    pesel: '47120554776',\n    eventId: 0,\n    eventName: 'Podbeskidzie Bielsko-Biała Sparing',\n    eventDate: '2021-07-15T08:50:27.2054',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n    bookingId: 0\n  },\n  {\n    id: 2,\n    firstname: 'Janek',\n    lastname: 'Krużganek',\n    pesel: '47120554776',\n    eventId: 0,\n    eventName: 'POGOŃ SZCZECIN 20/21',\n    eventDate: '2021-07-15T08:50:27.2054',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n    bookingId: 0\n  },\n  {\n    id: 3,\n    firstname: 'Wacław',\n    lastname: 'Rymski',\n    pesel: '9988711225',\n    eventId: 0,\n    eventName: 'POGOŃ SZCZECIN 20/21',\n    eventDate: '2021-07-15T08:50:27.2054',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n    bookingId: 0\n  },\n  {\n    id: 4,\n    firstname: 'Mirka',\n    lastname: 'Korzeń',\n    pesel: '56483978659',\n    eventId: 0,\n    eventName: 'POGOŃ SZCZECIN 20/21',\n    eventDate: '2021-07-15T08:50:27.2054',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n    bookingId: 0\n  },\n  {\n    id: 5,\n    firstname: 'Tis',\n    lastname: 'Lomasz',\n    pesel: '47120554776',\n    eventId: 0,\n    eventName: 'POGOŃ SZCZECIN 20/21',\n    eventDate: '2021-07-15T08:50:27.2054',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n    bookingId: 0\n  },\n  {\n    id: 6,\n    firstname: 'Bogdana',\n    lastname: 'Jaruzelska',\n    pesel: '47120554776',\n    eventId: 0,\n    eventName: 'POGOŃ SZCZECIN 20/21',\n    eventDate: '2021-07-15T08:50:27.2054',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n    bookingId: 0\n  },\n  {\n    id: 7,\n    firstname: 'Jeremi',\n    lastname: 'Pomidor',\n    pesel: '12345678900',\n    eventId: 0,\n    eventName: 'POGOŃ SZCZECIN 20/21',\n    eventDate: '2021-07-15T08:50:27.2054',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n    bookingId: 0\n  },\n  {\n    id: 8,\n    firstname: 'Roman',\n    lastname: 'Zoman',\n    pesel: '13243567890',\n    eventId: 0,\n    eventName: 'POGOŃ SZCZECIN 20/21',\n    eventDate: '2021-07-15T08:50:27.2054',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n    bookingId: 0\n  },\n  {\n    id: 9,\n    firstname: 'Bacha',\n    lastname: 'Kaszalot',\n    pesel: '98097612678',\n    eventId: 0,\n    eventName: 'POGOŃ SZCZECIN 20/21',\n    eventDate: '2021-07-15T08:50:27.2054',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n    bookingId: 0\n  },\n  {\n    id: 10,\n    firstname: 'Jadwiga',\n    lastname: 'Ogórek',\n    pesel: '47120554776',\n    eventId: 0,\n    eventName: 'POGOŃ SZCZECIN 20/21',\n    eventDate: '2021-07-15T08:50:27.2054',\n    ticketCode: '1234567890',\n    ticketType: TicketType.K,\n    bookingId: 0\n  },\n]\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getList: (resource, params) =>\n    Promise.resolve({\n      data: fakeTicketInfoList,\n      total: fakeTicketInfoList.length,\n    }),\n} as DataProvider\n\nexport default provider\n","import { DataProvider } from 'react-admin'\nimport { TicketDto } from '../../dto/ticket.dto'\nimport { TicketType } from '../../enum/TicketType'\n\nconst fakeTickets: TicketDto[] = [\n  {\n    id: 1,\n    ticketCode: 'A',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52815,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n  {\n    id: 2,\n    ticketCode: 'A',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52816,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n  {\n    id: 3,\n    ticketCode: '010000011492',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52817,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n  {\n    id: 4,\n    ticketCode: '411000006572',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52818,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n  {\n    id: 5,\n    ticketCode: '871000006824',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52819,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n  {\n    id: 6,\n    ticketCode: '370000011495',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52820,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n  {\n    id: 7,\n    ticketCode: '450000011501',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52821,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n  {\n    id: 8,\n    ticketCode: '630000011502',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52822,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n  {\n    id: 9,\n    ticketCode: '020000011503',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52823,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n  {\n    id: 10,\n    ticketCode: '310000011504',\n    ticketType: TicketType.K,\n    active: true,\n    bookingId: 52824,\n    accessUsingsIds: [],\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054',\n  },\n]\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getList: (resource, params) =>\n    Promise.resolve({ data: fakeTickets, total: fakeTickets.length }),\n} as DataProvider\n\nexport default provider\n","import { DataProvider } from 'react-admin'\nimport { AccessDto } from '../../dto/access.dto'\nimport { AccessActivePeriodStartingOptions } from '../../enum/AccessActivePeriodStartingOptions'\nimport { AccessBonuses } from '../../enum/AccessBonuses'\nimport { DayOfWeek } from '../../enum/DayOfWeek'\n\nconst fakeAccesses: AccessDto[] = [\n  {\n    id: 1,\n    name: 'access1',\n    bonus: AccessBonuses.N,\n    entranceId: 0,\n    allowReenter: false,\n    multipleEntry: false,\n    multiple: 0,\n    usePriority: 0,\n    isTicketUnlockedWithNextDay: false,\n    releaseTime: '2021-07-15T08:50:27.2054',\n    releaseDayOfWeek: DayOfWeek.Friday,\n    releaseDayOfMonth: 1,\n    delay: '',\n    activePeriod: '',\n    activePeriodStartingFrom: AccessActivePeriodStartingOptions.FIRST_USE,\n    variantsIds: [],\n    accessDatesIds: [],\n    createdById: 0,\n    modifiedById: 0,\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054'\n  },\n  {\n    id: 2,\n    name: 'access2',\n    bonus: AccessBonuses.N,\n    entranceId: 0,\n    allowReenter: false,\n    multipleEntry: false,\n    multiple: 0,\n    usePriority: 0,\n    isTicketUnlockedWithNextDay: false,\n    releaseTime: '2021-07-15T08:50:27.2054',\n    releaseDayOfWeek: DayOfWeek.Friday,\n    releaseDayOfMonth: 1,\n    delay: '',\n    activePeriod: '',\n    activePeriodStartingFrom: AccessActivePeriodStartingOptions.FIRST_USE,\n    variantsIds: [],\n    accessDatesIds: [],\n    createdById: 0,\n    modifiedById: 0,\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054'\n  },\n  {\n    id: 3,\n    name: 'access3',\n    bonus: AccessBonuses.N,\n    entranceId: 0,\n    allowReenter: false,\n    multipleEntry: false,\n    multiple: 0,\n    usePriority: 0,\n    isTicketUnlockedWithNextDay: false,\n    releaseTime: '2021-07-15T08:50:27.2054',\n    releaseDayOfWeek: DayOfWeek.Friday,\n    releaseDayOfMonth: 1,\n    delay: '',\n    activePeriod: '',\n    activePeriodStartingFrom: AccessActivePeriodStartingOptions.FIRST_USE,\n    variantsIds: [],\n    accessDatesIds: [],\n    createdById: 0,\n    modifiedById: 0,\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054'\n  },\n  {\n    id: 4,\n    name: 'access4',\n    bonus: AccessBonuses.N,\n    entranceId: 0,\n    allowReenter: false,\n    multipleEntry: false,\n    multiple: 0,\n    usePriority: 0,\n    isTicketUnlockedWithNextDay: false,\n    releaseTime: '2021-07-15T08:50:27.2054',\n    releaseDayOfWeek: DayOfWeek.Friday,\n    releaseDayOfMonth: 1,\n    delay: '',\n    activePeriod: '',\n    activePeriodStartingFrom: AccessActivePeriodStartingOptions.FIRST_USE,\n    variantsIds: [],\n    accessDatesIds: [],\n    createdById: 0,\n    modifiedById: 0,\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054'\n  },\n  {\n    id: 5,\n    name: 'access5',\n    bonus: AccessBonuses.N,\n    entranceId: 0,\n    allowReenter: false,\n    multipleEntry: false,\n    multiple: 0,\n    usePriority: 0,\n    isTicketUnlockedWithNextDay: false,\n    releaseTime: '2021-07-15T08:50:27.2054',\n    releaseDayOfWeek: DayOfWeek.Friday,\n    releaseDayOfMonth: 1,\n    delay: '',\n    activePeriod: '',\n    activePeriodStartingFrom: AccessActivePeriodStartingOptions.FIRST_USE,\n    variantsIds: [],\n    accessDatesIds: [],\n    createdById: 0,\n    modifiedById: 0,\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054'\n  },\n  {\n    id: 6,\n    name: 'access6',\n    bonus: AccessBonuses.N,\n    entranceId: 0,\n    allowReenter: false,\n    multipleEntry: false,\n    multiple: 0,\n    usePriority: 0,\n    isTicketUnlockedWithNextDay: false,\n    releaseTime: '2021-07-15T08:50:27.2054',\n    releaseDayOfWeek: DayOfWeek.Friday,\n    releaseDayOfMonth: 1,\n    delay: '',\n    activePeriod: '',\n    activePeriodStartingFrom: AccessActivePeriodStartingOptions.FIRST_USE,\n    variantsIds: [],\n    accessDatesIds: [],\n    createdById: 0,\n    modifiedById: 0,\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054'\n  },\n  {\n    id: 7,\n    name: 'access7',\n    bonus: AccessBonuses.N,\n    entranceId: 0,\n    allowReenter: false,\n    multipleEntry: false,\n    multiple: 0,\n    usePriority: 0,\n    isTicketUnlockedWithNextDay: false,\n    releaseTime: '2021-07-15T08:50:27.2054',\n    releaseDayOfWeek: DayOfWeek.Friday,\n    releaseDayOfMonth: 1,\n    delay: '',\n    activePeriod: '',\n    activePeriodStartingFrom: AccessActivePeriodStartingOptions.FIRST_USE,\n    variantsIds: [],\n    accessDatesIds: [],\n    createdById: 0,\n    modifiedById: 0,\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054'\n  },\n  {\n    id: 8,\n    name: 'access8',\n    bonus: AccessBonuses.N,\n    entranceId: 0,\n    allowReenter: false,\n    multipleEntry: false,\n    multiple: 0,\n    usePriority: 0,\n    isTicketUnlockedWithNextDay: false,\n    releaseTime: '2021-07-15T08:50:27.2054',\n    releaseDayOfWeek: DayOfWeek.Friday,\n    releaseDayOfMonth: 1,\n    delay: '',\n    activePeriod: '',\n    activePeriodStartingFrom: AccessActivePeriodStartingOptions.FIRST_USE,\n    variantsIds: [],\n    accessDatesIds: [],\n    createdById: 0,\n    modifiedById: 0,\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054'\n  },\n  {\n    id: 9,\n    name: 'access9',\n    bonus: AccessBonuses.N,\n    entranceId: 0,\n    allowReenter: false,\n    multipleEntry: false,\n    multiple: 0,\n    usePriority: 0,\n    isTicketUnlockedWithNextDay: false,\n    releaseTime: '2021-07-15T08:50:27.2054',\n    releaseDayOfWeek: DayOfWeek.Friday,\n    releaseDayOfMonth: 1,\n    delay: '',\n    activePeriod: '',\n    activePeriodStartingFrom: AccessActivePeriodStartingOptions.FIRST_USE,\n    variantsIds: [],\n    accessDatesIds: [],\n    createdById: 0,\n    modifiedById: 0,\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054'\n  },\n  {\n    id: 10,\n    name: 'access10',\n    bonus: AccessBonuses.N,\n    entranceId: 0,\n    allowReenter: false,\n    multipleEntry: false,\n    multiple: 0,\n    usePriority: 0,\n    isTicketUnlockedWithNextDay: false,\n    releaseTime: '2021-07-15T08:50:27.2054',\n    releaseDayOfWeek: DayOfWeek.Friday,\n    releaseDayOfMonth: 1,\n    delay: '',\n    activePeriod: '',\n    activePeriodStartingFrom: AccessActivePeriodStartingOptions.FIRST_USE,\n    variantsIds: [],\n    accessDatesIds: [],\n    createdById: 0,\n    modifiedById: 0,\n    createdAt: '2021-07-15T08:50:27.2054',\n    modifiedAt: '2021-07-15T08:50:27.2054'\n  },\n]\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getList: (resource, params) =>\n    Promise.resolve({ data: fakeAccesses, total: fakeAccesses.length }),\n} as DataProvider\n\nexport default provider\n","export enum EventStatus {\n  INACTIVE = 'INACTIVE',\n  ACTIVE = 'ACTIVE',\n  IN_TRANSITION = 'IN_TRANSITION',\n}\n","import { DataProvider } from 'react-admin'\nimport { EventDto } from '../../dto/event/event.dto'\nimport { EventStatus } from '../../enum/EventStatus'\n\nconst fakeEvents: EventDto[] = [\n  {\n    id: 1,\n    name: \"Event1\",\n    dateStart: '2021-07-15T08:50:27.2054',\n    dateEnd: '2021-07-15T08:50:27.2054',\n    status: EventStatus.INACTIVE,\n    externalId: '1',\n    infix: 'abc123',\n    objectsIds: [1, 2, 3]\n  },\n  {\n    id: 2,\n    name: \"Event2\",\n    dateStart: '2021-07-15T08:50:27.2054',\n    dateEnd: '2021-07-15T08:50:27.2054',\n    status: EventStatus.INACTIVE,\n    externalId: '1',\n    infix: 'abc123',\n    objectsIds: [1, 2, 3]\n  },\n  {\n    id: 3,\n    name: \"Event3\",\n    dateStart: '2021-07-15T08:50:27.2054',\n    dateEnd: '2021-07-15T08:50:27.2054',\n    status: EventStatus.INACTIVE,\n    externalId: '1',\n    infix: 'abc123',\n    objectsIds: [1, 2, 3]\n  },\n  {\n    id: 4,\n    name: \"Event4\",\n    dateStart: '2021-07-15T08:50:27.2054',\n    dateEnd: '2021-07-15T08:50:27.2054',\n    status: EventStatus.INACTIVE,\n    externalId: '1',\n    infix: 'abc123',\n    objectsIds: [1, 2, 3]\n  },\n  {\n    id: 5,\n    name: \"Event5\",\n    dateStart: '2021-07-15T08:50:27.2054',\n    dateEnd: '2021-07-15T08:50:27.2054',\n    status: EventStatus.INACTIVE,\n    externalId: '1',\n    infix: 'abc123',\n    objectsIds: [1, 2, 3]\n  },\n  {\n    id: 6,\n    name: \"Event6\",\n    dateStart: '2021-07-15T08:50:27.2054',\n    dateEnd: '2021-07-15T08:50:27.2054',\n    status: EventStatus.INACTIVE,\n    externalId: '1',\n    infix: 'abc123',\n    objectsIds: [1, 2, 3]\n  },\n  {\n    id: 7,\n    name: \"Event7\",\n    dateStart: '2021-07-15T08:50:27.2054',\n    dateEnd: '2021-07-15T08:50:27.2054',\n    status: EventStatus.INACTIVE,\n    externalId: '1',\n    infix: 'abc123',\n    objectsIds: [1, 2, 3]\n  },\n  {\n    id: 8,\n    name: \"Event8\",\n    dateStart: '2021-07-15T08:50:27.2054',\n    dateEnd: '2021-07-15T08:50:27.2054',\n    status: EventStatus.INACTIVE,\n    externalId: '1',\n    infix: 'abc123',\n    objectsIds: [1, 2, 3]\n  },\n  {\n    id: 9,\n    name: \"Event9\",\n    dateStart: '2021-07-15T08:50:27.2054',\n    dateEnd: '2021-07-15T08:50:27.2054',\n    status: EventStatus.INACTIVE,\n    externalId: '1',\n    infix: 'abc123',\n    objectsIds: [1, 2, 3]\n  },\n  {\n    id: 10,\n    name: \"Event10\",\n    dateStart: '2021-07-15T08:50:27.2054',\n    dateEnd: '2021-07-15T08:50:27.2054',\n    status: EventStatus.INACTIVE,\n    externalId: '1',\n    infix: 'abc123',\n    objectsIds: [1, 2, 3]\n  },\n]\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getList: (resource, params) =>\n    Promise.resolve({ data: fakeEvents, total: fakeEvents.length })\n} as DataProvider\n\nexport default provider","export enum DeviceDirection {\n  IN = 'IN',\n  OUT = 'OUT',\n  INFO = 'INFO',\n}\n","import { DataProvider } from 'react-admin'\nimport { CustomerDetails } from \"../../customer-details/customer-details\";\nimport { CustomerDocumentType } from '../../enum/CustomerDocumentType'\nimport { Gender } from '../../enum/Gender'\n\nconst fakeCustomerDetailsList: CustomerDetails[] = [\n  {\n    id: 1,\n    type: \"MANUAL\",\n    firstname: \"Jan\",\n    lastname: \"Kowalski\",\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    pesel: \"12345678901\",\n    documentNumber: null,\n    nationality: \"PL\",\n    gender: Gender.MALE,\n    bookingsIds: []\n  },\n  {\n    id: 2,\n    type: \"MANUAL\",\n    firstname: \"Jan\",\n    lastname: \"Kowalski\",\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    pesel: \"12345678901\",\n    documentNumber: null,\n    nationality: \"PL\",\n    gender: Gender.MALE,\n    bookingsIds: []\n  },\n  {\n    id: 3,\n    type: \"MANUAL\",\n    firstname: \"Jan\",\n    lastname: \"Kowalski\",\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    pesel: \"12345678901\",\n    documentNumber: null,\n    nationality: \"PL\",\n    gender: Gender.MALE,\n    bookingsIds: []\n  },\n  {\n    id: 4,\n    type: \"MANUAL\",\n    firstname: \"Jan\",\n    lastname: \"Kowalski\",\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    pesel: \"12345678901\",\n    documentNumber: null,\n    nationality: \"PL\",\n    gender: Gender.MALE,\n    bookingsIds: []\n  },\n  {\n    id: 5,\n    type: \"MANUAL\",\n    firstname: \"Jan\",\n    lastname: \"Kowalski\",\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    pesel: \"12345678901\",\n    documentNumber: null,\n    nationality: \"PL\",\n    gender: Gender.MALE,\n    bookingsIds: []\n  },\n  {\n    id: 6,\n    type: \"MANUAL\",\n    firstname: \"Jan\",\n    lastname: \"Kowalski\",\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    pesel: \"12345678901\",\n    documentNumber: null,\n    nationality: \"PL\",\n    gender: Gender.MALE,\n    bookingsIds: []\n  },\n  {\n    id: 7,\n    type: \"MANUAL\",\n    firstname: \"Jan\",\n    lastname: \"Kowalski\",\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    pesel: \"12345678901\",\n    documentNumber: null,\n    nationality: \"PL\",\n    gender: Gender.MALE,\n    bookingsIds: []\n  },\n  {\n    id: 8,\n    type: \"MANUAL\",\n    firstname: \"Jan\",\n    lastname: \"Kowalski\",\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    pesel: \"12345678901\",\n    documentNumber: null,\n    nationality: \"PL\",\n    gender: Gender.MALE,\n    bookingsIds: []\n  },\n  {\n    id: 9,\n    type: \"MANUAL\",\n    firstname: \"Jan\",\n    lastname: \"Kowalski\",\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    pesel: \"12345678901\",\n    documentNumber: null,\n    nationality: \"PL\",\n    gender: Gender.MALE,\n    bookingsIds: []\n  },\n  {\n    id: 10,\n    type: \"MANUAL\",\n    firstname: \"Jan\",\n    lastname: \"Kowalski\",\n    company: \"ABC\",\n    birthdate: '2021-07-15T08:50:27.2054',\n    documentType: CustomerDocumentType.ID_CARD,\n    pesel: \"12345678901\",\n    documentNumber: null,\n    nationality: \"PL\",\n    gender: Gender.MALE,\n    bookingsIds: []\n  },\n]\n\nconst provider = {\n  getOne: (resource, { id }: { id: string }) => {\n    const found = fakeCustomerDetailsList.find((c) => `${c.id}` === id)\n    if(found) {\n      return Promise.resolve({\n        data: found\n      })\n    }\n    return Promise.reject(new Error())\n  }\n} as DataProvider\n\nexport default provider","import { DataProvider } from 'react-admin'\nimport { CustomerInfo } from '../../customer-info/customer-info'\n\nconst fakeCustomerInfoList: CustomerInfo[] = [\n  {\n    id: 1,\n    firstname: \"jan\",\n    lastname: \"kowalski\",\n    pesel: \"12345678901\",\n    documentNumber: \"12345678901\"\n  },\n  {\n    id: 2,\n    firstname: \"jan\",\n    lastname: \"kowalski\",\n    pesel: \"12345678901\",\n    documentNumber: \"12345678901\"\n  },\n  {\n    id: 3,\n    firstname: \"jan\",\n    lastname: \"kowalski\",\n    pesel: \"12345678901\",\n    documentNumber: \"12345678901\"\n  },\n  {\n    id: 4,\n    firstname: \"jan\",\n    lastname: \"kowalski\",\n    pesel: \"12345678901\",\n    documentNumber: \"12345678901\"\n  },\n  {\n    id: 5,\n    firstname: \"jan\",\n    lastname: \"kowalski\",\n    pesel: \"12345678901\",\n    documentNumber: \"12345678901\"\n  },\n  {\n    id: 6,\n    firstname: \"jan\",\n    lastname: \"kowalski\",\n    pesel: \"12345678901\",\n    documentNumber: \"12345678901\"\n  },\n  {\n    id: 7,\n    firstname: \"jan\",\n    lastname: \"kowalski\",\n    pesel: \"12345678901\",\n    documentNumber: \"12345678901\"\n  },\n  {\n    id: 8,\n    firstname: \"jan\",\n    lastname: \"kowalski\",\n    pesel: \"12345678901\",\n    documentNumber: \"12345678901\"\n  },\n  {\n    id: 9,\n    firstname: \"jan\",\n    lastname: \"kowalski\",\n    pesel: \"12345678901\",\n    documentNumber: \"12345678901\"\n  },\n  {\n    id: 10,\n    firstname: \"jan\",\n    lastname: \"kowalski\",\n    pesel: \"12345678901\",\n    documentNumber: \"12345678901\"\n  },\n]\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getList: (resource, params) =>\n    Promise.resolve({ data: fakeCustomerInfoList, total: fakeCustomerInfoList.length })\n} as DataProvider\n\nexport default provider","import { DataProvider } from 'react-admin'\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getList: (resource, params) =>\n    Promise.resolve({ data: {}, total: 0 }),\n} as DataProvider\n\nexport default provider","import { DataProvider } from \"react-admin\"\nimport { CompanyDto } from \"../../dto/company.dto\"\n\nconst fakeCompanies: CompanyDto[] = [\n  {\n    id: 0,\n    name: \"0\",\n    usersIds: [],\n    eventsIds: []\n  },\n  {\n    id: 1,\n    name: \"1\",\n    usersIds: [],\n    eventsIds: []\n  },\n  {\n    id: 2,\n    name: \"2\",\n    usersIds: [],\n    eventsIds: []\n  },\n  {\n    id: 3,\n    name: \"3\",\n    usersIds: [],\n    eventsIds: []\n  },\n  {\n    id: 4,\n    name: \"4\",\n    usersIds: [],\n    eventsIds: []\n  },\n  {\n    id: 5,\n    name: \"5\",\n    usersIds: [],\n    eventsIds: []\n  },\n  {\n    id: 6,\n    name: \"6\",\n    usersIds: [],\n    eventsIds: []\n  },\n  {\n    id: 7,\n    name: \"7\",\n    usersIds: [],\n    eventsIds: []\n  },\n  {\n    id: 8,\n    name: \"8\",\n    usersIds: [],\n    eventsIds: []\n  },\n  {\n    id: 9,\n    name: \"9\",\n    usersIds: [],\n    eventsIds: []\n  },\n]\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getList: (resource, params) =>\n    Promise.resolve({ data: fakeCompanies, total: fakeCompanies.length })\n} as DataProvider\n\nexport default provider","import { DataProvider } from 'react-admin'\nimport { ObjectDto } from '../../dto/object.dto'\n\nconst fakeObjects: ObjectDto[] = [\n  {\n    id: 0,\n    name: \"0\",\n    tribunesIds: [],\n    eventsIds: []\n  },\n  {\n    id: 1,\n    name: \"1\",\n    tribunesIds: [],\n    eventsIds: []\n  },\n  {\n    id: 2,\n    name: \"2\",\n    tribunesIds: [],\n    eventsIds: []\n  },\n  {\n    id: 3,\n    name: \"3\",\n    tribunesIds: [],\n    eventsIds: []\n  },\n  {\n    id: 4,\n    name: \"4\",\n    tribunesIds: [],\n    eventsIds: []\n  },\n  {\n    id: 5,\n    name: \"5\",\n    tribunesIds: [],\n    eventsIds: []\n  },\n  {\n    id: 6,\n    name: \"6\",\n    tribunesIds: [],\n    eventsIds: []\n  },\n  {\n    id: 7,\n    name: \"7\",\n    tribunesIds: [],\n    eventsIds: []\n  },\n  {\n    id: 8,\n    name: \"8\",\n    tribunesIds: [],\n    eventsIds: []\n  },\n  {\n    id: 9,\n    name: \"9\",\n    tribunesIds: [],\n    eventsIds: []\n  },\n]\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getList: (resource, params) =>\n    Promise.resolve({ data: fakeObjects, total: fakeObjects.length })\n} as DataProvider\n\nexport default provider","import { DataProvider } from 'react-admin';\nimport { PalmDto } from '../../dto/device/palm/palm.dto';\n\nconst fakePalms: PalmDto[] = []\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getList: (resource, params) =>\n    Promise.resolve({ data: fakePalms, total: fakePalms.length })\n} as DataProvider\n\nexport default provider","import { DataProvider } from 'react-admin'\nimport { EngineDto } from '../../dto/device/engine/engine.dto'\n\nconst fakeEngines: EngineDto[] = []\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getList: (resource, params) =>\n    Promise.resolve({ data: fakeEngines, total: fakeEngines.length })\n} as DataProvider\n\nexport default provider","import { DataProvider } from 'react-admin'\nimport { EntranceDto } from '../../dto/entrance.dto'\n\nconst fakeEntrances: EntranceDto[] = []\n\nconst provider = {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    getList: (resource, params) =>\n        Promise.resolve({ data: fakeEntrances, total: fakeEntrances.length })\n} as DataProvider\n\nexport default provider","import { DataProvider } from 'react-admin'\nimport { VariantDto } from '../../dto/variant.dto'\n\nconst fakeVariants: VariantDto[] = [\n  {\n    id: 1,\n    name: \"\",\n    active: false,\n    bookingsIds: [],\n    accessesIds: []\n  },\n  {\n    id: 2,\n    name: \"\",\n    active: false,\n    bookingsIds: [],\n    accessesIds: []\n  },\n  {\n    id: 3,\n    name: \"\",\n    active: false,\n    bookingsIds: [],\n    accessesIds: []\n  },\n  {\n    id: 4,\n    name: \"\",\n    active: false,\n    bookingsIds: [],\n    accessesIds: []\n  },\n  {\n    id: 5,\n    name: \"\",\n    active: false,\n    bookingsIds: [],\n    accessesIds: []\n  },\n  {\n    id: 6,\n    name: \"\",\n    active: false,\n    bookingsIds: [],\n    accessesIds: []\n  },\n  {\n    id: 7,\n    name: \"\",\n    active: false,\n    bookingsIds: [],\n    accessesIds: []\n  },\n  {\n    id: 8,\n    name: \"\",\n    active: false,\n    bookingsIds: [],\n    accessesIds: []\n  },\n  {\n    id: 9,\n    name: \"\",\n    active: false,\n    bookingsIds: [],\n    accessesIds: []\n  },\n  {\n    id: 10,\n    name: \"\",\n    active: false,\n    bookingsIds: [],\n    accessesIds: []\n  },\n]\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getList: (resource, params) =>\n    Promise.resolve({ data: fakeVariants, total: fakeVariants.length }),\n} as DataProvider\n\nexport default provider\n","import { DataProvider } from 'react-admin'\nimport { UserDto } from \"../../dto/user.dto\";\n\nconst fakeUsers: UserDto[] = []\n\nconst provider = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getList: (resource, params) =>\n    Promise.resolve({ data: fakeUsers, total: fakeUsers.length }),\n} as DataProvider\n\nexport default provider","import { DataProvider, sanitizeFetchType } from 'react-admin'\nimport { ResourceName } from '../ResourceName'\nimport fakeAccessUsingsProvider from './providers/fake-access-usings.provider'\nimport fakeBookingsProvider from './providers/fake-bookings.provider'\nimport fakeLogsProvider from './providers/fake-logs.provider'\nimport fakeStatsOverallViewListProvider from './providers/fake-stats-overall-view-list.provider'\nimport fakeStatsOverallViewProvider from './providers/fake-stats-overall-view.provider'\nimport fakeTicketDetailsProvider from './providers/fake-ticket-details.provider'\nimport fakeTicketInfoProvider from './providers/fake-ticket-info.provider'\nimport fakeTicketsProvider from './providers/fake-tickets.provider'\nimport fakeAccessesProvider from './providers/fake-accesses.provider'\nimport fakeEventsProvider from './providers/fake-events.provider'\nimport fakeCustomerDetailsProvider from './providers/fake-customer-details.provider'\nimport fakeCustomerInfoProvider from './providers/fake-customer-info.provider'\nimport fakeAccessDatesProvider from './providers/fake-access-dates.provider'\nimport fakeCompaniesProvider from './providers/fake-companies.provider'\nimport fakeObjectsProvider from './providers/fake-objects.provider'\nimport fakePalmsProvider from './providers/fake-palms.provider'\nimport fakeEnginesProvider from './providers/fake-engines.provider'\nimport fakeEntrancesProvider from './providers/fake-entrances.provider'\nimport fakeVariantsProvider from './providers/fake-variants.provider'\nimport fakeUsersProvider from './providers/fake-user.provider'\n\nconst dataProviders: Record<ResourceName, DataProvider> = {\n  [ResourceName.ACCESS_DATES]: fakeAccessDatesProvider,\n  [ResourceName.ACCESSES]: fakeAccessesProvider,\n  [ResourceName.ACCESS_USINGS]: fakeAccessUsingsProvider,\n  [ResourceName.BOOKINGS]: fakeBookingsProvider,\n  [ResourceName.COMPANIES]: fakeCompaniesProvider,\n  [ResourceName.CUSTOMER_DETAILS]: fakeCustomerDetailsProvider,\n  [ResourceName.CUSTOMER_INFO]: fakeCustomerInfoProvider,\n  [ResourceName.ENGINES]: fakeEnginesProvider,\n  [ResourceName.ENTRANCES]: fakeEntrancesProvider,\n  [ResourceName.EVENTS]: fakeEventsProvider,\n  [ResourceName.LOGS]: fakeLogsProvider,\n  [ResourceName.OBJECTS]: fakeObjectsProvider,\n  [ResourceName.PALMS]: fakePalmsProvider,\n  [ResourceName.STATS_OVERALL_VIEW]: fakeStatsOverallViewProvider,\n  [ResourceName.STATS_OVERALL_VIEW_LIST]: fakeStatsOverallViewListProvider,\n  [ResourceName.TICKETS]: fakeTicketsProvider,\n  [ResourceName.TICKET_INFO]: fakeTicketInfoProvider,\n  [ResourceName.TICKET_DETAILS]: fakeTicketDetailsProvider,\n  [ResourceName.TICKET_LOGS]: fakeLogsProvider,\n  [ResourceName.USERS]: fakeUsersProvider,\n  [ResourceName.VARIANTS]: fakeVariantsProvider\n}\n\nexport default (\n  fetchType: string,\n  resource: string,\n  params: unknown,\n): Promise<unknown> => {\n  const selectedProvider = dataProviders[resource as ResourceName]\n  const type = sanitizeFetchType(fetchType)\n  return selectedProvider[type](resource, params)\n}\n","import { AuthProvider } from 'react-admin'\n\nconst authProvider: AuthProvider = {\n  login: () => Promise.resolve(),\n  logout: () => Promise.resolve(),\n  checkError: () => Promise.resolve(),\n  checkAuth: () => Promise.resolve(),\n  getPermissions: () => Promise.resolve(new Set([])),\n  getIdentity: () =>\n    Promise.resolve({\n      id: 'no-auth',\n      fullName: 'no-auth',\n    }),\n}\n\nexport default authProvider\n","export type ContentRangeHeaderValue = `bytes ${number}-${number}/${number}`\n\nexport const contentRangeParser = (headerValue: ContentRangeHeaderValue) => {\n  if (!headerValue) {\n    // 'content-range' header should exist otherwise pagination doesn't work\n    return {\n      total: 0,\n    }\n  }\n  const summary = headerValue.split(' ')[1]\n  const split = summary.split('-')\n  const rangeFrom = split[0]\n  const summarySecondPartSplit = split[1].split('/')\n  const rangeTo = summarySecondPartSplit[0]\n  const total = summarySecondPartSplit[1]\n  return {\n    rangeFrom: parseInt(rangeFrom, 10),\n    rangeTo: parseInt(rangeTo, 10),\n    total: parseInt(total, 10),\n  }\n}\n","import { fetchUtils } from 'react-admin'\nimport { ContentRangeHeaderValue, contentRangeParser } from './header.parser'\n\nconst getToken = () => localStorage.getItem('token') as string\n\nconst baseHeaders: HeadersInit = {\n  'Content-Type': 'application/json',\n}\n\nconst authHeaders = (token = getToken()): HeadersInit => ({\n  ...baseHeaders,\n  Authorization: `Bearer ${token}`,\n})\n\nconst getWithHeaders = <T>(url: string, headers: HeadersInit) =>\n  fetchUtils\n    .fetchJson(url, {\n      method: 'GET',\n      headers: new Headers(headers),\n    })\n    .then(({ json }) => json as Promise<T>)\n\nconst postWithHeaders = <T, K>(url: string, body: T, headers: HeadersInit) =>\n  fetchUtils\n    .fetchJson(url, {\n      method: 'POST',\n      body: JSON.stringify(body),\n      headers: new Headers(headers),\n    })\n    .then(({ json }) => json as Promise<K>)\n\nexport const get = <T>(baseUrl: string, path?: string) =>\n  getWithHeaders<T>(`${baseUrl}${path || ''}`, authHeaders())\n\nexport const getWithToken = <T>(url: string, token: string) =>\n  getWithHeaders<T>(url, authHeaders(token))\n\nexport const getByConditions = <T>(\n  baseUrl: string,\n  path: string,\n): Promise<T[]> =>\n  getWithHeaders<T[]>(`${baseUrl}/GetByConditions/${path}`, authHeaders())\n\nexport const getWithPagination = <T>(baseUrl: string, path: string) =>\n  fetchUtils\n    .fetchJson(`${baseUrl}${path}`, {\n      method: 'GET',\n      headers: new Headers(authHeaders()),\n    })\n    .then(({ json, headers }) =>\n      Promise.resolve({\n        data: json as T,\n        range: contentRangeParser(\n          headers.get('content-range') as ContentRangeHeaderValue,\n        ),\n      }),\n    )\n\nexport const authPost = <T, K>(url: string, body: T) =>\n  postWithHeaders<T, K>(url, body, baseHeaders)\n\nexport const post = <T, K>(url: string, body: T) =>\n  postWithHeaders<T, K>(url, body, authHeaders())\n\nexport const patch = <T, K>(baseUrl: string, body: T) =>\n  fetchUtils\n    .fetchJson(baseUrl, {\n      method: 'PATCH',\n      body: JSON.stringify(body),\n      headers: new Headers(authHeaders()),\n    })\n    .then(({ json }) => json as Promise<K>)\n\nexport const put = <T, K>(baseUrl: string, body: T) =>\n  fetchUtils\n    .fetchJson(baseUrl, {\n      method: 'PUT',\n      body: JSON.stringify(body),\n      headers: new Headers(authHeaders()),\n    })\n    .then(({ json }) => json as Promise<K>)\n","const API_V1 = `${process.env.REACT_APP_API_BASE_URL}/api/v1`\nexport const AUTH_URL = `${API_V1}/Authorization/Authenticate`\nexport const ROLES_URL = `${API_V1}/User/GetRoles`\nexport const ACCESS_USINGS = `${API_V1}/ticketManagement/AccessUsings`\nexport const ACCESSES_URL = `${API_V1}/ticketManagement/Accesses`\nexport const ACCESS_DATES = `${API_V1}/ticketManagement/AccessDates`\nexport const BOOKINGS_URL = `${API_V1}/ticketManagement/Bookings`\nexport const CUSTOMERS_URL = `${API_V1}/ticketManagement/Customers`\nexport const EVENTS_URL = `${API_V1}/ticketManagement/Events`\nexport const EXTENDED_LOGS_URL = `${API_V1}/ticketManagement/Logs/GetExtendedLogByConditions`\nexport const TICKETS_URL = `${API_V1}/ticketManagement/Tickets`\nexport const VARIANTS_URL = `${API_V1}/ticketManagement/Variants`\nexport const SEATS_URL = `${API_V1}/ticketManagement/Seats`\nexport const BLOCKS_URL = `${API_V1}/ticketManagement/Blocks`\nexport const TRIBUNES_URL = `${API_V1}/ticketManagement/Tribunes`\nexport const OBJECTS_URL = `${API_V1}/ticketManagement/Objects`\nexport const ENGINES_URL = `${API_V1}/deviceManagement/Engines`\nexport const PALMS_URL = `${API_V1}/deviceManagement/Palms`\nexport const ADMINISTRATOR_URL = `${API_V1}/Administrator`\nexport const ENTRANCES_URL = `${API_V1}/deviceManagement/Entrances`","import { AuthProvider } from 'react-admin'\nimport { authPost, getWithToken } from '../common/fetch.utils'\nimport { AuthDto } from '../dto/auth.dto'\nimport { AUTH_URL, ROLES_URL } from '../api-urls'\nimport { AuthRequest } from './auth.request'\nimport { RoleDto } from '../dto/role.dto'\n\nconst authProvider: AuthProvider = {\n  login: async ({ username, password }) => {\n    const { token } = await authPost<AuthRequest, AuthDto>(AUTH_URL, {\n      login: username,\n      password,\n    })\n    const roleDtos = await getWithToken<RoleDto[]>(ROLES_URL, token)\n    const roles = roleDtos.map((r) => r.name)\n    localStorage.setItem('username', username)\n    localStorage.setItem('token', token)\n    localStorage.setItem('roles', roles.join())\n  },\n  logout: () => {\n    localStorage.removeItem('username')\n    localStorage.removeItem('token')\n    localStorage.removeItem('roles')\n    return Promise.resolve()\n  },\n  checkError: ({ status }) => {\n    if (status === 401 || status === 403) {\n      localStorage.removeItem('username')\n      localStorage.removeItem('token')\n      localStorage.removeItem('roles')\n      return Promise.reject()\n    }\n    return Promise.resolve()\n  },\n  checkAuth: () =>\n    localStorage.getItem('token') ? Promise.resolve() : Promise.reject(),\n  getPermissions: (): Promise<Set<string>> => {\n    const roles = localStorage.getItem('roles') as string\n    return Promise.resolve(new Set(roles?.split(',') || []))\n  },\n  getIdentity: () =>\n    Promise.resolve({\n      id: localStorage.getItem('username') as string,\n    }),\n}\n\nexport default authProvider\n","import { AccessUsingDto } from \"../dto/access-using.dto\"\n\nconst mapping: Partial<Record<keyof AccessUsingDto, string>> = {\n  id: 'au=>au.Id',\n  date: 'au=>au.Date',\n  direction: 'au=>au.Direction',\n  active: 'au=>au.Active',\n  ticketId: 'au=>au.TicketId',\n  accessId: 'au=>au.AccessId'\n}\n\nexport const mapSortAccessUsingsParam = (key: keyof AccessUsingDto) => mapping[key]","export enum Authority {\n  // Logs\n  VIEW_LOGS,\n\n  //Stats\n  VIEW_STATS_OVERALL_VIEW,\n\n  // Events\n  VIEW_EVENTS,\n  EDIT_EVENTS,\n  CREATE_EVENTS,\n\n  // Users\n  VIEW_USERS,\n  EDIT_USERS,\n  CREATE_USERS,\n\n  // Roles\n  VIEW_ROLES,\n  EDIT_ROLES,\n  CREATE_ROLES,\n\n  // Companies\n  VIEW_COMPANIES,\n  EDIT_COMPANIES,\n  CREATE_COMPANIES,\n  \n  // Accesses\n  VIEW_ACCESSES,\n  EDIT_ACCESSES,\n  CREATE_ACCESSES,\n  \n  // Variants\n  VIEW_VARIANTS,\n  EDIT_VARIANTS,\n  CREATE_VARIANTS\n}","import { AccessUsingDto } from \"../dto/access-using.dto\"\n\nconst mapping: Partial<\n  Record<keyof AccessUsingDto, (lambdaParameter: string, value: string | number) => string>\n> = {\n  id: (lambdaParameter, value) => `${(lambdaParameter)}.Id.ToString().Contains(\"${value}\")`,\n  ticketId: (lambdaParameter, value) => `\"${value}\".Contains(${(lambdaParameter)}.TicketId.ToString())`,\n  accessId: (lambdaParameter, value) => `${(lambdaParameter)}.AccessId.ToString().Contains(\"${value}\")`,\n}\n\nexport const getFilterMapper = (key: keyof AccessUsingDto) =>\n  mapping[key] as (lambdaParameter: string, value: string | number) => string\n","import {\n  CreateParams,\n  CreateResult,\n  DataProvider,\n  UpdateManyParams,\n  UpdateManyResult,\n  GetListResult\n} from 'react-admin'\nimport { AccessUsingsCreateParams } from './access-usings-create.params'\nimport { AccessUsingDto } from '../dto/access-using.dto'\nimport { DeviceDirection } from '../enum/DeviceDirection'\nimport { DateTime } from '../common/date-time'\nimport { getByConditions, getWithPagination, patch, post } from '../common/fetch.utils'\nimport { ACCESS_USINGS, TICKETS_URL } from '../api-urls'\nimport { AccessUsingsListParams } from './access-usings-list.params'\nimport { mapSortAccessUsingsParam } from './access-usings-sort.mapper'\nimport { getFilterMapper } from './access-usings-filter.mapper'\nimport { TicketDto } from '../dto/ticket.dto'\nimport { AccessUsing } from './access-using'\n\nconst getFilterParams = (filter: Partial<AccessUsingDto>) => {\n  if (Object.keys(filter).length) {\n    const filterParams = Object.entries(filter).map(([key, value]) => {\n      const mapper = getFilterMapper(key as keyof AccessUsingDto)\n      return mapper(\"au\", value as string)\n    })\n    return filterParams.reduce((p, c) => `${p}&&${c}`)\n  }\n  return \"true\"\n}\n\ntype CreateAccessUsingRequest = Array<\n  Omit<AccessUsingDto, 'id' | 'verifierDeviceId'> & { verifierDeviceId: null }\n>\ntype UpdateAccessUsingRequest = Pick<AccessUsingDto, 'id'> & { active: false }\n\nconst provider = {\n  updateMany: async (\n    resource,\n    { ids, data: { active = false } }: UpdateManyParams,\n  ): Promise<UpdateManyResult> => {\n    const pendingUpdates = ids\n      .map((auId) => ({ id: auId, active } as UpdateAccessUsingRequest))\n      .map((req) =>\n        patch<UpdateAccessUsingRequest, AccessUsingDto>(ACCESS_USINGS, req),\n      )\n    const accessUsings = await Promise.all(pendingUpdates)\n    return Promise.resolve({\n      data: accessUsings.map((au) => au.id),\n    })\n  },\n  create: async (\n    resource,\n    { data }: CreateParams<AccessUsingsCreateParams>,\n  ): Promise<CreateResult> => {\n    const { ticketIds, accessIds } = data\n    const request: CreateAccessUsingRequest = accessIds.flatMap((accessId) =>\n      ticketIds.map((ticketId) => ({\n        date: new Date().toISOString() as DateTime,\n        direction: DeviceDirection.IN,\n        active: true,\n        accessId,\n        ticketId,\n        verifierDeviceId: null,\n      })),\n    )\n    await post<CreateAccessUsingRequest, AccessUsingDto[]>(\n      ACCESS_USINGS,\n      request,\n    )\n    return Promise.resolve({\n      data: { id: 0 }, // need to return something\n    })\n  },\n  getList: async (\n    resource: string,\n    {\n      filter,\n      sort: { field, order },\n      pagination: { page, perPage }\n    }: AccessUsingsListParams\n  ): Promise<GetListResult<AccessUsingDto>> => {\n    const filterParams = `au=>${getFilterParams(filter).toString()}`\n    const queryParams: string[] = []\n    queryParams.push(`sortBy=${mapSortAccessUsingsParam(field)}`)\n    queryParams.push(`sortOrder=${order}`)\n    queryParams.push(`rangeFrom=${page * perPage - perPage}`)\n    queryParams.push(`rangeTo=${page * perPage}`)\n\n    const pathParams = queryParams.reduce((p, c) => `${p}&${c}`)\n    const path = `/${filterParams}?${pathParams}`\n\n    const {\n      data,\n      range: { total }\n    } = await getWithPagination<AccessUsingDto[]>(`${ACCESS_USINGS}/GetByConditions`, path)\n\n    const tickets = await getByConditions<TicketDto>\n      (TICKETS_URL, `t=>${filter?.ticketId?.toString().split(\" \").map((tId) => `t.Id==${tId}`).join(\"||\")}`)\n\n    const accessUsings = data.map(({\n      id, date, direction, active, ticketId, accessId, verifierDeviceId\n    }) => ({\n      id, date, direction, active, ticketId, accessId, verifierDeviceId,\n      ticketCode: tickets.find((ticket) => ticket.id === ticketId)?.ticketCode\n    } as AccessUsing))\n\n    return Promise.resolve({\n      data: accessUsings,\n      total\n    })\n  }\n} as DataProvider\n\nexport default provider\n","\nconst mapping: Record<\n  string,\n  (lambdaParameter: string, value: string | number | boolean, otherValues: any) => string | null\n> = {\n  id: (lambdaParameter, value) => value?.toString().split(\",\").length > 1 ?\n    `\"${value}\".Contains(${(lambdaParameter)}.Id.ToString())` :\n    `${(lambdaParameter)}.Id==${value}`,\n}\n\nexport const filterMapper = (key: string) =>\n  mapping[key] as (lambdaParameter: string, value: string | number | boolean, otherValues: any) => string\n\nexport default filterMapper","\nconst mapping: Record<string, string> = {\n  id: 'l=>l.Id',\n}\n\nexport const mapSortBookingParam = (key: string) => mapping[key]\n","import { PaginationPayload } from \"ra-core\"\nimport { TicketAPISortPayload } from \"./ticket-api-get-list.params\"\n\nexport const ALL_RESULTS = 'l=>true'\n\nexport const filterParamsComposer = (\n    lambdaParameter: string,\n    filterValues: any,\n    filterMapper: (key: string) => (lambdaParameter: string, value: string | number | boolean, otherValues: any) => string\n): string => {\n    if (Object.keys(filterValues).length) {\n        const filterParams = Object.entries(filterValues).map(([key, value]) => {\n            const mapper = filterMapper(key)\n            return mapper(lambdaParameter, value as string, filterValues)\n        }).filter((val) => val != null)\n        if (filterParams.length) {\n            return filterParams.reduce((p, c) => `${p}&&${c}`)\n        }\n    }\n    return 'true'\n}\n\nexport const queryParamsComposer = (\n    sort: TicketAPISortPayload,\n    pagination: PaginationPayload,\n    sortMapper: (key: string) => string\n): string | null => {\n    const queryParams: string[] = []\n    if (sort) {\n        const { field, order } = sort\n        queryParams.push(`sortBy=${sortMapper(field)}`)\n        queryParams.push(`sortOrder=${order}`)\n    }\n    if (pagination) {\n        const { page, perPage } = pagination\n        queryParams.push(`rangeFrom=${page * perPage - perPage}`)\n        queryParams.push(`rangeTo=${page * perPage - 1}`)\n    }\n    return queryParams.length > 0 ? queryParams.reduce((p, c) => `${p}&${c}`) : null\n}","import { DataProvider, UpdateParams, UpdateResult, GetListResult } from 'react-admin'\nimport { getWithPagination, patch } from '../common/fetch.utils'\nimport { BOOKINGS_URL } from '../api-urls'\nimport { BookingUpdateRequest } from './booking-update.request'\nimport { BookingDto } from '../dto/booking.dto'\nimport filterMapper from './booking-filter.mapper'\nimport { mapSortBookingParam } from './booking-sort.mapper'\nimport { filterParamsComposer, queryParamsComposer } from '../common/get-by-conditions.utils'\nimport { TicketAPIGetListParams } from '../common/ticket-api-get-list.params'\n\nconst provider = {\n  update: async (\n    resource: string,\n    { data }: UpdateParams<BookingUpdateRequest>,\n  ): Promise<UpdateResult<BookingDto>> => {\n    const booking = await patch<BookingUpdateRequest, BookingDto>(\n      BOOKINGS_URL,\n      data,\n    )\n    return Promise.resolve({\n      data: booking,\n    })\n  },\n  getList: async (\n    resource: string,\n    {\n      filter,\n      sort,\n      pagination,\n    }: TicketAPIGetListParams\n  ): Promise<GetListResult<BookingDto>> => {\n    const filterParams = `a=>${filterParamsComposer('a', filter, filterMapper)}`\n    const pathParams = queryParamsComposer(sort, pagination, mapSortBookingParam)\n    const path = `/${filterParams}?${pathParams ?? pathParams}`\n\n    const {\n      data,\n      range: { total }\n    } = await getWithPagination<BookingDto[]>(`${BOOKINGS_URL}/GetByConditions`, path)\n\n    return {\n      data,\n      total\n    }\n  }\n} as DataProvider\n\nexport default provider\n","import { ExtendedLogFilterValues } from './extended-log'\n\nconst mapping: Partial<\n  Record<\n    keyof ExtendedLogFilterValues,\n    (lambdaParameter: string, value: string | number) => string\n  >\n> = {\n  ticketCode: (lambdaParameter, value) => `${(lambdaParameter)}.TicketCode.Contains(\"${value}\")`,\n  bookingId: (lambdaParameter, value) => value?.toString().split(\",\").length > 1 ?\n    `\"${value}\".Contains(${(lambdaParameter)}.BookingId.ToString())` :\n    `${(lambdaParameter)}.BookingId.ToString().Contains(\"${value}\")`,\n  date: (lambdaParameter, value) => `${(lambdaParameter)}.Date > DateTimeOffset.FromUnixTimeMilliseconds(${value.toString().split(';')[0]}).DateTime && l.Date < DateTimeOffset.FromUnixTimeMilliseconds(${value.toString().split(';')[1]}).DateTime`,\n  deviceName: (lambdaParameter, value) => `${(lambdaParameter)}.Device.Name.Contains(\"${value}\")`,\n  text: (lambdaParameter, value) => `${(lambdaParameter)}.Data.Text.Contains(\"${value}\")`,\n  event: (lambdaParameter, value) => `${(lambdaParameter)}.Booking.Event.Name.Contains(\"${value}\")`\n}\n\nexport const getFilterMapper = (key: keyof ExtendedLogFilterValues) =>\n  mapping[key] as (lambdaParameter: string, value: string | number) => string\n","import { ExtendedLog } from './extended-log'\n\nconst mapping: Partial<Record<keyof ExtendedLog, string>> = {\n  id: 'l=>l.Id',\n  date: 'l=>l.Date',\n  deviceName: 'l=>l.Device.Name',\n  ticketCode: 'l=>l.TicketCode',\n  bookingId: 'l=>l.BookingId',\n}\n\nexport const mapSortLogParam = (key: keyof ExtendedLog) => mapping[key]\n","import { ExtendedLog } from './extended-log'\nimport { ExtendedLogDto } from '../dto/extended-log.dto'\n\nexport const mapToExtendedLog = (\n  {\n    id,\n    date,\n    ticketCode,\n    bookingId,\n    scheme,\n    device: { name: deviceName },\n    data,\n  }: ExtendedLogDto,\n  locale: string,\n): ExtendedLog => {\n  const logEntry = data.filter(({ language }) => language.includes(locale))[0]\n  return {\n    id,\n    date,\n    deviceName,\n    ticketCode,\n    text: logEntry?.text || scheme,\n    color: data[0].color || 'transparent',\n    bookingId,\n  }\n}\n","import { DataProvider, GetListResult } from 'react-admin'\nimport { EXTENDED_LOGS_URL } from '../api-urls'\nimport { getWithPagination } from '../common/fetch.utils'\nimport { ExtendedLogDto } from '../dto/extended-log.dto'\nimport { ExtendedLog, ExtendedLogFilterValues } from './extended-log'\nimport { LogListParams } from './log-list.params'\nimport { getFilterMapper } from './log-filter.mapper'\nimport { mapSortLogParam } from './log-sort.mapper'\nimport { mapToExtendedLog } from './extended-logs.mapper'\n\nconst getFilterParams = (\n  partialValues: Partial<ExtendedLogFilterValues>,\n): string => {\n  if (Object.keys(partialValues).length) {\n    const filterParams = Object.entries(partialValues).map(([key, value]) => {\n      const mapper = getFilterMapper(key as keyof ExtendedLogFilterValues)\n      return mapper('l', value as string)\n    })\n    return filterParams.reduce((p, c) => `${p}&&${c}`)\n  }\n  return 'true'\n}\n\nconst provider = {\n  getList: async (\n    resource: string,\n    {\n      filter: { locale, ...partialFilterValues },\n      sort: { field, order },\n      pagination: { page, perPage },\n    }: LogListParams,\n  ): Promise<GetListResult<ExtendedLog>> => {\n    const filterParams = `l=>${getFilterParams(partialFilterValues)}`\n    const queryParams: string[] = []\n    queryParams.push(`sortBy=${mapSortLogParam(field)}`)\n    queryParams.push(`sortOrder=${order}`)\n    queryParams.push(`rangeFrom=${page * perPage - perPage}`)\n    queryParams.push(`rangeTo=${page * perPage}`)\n\n    const pathParams = queryParams.reduce((p, c) => `${p}&${c}`)\n    const path = `/${filterParams}?${pathParams}`\n\n    const {\n      data,\n      range: { total },\n    } = await getWithPagination<ExtendedLogDto[]>(EXTENDED_LOGS_URL, path)\n    const extendedLogs = data.map((dto) => mapToExtendedLog(dto, locale))\n\n    return Promise.resolve({\n      data: extendedLogs,\n      total,\n    })\n  },\n} as DataProvider\n\nexport default provider\n","import { EventOverallView } from \"./event-overall-view\"\n\nconst mapping: Partial<Record<keyof EventOverallView, string>> = {\n  id: 'e=>e.Id',\n  name: 'e=>e.Name',\n  dateStart: 'e=>e.DateStart',\n  dateEnd: 'e=>e.DateEnd'\n}\n\nexport const mapSortOverallViewParam = (key: keyof EventOverallView) => mapping[key]","import { EventDto } from \"../../dto/event/event.dto\"\nimport { EventOverallView } from \"./event-overall-view\"\n\nexport const mapToEventOverallView = (\n  event: EventDto\n): EventOverallView => ({\n  id: event.id,\n  name: event.name,\n  dateStart: event.dateStart,\n  dateEnd: event.dateEnd\n})","import { DataProvider, GetListResult } from \"react-admin\"\nimport { EVENTS_URL } from '../../api-urls'\nimport { getWithPagination } from '../../common/fetch.utils'\nimport { ALL_RESULTS } from \"../../common/get-by-conditions.utils\"\nimport { NameFilter } from \"../../common/name.filter\"\nimport { EventDto } from \"../../dto/event/event.dto\"\nimport { EventOverallView } from \"./event-overall-view\"\nimport { mapSortOverallViewParam } from \"./overall-view-list-sort.mapper\"\nimport { mapToEventOverallView } from \"./overall-view-list.mapper\"\n\nconst provider = {\n  getList: async (\n    resource: string,\n    { filter, sort: { order, field }, pagination: { page, perPage } }: NameFilter,\n  ): Promise<GetListResult<EventOverallView>> => {\n    const queryParams: string[] = []\n    queryParams.push(`sortBy=${mapSortOverallViewParam(field)}`)\n    queryParams.push(`sortOrder=${order}`)\n    queryParams.push(`rangeFrom=${page * perPage - perPage}`)\n    queryParams.push(`rangeTo=${page * perPage}`)\n\n    const pathParams = queryParams.reduce((p, c) => `${p}&${c}`)\n    const path = `${filter.name ? `e=>e.Name.Contains(\"${filter.name}\")` : ALL_RESULTS}?${pathParams}`\n\n    const { data, range: { total } } = await getWithPagination<EventDto[]>(\n      `${EVENTS_URL}/GetByConditions/`, path)\n\n    const overallViewList = data.map((event) => mapToEventOverallView(event))\n\n    return {\n      data: overallViewList,\n      total\n    }\n  },\n} as DataProvider\n\nexport default provider","import { BlockDto } from '../../dto/block.dto'\nimport { BookingDto } from '../../dto/booking.dto'\nimport { EventDto } from '../../dto/event/event.dto'\nimport { ObjectDto } from '../../dto/object.dto'\nimport { SeatDto } from '../../dto/seat.dto'\nimport { TribuneDto } from '../../dto/tribune.dto'\nimport { BookingType } from '../../enum/BookingType'\nimport {\n  BlockOverallView,\n  ObjectOverallView,\n  OverallView,\n  TribuneOverallView,\n} from './overall-view'\n\nconst calculateCapacity = (seats: SeatDto[], bookings: BookingDto[]) =>\n  seats.length + bookings.filter((b) => b.seatId == null).length\n\nconst mapToBlockOverallView = (\n  block: BlockDto,\n  seats: SeatDto[],\n  bookings: BookingDto[],\n  enteredBookings: BookingDto[],\n): BlockOverallView => ({\n  id: block.id,\n  name: block.name,\n  capacity: calculateCapacity(seats, bookings),\n  sold: bookings.length,\n  entered: enteredBookings.length,\n  soldNormal: bookings.filter((b) => b.type === BookingType.NORMAL).length,\n  enteredNormal: enteredBookings.filter((b) => b.type === BookingType.NORMAL)\n    .length,\n  soldAbo: bookings.filter((b) => b.type === BookingType.ABO).length,\n  enteredAbo: enteredBookings.filter((b) => b.type === BookingType.ABO).length,\n  soldInfix: bookings.filter((b) => b.type === BookingType.INFIX).length,\n  enteredInfix: enteredBookings.filter((b) => b.type === BookingType.INFIX)\n    .length,\n  soldService: bookings.filter((b) => b.type === BookingType.SERVICE).length,\n  enteredService: enteredBookings.filter((b) => b.type === BookingType.SERVICE)\n    .length,\n  soldPoints: bookings.filter((b) => b.type === BookingType.POINTS).length,\n  enteredPoints: enteredBookings.filter((b) => b.type === BookingType.POINTS)\n    .length,\n})\n\nconst mapToTribuneOverallView = (\n  tribune: TribuneDto,\n  blocks: BlockDto[],\n  seats: SeatDto[],\n  bookings: BookingDto[],\n  enteredBookingIds: number[],\n): TribuneOverallView => ({\n  id: tribune.id,\n  name: tribune.name,\n  capacity: calculateCapacity(seats, bookings),\n  sold: bookings.length,\n  entered: enteredBookingIds.length,\n  blocks: blocks\n    .filter((b) => tribune.blocksIds.includes(b.id))\n    .map((block) => {\n      const filteredSeats = seats.filter((s) => s.blockId === block.id)\n      const filteredBookingIds = block.bookingsIds.concat(\n        filteredSeats.flatMap((s) => s.bookingsIds),\n      )\n      const filteredBookings = bookings.filter((book) =>\n        filteredBookingIds.includes(book.id),\n      )\n      const filteredEnteredBookingIds = enteredBookingIds.filter(\n        (enteredBookingId) => filteredBookingIds.includes(enteredBookingId),\n      )\n      const filteredEnteredBookings = bookings.filter((book) =>\n        filteredEnteredBookingIds.includes(book.id),\n      )\n      return mapToBlockOverallView(\n        block,\n        filteredSeats,\n        filteredBookings,\n        filteredEnteredBookings,\n      )\n    }),\n})\n\nconst mapToObjectOverallView = (\n  object: ObjectDto,\n  tribunes: TribuneDto[],\n  blocks: BlockDto[],\n  seats: SeatDto[],\n  bookings: BookingDto[],\n  enteredBookingIds: number[],\n): ObjectOverallView => ({\n  id: object.id,\n  name: object.name,\n  capacity: calculateCapacity(seats, bookings),\n  sold: bookings.length,\n  entered: enteredBookingIds.length,\n  tribunes: tribunes\n    .filter((t) => object.tribunesIds.includes(t.id))\n    .map((tribune) => {\n      const filteredBlocks = blocks.filter((b) => b.tribuneId === tribune.id)\n      const filteredSeatIds = filteredBlocks.flatMap((b) => b.seatsIds)\n      const filteredSeats = seats.filter((s) => filteredSeatIds.includes(s.id))\n      const filteredBookingIds = filteredBlocks\n        .flatMap((b) => b.bookingsIds)\n        .concat(filteredSeats.flatMap((s) => s.bookingsIds))\n      const filteredBookings = bookings.filter((book) =>\n        filteredBookingIds.includes(book.id),\n      )\n      const filteredEnteredBookingIds = enteredBookingIds.filter(\n        (enteredBookingId) => filteredBookingIds.includes(enteredBookingId),\n      )\n      return mapToTribuneOverallView(\n        tribune,\n        filteredBlocks,\n        filteredSeats,\n        filteredBookings,\n        filteredEnteredBookingIds,\n      )\n    }),\n})\n\nexport const mapToOverallView = (\n  selectedEvent: EventDto,\n  objects: ObjectDto[],\n  tribunes: TribuneDto[],\n  blocks: BlockDto[],\n  seats: SeatDto[],\n  bookings: BookingDto[],\n  enteredBookings: BookingDto[],\n): OverallView => {\n  const enteredBookingIds = enteredBookings.map((book) => book.id)\n  return {\n    id: selectedEvent.id,\n    eventName: selectedEvent.name,\n    capacity: calculateCapacity(seats, bookings),\n    sold: bookings.length,\n    entered: enteredBookings.length,\n    date: selectedEvent.dateStart,\n    objects: objects\n      .filter((o) => selectedEvent.objectsIds.includes(o.id))\n      .map((object) => {\n        const filteredTribunes = tribunes.filter(\n          (t) => t.objectId === object.id,\n        )\n        const filteredBlocks = blocks.filter((b) =>\n          filteredTribunes.flatMap((t) => t.blocksIds).includes(b.id),\n        )\n        const filteredSeatIds = filteredBlocks.flatMap((b) => b.seatsIds)\n        const filteredSeats = seats.filter((s) =>\n          filteredSeatIds.includes(s.id),\n        )\n        const filteredBookingIds = filteredBlocks\n          .flatMap((b) => b.bookingsIds)\n          .concat(filteredSeats.flatMap((s) => s.bookingsIds))\n        const filteredBookings = bookings.filter((book) =>\n          filteredBookingIds.includes(book.id),\n        )\n        const filteredEnteredBookingIds = enteredBookingIds.filter(\n          (enteredBookingId) => filteredBookingIds.includes(enteredBookingId),\n        )\n        return mapToObjectOverallView(\n          object,\n          filteredTribunes,\n          filteredBlocks,\n          filteredSeats,\n          filteredBookings,\n          filteredEnteredBookingIds,\n        )\n      }),\n  }\n}\n","import { DataProvider, GetOneParams, GetOneResult } from 'react-admin'\nimport {\n  BLOCKS_URL,\n  BOOKINGS_URL,\n  EVENTS_URL,\n  OBJECTS_URL,\n  SEATS_URL,\n  TRIBUNES_URL,\n} from '../../api-urls'\nimport { get, getByConditions } from '../../common/fetch.utils'\nimport { BlockDto } from '../../dto/block.dto'\nimport { BookingDto } from '../../dto/booking.dto'\nimport { EventDto } from '../../dto/event/event.dto'\nimport { ObjectDto } from '../../dto/object.dto'\nimport { SeatDto } from '../../dto/seat.dto'\nimport { TribuneDto } from '../../dto/tribune.dto'\nimport { OverallView } from './overall-view'\nimport { mapToOverallView } from './overall-view.mapper'\n\nconst provider = {\n  getOne: async (\n    resource: string,\n    { id: eventId }: GetOneParams,\n  ): Promise<GetOneResult<OverallView>> => {\n    const pendingSelectedEvent = get<EventDto>(EVENTS_URL, `/${eventId}`)\n    const pendingObjects = getByConditions<ObjectDto>(\n      OBJECTS_URL,\n      `o=>o.Events.Any(e => e.Id.Equals(${eventId}))?sortBy=o=>o.Name&sortOrder=ASC`,\n    )\n    const pendingTribunes = getByConditions<TribuneDto>(\n      TRIBUNES_URL,\n      `t=>t.Object.Events.Any(e => e.Id.Equals(${eventId}))?sortBy=t=>t.Name&sortOrder=ASC`,\n    )\n    const pendingBlocks = getByConditions<BlockDto>(\n      BLOCKS_URL,\n      `b=>b.Tribune.Object.Events.Any(e => e.Id.Equals(${eventId}))?sortBy=b=>b.Name&sortOrder=ASC`,\n    )\n    const pendingSeats = getByConditions<SeatDto>(\n      SEATS_URL,\n      `s=>s.Block.Tribune.Object.Events.Any(e => e.Id.Equals(${eventId}))`,\n    )\n    const bookingsCondition = `b=>b.EventId.Equals(${eventId}) && b.Disabled != TicketAPI.Models.Enums.TicketManagement.BookingDisabledOptions.STORNO`\n    const pendingBookings = getByConditions<BookingDto>(\n      BOOKINGS_URL,\n      bookingsCondition,\n    )\n    const pendingEnteredBookings = getByConditions<BookingDto>(\n      BOOKINGS_URL,\n      `${bookingsCondition} && b.Tickets.SelectMany(t => t.AccessUsings).Any(au => au.Active == true && au.Direction.Equals(TicketAPI.Models.Enums.DeviceManagement.DeviceDirections.IN))`,\n    )\n\n    const [\n      selectedEvent,\n      objects,\n      tribunes,\n      blocks,\n      seats,\n      bookings,\n      enteredBookings,\n    ] = await Promise.all([\n      pendingSelectedEvent,\n      pendingObjects,\n      pendingTribunes,\n      pendingBlocks,\n      pendingSeats,\n      pendingBookings,\n      pendingEnteredBookings,\n    ])\n\n    const overallViewData = mapToOverallView(\n      selectedEvent,\n      objects,\n      tribunes,\n      blocks,\n      seats,\n      bookings,\n      enteredBookings,\n    )\n\n    return {\n      data: overallViewData,\n    }\n  },\n} as DataProvider\n\nexport default provider\n","export const buildFilterByIdsCondition = (ids: number[]): string => {\n  const [firstId, ...restIds] = ids\n  return (restIds || []).reduce(\n    (prev, curr) => `${prev as string}||v.Id==${curr}`,\n    `v=>v.Id==${firstId}`,\n  )\n}\n","export const toMapById = <T extends { id: number }>(values: T[]) =>\n  new Map(values.map((v): [number, T] => [v.id, v]))\n\nexport const toUniqueValues = (values: number[]) => Array.from(new Set(values))\n","import { CustomerDto } from '../dto/customer.dto'\nimport { EventDto } from '../dto/event/event.dto'\nimport { TicketDto } from '../dto/ticket.dto'\nimport { VariantDto } from '../dto/variant.dto'\nimport { TicketDetails } from './ticket-details'\nimport { BookingDto } from '../dto/booking.dto'\nimport { AccessUsingDto } from '../dto/access-using.dto'\nimport { Ticket } from './ticket'\nimport { toMapById } from '../common/mapper.utils'\nimport { BlockDto } from '../dto/block.dto'\nimport { TribuneDto } from '../dto/tribune.dto'\nimport { SeatDto } from '../dto/seat.dto'\nimport { ObjectDto } from '../dto/object.dto'\n\nconst mapToTicket = (\n  { id, ticketCode, ticketType, createdAt, accessUsingsIds }: TicketDto,\n  accessUsingById: Map<number, AccessUsingDto>,\n): Ticket => ({\n  id,\n  ticketCode,\n  ticketType,\n  createdAt,\n  accessUsings: accessUsingsIds.map(\n    (auId) => accessUsingById.get(auId) as AccessUsingDto,\n  ),\n})\n\nexport const mapToTicketDetails = (\n  {\n    id: bookingId,\n    disabled: bookingDisabled,\n    type: bookingType,\n    activeFrom,\n    activeTo,\n    createdAt,\n    modifiedAt,\n    seatId,\n    blockId\n  }: BookingDto,\n  {\n    firstname,\n    lastname,\n    pesel,\n    company,\n    birthdate,\n    documentType,\n    documentNumber,\n    nationality,\n    gender\n  }: CustomerDto,\n  event: EventDto | null,\n  { name: variantName, accessesIds }: VariantDto,\n  tickets: TicketDto[],\n  accessUsings: AccessUsingDto[],\n  block: BlockDto | null,\n  tribune: TribuneDto | null,\n  object: ObjectDto | null,\n  seat: SeatDto | null\n): TicketDetails => {\n  const accessUsingById = toMapById(accessUsings)\n  return {\n    id: bookingId,\n    firstname,\n    lastname,\n    eventName: event?.name || null,\n    pesel,\n    variantName,\n    accessesIds,\n    bookingType,\n    activeFrom,\n    activeTo,\n    tickets: tickets.map((t) => mapToTicket(t, accessUsingById)),\n    createdAt,\n    modifiedAt,\n    bookingDisabled,\n    company,\n    birthdate,\n    documentType,\n    documentNumber,\n    nationality,\n    gender,\n    seatId,\n    blockId,\n    objectName: object?.name || null,\n    tribuneName: tribune?.name || null,\n    blockName: block?.name || null,\n    rowNumber: seat?.rowAlias || null,\n    seatNumber: seat?.numberAlias\n  }\n}\n","import { DataProvider, GetOneParams, GetOneResult } from 'react-admin'\nimport {\n  ACCESS_USINGS,\n  BLOCKS_URL,\n  BOOKINGS_URL,\n  CUSTOMERS_URL,\n  EVENTS_URL,\n  OBJECTS_URL,\n  SEATS_URL,\n  TICKETS_URL,\n  TRIBUNES_URL,\n  VARIANTS_URL,\n} from '../api-urls'\nimport { get, getByConditions } from '../common/fetch.utils'\nimport { BookingDto } from '../dto/booking.dto'\nimport { TicketDto } from '../dto/ticket.dto'\nimport { CustomerDto } from '../dto/customer.dto'\nimport { EventDto } from '../dto/event/event.dto'\nimport { buildFilterByIdsCondition } from '../common/condition.builder'\nimport { mapToTicketDetails } from './ticket-details.mapper'\nimport { VariantDto } from '../dto/variant.dto'\nimport { TicketDetails } from './ticket-details'\nimport { toUniqueValues } from '../common/mapper.utils'\nimport { AccessUsingDto } from '../dto/access-using.dto'\nimport { TribuneDto } from '../dto/tribune.dto'\nimport { BlockDto } from '../dto/block.dto'\nimport { SeatDto } from '../dto/seat.dto'\nimport { ObjectDto } from '../dto/object.dto'\n\nconst fetchTicketsWithAccessUsings = async (ticketIds: number[]) => {\n  const tickets = await getByConditions<TicketDto>(\n    TICKETS_URL,\n    buildFilterByIdsCondition(ticketIds),\n  )\n  const accessUsingIds = tickets.flatMap((t) => t.accessUsingsIds)\n  const accessUsings = accessUsingIds.length\n    ? await getByConditions<AccessUsingDto>(\n        ACCESS_USINGS,\n        buildFilterByIdsCondition(toUniqueValues(accessUsingIds)),\n      )\n    : []\n  return {\n    tickets,\n    accessUsings,\n  }\n}\n\nconst provider = {\n  getOne: async (\n    resource: string,\n    { id: bookingId }: GetOneParams,\n  ): Promise<GetOneResult<TicketDetails>> => {\n    const booking = await get<BookingDto>(BOOKINGS_URL, `/${bookingId}`)\n    const { customerId, eventId, variantId } = booking\n\n    const pendingCustomer = get<CustomerDto>(CUSTOMERS_URL, `/${customerId}`)\n    const pendingEvent = eventId ? get<EventDto>(EVENTS_URL, `/${eventId}`) : null\n    const pendingVariant = get<VariantDto>(VARIANTS_URL, `/${variantId}`)\n    const pendingTicketsWithAccessUsings = fetchTicketsWithAccessUsings(\n      booking.ticketsIds,\n    )\n\n    const seat = booking.seatId\n      ? await get<SeatDto>(SEATS_URL, `/${booking.seatId.toString()}`)\n      : null\n\n    const getBlock = () => {\n      if (seat) {\n        return get<BlockDto>(BLOCKS_URL, `/${seat.blockId.toString()}`)\n      }\n      if (booking?.blockId) {\n        return get<BlockDto>(BLOCKS_URL, `/${booking?.blockId?.toString()}`)\n      }\n      return null\n    }\n\n    const block = await getBlock()\n    \n    const tribune = block\n      ? await get<TribuneDto>(TRIBUNES_URL, `/${block?.tribuneId?.toString()}`)\n      : null\n    const object = tribune\n      ? await get<ObjectDto>(OBJECTS_URL, `/${tribune?.objectId?.toString()}`)\n      : null\n\n    const [customer, event, variant, { tickets, accessUsings }] =\n      await Promise.all([\n        pendingCustomer,\n        pendingEvent,\n        pendingVariant,\n        pendingTicketsWithAccessUsings,\n      ])\n\n    return {\n      data: mapToTicketDetails(\n        booking,\n        customer,\n        event,\n        variant,\n        tickets,\n        accessUsings,\n        block,\n        tribune,\n        object,\n        seat,\n      ),\n    }\n  },\n} as DataProvider\n\nexport default provider\n","import { toMapById } from '../common/mapper.utils'\nimport { BookingDto } from '../dto/booking.dto'\nimport { CustomerDto } from '../dto/customer.dto'\nimport { EventDto } from '../dto/event/event.dto'\nimport { TicketDto } from '../dto/ticket.dto'\nimport { TicketInfo } from './ticket-info'\n\nexport const mapToTicketBaseInfo = (\n  { firstname, lastname, pesel }: CustomerDto,\n  event: EventDto | null,\n  { id, bookingId, ticketCode, ticketType }: TicketDto,\n): TicketInfo => ({\n  id,\n  firstname,\n  lastname,\n  pesel,\n  eventId: event?.id || null,\n  eventName: event?.name || null,\n  eventDate: event?.dateStart || null,\n  ticketCode,\n  ticketType,\n  bookingId\n})\n\nexport const mapToTicketBaseInfoList = (\n  bookings: BookingDto[],\n  customers: CustomerDto[],\n  events: EventDto[],\n  tickets: TicketDto[],\n): TicketInfo[] => {\n  const bookingById = toMapById(bookings)\n  const customerById = toMapById(customers)\n  const eventById = toMapById(events)\n  return tickets.map((ticket) => {\n    const { customerId, eventId } = bookingById.get(\n      ticket.bookingId,\n    ) as BookingDto\n    const customer = customerById.get(customerId) as CustomerDto\n    const event = eventById.get(eventId) as EventDto | null\n    return mapToTicketBaseInfo(customer, event, ticket)\n  })\n}\n","import { TicketInfo } from './ticket-info'\n\nconst mapping: Partial<Record<keyof TicketInfo, string>> = {\n  id: 't=>t.Id',\n  ticketCode: 't=>t.TicketCode',\n  bookingId: 't=>t.BookingId'\n}\n\nexport const mapSortTicketParams = (key: keyof TicketInfo) => mapping[key]","import { TicketInfo } from \"./ticket-info\"\n\nconst mapping: Partial<\n  Record<\n    keyof TicketInfo,\n    (lambdaParameter: string, value: string | number) => string\n  >\n> = {\n  ticketCode: (lambdaParameter, value) => `${(lambdaParameter)}.TicketCode.Contains(\"${value}\")`,\n}\n\nexport const getFilterMapper = (key: keyof TicketInfo) =>\n  mapping[key] as (lambdaParameter: string, value: string | number) => string\n","import { DataProvider, GetListResult } from 'react-admin'\nimport {\n  BOOKINGS_URL,\n  CUSTOMERS_URL,\n  EVENTS_URL,\n  TICKETS_URL,\n} from '../api-urls'\nimport { getByConditions, getWithPagination } from '../common/fetch.utils'\nimport { BookingDto } from '../dto/booking.dto'\nimport { TicketInfo } from './ticket-info'\nimport { TicketDto } from '../dto/ticket.dto'\nimport { CustomerDto } from '../dto/customer.dto'\nimport { EventDto } from '../dto/event/event.dto'\nimport { mapToTicketBaseInfoList } from './ticket-info.mapper'\nimport { buildFilterByIdsCondition } from '../common/condition.builder'\nimport { TicketCodeFilter } from '../common/ticket-code.filter'\nimport { toUniqueValues } from '../common/mapper.utils'\nimport { mapSortTicketParams } from './ticket-info-sort.mapper'\nimport { getFilterMapper } from './ticket-info-filter.mapper'\n\nconst getFilterParams = (\n  partialValues: Partial<TicketInfo>,\n): string => {\n  if (Object.keys(partialValues).length) {\n    const filterParams = Object.entries(partialValues).map(([key, value]) => {\n      const mapper = getFilterMapper(key as keyof TicketInfo)\n      return mapper('t', value as string)\n    })\n    return filterParams.reduce((p, c) => `${p}&&${c}`)\n  }\n  return 'true'\n}\nconst getByUniqueIds = <T>(baseUrl: string, ids: number[]): Promise<T[]> => {\n  const uniqueIds = toUniqueValues(ids)\n  return getByConditions<T>(baseUrl, buildFilterByIdsCondition(uniqueIds))\n}\n\nconst provider = {\n  getList: async (\n    resource: string,\n    {\n      filter,\n      pagination: { page, perPage },\n      sort: { field, order }\n    }: TicketCodeFilter,\n  ): Promise<GetListResult<TicketInfo>> => {\n    const filterParams = `t=>${getFilterParams(filter)}`\n    const queryParams: string[] = []\n    if (!!page && !!field) {\n      queryParams.push(`sortBy=${mapSortTicketParams(field)}`)\n      queryParams.push(`sortOrder=${order}`)\n      queryParams.push(`rangeFrom=${page * perPage - perPage}`)\n      queryParams.push(`rangeTo=${page * perPage}`)\n    }\n    else queryParams.push('')\n\n    const pathParams = queryParams.reduce((p, c) => `${p}&${c}`)\n    const path = `/${filterParams}?${pathParams}`\n    const { data: tickets, range: { total } } = await getWithPagination<TicketDto[]>(\n      `${TICKETS_URL}/GetByConditions`, path\n    )\n\n    const bookingIds = tickets.map((v) => v.bookingId)\n    const bookings = await getByUniqueIds<BookingDto>(BOOKINGS_URL, bookingIds)\n\n    const customerIds = bookings.map((v) => v.customerId)\n    const eventIds = bookings.map((v) => v.eventId)\n\n    const pendingCustomers = getByUniqueIds<CustomerDto>(\n      CUSTOMERS_URL,\n      customerIds,\n    )\n    const pendingEvents = getByUniqueIds<EventDto>(EVENTS_URL, eventIds)\n    const [customers, events] = await Promise.all([\n      pendingCustomers,\n      pendingEvents,\n    ])\n\n    const ticketBaseInfoList = mapToTicketBaseInfoList(\n      bookings,\n      customers,\n      events,\n      tickets,\n    )\n    return Promise.resolve({\n      data: ticketBaseInfoList,\n      total\n    })\n  },\n} as DataProvider\n\nexport default provider\n","import { DataProvider, GetListResult } from 'react-admin'\nimport { getByConditions } from '../common/fetch.utils'\nimport { TICKETS_URL } from '../api-urls'\nimport { TicketCodeFilter } from '../common/ticket-code.filter'\nimport { TicketDto } from '../dto/ticket.dto'\n\nconst provider = {\n  getList: async (\n    resource: string,\n    { filter }: TicketCodeFilter,\n  ): Promise<GetListResult<TicketDto>> => {\n    const filterByTicketCodeCondition = `t=>t.TicketCode.Contains(\"${filter.ticketCode}\")`\n    const tickets = await getByConditions<TicketDto>(\n      TICKETS_URL,\n      filterByTicketCodeCondition,\n    )\n    return Promise.resolve({\n      data: tickets,\n      total: tickets.length,\n    })\n  },\n} as DataProvider\n\nexport default provider\n","\nconst mapping: Record<\n  string,\n  (lambdaParameter: string, value: string | number | boolean, otherValues: any) => string | null\n> = {\n  id: (lambdaParameter, value) => value.toString().split(\",\").map((v) => `${lambdaParameter}.Id==${v}`).join(\"||\"),\n  name: (lambdaParameter, value) => `${(lambdaParameter)}.Name.Contains(\"${value}\")`,\n  bonus: (lambdaParameter, value) => `${(lambdaParameter)}.Bonus.Equals(TicketAPI.Models.Enums.TicketManagement.AccessBonuses.${value})`,\n  entranceId: (lambdaParameter, value) => `${(lambdaParameter)}.EntranceId.Equals(${value})`,\n  allowReenter: (lambdaParameter) => `${(lambdaParameter)}.AllowReenter`,\n  multipleEntry: (lambdaParameter) => `${(lambdaParameter)}.MultipleEntry`,\n  isTicketUnlockedWithNextDay: (lambdaParameter) => `${(lambdaParameter)}.IsTicketUnlockedWithNextDay`,\n  filterVariantId: (lambdaParameter, value, otherValues) => value ? `${(lambdaParameter)}.Variants.Any(v=>v.Id.Equals(${otherValues?.variantId}))` : null,\n  variantId: () => null,\n}\n\nexport const filterMapper = (key: string) =>\n  mapping[key] as (lambdaParameter: string, value: string | number | boolean, otherValues: any) => string\n\nexport default filterMapper","\nconst mapping: Record<string, string> = {\n  id: 'a=>a.Id',\n  name: 'a=>a.Name',\n  bonus: 'a=>a.Bonus',\n  entranceId: 'a=>a.EntranceId',\n  modifiedAt: 'a=>a.ModifiedAt',\n  createdAt: 'a=>a.CreatedAt'\n}\n\nexport const mapSortAccessParam = (key: string) => mapping[key]\n","import {\n  DataProvider,\n  GetListResult,\n  GetOneParams,\n  GetOneResult,\n  UpdateParams,\n  UpdateResult,\n  CreateParams,\n  CreateResult\n} from 'react-admin'\nimport { ACCESSES_URL } from '../api-urls'\nimport { CacheableDataProviderExtensionResult } from '../common/data-provider'\nimport { getWithPagination, get, put, patch, post } from '../common/fetch.utils'\nimport { filterParamsComposer, queryParamsComposer } from '../common/get-by-conditions.utils'\nimport { TicketAPIGetListParams } from '../common/ticket-api-get-list.params'\nimport { AccessVariantsDto } from '../dto/access-variants.dto'\nimport { AccessDto } from '../dto/access.dto'\nimport filterMapper from './access-filter.mapper'\nimport { mapSortAccessParam } from './access-sort.mapper'\n\ntype UpdateAccessRequest = Pick<AccessDto, \"id\"> & Partial<AccessDto>\ntype CreateAccessRequest = Omit<Partial<AccessDto>, \"id\">\n\nconst provider = {\n  getList: async (\n    resource: string,\n    {\n      filter,\n      sort,\n      pagination,\n    }: TicketAPIGetListParams,\n  ): Promise<GetListResult<AccessDto>> => {\n    const filterParams = `a=>${filterParamsComposer('a', filter, filterMapper)}`\n    const pathParams = queryParamsComposer(sort, pagination, mapSortAccessParam)\n    const path = `/${filterParams}?${pathParams ?? pathParams}`\n\n    const { data, range: { total } } = await getWithPagination<AccessDto[]>(\n      `${ACCESSES_URL}/GetByConditions`,\n      path,\n    )\n\n    return Promise.resolve({\n      data,\n      total\n    })\n  },\n  getOne: async (\n    resource: string,\n    { id }: GetOneParams,\n  ): Promise<GetOneResult<AccessDto>> => {\n    const data = await get<AccessDto>(ACCESSES_URL, `/${id}`)\n    return {\n      data\n    }\n  },\n  update: async (\n    resource: string,\n    { id, data, previousData }: UpdateParams<AccessDto>\n  ): Promise<UpdateResult> => {\n    const update = await patch<UpdateAccessRequest, AccessDto>(ACCESSES_URL, {\n      id: id as number,\n      name: data.name !== previousData.name ? data.name : undefined,\n      bonus: data.bonus !== previousData.bonus ? data.bonus : undefined,\n      entranceId: data.entranceId !== previousData.entranceId ? data.entranceId : undefined,\n      allowReenter: data.allowReenter !== previousData.allowReenter ? data.allowReenter : undefined,\n      multipleEntry: data.multipleEntry !== previousData.multipleEntry ? data.multipleEntry : undefined,\n      multiple: data.multiple !== previousData.multiple ? data.multiple : undefined,\n      usePriority: data.usePriority !== previousData.usePriority ? data.usePriority : undefined,\n      isTicketUnlockedWithNextDay: data.isTicketUnlockedWithNextDay !== previousData.isTicketUnlockedWithNextDay ? data.isTicketUnlockedWithNextDay : undefined,\n      releaseTime: data.releaseTime !== previousData.releaseTime ? data.releaseTime : undefined,\n      releaseDayOfWeek: data.releaseDayOfWeek !== previousData.releaseDayOfWeek ? data.releaseDayOfWeek : undefined,\n      releaseDayOfMonth: data.releaseDayOfMonth !== previousData.releaseDayOfMonth ? data.releaseDayOfMonth : undefined,\n      delay: data.delay !== previousData.delay ? data.delay : undefined,\n      activePeriod: data.activePeriod !== previousData.activePeriod ? data.activePeriod : undefined,\n      activePeriodStartingFrom: data.activePeriodStartingFrom !== previousData.activePeriodStartingFrom ? data.activePeriodStartingFrom : undefined\n    })\n    return Promise.resolve({ data: update })\n  },\n  create: async (\n    resource: string,\n    { data }: CreateParams<AccessDto>\n  ): Promise<CreateResult> => {\n    const created = await post<CreateAccessRequest[], AccessDto[]>(ACCESSES_URL, [{\n      name: data.name,\n      bonus: data.bonus ? data.bonus : undefined,\n      entranceId: data.entranceId || undefined,\n      allowReenter: data.allowReenter || undefined,\n      multipleEntry: data.multipleEntry || undefined,\n      multiple: data.multiple || undefined,\n      usePriority: data.usePriority || undefined,\n      isTicketUnlockedWithNextDay: data.isTicketUnlockedWithNextDay || undefined,\n      releaseTime: data.releaseTime || undefined,\n      releaseDayOfWeek: data.releaseDayOfWeek || undefined,\n      releaseDayOfMonth: data.releaseDayOfMonth || undefined,\n      delay: data.delay || undefined,\n      activePeriod: data.activePeriod || undefined,\n      activePeriodStartingFrom: data.activePeriodStartingFrom || undefined\n    }])\n    return Promise.resolve({ data: created[0] })\n  },\n  attachVariants: async (\n    resource: string,\n    params: AccessVariantsDto\n  ): Promise<CacheableDataProviderExtensionResult<AccessVariantsDto>> => {\n    const accessVariants = await put<AccessVariantsDto, AccessVariantsDto>\n      (`${ACCESSES_URL}/AttachVariants`, params)\n    return {\n      data: accessVariants\n    }\n  },\n  detachVariants: async (\n    resource: string,\n    params: AccessVariantsDto\n  ): Promise<CacheableDataProviderExtensionResult<AccessVariantsDto>> => {\n    const accessVariants = await put<AccessVariantsDto, AccessVariantsDto>\n      (`${ACCESSES_URL}/DetachVariants`, params)\n    return {\n      data: accessVariants\n    }\n  }\n} as AccessDataProvider\n\ninterface AccessDataProvider extends DataProvider {\n  attachVariants: (\n    resource: string,\n    params: AccessVariantsDto\n  ) => Promise<CacheableDataProviderExtensionResult<AccessVariantsDto>>;\n\n  detachVariants: (\n    resource: string,\n    params: AccessVariantsDto\n  ) => Promise<CacheableDataProviderExtensionResult<AccessVariantsDto>>;\n};\n\nexport default provider\n","\nconst mapping: Record<\n  string,\n  (lambdaParameter: string, value: string | number | boolean, otherValues: any) => string | null> = {\n  name: (lambdaParameter, value) => `${(lambdaParameter)}.Name.Contains(\"${value}\")`,\n  filterVerifierDeviceId: (lambdaParameter, value, otherValues) => value ? `${(lambdaParameter)}.VerifierDevices.Any(vd=>vd.Id==${otherValues?.verifierDeviceId})` : null,\n  verifierDeviceId: () => null\n}\n\nconst filterMapper = (key: string) =>\n  mapping[key] as (lambdaParameter: string, value: string | number | boolean, otherValues: any) => string\n\nexport default filterMapper","\nconst mapping: Record<string, string> = {\n  id: 'e=>e.Id',\n  name: 'e=>e.Name',\n  dateStart: 'e=>e.DateStart',\n  dateEnd: 'e=>e.DateEnd',\n  status: 'e=>e.Status'\n}\n\nexport const mapSortEventParam = (key: string) => mapping[key]\n","import { CreateParams, CreateResult, DataProvider, GetListResult, GetOneParams, GetOneResult, Identifier, UpdateParams, UpdateResult, GetManyParams, GetManyResult } from \"react-admin\"\nimport { EVENTS_URL } from \"../api-urls\"\nimport { CacheableDataProviderExtensionResult, DataProviderExtensionResult } from \"../common/data-provider\"\nimport { DateTime } from \"../common/date-time\"\nimport { get, getWithPagination, patch, post, put } from \"../common/fetch.utils\"\nimport { filterParamsComposer, queryParamsComposer } from \"../common/get-by-conditions.utils\"\nimport { TicketAPIGetListParams } from \"../common/ticket-api-get-list.params\"\nimport { EventCompaniesDto } from \"../dto/event/event-companies.dto\"\nimport { EventDevicesDto } from \"../dto/event/event-devices.dto\"\nimport { EventObjectsDto } from \"../dto/event/event-objects.dto\"\nimport { EventDto } from \"../dto/event/event.dto\"\nimport { EventStatus } from \"../enum/EventStatus\"\nimport filterMapper from \"./event-filter.mapper\"\nimport { mapSortEventParam } from './event-sort.mapper'\n\nconst provider = {\n  getList: async (\n    resource: string,\n    {\n      filter: { ...filter },\n      sort,\n      pagination\n    }: TicketAPIGetListParams,\n  ): Promise<GetListResult<EventDto>> => {\n    const filterParams = `o=>${filterParamsComposer('o', filter, filterMapper)}`\n    const pathParams = queryParamsComposer(sort, pagination, mapSortEventParam)\n    const path = `/${filterParams}?${pathParams ?? pathParams}`\n\n    const { data, range: { total } } = await getWithPagination<EventDto[]>(`${EVENTS_URL}/GetByConditions`, path)\n\n    return Promise.resolve({\n      data,\n      total\n    })\n  },\n  getOne: async (\n    resource: string,\n    { id }: GetOneParams\n  ): Promise<GetOneResult<EventDto>> => {\n    const event = await get<EventDto>(EVENTS_URL, `/${id}`)\n\n    return {\n      data: event\n    }\n  },\n  create: async (\n    resource: string,\n    { data }: CreateParams\n  ): Promise<CreateResult<EventDto>> => {\n    const event = await post<CreateEventRequest[], EventDto[]>(EVENTS_URL, [{\n      ...data,\n      dateStart:\n        new Date(new Date(data?.dateStart).getTime() - (new Date(data?.dateStart).getTimezoneOffset() * 60000)).toJSON() as DateTime,\n      dateEnd:\n        new Date(new Date(data?.dateEnd).getTime() - (new Date(data?.dateEnd).getTimezoneOffset() * 60000)).toJSON() as DateTime\n    }])\n\n    return {\n      data: event[0]\n    }\n  },\n  update: async (\n    resource: string,\n    { id, data, previousData }: UpdateParams<EventDto>\n  ): Promise<UpdateResult> => {\n    const update = await patch<{ id: Identifier, [n: string]: any }, EventDto>(EVENTS_URL, {\n      id,\n      name: data.name !== previousData.name ? data.name : undefined,\n      dateStart: data.dateStart !== previousData.dateStart ? new Date(new Date(data.dateStart).getTime() - (new Date(data.dateStart).getTimezoneOffset() * 60000)).toJSON() as DateTime : undefined,\n      dateEnd: data.dateEnd !== previousData.dateEnd ? new Date(new Date(data.dateEnd).getTime() - (new Date(data.dateEnd).getTimezoneOffset() * 60000)).toJSON() as DateTime : undefined\n    })\n    return Promise.resolve({ data: update })\n  },\n  getMany: async (\n    resource: string,\n    { ids }: GetManyParams\n  ): Promise<GetManyResult<EventDto>> => {\n    const data = await get<EventDto[]>(EVENTS_URL,\n      `/GetByConditions/e=>new int[] {${ids.toString()}}.Contains(e.Id)`)\n    return Promise.resolve({ data })\n  },\n  activate: async (\n    resource: string,\n    { eventId }: ChangeStateParams\n  ): Promise<DataProviderExtensionResult<ChangeStateResponse>> => {\n    const activate = await put<undefined, ChangeStateResponse>\n      (`${EVENTS_URL}/ActivateAsyncJob/${eventId}`, undefined)\n    return {\n      data: activate\n    }\n  },\n  deactivate: async (\n    resource: string,\n    { eventId }: ChangeStateParams\n  ): Promise<DataProviderExtensionResult<ChangeStateResponse>> => {\n    const deactivate = await put<undefined, ChangeStateResponse>\n      (`${EVENTS_URL}/DeactivateAsyncJob/${eventId}`, undefined)\n    return {\n      data: deactivate\n    }\n  },\n  getCompaniesList: async (\n    resource: string,\n    { eventId }: GetCompaniesParams\n  ): Promise<CacheableDataProviderExtensionResult<EventCompaniesDto>> => {\n    const companies = await get<EventCompaniesDto>\n      (`${EVENTS_URL}`, `/GetCompanies/${eventId}`)\n    return {\n      data: companies\n    }\n  },\n  attachCompanies: async (\n    resource: string,\n    params: EventCompaniesDto\n  ): Promise<CacheableDataProviderExtensionResult<EventCompaniesDto>> => {\n    const eventCompanies = await put<EventCompaniesDto, EventCompaniesDto>\n      (`${EVENTS_URL}/AttachCompanies`, params)\n    return {\n      data: eventCompanies\n    }\n  },\n  detachCompanies: async (\n    resource: string,\n    params: EventCompaniesDto\n  ): Promise<CacheableDataProviderExtensionResult<EventCompaniesDto>> => {\n    const eventCompanies = await put<EventCompaniesDto, EventCompaniesDto>\n      (`${EVENTS_URL}/DetachCompanies`, params)\n    return {\n      data: eventCompanies\n    }\n  },\n  attachObjects: async (\n    resource: string,\n    params: EventObjectsDto\n  ): Promise<CacheableDataProviderExtensionResult<EventObjectsDto>> => {\n    const eventObjects = await put<EventObjectsDto, EventObjectsDto>\n      (`${EVENTS_URL}/AttachObjects`, params)\n    return {\n      data: eventObjects\n    }\n  },\n  detachObjects: async (\n    resource: string,\n    params: EventObjectsDto\n  ): Promise<CacheableDataProviderExtensionResult<EventObjectsDto>> => {\n    const eventObjects = await put<EventObjectsDto, EventObjectsDto>\n      (`${EVENTS_URL}/DetachObjects`, params)\n    return {\n      data: eventObjects\n    }\n  },\n  getDevicesList: async (\n    resource: string,\n    { eventId }: GetDevicesParams\n  ): Promise<CacheableDataProviderExtensionResult<EventDevicesDto>> => {\n    const devices = await get<EventDevicesDto>\n      (`${EVENTS_URL}`, `/GetDevices/${eventId}`)\n    return {\n      data: devices\n    }\n  },\n  attachDevices: async (\n    resource: string,\n    params: EventDevicesDto\n  ): Promise<CacheableDataProviderExtensionResult<EventDevicesDto>> => {\n    const eventDevices = await put<EventDevicesDto, EventDevicesDto>\n      (`${EVENTS_URL}/AttachDevices`, params)\n    return {\n      data: eventDevices\n    }\n  },\n  detachDevices: async (\n    resource: string,\n    params: EventDevicesDto\n  ): Promise<CacheableDataProviderExtensionResult<EventDevicesDto>> => {\n    const eventDevices = await put<EventDevicesDto, EventDevicesDto>\n      (`${EVENTS_URL}/DetachDevices`, params)\n    return {\n      data: eventDevices\n    }\n  }\n} as EventDataProvider\n\ninterface EventDataProvider extends DataProvider {\n  activate: (\n    resource: string,\n    params: ChangeStateParams\n  ) => Promise<DataProviderExtensionResult<ChangeStateResponse>>;\n\n  deactivate: (\n    resource: string,\n    params: ChangeStateParams\n  ) => Promise<DataProviderExtensionResult<ChangeStateResponse>>;\n\n  getCompaniesList: (\n    resource: string,\n    params: GetCompaniesParams\n  ) => Promise<CacheableDataProviderExtensionResult<EventCompaniesDto>>;\n\n  attachCompanies: (\n    resource: string,\n    params: EventCompaniesDto\n  ) => Promise<CacheableDataProviderExtensionResult<EventCompaniesDto>>;\n\n  detachCompanies: (\n    resource: string,\n    params: EventCompaniesDto\n  ) => Promise<CacheableDataProviderExtensionResult<EventCompaniesDto>>;\n\n  getObjectsList: (\n    resource: string,\n    params: GetObjectsParams\n  ) => Promise<CacheableDataProviderExtensionResult<EventObjectsDto>>;\n\n  attachObjects: (\n    resource: string,\n    params: EventObjectsDto\n  ) => Promise<CacheableDataProviderExtensionResult<EventObjectsDto>>;\n\n  detachObjects: (\n    resource: string,\n    params: EventObjectsDto\n  ) => Promise<CacheableDataProviderExtensionResult<EventObjectsDto>>;\n\n  getDevicesList: (\n    resource: string,\n    params: GetDevicesParams\n  ) => Promise<CacheableDataProviderExtensionResult<EventDevicesDto>>;\n\n  attachDevices: (\n    resource: string,\n    params: EventDevicesDto\n  ) => Promise<CacheableDataProviderExtensionResult<EventDevicesDto>>;\n\n  detachDevices: (\n    resource: string,\n    params: EventDevicesDto\n  ) => Promise<CacheableDataProviderExtensionResult<EventDevicesDto>>;\n};\n\nexport interface ChangeStateParams {\n  eventId: Identifier;\n}\n\nexport interface ChangeStateResponse {\n  jobId: Identifier;\n}\n\nexport interface GetCompaniesParams {\n  eventId: Identifier;\n}\n\nexport interface GetObjectsParams {\n  eventId: Identifier;\n}\n\nexport interface GetDevicesParams {\n  eventId: Identifier;\n}\n\nexport interface CreateEventRequest {\n  readonly name: string\n  readonly status?: EventStatus\n  readonly dateStart: DateTime\n  readonly dateEnd: DateTime\n  readonly externalId?: string\n  readonly infix?: string\n  readonly objectsIds?: number[]\n}\n\nexport default provider","import { DataProvider, GetOneParams, GetOneResult } from \"react-admin\"\nimport { CustomerDetails } from \"./customer-details\"\nimport { CustomerDto } from \"../dto/customer.dto\"\nimport { CUSTOMERS_URL } from \"../api-urls\"\nimport { get } from '../common/fetch.utils'\n\nconst provider = {\n  getOne: async (\n    resource: string,\n    { id: customerId }: GetOneParams,\n  ): Promise<GetOneResult<CustomerDetails>> => {\n    const customer = await get<CustomerDto>(CUSTOMERS_URL, `/${customerId}`)\n    return {\n      data: customer as CustomerDetails\n    }\n  }\n} as DataProvider\n\nexport default provider","import { CustomerInfo } from \"./customer-info\"\n\nconst mapping: Partial<\n  Record<\n    keyof CustomerInfo | 'info',\n    (lambdaParameter: string, value: string | number) => string\n  >\n> = {\n  firstname: (lambdaParameter, value) => `${(lambdaParameter)}.Firstname.Contains(\"${value}\")`,\n  lastname: (lambdaParameter, value) => `${(lambdaParameter)}.Lastname.Contains(\"${value}\")`,\n  pesel: (lambdaParameter, value) => `${(lambdaParameter)}.Pesel.Contains(\"${value}\")`,\n  documentNumber: (lambdaParameter, value) => `${(lambdaParameter)}.DocumentNumber.Contains(\"${value}\")`,\n  info: (lambdaParameter, value) => `${value.toString().split(\" \").map((q) =>\n    `(${(lambdaParameter)}.Firstname+${(lambdaParameter)}.Lastname+${(lambdaParameter)}.Pesel+${(lambdaParameter)}.DocumentNumber).Contains(\"${q}\")`).join(\"&&\")}`,\n}\n\nexport const getFilterMapper = (key: keyof CustomerInfo) =>\n  mapping[key] as (lambdaParameter: string, value: string | number) => string\n","import { CustomerInfo } from './customer-info'\n\nconst mapping: Partial<Record<keyof CustomerInfo, string>> = {\n  id: 'c=>c.Id',\n  firstname: 'c=>c.Firstname',\n  lastname: 'c=>c.Lastname',\n  pesel: 'c=>c.Pesel',\n  documentNumber: 'c=>c.DocumentNumber'\n}\n\nexport const mapSortCustomerParams = (key: keyof CustomerInfo) => mapping[key]","import { GetListResult, DataProvider } from \"react-admin\";\nimport { CUSTOMERS_URL } from \"../api-urls\";\nimport { getWithPagination } from \"../common/fetch.utils\";\nimport { CustomerDto } from \"../dto/customer.dto\";\nimport { CustomerInfo } from \"./customer-info\";\nimport { getFilterMapper } from \"./customer-info-filter.mapper\";\nimport { mapSortCustomerParams } from \"./customer-info-sort.mapper\";\nimport { CustomerInfoFilter } from \"./customer-info.params\";\n\nconst getFilterParams = (\n  partialValues: Partial<CustomerInfo> & { readonly info: string },\n): string => {\n  if (Object.keys(partialValues).length) {\n    const filterParams = Object.entries(partialValues).map(([key, value]) => {\n      const mapper = getFilterMapper(key as keyof CustomerInfo)\n      return mapper('c', value as string)\n    })\n    return filterParams.reduce((p, c) => `${p}&&${c}`)\n  }\n  return 'true'\n}\n\nconst provider = {\n  getList: async (\n    resource: string,\n    { filter, sort, pagination }: CustomerInfoFilter\n  ): Promise<GetListResult<CustomerInfo>> => {\n    const filterParams = `c=>${getFilterParams(filter)}`\n    const queryParams: string[] = []\n    if (!!pagination && !!sort) {\n      queryParams.push(`sortBy=${mapSortCustomerParams(sort.field)}`)\n      queryParams.push(`sortOrder=${sort.order}`)\n      queryParams.push(`rangeFrom=${pagination.page * pagination.perPage - pagination.perPage}`)\n      queryParams.push(`rangeTo=${pagination.page * pagination.perPage}`)\n    }\n    else queryParams.push('')\n    const pathParams = queryParams.reduce((p, c) => `${p}&${c}`)\n    const path = `/${filterParams}?${pathParams}`\n\n    const { data, range: { total } } = await getWithPagination<CustomerDto[]>(\n      `${CUSTOMERS_URL}/GetByConditions`,\n      path\n    )\n\n    return Promise.resolve({\n      data,\n      total\n    })\n  }\n} as DataProvider\n\nexport default provider","import { AccessDateDto } from '../dto/access-date.dto'\n\nconst mapping: Partial<\n  Record<keyof AccessDateDto, (lambdaParameter: string, value: string | number) => string>\n> = {\n  id: (lambdaParameter, value) => value.toString().split(\",\").map((v) => `${lambdaParameter}.Id==${v}`).join(\"||\"),\n}\n\nexport const getFilterMapper = (key: keyof AccessDateDto) =>\n  mapping[key] as (lambdaParameter: string, value: string | number) => string\n","import { AccessDateDto } from \"../dto/access-date.dto\"\n\nconst mapping: Partial<Record<keyof AccessDateDto, string>> = {\n  id: 'ad=>ad.Id',\n  activeFrom: 'ad=>ad.ActiveFrom',\n  activeTo: 'ad=>ad.ActiveTo',\n  type: 'ad=>ad.Type'\n}\n\nexport const mapSortAccessDatesParam = (key: keyof AccessDateDto) => mapping[key]","import {\n  DataProvider, GetListResult\n} from 'react-admin'\nimport { AccessDateDto } from '../dto/access-date.dto'\nimport { getFilterMapper } from './access-dates-filter.mapper'\nimport { AccessDatesListParams } from './access-dates-list.params'\nimport { mapSortAccessDatesParam } from './access-dates-sort.mapper'\nimport { getWithPagination } from '../common/fetch.utils'\nimport { ACCESS_DATES } from '../api-urls'\n\nconst getFilterParams = (filter: Partial<AccessDateDto>) => {\n  if (Object.keys(filter).length) {\n    const filterParams = Object.entries(filter).map(([key, value]) => {\n      const mapper = getFilterMapper(key as keyof AccessDateDto)\n      return mapper(\"ad\", value as string)\n    })\n    return filterParams.reduce((p, c) => `${p}&&${c}`)\n  }\n  return \"true\"\n}\n\nconst provider = {\n  getList: async (\n    resource: string,\n    {\n      filter,\n      sort: { field, order },\n      pagination: { page, perPage }\n    }: AccessDatesListParams\n  ): Promise<GetListResult<AccessDateDto>> => {\n    const filterParams = `ad=>${getFilterParams(filter).toString()}`\n    const queryParams: string[] = []\n    queryParams.push(`sortBy=${mapSortAccessDatesParam(field)}`)\n    queryParams.push(`sortOrder=${order}`)\n    queryParams.push(`rangeFrom=${page * perPage - perPage}`)\n    queryParams.push(`rangeTo=${page * perPage}`)\n\n    const pathParams = queryParams.reduce((p, c) => `${p}&${c}`)\n    const path = `/${filterParams}?${pathParams}`\n\n    const {\n      data,\n      range: { total }\n    } = await getWithPagination<AccessDateDto[]>(`${ACCESS_DATES}/GetByConditions`, path)\n\n    return Promise.resolve({\n      data,\n      total\n    })\n  }\n} as DataProvider\n\nexport default provider","\nconst mapping: Record<\n  string,\n  (lambdaParameter: string, value: string | number | boolean, otherValues: any) => string | null> = {\n  name: (lambdaParameter, value) => `${(lambdaParameter)}.Name.Contains(\"${value}\")`,\n  filterEventId: (lambdaParameter, value, otherValues) => value ? `${(lambdaParameter)}.Events.Any(e=>e.Id==${otherValues?.eventId})` : null,\n  eventId: () => null\n}\n\nconst filterMapper = (key: string) =>\n  mapping[key] as (lambdaParameter: string, value: string | number | boolean, otherValues: any) => string\n\nexport default filterMapper","\nconst mapping: Record<string, string> = {\n  id: 'c=>c.Id',\n  name: \"c=>c.Name\"\n}\n\nexport const mapSortCompanyParam = (key: string) => mapping[key]\n","import { DataProvider, GetListResult } from \"react-admin\"\nimport { ADMINISTRATOR_URL } from \"../api-urls\"\nimport { getWithPagination } from \"../common/fetch.utils\"\nimport { filterParamsComposer, queryParamsComposer } from \"../common/get-by-conditions.utils\"\nimport { TicketAPIGetListParams } from \"../common/ticket-api-get-list.params\"\nimport { CompanyDto } from \"../dto/company.dto\"\nimport filterMapper from \"./company-filter.mapper\"\nimport { mapSortCompanyParam } from \"./company-sort.mapper\"\n\nconst provider = {\n  getList: async (\n    resource: string,\n    {\n      filter: { ...filter },\n      sort,\n      pagination\n    }: TicketAPIGetListParams\n  ): Promise<GetListResult<CompanyDto>> => {\n\n    const filterParams = `o=>${filterParamsComposer('o', filter, filterMapper)}`\n    const pathParams = queryParamsComposer(sort, pagination, mapSortCompanyParam)\n    const path = `/${filterParams}?${pathParams ?? pathParams}`\n\n    const { data, range: { total } } = await getWithPagination<CompanyDto[]>(`${ADMINISTRATOR_URL}/GetCompaniesByConditions`, path)\n\n    return Promise.resolve({\n      data,\n      total\n    })\n  }\n} as DataProvider\n\nexport default provider","\nconst mapping: Record<\n  string,\n  (lambdaParameter: string, value: string | number | boolean, otherValues: any) => string | null> = {\n  name: (lambdaParameter, value) => `${(lambdaParameter)}.Name.Contains(\"${value}\")`,\n  filterEventId: (lambdaParameter, value, otherValues) => value ? `${(lambdaParameter)}.Events.Any(e=>e.Id==${otherValues?.eventId})` : null,\n  eventId: () => null\n}\n\nconst filterMapper = (key: string) =>\n  mapping[key] as (lambdaParameter: string, value: string | number | boolean, otherValues: any) => string\n\nexport default filterMapper","\nconst mapping: Record<string, string> = {\n  id: 'l=>l.Id',\n  name: \"p=>p.Name\"\n}\n\nexport const mapSortObjectParam = (key: string) => mapping[key]\n","import { DataProvider, GetListResult } from \"react-admin\"\nimport { OBJECTS_URL } from \"../api-urls\"\nimport { getWithPagination } from \"../common/fetch.utils\"\nimport { filterParamsComposer, queryParamsComposer } from \"../common/get-by-conditions.utils\"\nimport { TicketAPIGetListParams } from \"../common/ticket-api-get-list.params\"\nimport { ObjectDto } from \"../dto/object.dto\"\nimport filterMapper from \"./object-filter.mapper\"\nimport { mapSortObjectParam } from \"./object-sort.mapper\"\n\nconst provider = {\n  getList: async (\n    resource: string,\n    {\n      filter: { ...filter },\n      sort,\n      pagination\n    }: TicketAPIGetListParams\n  ): Promise<GetListResult<ObjectDto>> => {\n\n    const filterParams = `o=>${filterParamsComposer('o', filter, filterMapper)}`\n    const pathParams = queryParamsComposer(sort, pagination, mapSortObjectParam)\n    const path = `/${filterParams}?${pathParams ?? pathParams}`\n\n    const { data, range: { total } } = await getWithPagination<ObjectDto[]>(`${OBJECTS_URL}/GetByConditions`, path)\n\n    return Promise.resolve({\n      data,\n      total\n    })\n  }\n} as DataProvider\n\nexport default provider","\nconst mapping: Record<\n  string,\n  (lambdaParameter: string, value: string | number | boolean, otherValues: any) => string | null> = {\n  name: (lambdaParameter, value) => `${(lambdaParameter)}.Name.Contains(\"${value}\")`,\n  categoryId: (lambdaParameter, value) => `${(lambdaParameter)}.CategoryId==${value}`,\n  filterEventId: (lambdaParameter, value, otherValues) => value ? `${(lambdaParameter)}.Events.Any(e=>e.Id==${otherValues?.eventId})` : null,\n  eventId: () => null\n}\n\nconst filterMapper = (key: string) =>\n  mapping[key] as (lambdaParameter: string, value: string | number | boolean, otherValues: any) => string\n\nexport default filterMapper","\nconst mapping: Record<string, string> = {\n  id: 'p=>p.Id',\n  name: \"p=>p.Name\"\n}\n\nexport const mapSortPalmParam = (key: string) => mapping[key]\n","import { DataProvider, GetListResult, GetOneParams, GetOneResult, Identifier, UpdateParams, UpdateResult } from \"react-admin\"\nimport { PALMS_URL } from \"../../api-urls\"\nimport { CacheableDataProviderExtensionResult, DataProviderExtensionResult } from \"../../common/data-provider\"\nimport { get, getWithPagination, patch, put } from \"../../common/fetch.utils\"\nimport { filterParamsComposer, queryParamsComposer } from \"../../common/get-by-conditions.utils\"\nimport { TicketAPIGetListParams } from \"../../common/ticket-api-get-list.params\"\nimport { PalmEntrancesDto } from \"../../dto/device/palm/palm-entrances.dto\"\nimport { PalmEventsDto } from \"../../dto/device/palm/palm-events.dto\"\nimport { PalmDto } from \"../../dto/device/palm/palm.dto\"\nimport { PalmLockResult } from \"../../enum/PalmLockResult\"\nimport { PalmResetMobileDeviceIdResults } from \"../../enum/PalmResetMobileDeviceIdResults\"\nimport { PalmSetMobileDeviceIdResults } from \"../../enum/PalmSetMobileDeviceIdResults\"\nimport { PalmUnlockResult } from \"../../enum/PalmUnlockResult\"\nimport filterMapper from \"./palm-filter.mapper\"\nimport { mapSortPalmParam } from \"./palm-sort.mapper\"\n\nconst provider = {\n  getList: async (\n    resource: string,\n    {\n      filter: { ...filter },\n      sort,\n      pagination\n    }: TicketAPIGetListParams\n  ): Promise<GetListResult<PalmDto>> => {\n    const filterParams = `o=>${filterParamsComposer('o', filter, filterMapper)}`\n    const pathParams = queryParamsComposer(sort, pagination, mapSortPalmParam)\n    const path = `/${filterParams}?${pathParams ?? pathParams}`\n\n    const { data, range: { total } } = await getWithPagination<PalmDto[]>(`${PALMS_URL}/GetByConditions`, path)\n\n    return Promise.resolve({\n      data,\n      total\n    })\n  },\n  getOne: async (\n    resource: string,\n    { id }: GetOneParams\n  ): Promise<GetOneResult<PalmDto>> => {\n    const data = await get<PalmDto>(PALMS_URL, `/${id}`)\n    return Promise.resolve({\n      data\n    })\n  },\n  update: async (\n    resource: string,\n    { id, data, previousData }: UpdateParams<PalmDto>\n  ): Promise<UpdateResult> => {\n    const update = await patch<{ id: Identifier, [n: string]: any }, PalmDto>(PALMS_URL, {\n      id,\n      name: data.name !== previousData.name ? data.name : undefined,\n      isWatched: data.isWatched !== previousData.isWatched ? data.isWatched : undefined,\n      // lastRefresh: new Date(new Date(data.lastRefresh).getTime() - (new Date(data.lastRefresh).getTimezoneOffset() * 60000)).toJSON() as DateTime || previousData.lastRefresh,\n      direction: data.direction !== previousData.direction ? data.direction : undefined,\n      categoryId: data.categoryId !== previousData.categoryId ? data.categoryId : undefined,\n      onlineInfixCeck: data.onlineInfixCeck !== previousData.onlineInfixCeck ? data.onlineInfixCeck : undefined,\n      multiplicity: data.multiplicity !== previousData.multiplicity ? data.multiplicity : undefined,\n    })\n    return Promise.resolve({ data: update })\n  },\n  lock: async (\n    resource: string,\n    { palmId, lockName }: LockParams\n  ): Promise<DataProviderExtensionResult<LockResponse>> => {\n    const data = await put<LockParams, LockResponse>(`${PALMS_URL}/Lock`, {\n      palmId,\n      lockName\n    })\n    return Promise.resolve({ data })\n  },\n  unlock: async (\n    resource: string,\n    { palmId }: UnlockParams\n  ): Promise<DataProviderExtensionResult<UnlockResponse>> => {\n    const data = await put<UnlockParams, UnlockResponse>(`${PALMS_URL}/Unlock`, {\n      palmId\n    })\n    return Promise.resolve({ data: { ...data, disabled: undefined } })\n  },\n  setMobileDeviceId: async (\n    resource: string,\n    { palmId, mobileDeviceId }: SetMobileDeviceIdParams\n  ): Promise<DataProviderExtensionResult<SetMobileDeviceIdResponse>> => {\n    const data = await put<SetMobileDeviceIdParams, SetMobileDeviceIdResponse>(`${PALMS_URL}/SetMobileDeviceId`, {\n      palmId,\n      mobileDeviceId\n    })\n    return Promise.resolve({ data })\n  },\n  resetMobileDeviceId: async (\n    resource: string,\n    { palmId }: ResetMobileDeviceIdParams\n  ): Promise<DataProviderExtensionResult<ResetMobileDeviceIdResponse>> => {\n    const data = await put<ResetMobileDeviceIdParams, ResetMobileDeviceIdResponse>(`${PALMS_URL}/ResetMobileDeviceId`, {\n      palmId\n    })\n    return Promise.resolve({ data: { ...data, mobileDeviceId: undefined } })\n  },\n  attachEvents: async (\n    resource: string,\n    { palmId, eventsIds }: PalmEventsDto\n  ): Promise<CacheableDataProviderExtensionResult<PalmEventsDto>> => {\n    const data = await put<PalmEventsDto, PalmEventsDto>(`${PALMS_URL}/AttachEvents`, {\n      palmId,\n      eventsIds\n    })\n    return Promise.resolve({ data })\n  },\n  detachEvents: async (\n    resource: string,\n    { palmId, eventsIds }: PalmEventsDto\n  ): Promise<CacheableDataProviderExtensionResult<PalmEventsDto>> => {\n    const data = await put<PalmEventsDto, PalmEventsDto>(`${PALMS_URL}/DetachEvents`, {\n      palmId,\n      eventsIds\n    })\n    return Promise.resolve({ data })\n  },\n  attachEntrances: async (\n    resource: string,\n    { palmId, entrancesIds }: PalmEntrancesDto\n  ): Promise<CacheableDataProviderExtensionResult<PalmEntrancesDto>> => {\n    const data = await put<PalmEntrancesDto, PalmEntrancesDto>(`${PALMS_URL}/AttachEntrances`, {\n      palmId,\n      entrancesIds\n    })\n    return Promise.resolve({ data })\n  },\n  detachEntrances: async (\n    resource: string,\n    { palmId, entrancesIds }: PalmEntrancesDto\n  ): Promise<CacheableDataProviderExtensionResult<PalmEntrancesDto>> => {\n    const data = await put<PalmEntrancesDto, PalmEntrancesDto>(`${PALMS_URL}/DetachEntrances`, {\n      palmId,\n      entrancesIds\n    })\n    return Promise.resolve({ data })\n  }\n} as PalmDataProvider\n\ninterface PalmDataProvider extends DataProvider {\n  lock: (\n    resource: string,\n    params: LockParams\n  ) => Promise<DataProviderExtensionResult<LockResponse>>,\n\n  unlock: (\n    resource: string,\n    params: UnlockParams\n  ) => Promise<DataProviderExtensionResult<UnlockResponse>>,\n\n  setMobileDeviceId: (\n    resource: string,\n    params: SetMobileDeviceIdParams\n  ) => Promise<DataProviderExtensionResult<SetMobileDeviceIdResponse>>,\n\n  resetMobileDeviceId: (\n    resource: string,\n    params: ResetMobileDeviceIdParams\n  ) => Promise<DataProviderExtensionResult<ResetMobileDeviceIdResponse>>,\n\n  attachEvents: (\n    resource: string,\n    params: PalmEventsDto\n  ) => Promise<CacheableDataProviderExtensionResult<PalmEventsDto>>,\n\n  detachEvents: (\n    resource: string,\n    params: PalmEventsDto\n  ) => Promise<CacheableDataProviderExtensionResult<PalmEventsDto>>,\n\n  attachEntrances: (\n    resource: string,\n    params: PalmEntrancesDto\n  ) => Promise<CacheableDataProviderExtensionResult<PalmEntrancesDto>>,\n\n  detachEntrances: (\n    resource: string,\n    params: PalmEntrancesDto\n  ) => Promise<CacheableDataProviderExtensionResult<PalmEntrancesDto>>\n}\n\nexport interface LockParams {\n  palmId: Identifier,\n  lockName: string\n}\n\nexport interface LockResponse {\n  palmId: Identifier,\n  lockName: string,\n  lockResult: PalmLockResult\n}\n\nexport interface UnlockParams {\n  palmId: Identifier\n}\n\nexport interface UnlockResponse {\n  palmId: Identifier,\n  unlockResult: PalmUnlockResult\n}\n\nexport interface SetMobileDeviceIdParams {\n  palmId: Identifier,\n  mobileDeviceId: string\n}\n\nexport interface SetMobileDeviceIdResponse {\n  palmId: Identifier,\n  mobileDeviceId: string,\n  setResult: PalmSetMobileDeviceIdResults\n}\n\nexport interface ResetMobileDeviceIdParams {\n  palmId: Identifier\n}\n\nexport interface ResetMobileDeviceIdResponse {\n  palmId: Identifier,\n  resetResult: PalmResetMobileDeviceIdResults\n}\n\nexport default provider","\nconst mapping: Record<\n  string,\n  (lambdaParameter: string, value: string | number | boolean, otherValues: any) => string | null> = {\n  name: (lambdaParameter, value) => `${(lambdaParameter)}.Name.Contains(\"${value}\")`,\n  categoryId: (lambdaParameter, value) => `${(lambdaParameter)}.CategoryId==${value}`,\n  filterEventId: (lambdaParameter, value, otherValues) => value ? `${(lambdaParameter)}.Events.Any(e=>e.Id==${otherValues?.eventId})` : null,\n  eventId: () => null\n}\n\nconst filterMapper = (key: string) =>\n  mapping[key] as (lambdaParameter: string, value: string | number | boolean, otherValues: any) => string\n\nexport default filterMapper","\nconst mapping: Record<string, string> = {\n  id: 'l=>l.Id',\n  name: \"p=>p.Name\",\n  address: \"p=>p.Address\"\n}\n\nexport const mapSortEngineParam = (key: string) => mapping[key]\n","import { DataProvider, GetListResult, GetOneParams, GetOneResult, Identifier, UpdateParams, UpdateResult } from \"react-admin\"\nimport { ENGINES_URL } from \"../../api-urls\"\nimport { CacheableDataProviderExtensionResult, DataProviderExtensionResult } from \"../../common/data-provider\"\nimport { get, getWithPagination, patch, put } from \"../../common/fetch.utils\"\nimport { filterParamsComposer, queryParamsComposer } from \"../../common/get-by-conditions.utils\"\nimport { TicketAPIGetListParams } from \"../../common/ticket-api-get-list.params\"\nimport { EngineEntrancesDto } from \"../../dto/device/engine/engine-entrances.dto\"\nimport { EngineEventsDto } from \"../../dto/device/engine/engine-events.dto\"\nimport { EngineDto } from \"../../dto/device/engine/engine.dto\"\nimport { RemoveTSCanCredentialsDto } from \"../../dto/device/engine/remove-tscan-credentials.dto\"\nimport { SetStandbyModeDto } from \"../../dto/device/engine/set-standby-mode.dto\"\nimport { SetTSCanCredentialsDto } from \"../../dto/device/engine/set-tscan-credentials.dto\"\nimport { EngineLockResults } from \"../../enum/EngineLockResults\"\nimport { EngineUnlockResults } from \"../../enum/EngineUnlockResults\"\nimport filterMapper from \"./engine-filter.mapper\"\nimport { mapSortEngineParam } from \"./engine-sort.mapper\"\n\nconst provider = {\n  getList: async (\n    resource: string,\n    {\n      filter: { ...filter },\n      sort,\n      pagination\n    }: TicketAPIGetListParams\n  ): Promise<GetListResult<EngineDto>> => {\n\n    const filterParams = `o=>${filterParamsComposer('o', filter, filterMapper)}`\n    const pathParams = queryParamsComposer(sort, pagination, mapSortEngineParam)\n    const path = `/${filterParams}?${pathParams ?? pathParams}`\n\n    const { data, range: { total } } = await getWithPagination<EngineDto[]>(`${ENGINES_URL}/GetByConditions`, path)\n\n    return Promise.resolve({\n      data,\n      total\n    })\n  },\n  getOne: async (\n    resource: string,\n    { id }: GetOneParams\n  ): Promise<GetOneResult<EngineDto>> => {\n    const data = await get<EngineDto>(ENGINES_URL, `/${id}`)\n    return Promise.resolve({\n      data\n    })\n  },\n  update: async (\n    resource: string,\n    { id, data, previousData }: UpdateParams<EngineDto>\n  ): Promise<UpdateResult> => {\n    const update = await patch<{ id: Identifier, [n: string]: any }, EngineDto>(ENGINES_URL, {\n      id,\n      name: data.name !== previousData.name ? data.name : undefined,\n      isWatched: data.isWatched !== previousData.isWatched ? data.isWatched : undefined,\n      // lastRefresh: new Date(new Date(data.lastRefresh).getTime() - (new Date(data.lastRefresh).getTimezoneOffset() * 60000)).toJSON() as DateTime || previousData.lastRefresh,\n      address: data.address !== previousData.address ? data.address : undefined,\n      direction: data.direction !== previousData.direction ? data.direction : undefined,\n      categoryId: data.categoryId !== previousData.categoryId ? data.categoryId : undefined,\n      onlineInfixCeck: data.onlineInfixCeck !== previousData.onlineInfixCeck ? data.onlineInfixCeck : undefined,\n      multiplicity: data.multiplicity !== previousData.multiplicity ? data.multiplicity : undefined\n    })\n    return Promise.resolve({ data: update })\n  },\n  attachEvents: async (\n    resource: string,\n    params: EngineEventsDto\n  ): Promise<CacheableDataProviderExtensionResult<EngineEventsDto>> => {\n    const engineEvents = await put<EngineEventsDto, EngineEventsDto>\n      (`${ENGINES_URL}/AttachEvents`, params)\n    return {\n      data: engineEvents\n    }\n  },\n  detachEvents: async (\n    resource: string,\n    params: EngineEventsDto\n  ): Promise<CacheableDataProviderExtensionResult<EngineEventsDto>> => {\n    const engineEvents = await put<EngineEventsDto, EngineEventsDto>\n      (`${ENGINES_URL}/DetachEvents`, params)\n    return {\n      data: engineEvents\n    }\n  },\n  attachEntrances: async (\n    resource: string,\n    params: EngineEntrancesDto\n  ): Promise<CacheableDataProviderExtensionResult<EngineEntrancesDto>> => {\n    const engineEntrances = await put<EngineEntrancesDto, EngineEntrancesDto>\n      (`${ENGINES_URL}/AttachEntrances`, params)\n    return {\n      data: engineEntrances\n    }\n  },\n  detachEntrances: async (\n    resource: string,\n    params: EngineEntrancesDto\n  ): Promise<CacheableDataProviderExtensionResult<EngineEntrancesDto>> => {\n    const engineEntrances = await put<EngineEntrancesDto, EngineEntrancesDto>\n      (`${ENGINES_URL}/DetachEntrances`, params)\n    return {\n      data: engineEntrances\n    }\n  },\n  setTSCanCredentials: async (\n    resource: string,\n    params: SetTSCanCredentialsDto\n  ): Promise<DataProviderExtensionResult<SetTSCanCredentialsDto>> => {\n    const setTSCanCredentials = await put<SetTSCanCredentialsDto, SetTSCanCredentialsDto>\n      (`${ENGINES_URL}/SetTSCanCredentials`, params)\n    return {\n      data: setTSCanCredentials\n    }\n  },\n  removeTSCanCredentials: async (\n    resource: string,\n    params: RemoveTSCanCredentialsDto\n  ): Promise<DataProviderExtensionResult<RemoveTSCanCredentialsDto>> => {\n    const removeTSCanCredentials = await put<RemoveTSCanCredentialsDto, RemoveTSCanCredentialsDto>\n      (`${ENGINES_URL}/RemoveTSCanCredentials`, params)\n    return {\n      data: removeTSCanCredentials\n    }\n  },\n  lock: async (\n    resource: string,\n    params: LockParams\n  ): Promise<DataProviderExtensionResult<LockResponse>> => {\n    const lock = await put<LockParams, LockResponse>\n      (`${ENGINES_URL}/Lock`, params)\n    return {\n      data: lock\n    }\n  },\n  unlock: async (\n    resource: string,\n    params: UnlockParams\n  ): Promise<DataProviderExtensionResult<UnlockResponse>> => {\n    const unlock = await put<UnlockParams, UnlockResponse>\n      (`${ENGINES_URL}/Unlock`, params)\n    return {\n      data: unlock\n    }\n  },\n  setStandbyMode: async (\n    resource: string,\n    params: SetStandbyModeDto\n  ): Promise<DataProviderExtensionResult<SetStandbyModeDto>> => {\n    const setStandbyMode = await put<SetStandbyModeDto, SetStandbyModeDto>\n      (`${ENGINES_URL}/SetStandbyMode`, params)\n    return {\n      data: setStandbyMode\n    }\n  }\n} as EngineDataProvider\n\ninterface EngineDataProvider extends DataProvider {\n  attachEvents: (\n    resource: string,\n    params: EngineEventsDto\n  ) => Promise<CacheableDataProviderExtensionResult<EngineEventsDto>>;\n\n  detachEvents: (\n    resource: string,\n    params: EngineEventsDto\n  ) => Promise<CacheableDataProviderExtensionResult<EngineEventsDto>>;\n\n  attachEntrances: (\n    resource: string,\n    params: EngineEntrancesDto\n  ) => Promise<CacheableDataProviderExtensionResult<EngineEntrancesDto>>;\n\n  detachEntrances: (\n    resource: string,\n    params: EngineEntrancesDto\n  ) => Promise<CacheableDataProviderExtensionResult<EngineEntrancesDto>>;\n\n  setTSCanCredentials: (\n    resource: string,\n    params: SetTSCanCredentialsDto\n  ) => Promise<DataProviderExtensionResult<SetTSCanCredentialsDto>>;\n\n  removeTSCanCredentials: (\n    resource: string,\n    params: RemoveTSCanCredentialsDto\n  ) => Promise<DataProviderExtensionResult<RemoveTSCanCredentialsDto>>;\n\n  lock: (\n    resource: string,\n    params: LockParams\n  ) => Promise<DataProviderExtensionResult<LockResponse>>;\n\n  unlock: (\n    resource: string,\n    params: UnlockParams\n  ) => Promise<DataProviderExtensionResult<UnlockResponse>>;\n\n  setStandbyMode: (\n    resource: string,\n    params: SetStandbyModeDto\n  ) => Promise<DataProviderExtensionResult<SetStandbyModeDto>>;\n};\n\nexport interface LockParams {\n  engineId: number\n  lockName: string\n}\n\nexport interface LockResponse {\n  engineId: number\n  lockName: string\n  lockResult: EngineLockResults\n}\n\nexport interface UnlockParams {\n  engineId: number\n}\n\nexport interface UnlockResponse {\n  engineId: number\n  unlockResult: EngineUnlockResults\n}\n\nexport default provider","\nconst mapping: Partial<\n  Record<\n    string,\n    (lambdaParameter: string, value: string | number | boolean, otherValues: any) => string | null\n  >\n> = {\n  note: (lambdaParameter, value) => `${(lambdaParameter)}.Note.Contains(\"${value}\")`,\n  filterVerifierDeviceId: (lambdaParameter, value, otherValues) => value ? `${(lambdaParameter)}.VerifierDevices.Any(vd=>vd.Id==${otherValues?.verifierDeviceId})` : null,\n  verifierDeviceId: () => null\n}\n\nexport const getFilterMapper = (key: string) =>\n  mapping[key] as (lambdaParameter: string, value: string | number | boolean, otherValues: any) => string\n","\nconst mapping: Record<string, string> = {\n  id: 'e=>e.Id',\n  note: 'e=>e.Note'\n}\n\nexport const mapSortEntranceParam = (key: string) => mapping[key]\n","import { DataProvider, GetListResult, GetManyParams, GetManyReferenceResult, GetManyResult, GetOneParams, GetOneResult } from 'react-admin'\nimport { ENTRANCES_URL } from '../api-urls'\nimport { get, getWithPagination } from '../common/fetch.utils'\nimport { queryParamsComposer } from '../common/get-by-conditions.utils'\nimport { TicketAPIGetListParams, TicketAPIGetManyRefrenceParams } from '../common/ticket-api-get-list.params'\nimport { EntranceDto } from '../dto/entrance.dto'\nimport { getFilterMapper } from './entrance-filter.mapper'\nimport { mapSortEntranceParam } from './entrance-sort.mapper'\n\nconst getFilterParams = (\n  partialValues: Partial<EntranceDto>\n): string => {\n  if (Object.keys(partialValues).length) {\n    const filterParams = Object.entries(partialValues).map(([key, value]) => {\n      const mapper = getFilterMapper(key)\n      return mapper('o', value as string, partialValues)\n    }).filter((val) => val != null)\n    if (filterParams.length) {\n      return filterParams.reduce((p, c) => `${p}&&${c}`)\n    }\n  }\n  return 'true'\n}\n\nconst provider = {\n  getList: async (\n    resource: string,\n    {\n      filter: { ...filter },\n      sort,\n      pagination\n    }: TicketAPIGetListParams,\n  ): Promise<GetListResult<EntranceDto>> => {\n    const filterParams = `o=>${getFilterParams(filter)}`\n    const pathParams = queryParamsComposer(sort, pagination, mapSortEntranceParam)\n    const path = `/${filterParams}?${pathParams ?? pathParams}`\n\n    const { data, range: { total } } = await getWithPagination<EntranceDto[]>(`${ENTRANCES_URL}/GetByConditions`, path)\n\n    return Promise.resolve({\n      data,\n      total\n    })\n  },\n  getMany: async (\n    resource: string,\n    {\n      ids\n    }: GetManyParams,\n  ): Promise<GetManyResult<EntranceDto>> => {\n    const { data } = await getWithPagination<EntranceDto[]>(`${ENTRANCES_URL}/GetByConditions/`, `e=>new int[] {${ids.toString()}}.Contains(e.Id)`)\n    return Promise.resolve({\n      data\n    })\n  },\n  getManyReference: async (\n    resource: string,\n    {\n      filter: { ...filter },\n      sort,\n      pagination\n    }: TicketAPIGetManyRefrenceParams,\n  ): Promise<GetManyReferenceResult<EntranceDto>> => {\n    const filterParams = `o=>${getFilterParams(filter)}`\n    const pathParams = queryParamsComposer(sort, pagination, mapSortEntranceParam)\n    const path = `/${filterParams}?${pathParams ?? pathParams}`\n\n    const { data, range: { total } } = await getWithPagination<EntranceDto[]>(`${ENTRANCES_URL}/GetByConditions`, path)\n\n    return Promise.resolve({\n      data,\n      total\n    })\n  },\n  getOne: async (\n    resource: string,\n    { id }: GetOneParams\n  ): Promise<GetOneResult<EntranceDto>> => {\n    const data = await get<EntranceDto>(ENTRANCES_URL, `/${id}`)\n    return Promise.resolve({\n      data\n    })\n  }\n} as DataProvider\n\nexport default provider","\nconst mapping: Record<\n  string,\n  (lambdaParameter: string, value: string | number | boolean, otherValues: any) => string | null\n> = {\n  name: (lambdaParameter, value) => `${(lambdaParameter)}.Name.Contains(\"${value}\")`,\n  filterAccessId: (lambdaParameter, value, otherValues) => value ? `${(lambdaParameter)}.Accesses.Any(a=>a.Id==${otherValues?.accessId})` : null,\n  accessId: () => null,\n}\n\nconst filterMapper = (key: string) =>\n  mapping[key] as (lambdaParameter: string, value: string | number | boolean, otherValues: any) => string\n\nexport default filterMapper","\nconst mapping: Record<string, string> = {\n  id: 'l=>l.Id',\n  name: \"p=>p.Name\",\n  active: \"p=>p.Active\"\n}\n\nexport const mapSortVariantParam = (key: string) => mapping[key]","import { DataProvider, GetListResult, GetOneParams, GetOneResult, UpdateParams, UpdateResult, CreateParams, CreateResult, GetManyParams, GetManyResult } from \"react-admin\"\nimport { VARIANTS_URL } from \"../api-urls\"\nimport { CacheableDataProviderExtensionResult } from \"../common/data-provider\"\nimport { get, getWithPagination, patch, post, put } from \"../common/fetch.utils\"\nimport { filterParamsComposer, queryParamsComposer } from \"../common/get-by-conditions.utils\"\nimport { TicketAPIGetListParams } from \"../common/ticket-api-get-list.params\"\nimport { VariantAccessesDto } from \"../dto/variant-accesses.dto\"\nimport { VariantDto } from \"../dto/variant.dto\"\nimport filterMapper from \"./variants-filter.mapper\"\nimport { mapSortVariantParam } from \"./variants-sort.mapper\"\n\nconst provider = {\n  getList: async (\n    resource: string,\n    {\n      filter: { ...filter },\n      sort,\n      pagination\n    }: TicketAPIGetListParams\n  ): Promise<GetListResult<VariantDto>> => {\n\n    const filterParams = `v=>${filterParamsComposer('v', filter, filterMapper)}`\n    const pathParams = queryParamsComposer(sort, pagination, mapSortVariantParam)\n    const path = `/${filterParams}?${pathParams ?? pathParams}`\n\n    const { data, range: { total } } = await getWithPagination<VariantDto[]>(`${VARIANTS_URL}/GetByConditions`, path)\n\n    return Promise.resolve({\n      data,\n      total\n    })\n  },\n  getOne: async (\n    resource: string,\n    { id }: GetOneParams\n  ): Promise<GetOneResult<VariantDto>> => {\n    const data = await get<VariantDto>(VARIANTS_URL, `/${id}`)\n    return Promise.resolve({\n      data\n    })\n  },\n  update: async (\n    resource: string,\n    { id, data, previousData }: UpdateParams<VariantDto>\n  ): Promise<UpdateResult> => {\n    const update = await patch<UpdateVariantRequest, VariantDto>(VARIANTS_URL, {\n      id: id as number,\n      name: data.name !== previousData.name ? data.name : undefined,\n      active: data.active !== previousData.active ? data.active : undefined\n    })\n    return Promise.resolve({ data: update })\n  },\n  create: async (\n    resource: string,\n    { data }: CreateParams<VariantDto>\n  ): Promise<CreateResult> => {\n    const created = await post<CreateVariantRequest[], VariantDto[]>(VARIANTS_URL, [{\n      name: data?.name,\n      active: data?.active || false\n    }])\n    return Promise.resolve({ data: created[0] })\n  },\n  getMany: async (\n    resource: string,\n    { ids }: GetManyParams\n  ): Promise<GetManyResult<VariantDto>> => {\n    const data = await get<VariantDto[]>(VARIANTS_URL,\n      `/GetByConditions/e=>new int[] {${ids.toString()}}.Contains(e.Id)`)\n    return Promise.resolve({ data })\n  },\n  attachAccesses: async (\n    resource: string,\n    params: VariantAccessesDto\n  ): Promise<CacheableDataProviderExtensionResult<VariantAccessesDto>> => {\n    const variantAccesses = await put<VariantAccessesDto, VariantAccessesDto>\n      (`${VARIANTS_URL}/AttachAccesses`, params)\n    return {\n      data: variantAccesses\n    }\n  },\n  detachAccesses: async (\n    resource: string,\n    params: VariantAccessesDto\n  ): Promise<CacheableDataProviderExtensionResult<VariantAccessesDto>> => {\n    const variantAccesses = await put<VariantAccessesDto, VariantAccessesDto>\n      (`${VARIANTS_URL}/DetachAccesses`, params)\n    return {\n      data: variantAccesses\n    }\n  }\n} as VariantDataProvider\n\ninterface VariantDataProvider extends DataProvider {\n  attachAccesses: (\n    resource: string,\n    params: VariantAccessesDto\n  ) => Promise<CacheableDataProviderExtensionResult<VariantAccessesDto>>;\n\n  detachAccesses: (\n    resource: string,\n    params: VariantAccessesDto\n  ) => Promise<CacheableDataProviderExtensionResult<VariantAccessesDto>>;\n};\n\ntype CreateVariantRequest = Pick<VariantDto, \"name\"> & Partial<Pick<VariantDto, \"active\">>\n\ntype UpdateVariantRequest = Pick<VariantDto, \"id\"> & Partial<Pick<VariantDto, \"name\" | \"active\">>\n\nexport default provider","import { DataProvider, GetOneParams, GetOneResult, GetManyParams, GetManyResult } from \"react-admin\"\nimport { ADMINISTRATOR_URL } from \"../api-urls\"\nimport { get } from \"../common/fetch.utils\"\nimport { UserDto } from \"../dto/user.dto\"\n\nconst provider = {\n  getOne: async (\n    resource: string,\n    { id }: GetOneParams\n  ): Promise<GetOneResult<UserDto>> => {\n    const data = await get<UserDto>(`${ADMINISTRATOR_URL}/GetUserById`, `/${id}`)\n    return Promise.resolve({\n      data\n    })\n  },\n  getMany: async (\n    resource: string,\n    {\n      ids\n    }: GetManyParams,\n  ): Promise<GetManyResult<UserDto>> => {\n    const data = await get<UserDto[]>(`${ADMINISTRATOR_URL}/GetUsersByConditions`, `/u=>new int[] {${ids.toString()}}.Contains(u.Id)`)\n    return Promise.resolve({\n      data\n    })\n  }\n} as DataProvider\n\nexport default provider","import { DataProvider, sanitizeFetchType } from 'react-admin'\nimport accessUsingsProvider from './access-usings/access-usings.provider'\nimport bookingsProvider from './bookings/bookings.provider'\nimport logsProvider from './logs/extended-logs.provider'\nimport { ResourceName } from './ResourceName'\nimport statsOverallViewListProvider from './stats/overall-view/overall-view-list.provider'\nimport statsOverallViewProvider from './stats/overall-view/overall-view.provider'\nimport ticketDetailsProvider from './ticket-details/ticket-details.provider'\nimport ticketInfoProvider from './ticket-info/ticket-info.provider'\nimport ticketsProvider from './tickets/tickets.provider'\nimport accessesProvider from './accesses/access.provider'\nimport eventsProvider from './events/event.provider'\nimport customersDetailsProvider from './customer-details/customer-details.provider'\nimport customersInfoProvider from './customer-info/customer-info.provider'\nimport accessDatesProvider from './access-dates/access-dates.provider'\nimport companiesProvider from './companies/companies.provider'\nimport objectsProvider from './objects/objects.provider'\nimport palmProvider from './devices/palms/palms.provider'\nimport engineProvider from './devices/engines/engines.provider'\nimport entrancesProvider from './entrances/entrance.provider'\nimport variantsProvider from './variants/variants.provider'\nimport usersProvider from './users/user.provider'\n\nconst dataProviders: Record<ResourceName, DataProvider> = {\n  [ResourceName.ACCESS_DATES]: accessDatesProvider,\n  [ResourceName.ACCESSES]: accessesProvider,\n  [ResourceName.ACCESS_USINGS]: accessUsingsProvider,\n  [ResourceName.BOOKINGS]: bookingsProvider,\n  [ResourceName.COMPANIES]: companiesProvider,\n  [ResourceName.CUSTOMER_DETAILS]: customersDetailsProvider,\n  [ResourceName.CUSTOMER_INFO]: customersInfoProvider,\n  [ResourceName.ENGINES]: engineProvider,\n  [ResourceName.ENTRANCES]: entrancesProvider,\n  [ResourceName.EVENTS]: eventsProvider,\n  [ResourceName.LOGS]: logsProvider,\n  [ResourceName.OBJECTS]: objectsProvider,\n  [ResourceName.PALMS]: palmProvider,\n  [ResourceName.STATS_OVERALL_VIEW]: statsOverallViewProvider,\n  [ResourceName.STATS_OVERALL_VIEW_LIST]: statsOverallViewListProvider,\n  [ResourceName.TICKETS]: ticketsProvider,\n  [ResourceName.TICKET_INFO]: ticketInfoProvider,\n  [ResourceName.TICKET_DETAILS]: ticketDetailsProvider,\n  [ResourceName.TICKET_LOGS]: logsProvider,\n  [ResourceName.USERS]: usersProvider,\n  [ResourceName.VARIANTS]: variantsProvider\n}\n\nexport default (\n  fetchType: string,\n  resource: string,\n  params: unknown,\n): Promise<unknown> => {\n  const selectedProvider = dataProviders[resource as ResourceName]\n  const type = sanitizeFetchType(fetchType)\n  return selectedProvider[type](resource, params)\n}\n","import i18n from 'i18next'\n\nconst provider = {\n  translate: (key: string, options: any): string => i18n.t(key, options),\n  changeLocale: async (locale: string): Promise<void> => {\n    const identity = localStorage.getItem('username') as string\n    localStorage.setItem(`${identity}.lng`, locale)\n    await i18n.changeLanguage(locale)\n  },\n  getLocale: (): string => i18n.language,\n}\n\nexport default provider","import { AuthProvider } from 'react-admin'\nimport { get } from '../common/fetch.utils'\nimport { RoleDto } from '../dto/role.dto'\nimport { ROLES_URL } from '../api-urls'\n\nconst areRolesOutOfSync = (local: Set<string>, remote: string[]) =>\n  local.size !== remote.length || !remote.every((value) => local.has(value))\n\nconst validateRoles = async (\n  dataProvider: AuthProvider,\n  params: any,\n  rolesFromRemote: string[],\n): Promise<Set<string>> => {\n  const rolesFromLocalStorage = (await dataProvider.getPermissions(\n    params,\n  )) as Set<string>\n  if (areRolesOutOfSync(rolesFromLocalStorage, rolesFromRemote)) {\n    // eslint-disable-next-line no-console\n    console.error('Corrupted permissions')\n    await dataProvider.logout('')\n    return Promise.resolve(new Set([]))\n  }\n  return Promise.resolve(rolesFromLocalStorage)\n}\n\nexport const withSynchronizedPermissions = (dataProvider: AuthProvider) => {\n  // this is set once on app initialization\n  let rolesFromRemote: string[] | null = null\n\n  return new Proxy<AuthProvider>(dataProvider, {\n    get:\n      (target, name: string) =>\n      async (params: any): Promise<any> => {\n        switch (name as keyof AuthProvider) {\n          // avoid re-executing getRoles call\n          case 'login': {\n            await dataProvider.login(params)\n            const rolesFromLocalStorage = (await dataProvider.getPermissions(\n              params,\n            )) as Set<string>\n            rolesFromRemote = Array.from(rolesFromLocalStorage)\n            return Promise.resolve()\n          }\n          case 'getPermissions': {\n            if (rolesFromRemote) {\n              // compares the status of local and remote roles each time it checks for permissions\n              return validateRoles(dataProvider, params, rolesFromRemote)\n            }\n            // after reloading the page it needs to fetch roles from remote\n            const roleDtos = await get<RoleDto[]>(ROLES_URL)\n            const roles = roleDtos.map((v) => v.name)\n            rolesFromRemote = roles\n            localStorage.setItem('roles', roles.join())\n            return Promise.resolve(new Set(roles))\n          }\n          default: {\n            return dataProvider[name](params)\n          }\n        }\n      },\n  })\n}\n","import { defaultTheme, RaThemeOptions } from 'react-admin'\nimport { deepPurple, green } from '@material-ui/core/colors'\n\nconst overriddenTheme: RaThemeOptions = {\n  ...defaultTheme,\n  typography: {\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Arial',\n      'sans-serif',\n    ].join(','),\n    body1: {\n      fontWeight: 300,\n    },\n    body2: {\n      fontWeight: 300,\n    },\n    h5: {\n      fontWeight: 200,\n    },\n  },\n  overrides: {\n    RaFilter: {\n      form: {\n        margin: 0\n      }\n    }\n  }\n}\n\nexport const LightTheme: RaThemeOptions = {\n  ...overriddenTheme,\n  palette: {\n    primary: deepPurple,\n    secondary: green,\n    type: 'light'\n  },\n}\n\nexport const DarkTheme: RaThemeOptions = {\n  ...overriddenTheme,\n  palette: {\n    primary: {\n      light: deepPurple[100],\n      main: deepPurple[200],\n      dark: deepPurple[300],\n      contrastText: '#F1F1F1'\n    },\n    secondary: green,\n    type: 'dark'\n  },\n\n}","import * as React from 'react';\nimport createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M 23.921875 8.652344 L 20.859375 3.347656 L 19.09375 4.367188 L 18.816406 4.527344 C 18.292969 4.050781 17.71875 3.625 17.097656 3.261719 C 16.449219 2.882812 15.769531 2.582031 15.0625 2.355469 L 15.0625 0 L 8.9375 0 L 8.9375 2.355469 C 8.230469 2.582031 7.550781 2.882812 6.902344 3.261719 C 6.28125 3.625 5.707031 4.050781 5.183594 4.527344 L 4.90625 4.367188 L 3.140625 3.347656 L 0.078125 8.652344 L 1.84375 9.671875 L 2.117188 9.832031 C 1.960938 10.539062 1.882812 11.265625 1.882812 12 C 1.882812 12.734375 1.960938 13.460938 2.117188 14.167969 L 1.84375 14.328125 L 0.078125 15.347656 L 3.140625 20.652344 L 4.90625 19.632812 L 5.183594 19.472656 C 5.707031 19.949219 6.285156 20.375 6.902344 20.738281 C 7.550781 21.117188 8.230469 21.417969 8.9375 21.644531 L 8.9375 24 L 14.863281 24 C 13.722656 22.835938 13.019531 21.242188 13.019531 19.488281 C 13.019531 18.84375 13.117188 18.222656 13.289062 17.636719 C 12.875 17.734375 12.445312 17.785156 12 17.785156 C 8.808594 17.785156 6.214844 15.191406 6.214844 12 C 6.214844 8.808594 8.808594 6.214844 12 6.214844 C 15.191406 6.214844 17.785156 8.808594 17.785156 12 C 17.785156 12.445312 17.734375 12.875 17.636719 13.289062 C 18.222656 13.117188 18.84375 13.019531 19.488281 13.019531 C 20.378906 13.019531 21.226562 13.203125 22 13.53125 C 22.078125 13.027344 22.117188 12.515625 22.117188 12 C 22.117188 11.265625 22.039062 10.539062 21.882812 9.832031 L 22.15625 9.671875 Z M 23.921875 8.652344\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M 12 8.257812 C 9.9375 8.257812 8.257812 9.9375 8.257812 12 C 8.257812 14.0625 9.9375 15.742188 12 15.742188 C 14.0625 15.742188 15.742188 14.0625 15.742188 12 C 15.742188 9.9375 14.0625 8.257812 12 8.257812 Z M 12 8.257812\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M 19.488281 15.0625 C 17.046875 15.0625 15.0625 17.046875 15.0625 19.488281 C 15.0625 21.925781 17.046875 23.910156 19.488281 23.910156 C 21.925781 23.910156 23.910156 21.925781 23.910156 19.488281 C 23.910156 17.046875 21.925781 15.0625 19.488281 15.0625 Z M 19.011719 22.019531 L 16.925781 19.9375 L 18.371094 18.492188 L 19.011719 19.132812 L 21.011719 17.132812 L 22.453125 18.574219 Z M 19.011719 22.019531\"\n})), 'Ver');","import { MenuItem, Collapse, Tooltip, ListItemIcon, Typography, List } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ExpandMore } from '@material-ui/icons';\nimport React, { ReactElement, ReactNode } from 'react';\nimport { useSelector } from 'react-redux';\nimport { ReduxState } from 'react-admin';\n\nconst useStyles = makeStyles(theme => ({\n  icon: {\n    minWidth: theme.spacing(5)\n  },\n  sidebarIsOpen: {\n    '& a': {\n      transition: 'padding-left 195ms cubic-bezier(0.4, 0, 0.6, 1) 0ms',\n      paddingLeft: theme.spacing(4),\n    },\n  },\n  sidebarIsClosed: {\n    '& a': {\n      transition: 'padding-left 195ms cubic-bezier(0.4, 0, 0.6, 1) 0ms',\n      paddingLeft: theme.spacing(2),\n    },\n  },\n}));\n\ninterface SubMenuProps {\n  handleToggle: () => void\n  icon: ReactElement\n  isOpen: boolean\n  name: string\n  children: ReactNode\n}\n\nexport const SubMenu = (props: SubMenuProps) => {\n  const { handleToggle, icon, isOpen, name, children } = props\n  const sidebarOpen = useSelector((state: ReduxState) => state?.admin.ui.sidebarOpen)\n  const classes = useStyles()\n\n  const header = (\n    <MenuItem button onClick={handleToggle}>\n      <ListItemIcon className={classes.icon}>\n        {isOpen ? <ExpandMore /> : icon}\n      </ListItemIcon>\n      <Typography variant=\"inherit\" color=\"textSecondary\">\n        {name}\n      </Typography>\n    </MenuItem>\n  )\n\n  return (\n    <>\n      {sidebarOpen || isOpen ? (\n        header\n      ) : (\n        <Tooltip title={name} placement=\"right\">\n          {header}\n        </Tooltip>\n      )}\n      <Collapse in={isOpen} timeout=\"auto\" unmountOnExit>\n        <List\n          component=\"div\"\n          disablePadding\n          className={sidebarOpen ? classes.sidebarIsOpen : classes.sidebarIsClosed}>\n          {children}\n        </List>\n      </Collapse>\n    </>\n  )\n}\n","import { makeStyles } from '@material-ui/core/styles'\nimport {\n  Assessment, Event, ExitToApp, List,\n  Person,\n  PhoneAndroid,\n  Receipt, SettingsApplications, Sort,\n  VideoLabel,\n  ViewComfy\n} from '@material-ui/icons'\nimport { getResources, ResourceDefinition } from 'ra-core'\nimport React, { useState } from 'react'\nimport {\n  DashboardMenuItem,\n  MenuItemLink,\n  ReduxState,\n  useTranslate\n} from 'react-admin'\nimport { useSelector } from 'react-redux'\nimport EngineDevice from '../../assets/icons/EngineDevice'\nimport { ResourceName } from '../../core/ResourceName'\nimport { SubMenu } from './AppSubmenu'\n\nconst useStyles = makeStyles({\n  open: {\n    width: '240px',\n  },\n  closed: {\n    width: '55px',\n  },\n})\n\nexport const AppMenu = () => {\n  const sidebarOpen = useSelector(\n    (state: ReduxState) => state.admin.ui.sidebarOpen,\n  )\n  const theme = useStyles()\n  const [open, setOpen] = useState({\n    menuStats: true,\n    menuDevices: true,\n    menuConfiguration: true\n  })\n\n  const availableResources = new Set(\n    useSelector<ReduxState, ResourceDefinition[]>(getResources).map(\n      (r) => r.name as ResourceName,\n    ),\n  )\n  const translate = useTranslate()\n\n  const handleToggle = (menu: 'menuStats' | 'menuDevices' | 'menuConfiguration') =>\n    setOpen((state) => ({ ...state, [menu]: !state[menu] }))\n\n  const anyStatsResourcesAvailable = (avRes: Set<ResourceName>) =>\n    avRes.has(ResourceName.STATS_OVERALL_VIEW_LIST)\n\n  const anyDeviceResourcesAvailable = (avRes: Set<ResourceName>) =>\n    avRes.has(ResourceName.PALMS) || avRes.has(ResourceName.ENGINES)\n\n  const anyConfigurationResourcesAvailable = (avRes: Set<ResourceName>) =>\n    avRes.has(ResourceName.ACCESSES) || avRes.has(ResourceName.VARIANTS)\n\n  return (\n    <div\n      style={{ userSelect: 'none' }}\n      className={sidebarOpen ? theme.open : theme.closed}\n    >\n      <DashboardMenuItem />\n      {availableResources.has(ResourceName.TICKET_INFO) && (\n        <MenuItemLink\n          to={`/${ResourceName.TICKET_INFO}`}\n          primaryText={translate('resources.ticket-info.name')}\n          leftIcon={<Receipt />}\n        />\n      )}\n      {availableResources.has(ResourceName.CUSTOMER_INFO) && (\n        <MenuItemLink\n          to={`/${ResourceName.CUSTOMER_INFO}`}\n          primaryText={translate('resources.customer-info.name')}\n          leftIcon={<Person />}\n        />\n      )}\n      {availableResources.has(ResourceName.LOGS) && (\n        <MenuItemLink\n          to={`/${ResourceName.LOGS}`}\n          primaryText={translate('resources.logs.name')}\n          leftIcon={<List />}\n        />\n      )}\n      {availableResources.has(ResourceName.EVENTS) && (\n        <MenuItemLink\n          to={`/${ResourceName.EVENTS}`}\n          primaryText={translate('resources.events.name')}\n          leftIcon={<Event />}\n        />\n      )}\n      {anyStatsResourcesAvailable(availableResources) && (\n        <SubMenu\n          handleToggle={() => handleToggle('menuStats')}\n          isOpen={open.menuStats}\n          name={translate('side-menu.stats.name')}\n          icon={<ViewComfy />}\n        >\n          {availableResources.has(ResourceName.STATS_OVERALL_VIEW_LIST) && (\n            <MenuItemLink\n              to={`/${ResourceName.STATS_OVERALL_VIEW_LIST}`}\n              primaryText={translate('side-menu.stats.overall-view')}\n              leftIcon={<Sort style={{ transform: 'scaleX(-1)' }} />}\n            />\n          )}\n        </SubMenu>\n      )}\n      {anyDeviceResourcesAvailable(availableResources) && (\n        <SubMenu\n          handleToggle={() => handleToggle('menuDevices')}\n          isOpen={open.menuDevices}\n          name={translate('side-menu.devices.name')}\n          icon={<VideoLabel />}\n        >\n          {availableResources.has(ResourceName.PALMS) && (\n            <MenuItemLink\n              to=\"/palms\"\n              primaryText={translate('resources.palms.name')}\n              leftIcon={<PhoneAndroid />}\n            />\n          )}\n          {availableResources.has(ResourceName.ENGINES) && (\n            <MenuItemLink\n              to=\"/engines\"\n              primaryText={translate('resources.engines.name')}\n              leftIcon={<EngineDevice />}\n            />\n          )}\n        </SubMenu>\n      )}\n      {anyConfigurationResourcesAvailable((availableResources)) && (\n        <SubMenu\n          handleToggle={() => handleToggle('menuConfiguration')}\n          isOpen={open.menuConfiguration}\n          name={translate('side-menu.configuration.name')}\n          icon={<SettingsApplications />}\n        >\n          {availableResources.has(ResourceName.ACCESSES) && (\n            <MenuItemLink\n              to={`/${ResourceName.ACCESSES}`}\n              primaryText={translate('resources.accesses.name')}\n              leftIcon={<ExitToApp />}\n            />\n          )}\n          {availableResources.has(ResourceName.VARIANTS) && (\n            <MenuItemLink\n              to={`/${ResourceName.VARIANTS}`}\n              primaryText={translate('resources.variants.name')}\n              leftIcon={<Assessment />}\n            />\n          )}\n        </SubMenu>\n      )}\n\n    </div>\n  )\n}\n","import { Typography } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Settings } from '@material-ui/icons'\nimport React from 'react'\nimport { AppBar, AppBarProps, CoreLayoutProps, Layout, UserMenu, UserMenuProps, MenuItemLink, useTranslate } from 'react-admin'\nimport { useSelector } from 'react-redux'\nimport { DarkTheme, LightTheme } from '../../app.theme'\nimport { ThemeState } from '../../core/common/theme.reducer'\nimport { AppMenu } from './AppMenu'\n\nconst useStyles = makeStyles({\n  title: {\n    flex: 1,\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n  },\n})\n\nconst AppUserMenu = (props: UserMenuProps) => {\n  const translate = useTranslate()\n  return (\n    <UserMenu {...props}>\n      <MenuItemLink\n        to=\"/configuration\"\n        primaryText={translate(\"settings.name\")}\n        leftIcon={<Settings />} />\n    </UserMenu>\n  )\n}\n\nconst AppTopBar = (props: AppBarProps) => {\n  const classes = useStyles()\n  return (\n    <AppBar {...props} userMenu={<AppUserMenu />}>\n      <Typography\n        variant=\"h6\"\n        className={classes.title}\n        id=\"react-admin-title\"\n      />\n    </AppBar>\n  )\n}\n\nexport const AppLayout = (props: CoreLayoutProps) => {\n  const theme = useSelector((state: ThemeState) =>\n    state.theme.darkMode === 'dark' ? DarkTheme : LightTheme,\n  )\n\n  return (\n    <Layout\n      {...props}\n      menu={AppMenu}\n      appBar={AppTopBar}\n      theme={theme} />)\n}\n","import React, { ChangeEvent, FC, useState } from 'react'\nimport {\n  Box,\n  Button,\n  FormControl,\n  FormHelperText,\n  Input,\n  withStyles,\n} from '@material-ui/core'\nimport SearchIcon from '@material-ui/icons/Search'\nimport { useTranslate } from 'react-admin'\n\nconst RoundInputBox = withStyles({\n  root: {\n    borderRadius: 16,\n    width: '90%',\n    marginLeft: '5%',\n    display: 'flex',\n    flexDirection: 'row-reverse',\n    border: 'solid',\n    borderColor: '#673ab7',\n  },\n})(Box)\n\nconst RoundInputBoxBtn = withStyles({\n  root: {\n    background: '#673ab7',\n    variant: 'contained',\n    borderRadius: 11,\n    borderTopLeftRadius: 0,\n    borderBottomLeftRadius: 0,\n    margin: 0,\n    fontWeight: 'bold',\n    '&:hover': {\n      background: '#7e57c2',\n    },\n  },\n})(Button)\n\nconst RoundInputBoxFC = withStyles({\n  root: {\n    width: '100%',\n    marginLeft: 13,\n    marginTop: 2,\n  },\n})(FormControl)\n\nexport type SearchInputProps = {\n  label: string\n  onValue: (value: string) => void\n  disabled: boolean\n  error: string\n}\n\nconst SearchInput: FC<Readonly<SearchInputProps>> = ({\n  label,\n  onValue,\n  disabled,\n  error,\n}) => {\n  const [inputError, setInputError] = useState(false)\n  const [inputValue, setInputValue] = useState('')\n  const t = useTranslate()\n\n  const handleInput = (event: ChangeEvent<HTMLInputElement>) => {\n    setInputValue(event.target.value)\n  }\n\n  const handleClick = () => {\n    if (inputValue) {\n      setInputError(false)\n      onValue(inputValue)\n    } else {\n      setInputError(true)\n    }\n  }\n\n  return (\n    <RoundInputBox>\n      <RoundInputBoxBtn onClick={handleClick} disabled={disabled}>\n        <SearchIcon style={{ color: 'white' }} />\n      </RoundInputBoxBtn>\n      <RoundInputBoxFC disabled={disabled}>\n        <Input\n          disableUnderline\n          placeholder={t(label)}\n          onInput={handleInput}\n          onKeyDown={(ev) => ev.key === 'Enter' && handleClick()}\n          error={inputError || !!error}\n        />\n        {inputError && (\n          <FormHelperText error>{t('ra.validation.required')}</FormHelperText>\n        )}\n        {!!error && <FormHelperText error>{t(error)}</FormHelperText>}\n      </RoundInputBoxFC>\n    </RoundInputBox>\n  )\n}\n\nexport default SearchInput\n","import React, { useCallback, useState } from 'react'\nimport {\n  useNotify,\n  useMutation,\n  useTranslate,\n  sanitizeFetchType,\n  GetListResult,\n  GET_LIST,\n} from 'react-admin'\nimport { useHistory } from 'react-router'\nimport { stringify } from 'querystring'\nimport { CardContent, CardHeader } from '@material-ui/core'\nimport { ResourceName } from '../../core/ResourceName'\nimport { CustomerInfoFilter } from '../../core/customer-info/customer-info.params'\nimport { CustomerInfo } from '../../core/customer-info/customer-info'\nimport SearchInput from './SearchInput'\n\nexport const FindCustomerByInfo = () => {\n  const history = useHistory()\n  const notify = useNotify()\n  const [error, setError] = useState('')\n  const [mutate, { loading }] = useMutation()\n  const t = useTranslate()\n\n  const fetchCustomers = useCallback(\n    (info: string) =>\n      mutate(\n        {\n          type: sanitizeFetchType(GET_LIST),\n          resource: ResourceName.CUSTOMER_INFO,\n          payload: { filter: { info } } as CustomerInfoFilter,\n        },\n        { returnPromise: true },\n      ) as Promise<GetListResult<CustomerInfo>>,\n    [mutate],\n  )\n\n  const onValue = useCallback(\n    async (info: string) => {\n      if (info.replace(/\\s/g, '').length === 0) {\n        setError('common.find-customer-by-info.invalidQuery')\n      } else if (info.length < 2) {\n        setError('common.find-customer-by-info.tooShort')\n      } else {\n        setError('')\n        try {\n          const {\n            total,\n            data: [onlyCustomer],\n          } = await fetchCustomers(info)\n          if (!total) {\n            setError('common.find-customer-by-info.error')\n          } else if (total === 1) {\n            history.push({\n              pathname: `/${ResourceName.CUSTOMER_DETAILS}/${onlyCustomer.id}/show`,\n            })\n          } else {\n            history.push({\n              pathname: `/${ResourceName.CUSTOMER_INFO}`,\n              search: stringify({\n                filter: JSON.stringify({\n                  info,\n                } as CustomerInfoFilter['filter']),\n              }),\n            })\n          }\n        } catch (err) {\n          notify((err as Error)?.message, 'error')\n        }\n      }\n    },\n    [fetchCustomers, history, notify],\n  )\n\n  return (\n    <>\n      <CardHeader title={t('common.find-customer-by-info.title')} />\n      <CardContent>\n        <SearchInput\n          label=\"common.find-customer-by-info.input-label\"\n          onValue={onValue}\n          disabled={loading}\n          error={error}\n        />\n      </CardContent>\n    </>\n  )\n}\n","import { stringify } from 'querystring'\nimport * as React from 'react'\nimport { useCallback, useState } from 'react'\nimport {\n  GET_LIST,\n  GetListResult,\n  sanitizeFetchType,\n  useMutation,\n  useNotify,\n  useTranslate,\n} from 'react-admin'\nimport { CardContent, CardHeader } from '@material-ui/core'\nimport { useHistory } from 'react-router-dom'\nimport { TicketCodeFilter } from '../../core/common/ticket-code.filter'\nimport { TicketDto } from '../../core/dto/ticket.dto'\nimport { ResourceName } from '../../core/ResourceName'\nimport SearchInput from './SearchInput'\n\nexport const FindUserByTicket = () => {\n  const history = useHistory()\n  const notify = useNotify()\n  const [error, setError] = useState('')\n  const [mutate, { loading }] = useMutation()\n  const t = useTranslate()\n\n  const fetchTickets = useCallback(\n    (ticketCode: string) =>\n      mutate(\n        {\n          type: sanitizeFetchType(GET_LIST),\n          resource: ResourceName.TICKETS,\n          payload: { filter: { ticketCode } } as TicketCodeFilter,\n        },\n        { returnPromise: true },\n      ) as Promise<GetListResult<TicketDto>>,\n    [mutate],\n  )\n\n  const onValue = useCallback(\n    async (ticketCode: string) => {\n      setError('')\n      try {\n        const {\n          total,\n          data: [onlyTicket],\n        } = await fetchTickets(ticketCode)\n        if (!total) {\n          setError('common.find-user-by-ticket.error')\n        } else if (total === 1) {\n          history.push({\n            pathname: `/${ResourceName.TICKET_DETAILS}/${onlyTicket.bookingId}/show`,\n          })\n        } else {\n          history.push({\n            pathname: `/${ResourceName.TICKET_INFO}`,\n            search: stringify({\n              filter: JSON.stringify({\n                ticketCode,\n              } as TicketCodeFilter['filter']),\n            }),\n          })\n        }\n      } catch (err) {\n        notify((err as Error)?.message, 'error')\n      }\n    },\n    [fetchTickets, history, notify],\n  )\n\n  return (\n    <>\n      <CardHeader title={t('common.find-user-by-ticket.title')} />\n      <CardContent>\n        <SearchInput\n          label=\"common.find-user-by-ticket.input-label\"\n          onValue={onValue}\n          disabled={loading}\n          error={error}\n        />\n      </CardContent>\n    </>\n  )\n}\n","import { Authority } from './Authority'\n\nconst mapping: Record<Authority, string[]> = {\n  // Logs\n  [Authority.VIEW_LOGS]: ['ViewItems_Logs'],\n\n  //Stats\n  [Authority.VIEW_STATS_OVERALL_VIEW]: ['ViewItems_Stats_OverallView'],\n\n  // Events\n  [Authority.VIEW_EVENTS]: ['ViewItems_Events_Show', 'ViewItems_Events_Edit', 'ViewItems_Events_Add'],\n  [Authority.EDIT_EVENTS]: ['ViewItems_Events_Edit'],\n  [Authority.CREATE_EVENTS]: ['ViewItems_Events_Add'],\n\n  // Users\n  [Authority.VIEW_USERS]: ['ViewItems_Users_Show', 'ViewItems_Users_Edit', 'ViewItems_Users_Add'],\n  [Authority.EDIT_USERS]: ['ViewItems_Users_Edit'],\n  [Authority.CREATE_USERS]: ['ViewItems_Users_Add'],\n\n  // Roles\n  [Authority.VIEW_ROLES]: ['ViewItems_Roles_Show', 'ViewItems_Roles_Edit', 'ViewItems_Roles_Add'],\n  [Authority.EDIT_ROLES]: ['ViewItems_Roles_Edit'],\n  [Authority.CREATE_ROLES]: ['ViewItems_Roles_Add'],\n\n  // Companies\n  [Authority.VIEW_COMPANIES]: ['ViewItems_Companies_Show', 'ViewItems_Companies_Edit', 'ViewItems_Companies_Add'],\n  [Authority.EDIT_COMPANIES]: ['ViewItems_Companies_Edit'],\n  [Authority.CREATE_COMPANIES]: ['ViewItems_Companies_Add'],\n\n  // Accesses\n  [Authority.VIEW_ACCESSES]: ['ViewItems_Accesses_Show', 'ViewItems_Accesses_Edit', 'ViewItems_Accesses_Add'],\n  [Authority.EDIT_ACCESSES]: ['ViewItems_Accesses_Edit'],\n  [Authority.CREATE_ACCESSES]: ['ViewItems_Accesses_Add'],\n\n  // Variants\n  [Authority.VIEW_VARIANTS]: ['ViewItems_Variants_Show', 'ViewItems_Variants_Edit', 'ViewItems_Variants_Add'],\n  [Authority.EDIT_VARIANTS]: ['ViewItems_Variants_Edit'],\n  [Authority.CREATE_VARIANTS]: ['ViewItems_Variants_Add'],\n}\n\nexport const mapAuthorityToRequiredPermissions = (authority: Authority) => mapping[authority]","import { UPDATE_DASHBOARD } from '../constants/reducer.actions'\n\nconst identity = localStorage.getItem('username')\nexport const INACTIVE_COMPONENTS_KEY = `${identity}.inactiveComponents`\n\nexport enum DashboardItem {\n  TICKET_FINDER = 'ticket_finder',\n  LAST_LOGS = 'last_logs',\n  LAST_EVENTS = 'last_events',\n  CUSTOMER_FINDER = 'customer_finder'\n}\n\nexport type DashboardState = {\n  dashboard: {\n    inactiveComponents: DashboardItem[]\n  }\n}\n\nexport type DashboardAction = {\n  type: typeof UPDATE_DASHBOARD\n  payload: DashboardItem\n}\n","import { usePermissions } from 'react-admin'\nimport { Authority } from '../../core/auth/Authority'\nimport { mapAuthorityToRequiredPermissions } from '../../core/auth/authority.mapper'\n\nexport const hasAuthorityWithGivenPermissions = (authority: Authority, permissions: Set<string>) => {\n  const permissionSet = new Set(permissions)\n  const requiredPerms = mapAuthorityToRequiredPermissions(authority)\n  return requiredPerms.some(reqPerms => permissionSet.has(reqPerms))\n}\n\nexport const useHasAuthority = () => {\n  const { permissions, loaded } = usePermissions<Set<string>>()\n  return (authority: Authority) => {\n    if (loaded && !permissions) {\n      // eslint-disable-next-line no-console\n      console.error('\"useHasAuthority\" - No permissions or hook was used outside the react admin context')\n      return false\n    }\n    return hasAuthorityWithGivenPermissions(authority, permissions as Set<string>)\n  }\n}","import {\n  Datagrid,\n  DateField,\n  Filter,\n  FunctionField,\n  Link,\n  List,\n  ListProps,\n  Pagination,\n  TextField,\n  TextInput,\n  useTranslate,\n} from 'react-admin'\nimport { useListContext } from 'ra-core'\nimport React from 'react'\nimport { IconButton, makeStyles, useMediaQuery, useTheme } from '@material-ui/core'\nimport { Event as EventIcon, Sort } from '@material-ui/icons'\nimport { ResourceName } from '../../core/ResourceName'\nimport { EventDto } from '../../core/dto/event/event.dto'\nimport { useHasAuthority } from '../hooks/useHasAuthority'\nimport { Authority } from '../../core/auth/Authority'\nimport { DateTime } from '../../core/common/date-time'\nimport FilterProps from '../common/FilterProps'\n\nconst useStyles = makeStyles((theme) => ({\n  actionColumnsWithoutPadding: {\n    // applies always for last column\n    '& tr > td:last-child': {\n      padding: 0,\n      width: theme.spacing(6),\n    },\n    // only applies when there are four columns and targets the penultimate column\n    '& tr > td:first-child:nth-last-child(4) ~ td:nth-last-child(2)': {\n      padding: 0,\n      width: theme.spacing(6),\n    },\n  },\n}))\n\nconst LastEvents = () => {\n  const t = useTranslate()\n  const classes = useStyles()\n  const hasAuthority = useHasAuthority()\n  return (\n    <Datagrid className={classes.actionColumnsWithoutPadding}>\n      <FunctionField<EventDto>\n        label={t('resources.events.fields.name')}\n        render={(record?: EventDto) => {\n          const { id, name } = record as EventDto\n          return `${id}. ${name}`\n        }}\n      />\n      <FunctionField<EventDto>\n        label={t('resources.events.fields.status')}\n        render={(record?: EventDto) => {\n          const { status } = record as EventDto\n          return t(`resources.enums.eventStatus.${status.toLowerCase()}`)\n        }}\n      />\n      <FunctionField<EventDto>\n        render={(record?: EventDto) => {\n          const { id } = record as EventDto\n          return (\n            <Link to={`/${ResourceName.EVENTS}/${id}/show`}>\n              <IconButton>\n                <EventIcon />\n              </IconButton>\n            </Link>\n          )\n        }}\n      />\n      {hasAuthority(Authority.VIEW_STATS_OVERALL_VIEW) && (\n        <FunctionField<EventDto>\n          render={(record?: EventDto) => {\n            const { id } = record as EventDto\n            return (\n              <Link to={`/${ResourceName.STATS_OVERALL_VIEW}/${id}/show`}>\n                <IconButton>\n                  <Sort style={{ transform: 'scaleX(-1)' }} />\n                </IconButton>\n              </Link>\n            )\n          }}\n        />\n      )}\n    </Datagrid>\n  )\n}\n\nconst EventDateField = ({ source, label }: { source: string, label?: string }) => (\n  <FunctionField<EventDto> source={source} label={label} render={(record?: EventDto) => {\n    const { dateStart, dateEnd } = {\n      dateStart: new Date(record?.dateStart as DateTime),\n      dateEnd: new Date(record?.dateEnd as DateTime)\n    }\n    if (dateStart.toDateString() === dateEnd.toDateString()) return (\n      <>\n        <DateField source=\"dateStart\" />\n        <span> {dateStart.getHours() < 10 && 0}{dateStart.getHours()}:</span>\n        <span>{dateStart.getMinutes() < 10 && 0}{dateStart.getMinutes()} - </span>\n        <span>{dateEnd.getHours() < 10 && 0}{dateEnd.getHours()}:</span>\n        <span>{dateEnd.getMinutes() < 10 && 0}{dateEnd.getMinutes()}</span>\n      </>\n    )\n    return (\n      <>\n        <span>\n          <DateField source=\"dateStart\" showTime />\n        </span>\n        <span> - </span>\n        <span>\n          <DateField source=\"dateEnd\" showTime />\n        </span>\n      </>\n    )\n  }} />\n)\n\nconst EventGrid = ({ compactMode }: { compactMode?: boolean }) => {\n  const { loading } = useListContext()\n  const t = useTranslate()\n  const theme = useTheme()\n  const smallScreen = useMediaQuery(theme.breakpoints.down('sm'))\n  return (\n    <>\n      {compactMode ? (\n        <LastEvents />\n      ) : (\n        <Datagrid\n          size=\"small\"\n          loaded={!loading}\n          rowClick={(id) => `${ResourceName.EVENTS}/${id}/show`}\n        >\n          <TextField source=\"id\" label=\"ID\" />\n          <TextField source=\"name\" />\n          {!smallScreen &&\n            <DateField source=\"dateStart\" showTime />}\n          {!smallScreen &&\n            <DateField source=\"dateEnd\" showTime />}\n          {smallScreen &&\n            <EventDateField source=\"dateStart\"\n              label=\"resources.events.fields.date\" />}\n          <FunctionField<EventDto>\n            resource=\"events\"\n            label={t('resources.events.fields.status')}\n            render={(r?: EventDto) =>\n              t(`resources.enums.eventStatus.${r?.status.toLowerCase()}`)\n            }\n          />\n        </Datagrid>\n      )}\n    </>\n  )\n}\n\ninterface EventListProps extends ListProps {\n  compactMode?: boolean\n}\n\nconst EventFilters = (props: FilterProps) => (\n  <Filter {...props}>\n    <TextInput source=\"name\" alwaysOn />\n  </Filter>\n)\n\nexport const EventList = ({ compactMode = false, ...props }: EventListProps) =>\n  compactMode ? (\n    <List\n      {...props}\n      actions={false}\n      filters={undefined}\n      perPage={10}\n      pagination={false}\n    >\n      <EventGrid compactMode />\n    </List>\n  ) : (\n    <List\n      {...props}\n      exporter={false}\n      filters={<EventFilters />}\n      perPage={20}\n      pagination={<Pagination rowsPerPageOptions={[10, 20, 50]} />}\n    >\n      <EventGrid />\n    </List>\n  )\n","import * as React from 'react'\nimport { TextField, makeStyles, Theme, createStyles } from '@material-ui/core'\nimport { useField } from 'react-final-form'\nimport ArrowRightAltIcon from '@material-ui/icons/ArrowRightAlt'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      display: 'flex',\n      justifyContent: 'center',\n      verticalAlign: 'center',\n      marginBottom: theme.spacing(1)\n    }\n  })\n)\n\nexport const DateFilterInput = ({ source }: { source: string }) => {\n  const classes = useStyles()\n  const defaultFromDate = React.useMemo(() => new Date(Date.now() - 2678400000), [])\n  defaultFromDate.setHours(0, 0, 0, 0)\n  const defaultToDate = new Date(Date.now())\n  defaultToDate.setHours(23, 59, 0, 0)\n  const [dateFrom, setDateFrom] = React.useState(\n    defaultFromDate.getTime().toString(),\n  )\n  const [dateTo, setDateTo] = React.useState(defaultToDate.getTime().toString())\n  const {\n    input: { onChange },\n    meta: { touched, error },\n  } = useField(source)\n\n  React.useEffect(() => {\n    onChange([\n      (parseInt(dateFrom, 10) - (defaultFromDate.getTimezoneOffset() * 60000)).toString(),\n      (parseInt(dateTo, 10) - (defaultFromDate.getTimezoneOffset() * 60000)).toString()].join(';'))\n  }, [dateFrom, dateTo, onChange, defaultFromDate])\n\n  const convertedDate = (date: Date) =>\n    new Date(date.getTime() - (defaultFromDate.getTimezoneOffset() * 60000)).toJSON().substring(0, 16)\n\n  return (\n    <span\n      key=\"date\"\n      className={classes.container}\n    >\n      <TextField\n        variant=\"filled\"\n        defaultValue={convertedDate(defaultFromDate)}\n        name={source}\n        type=\"datetime-local\"\n        onChange={(e) => setDateFrom(Date.parse(e.target.value).toString())}\n        error={!!(touched && error)}\n        helperText={touched && error}\n        style={{ alignSelf: 'center' }}\n        size=\"small\"\n      />\n      <ArrowRightAltIcon style={{ marginTop: '4%' }} />\n      <TextField\n        variant=\"filled\"\n        defaultValue={convertedDate(defaultToDate)}\n        name={source}\n        type=\"datetime-local\"\n        onChange={(e) => setDateTo(Date.parse(e.target.value).toString())}\n        error={!!(touched && error)}\n        helperText={touched && error}\n        size=\"small\"\n      />\n    </span>\n  )\n}\n","import { Grid, withStyles } from '@material-ui/core'\n\nexport const VCenterGrid = withStyles({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'column',\n  },\n})(Grid)\n\nexport const VHCenterGrid = withStyles({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n})(Grid)","import {\n  useMediaQuery,\n  useTheme,\n  Grid,\n  Divider,\n  TableBody,\n  Box,\n  Typography,\n} from '@material-ui/core'\nimport { Receipt } from '@material-ui/icons'\nimport React from 'react'\nimport {\n  List,\n  ListProps,\n  Pagination,\n  SelectInput,\n  TextInput,\n  useTranslate,\n  Datagrid,\n  TextField,\n  DateField,\n  Record,\n  FunctionField,\n  useLocale,\n  DatagridBodyProps,\n  DatagridRow,\n  DatagridHeader,\n  DatagridHeaderProps,\n  ShowButton,\n  Filter\n} from 'react-admin'\nimport { useHistory } from 'react-router'\nimport { getContrastColor } from '../../core/common/visual.utils'\nimport { ExtendedLog } from '../../core/logs/extended-log'\nimport { DateFilterInput } from './DateFilterInput'\nimport { VCenterGrid, VHCenterGrid } from './LogsComponents'\nimport FilterProps from '../common/FilterProps'\n\ninterface LogExpandProps {\n  readonly noBooking?: boolean\n  readonly record?: ExtendedLog\n}\n\ninterface LogBodyProps extends DatagridBodyProps {\n  readonly noBooking?: boolean\n  readonly compactMode?: boolean\n}\n\ninterface LogHeaderProps extends DatagridHeaderProps {\n  readonly noBooking?: boolean\n  readonly compactMode?: boolean\n}\n\ninterface LogListProps extends ListProps {\n  readonly compactMode?: boolean\n  readonly noBooking?: boolean\n}\n\nconst BookingButton = ({ style }: { style?: any }) => {\n  const theme = useTheme()\n  const xSmallScreen = useMediaQuery(theme.breakpoints.down('xs'))\n  const history = useHistory()\n  return (\n    <FunctionField\n      source=\"bookingId\"\n      render={(record: Record | undefined) =>\n        record?.bookingId && (\n          <>\n            <ShowButton\n              basePath=\"/ticket-details\"\n              label={record.bookingId.toString()}\n              record={{ id: record.bookingId }}\n              icon={<Receipt />}\n              style={style}\n            />\n            {xSmallScreen &&\n              <Typography color=\"primary\" onClick={() => history.push(`/ticket-details/${record.bookingId}/show`)}>{record.bookingId}</Typography>}\n          </>\n        )\n      }\n    />\n  )\n}\n\nconst LogExpand = ({ noBooking, record }: LogExpandProps) => {\n  const translate = useTranslate()\n  return (\n    <Box padding={1}>\n      <Grid container spacing={1}>\n        <VCenterGrid item xs={4}>\n          {translate('resources.logs.fields.description')}:\n        </VCenterGrid>\n        <VCenterGrid item xs={8}>\n          <TextField source=\"text\" />\n        </VCenterGrid>\n        {!noBooking && record?.bookingId && (\n          <>\n            <Grid item xs={12}>\n              <Divider />\n            </Grid>\n            <VCenterGrid item xs={4}>\n              {translate('resources.logs.fields.bookingId')}:\n            </VCenterGrid>\n            <VHCenterGrid item xs={8}>\n              <BookingButton />\n            </VHCenterGrid>\n          </>\n        )}\n      </Grid>\n    </Box>\n  )\n}\n\nconst LogBody = ({\n  noBooking,\n  compactMode,\n  data,\n  ids,\n  rowStyle,\n  expand\n}: LogBodyProps) => (\n  <TableBody>\n    {data && rowStyle &&\n      ids?.map((id) => {\n        const style = rowStyle(data[id], id as number)\n        return (\n          <DatagridRow\n            key={id}\n            id={id}\n            record={data[id]}\n            resource=\"logs\"\n            expand={expand}\n            style={style}\n          >\n            <DateField\n              source=\"date\"\n              style={style}\n              options={{\n                hour: '2-digit', minute: '2-digit', second: '2-digit'\n              }}\n            />\n            <TextField\n              source=\"deviceName\"\n              style={style}\n            />\n            <TextField\n              source=\"ticketCode\"\n              style={style}\n            />\n            {!compactMode && (\n              <TextField\n                source=\"text\"\n                style={style}\n              />\n            )}\n            {!compactMode && !noBooking && (\n              <BookingButton style={style} />\n            )}\n          </DatagridRow>\n        )\n      })}\n  </TableBody>\n)\n\nconst LogHeader = ({ noBooking, compactMode, ...props }: LogHeaderProps) => (\n  <DatagridHeader {...props}>\n    <DateField source=\"date\"\n      label=\"resources.logs.fields.date\" />\n    <TextField source=\"deviceName\"\n      label=\"resources.logs.fields.deviceName\" />\n    <TextField source=\"ticketCode\"\n      label=\"resources.logs.fields.ticketCode\" />\n    {!compactMode && (\n      <TextField\n        source=\"text\"\n        sortable={false}\n        label=\"resources.logs.fields.description\"\n      />\n    )}\n    {!noBooking && !compactMode && <TextField source=\"bookingId\"\n      label=\"resources.logs.fields.bookingId\" />}\n  </DatagridHeader>\n)\n\nconst LogFilters = (props: FilterProps) => (\n  <Filter {...props} >\n    <TextInput key=\"ticketCode\" source=\"ticketCode\" alwaysOn />\n    <SelectInput\n      key=\"deviceName\"\n      source=\"deviceName\"\n      choices={[\n        {\n          id: 'Czytnik',\n          name: 'resources.logs.fields.deviceNameChoices.reader',\n        },\n        {\n          id: 'Przej\\u015Bcie',\n          name: 'resources.logs.fields.deviceNameChoices.gateway',\n        },\n      ]}\n    />\n    <DateFilterInput source=\"date\" key=\"date\" />\n    <TextInput source=\"bookingId\" key=\"bookingId\" />\n    <TextInput source=\"event\" key=\"event\" />\n  </Filter>\n)\n\nexport const LogList = ({\n  compactMode = false,\n  noBooking = false,\n  ...props\n}: LogListProps) => {\n  const { filter, ...listProps } = props\n  const theme = useTheme()\n  const smallScreen = useMediaQuery(theme.breakpoints.down('sm'))\n  const xSmallScreen = useMediaQuery(theme.breakpoints.down('xs'))\n  const locale = useLocale()\n  return (\n    <List\n      perPage={20}\n      exporter={false}\n      pagination={<Pagination rowsPerPageOptions={[20, 50, 100]} />}\n      filters={<LogFilters />}\n      filter={{ ...filter, locale }}\n      sort={{ field: 'date', order: 'DESC' }}\n      {...listProps}\n      bulkActionButtons={false}\n    >\n      <Datagrid\n        header={\n          <LogHeader\n            compactMode={smallScreen ? true : compactMode}\n            noBooking={noBooking}\n          />\n        }\n        body={\n          <LogBody\n            compactMode={smallScreen ? true : compactMode}\n            noBooking={noBooking}\n          />\n        }\n        isRowExpandable={() => smallScreen || compactMode}\n        expand={<LogExpand noBooking={noBooking} />}\n        rowStyle={(record: Record) => ({\n          background: record.color,\n          color: record.color !== 'transparent' ? getContrastColor(record.color) : 'inherit'\n        })}\n        padding={xSmallScreen ? \"none\" : \"default\"}\n      >\n        <div />\n      </Datagrid>\n    </List>\n  )\n}","export const getContrastColor = (hexcolor: string) => {\n    const r = parseInt(hexcolor.substr(1, 2), 16);\n    const g = parseInt(hexcolor.substr(3, 2), 16);\n    const b = parseInt(hexcolor.substr(5, 2), 16);\n    const yiq = ((r * 299) + (g * 587) + (b * 114)) / 1000;\n    return (yiq >= 128) ? 'black' : 'white';\n  }","import {\n  Card,\n  CardContent,\n  CardHeader,\n  createStyles,\n  Grid,\n  makeStyles,\n  Theme,\n} from '@material-ui/core'\nimport React from 'react'\nimport { useSelector } from 'react-redux'\nimport { ResourceContextProvider, useTranslate } from 'react-admin'\nimport { ResourceName } from '../core/ResourceName'\nimport { FindCustomerByInfo } from './common/FindCustomerByInfo'\nimport { FindUserByTicket } from './common/FindUserByTicket'\nimport { EventList } from './events/EventList'\nimport { LogList } from './logs/LogList'\nimport { DashboardItem, DashboardState } from '../core/common/dashboard'\nimport { useHasAuthority } from './hooks/useHasAuthority'\nimport { Authority } from '../core/auth/Authority'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    header: {\n      textAlign: 'center',\n      letterSpacing: theme.spacing(0.2),\n    },\n    lastLogs: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'flex-end',\n      width: '10%',\n    },\n  }),\n)\n\nconst TicketFinder = () => (\n  <Card style={{ width: '100%', marginBottom: '5px' }}>\n    <FindUserByTicket />\n  </Card>\n)\n\nconst CustomerFinder = () => (\n  <Card style={{ width: '100%', marginBottom: '5px' }}>\n    <FindCustomerByInfo />\n  </Card>\n)\n\nconst LastLogs = () => {\n  const t = useTranslate()\n  return (\n    <Card style={{ width: '100%', marginBottom: '5px' }}>\n      <CardHeader title={t('dashboard.cards.last-logs.title')} />\n      <CardContent>\n        <ResourceContextProvider value={ResourceName.LOGS}>\n          <LogList\n            basePath=\"/\"\n            title=\" \"\n            compactMode\n            pagination={false}\n            perPage={10}\n            actions={false}\n            filters={undefined}\n          />\n        </ResourceContextProvider>\n      </CardContent>\n    </Card>\n  )\n}\n\nconst LastEvents = () => {\n  const t = useTranslate()\n  return (\n    <Card style={{ width: '100%', marginBottom: '5px' }}>\n      <CardHeader title={t('dashboard.cards.last-events.title')} />\n      <CardContent>\n        <ResourceContextProvider value={ResourceName.EVENTS}>\n          <EventList\n            sort={{ field: 'status', order: 'DESC' }}\n            compactMode\n            basePath=\"/\"\n            title=\" \"\n          />\n        </ResourceContextProvider>\n      </CardContent>\n    </Card>\n  )\n}\n\nexport const Dashboard = () => {\n  const classes = useStyles()\n  const t = useTranslate()\n  const hasAuthority = useHasAuthority()\n  const inactiveComponents = useSelector(\n    (state: DashboardState) => state.dashboard.inactiveComponents,\n  )\n  const isItemActive = (item: DashboardItem, inactiveItems: DashboardItem[]) =>\n    !inactiveItems.includes(item)\n\n  return (\n    <Grid container spacing={1}>\n      <Grid item xs={12}>\n        <Card>\n          <CardHeader\n            className={classes.header}\n            title={t('dashboard.welcome')}\n            titleTypographyProps={{ variant: 'h4' }}\n          />\n        </Card>\n      </Grid>\n      <Grid item sm={6} xs={12}>\n        {isItemActive(DashboardItem.TICKET_FINDER, inactiveComponents) && (\n          <TicketFinder />\n        )}\n        {hasAuthority(Authority.VIEW_EVENTS) &&\n          isItemActive(DashboardItem.LAST_EVENTS, inactiveComponents) && (\n            <LastEvents />\n          )}\n      </Grid>\n      <Grid className={classes.lastLogs} item sm={6} xs={12}>\n        {isItemActive(DashboardItem.CUSTOMER_FINDER, inactiveComponents) && (\n          <CustomerFinder />\n        )}\n        {hasAuthority(Authority.VIEW_LOGS) &&\n          isItemActive(DashboardItem.LAST_LOGS, inactiveComponents) && (\n            <LastLogs />\n          )}\n      </Grid>\n    </Grid>\n  )\n}\n","import {\n  Button,\n  ButtonGroup,\n  Card,\n  CardContent,\n  createStyles,\n  FormControlLabel,\n  Grid,\n  makeStyles,\n  MenuItem,\n  Paper,\n  Select,\n  Switch,\n  Theme,\n  Typography,\n} from '@material-ui/core'\nimport React, { Dispatch, ReactElement } from 'react'\nimport { Title, useLocale, useSetLocale, useTranslate } from 'react-admin'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Event, List, Search, Person } from '@material-ui/icons'\nimport { ThemeState } from '../../core/common/theme.reducer'\nimport {\n  CHANGE_THEME,\n  UPDATE_DASHBOARD,\n} from '../../core/constants/reducer.actions'\nimport {\n  DashboardAction,\n  DashboardItem,\n  DashboardState,\n} from '../../core/common/dashboard'\nimport { useHasAuthority } from '../hooks/useHasAuthority'\nimport { Authority } from '../../core/auth/Authority'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    label: { width: '15vw', display: 'inline-block' },\n    button: { margin: theme.spacing(2) },\n    select: { width: '40vw', margin: theme.spacing(2) },\n    compsContainer: {\n      width: '40vw',\n      display: 'inline-block',\n      margin: theme.spacing(2),\n    },\n  }),\n)\n\ntype DashboardItemSwitchProps = {\n  dashboardItem: DashboardItem\n  label: string\n  icon: ReactElement\n}\n\nconst DashboardItemSwitch = ({\n  dashboardItem,\n  label,\n  icon,\n}: DashboardItemSwitchProps) => {\n  const t = useTranslate()\n  const dispatch = useDispatch<Dispatch<DashboardAction>>()\n  const inactiveComponents = useSelector(\n    (state: DashboardState) => state.dashboard.inactiveComponents,\n  )\n  const onSwitch = ({\n    target: { name },\n  }: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch({ type: UPDATE_DASHBOARD, payload: name as DashboardItem })\n  }\n  return (\n    <Grid item xs={6}>\n      <Paper>\n        {icon}\n        <FormControlLabel\n          control={\n            <Switch\n              checked={!inactiveComponents.includes(dashboardItem)}\n              name={dashboardItem}\n              onChange={onSwitch}\n            />\n          }\n          label={t(label)}\n          labelPlacement=\"top\"\n          style={{ margin: '5%', textAlign: 'center', width: '90%' }}\n        />\n      </Paper>\n    </Grid>\n  )\n}\n\nconst DashboardCustomization = () => {\n  const hasAuthority = useHasAuthority()\n  return (\n    <Grid container spacing={1}>\n      <DashboardItemSwitch\n        dashboardItem={DashboardItem.TICKET_FINDER}\n        label=\"dashboard.settings.ticket-finder-label\"\n        icon={<Search />}\n      />\n      {hasAuthority(Authority.VIEW_LOGS) && (\n        <DashboardItemSwitch\n          dashboardItem={DashboardItem.LAST_LOGS}\n          label=\"dashboard.settings.last-logs-label\"\n          icon={<List />}\n        />\n      )}\n      <DashboardItemSwitch\n        dashboardItem={DashboardItem.LAST_EVENTS}\n        label=\"dashboard.settings.last-events-label\"\n        icon={<Event />}\n      />\n      <DashboardItemSwitch\n        dashboardItem={DashboardItem.CUSTOMER_FINDER}\n        label=\"dashboard.settings.customer-finder-label\"\n        icon={<Person />}\n      />\n    </Grid>\n  )\n}\n\nexport const Configuration = () => {\n  const dispatch = useDispatch()\n  const theme = useSelector(\n    (state: ThemeState) => state.theme.darkMode === 'dark',\n  )\n  const classes = useStyles()\n  const locale = useLocale()\n  const setLocale = useSetLocale()\n  const t = useTranslate()\n\n  return (\n    <Card>\n      <Title title={t('settings.name')} />\n      <CardContent>\n        <Typography className={classes.label}>\n          {t('settings.darkMode.name')}\n        </Typography>\n        <ButtonGroup className={classes.button}>\n          <Button\n            size=\"large\"\n            variant=\"contained\"\n            color={!theme ? 'primary' : 'default'}\n            onClick={() => theme && dispatch({ type: CHANGE_THEME })}\n          >\n            {t('settings.darkMode.light')}\n          </Button>\n          <Button\n            size=\"large\"\n            variant=\"contained\"\n            color={theme ? 'primary' : 'default'}\n            onClick={() => !theme && dispatch({ type: CHANGE_THEME })}\n          >\n            {t('settings.darkMode.dark')}\n          </Button>\n        </ButtonGroup>\n      </CardContent>\n      <CardContent>\n        <Typography className={classes.label}>\n          {t('settings.language.name')}\n        </Typography>\n        <Select\n          value={locale}\n          onChange={(e) => setLocale(e.target.value as string)}\n          className={classes.select}\n          variant=\"outlined\"\n        >\n          <MenuItem value=\"pl\">{t('settings.language.pl')}</MenuItem>\n          <MenuItem value=\"en\">{t('settings.language.en')}</MenuItem>\n        </Select>\n      </CardContent>\n      <CardContent>\n        <Typography className={classes.label}>\n          {t('dashboard.settings.title')}\n        </Typography>\n        <div className={classes.compsContainer}>\n          <DashboardCustomization />\n        </div>\n      </CardContent>\n    </Card>\n  )\n}\n","import * as React from 'react';\nimport { Route } from 'react-router-dom';\nimport { Configuration } from './Configuration'\n\nexport default [\n    <Route exact path=\"/configuration\" render={() => <Configuration/>} />\n]","export type DateTime =\n  `${number}-${number}-${number}T${number}:${number}:${number}.${number}` // 2021-07-13T15:11:06.771267\n\nexport const formatTime = (value: string | undefined) => {\n  if (value == null || value === '') {\n    return '';\n  }\n  return value.includes('T') ? value.substring(11, 16) : value\n};","import { makeStyles } from '@material-ui/core';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PropTypes from 'prop-types';\nimport { FieldTitle, useChoices, useInput, useTranslate, warning } from 'ra-core';\nimport * as React from 'react';\nimport { useCallback } from 'react';\nimport { ClassesOverride, InputHelperText, Pagination, PaginationProps, ResettableTextField, SelectInputProps, useSupportCreateSuggestion } from 'react-admin';\n\n// import ResettableTextField, { resettableStyles } from './ResettableTextField';\n// import InputHelperText from './InputHelperText';\n// import sanitizeInputRestProps from './sanitizeInputRestProps';\n// import Labeled from './Labeled';\n// import { LinearProgress } from '../layout';\n// import {\n//     useSupportCreateSuggestion,\n//     SupportCreateSuggestionOptions,\n// } from './useSupportCreateSuggestion';\n// import { ClassesOverride } from '../types';\n\nconst useStyles = makeStyles(\n    theme => ({\n        // ...resettableStyles,\n        input: {\n            minWidth: theme.spacing(20),\n        },\n    }),\n    { name: 'RaSelectInput' }\n);\n\n\nexport interface SelectWithPaginationInputProps\n    extends SelectInputProps {\n    classes?: ClassesOverride<typeof useStyles>;\n    paginationProps?: PaginationProps;\n}\n\nexport const SelectWithPaginationInput = (props: SelectWithPaginationInputProps) => {\n    const {\n        allowEmpty,\n        choices = [],\n        // classes: classesOverride,\n        className,\n        create,\n        createLabel,\n        createValue,\n        // disableValue,\n        emptyText,\n        emptyValue,\n        format,\n        helperText,\n        label,\n        // loaded,\n        loading,\n        margin = 'dense',\n        onBlur,\n        onChange,\n        onCreate,\n        onFocus,\n        options,\n        optionText,\n        optionValue,\n        parse,\n        paginationProps,\n        resource,\n        source,\n        translateChoice,\n        validate,\n        ...rest\n    } = props;\n    const translate = useTranslate();\n    const classes = useStyles(props);\n\n    warning(\n        source === undefined,\n        `If you're not wrapping the SelectInput inside a ReferenceInput, you must provide the source prop`\n    );\n\n    warning(\n        choices === undefined,\n        `If you're not wrapping the SelectInput inside a ReferenceInput, you must provide the choices prop`\n    );\n\n    const { getChoiceText, getChoiceValue } = useChoices({\n        optionText,\n        optionValue,\n        translateChoice,\n    });\n\n    const { id, input, isRequired, meta } = useInput({\n        format,\n        onBlur,\n        onChange,\n        onFocus,\n        parse,\n        resource,\n        source: source as string,\n        validate,\n        ...rest,\n    });\n\n    const { touched, error, submitError } = meta;\n\n    const renderEmptyItemOption = useCallback(() =>\n        React.isValidElement(emptyText) // eslint-disable-line no-nested-ternary\n            ? React.cloneElement(emptyText)\n            : emptyText === ''\n                ? ' ' // em space, forces the display of an empty line of normal height\n                : translate(emptyText, { _: emptyText }), [emptyText, translate]);\n\n    const renderMenuItemOption = useCallback(choice => getChoiceText(choice), [\n        getChoiceText,\n    ]);\n\n    const handleChange = useCallback(\n        async (event: React.ChangeEvent<HTMLSelectElement>, newItem) => {\n            if (newItem) {\n                const value = getChoiceValue(newItem);\n                input.onChange(value);\n                return;\n            }\n\n            input.onChange(event);\n        },\n        [input, getChoiceValue]\n    );\n\n    const {\n        getCreateItem,\n        handleChange: handleChangeWithCreateSupport,\n        createElement,\n    } = useSupportCreateSuggestion({\n        create,\n        createLabel,\n        createValue,\n        handleChange,\n        onCreate,\n        optionText,\n    });\n    // if (loading) {\n    //     return (\n    //         <Labeled\n    //             id={id}\n    //             label={label}\n    //             source={source}\n    //             resource={resource}\n    //             className={className}\n    //             isRequired={isRequired}\n    //             meta={meta}\n    //             input={input}\n    //             margin={margin}\n    //         >\n    //             <LinearProgress />\n    //         </Labeled>\n    //     );\n    // }\n\n    const renderCreateItem = () => {\n        if (onCreate || create) {\n            const createItem = getCreateItem();\n            return (\n                <MenuItem value={createItem.id} key={createItem.id}>\n                    {createItem.name}\n                </MenuItem>\n            );\n        }\n        return null;\n    };\n\n    return (\n        <>\n            <ResettableTextField\n                id={id}\n                {...input}\n                onChange={handleChangeWithCreateSupport}\n                select\n                label={\n                    label !== '' &&\n                    label !== false && (\n                        <FieldTitle\n                            label={label}\n                            source={source}\n                            resource={resource}\n                            isRequired={isRequired}\n                        />\n                    )\n                }\n                className={`${classes.input} ${className}`}\n                clearAlwaysVisible\n                error={!!(touched && (error || submitError))}\n                helperText={\n                    <InputHelperText\n                        touched={touched === true}\n                        error={error || submitError}\n                        helperText={helperText}\n                    />\n                }\n                margin={margin}\n                {...options}\n            // {...sanitizeRestProps(rest)}\n            >\n                {allowEmpty ? (\n                    <MenuItem\n                        value={emptyValue}\n                        key=\"null\"\n                        aria-label={translate('ra.action.clear_input_value')}\n                        title={translate('ra.action.clear_input_value')}\n                    >\n                        {renderEmptyItemOption()}\n                    </MenuItem>\n                ) : null}\n                {!loading && choices.map(choice => (\n                    <MenuItem\n                        key={getChoiceValue(choice)}\n                        value={getChoiceValue(choice)}\n                    // disabled={get(choice, disableValue)}\n                    >\n                        {renderMenuItemOption(choice)}\n                    </MenuItem>\n                ))}\n                {renderCreateItem()}\n                {!loading && <Pagination {...paginationProps} />}\n            </ResettableTextField>\n            {createElement}\n        </>\n    );\n};\n\nSelectWithPaginationInput.propTypes = {\n    allowEmpty: PropTypes.bool,\n    emptyText: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n    emptyValue: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n    choices: PropTypes.arrayOf(PropTypes.object),\n    classes: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n    className: PropTypes.string,\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n    options: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n    optionText: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.func,\n        PropTypes.element,\n    ]).isRequired,\n    optionValue: PropTypes.string.isRequired,\n    disableValue: PropTypes.string,\n    resettable: PropTypes.bool,\n    resource: PropTypes.string,\n    source: PropTypes.string,\n    translateChoice: PropTypes.bool,\n};\n\nSelectWithPaginationInput.defaultProps = {\n    emptyText: '',\n    emptyValue: '',\n    options: {},\n    optionText: 'name', // eslint-disable-line react/default-props-match-prop-types\n    optionValue: 'id', // eslint-disable-line react/default-props-match-prop-types\n    translateChoice: true,\n    disableValue: 'disabled',\n};\n\n// const sanitizeRestProps = ({\n//     addLabel,\n//     afterSubmit,\n//     allowNull,\n//     beforeSubmit,\n//     choices,\n//     className,\n//     crudGetMatching,\n//     crudGetOne,\n//     data,\n//     filter,\n//     filterToQuery,\n//     formatOnBlur,\n//     isEqual,\n//     limitChoicesToValue,\n//     multiple,\n//     name,\n//     pagination,\n//     perPage,\n//     ref,\n//     reference,\n//     refetch,\n//     render,\n//     setFilter,\n//     setPagination,\n//     setSort,\n//     sort,\n//     subscription,\n//     type,\n//     validateFields,\n//     validation,\n//     value,\n//     ...rest\n// }: any) => sanitizeInputRestProps(rest);\n\n","import { useMediaQuery, useTheme } from \"@material-ui/core\"\nimport React from \"react\"\nimport {\n  BooleanInput,\n  Create,\n  CreateProps,\n  DateTimeInput,\n  ReferenceInput,\n  required,\n  SelectInput,\n  SimpleForm,\n  TextInput,\n  useTranslate\n} from \"react-admin\"\nimport { formatTime } from \"../../../core/common/date-time\"\nimport { AccessDto } from \"../../../core/dto/access.dto\"\nimport { AccessActivePeriodStartingOptions } from \"../../../core/enum/AccessActivePeriodStartingOptions\"\nimport { AccessBonuses } from \"../../../core/enum/AccessBonuses\"\nimport { DayOfWeek } from \"../../../core/enum/DayOfWeek\"\nimport { ResourceName } from \"../../../core/ResourceName\"\nimport { SelectWithPaginationInput } from \"../../common/SelectWithPaginationInput\"\n\nconst validateAccessCreate = (values: AccessDto) => {\n  const errors: { [n: string]: string } = {}\n  if (!values.name) {\n    errors.name = 'ra.validation.required'\n  }\n  if (!values.entranceId) {\n    errors.entranceId = 'ra.validation.required'\n  }\n  if (Number.isNaN(Number(values.multiple)))\n    errors.multiple = 'ra.validation.not_numeric'\n  if (Number.isNaN(Number(values.usePriority)))\n    errors.usePriority = 'ra.validation.not_numeric'\n  if (Number.isNaN(Number(values.releaseDayOfMonth)))\n    errors.releaseDayOfMonth = 'ra.validation.not_numeric'\n  return errors\n}\n\nconst CreateTitle = () => {\n  const translate = useTranslate()\n  return (\n    <span>{translate('resources.accesses.titles.create')}</span>\n  )\n}\n\nexport const AccessCreate = (props: CreateProps) => {\n  const theme = useTheme()\n  const smallScreen = useMediaQuery(theme.breakpoints.down(\"sm\"))\n  return (\n    <Create\n      {...props}\n      title={<CreateTitle />}>\n      <SimpleForm redirect=\"show\" validate={validateAccessCreate}>\n        <TextInput\n          source=\"name\"\n          isRequired\n          validate={required()} />\n        <SelectInput\n          source=\"bonus\"\n          choices={Object.entries(AccessBonuses)\n            .map(([value]) => ({ id: value, name: `resources.enums.bonus.${value}` }))} />\n        <ReferenceInput\n          source=\"entranceId\"\n          defaultValue={null}\n          reference={ResourceName.ENTRANCES}\n          sort={{ field: 'note', order: 'ASC' }}\n          perPage={smallScreen ? 5 : 15}\n        >\n          <SelectWithPaginationInput\n            optionText=\"note\"\n            paginationProps={{ rowsPerPageOptions: [smallScreen ? 5 : 15] }}\n          />\n        </ReferenceInput>\n        <BooleanInput\n          source=\"allowReenter\"\n          defaultChecked />\n        <BooleanInput\n          source=\"multipleEntry\" />\n        <TextInput\n          source=\"multiple\"\n          defaultValue={1} />\n        <TextInput\n          source=\"usePriority\" />\n        <BooleanInput\n          source=\"isTicketUnlockedWithNextDay\" />\n        <DateTimeInput\n          source=\"releaseTime\"\n          type=\"time\"\n          format={formatTime}\n          parse={(value: string) => value}\n        />\n        <SelectInput\n          source=\"releaseDayOfWeek\"\n          choices={[\n            { id: null, name: \"N/A\" },\n            ...Object.entries(DayOfWeek)\n              .map(([value]) =>\n                ({ id: value, name: `resources.enums.dayOfWeek.${value}` }))\n          ]} />\n        <TextInput\n          source=\"releaseDayOfMonth\"\n          defaultValue={1} />\n        <TextInput\n          source=\"delay\" />\n        <TextInput\n          source=\"activePeriod\" />\n        <SelectInput\n          source=\"activePeriodStartingFrom\"\n          choices={Object.entries(AccessActivePeriodStartingOptions)\n            .map(([value]) =>\n              ({ id: value, name: `resources.enums.activePeriodStartingFrom.${value}` }))} />\n      </SimpleForm>\n    </Create>\n  )\n}","import { useMediaQuery, useTheme } from '@material-ui/core'\nimport { Cancel } from '@material-ui/icons'\nimport React from 'react'\nimport {\n  BooleanInput, DateTimeInput,\n  Edit,\n  EditProps,\n  ReferenceInput,\n  SaveButton,\n  SelectInput,\n  ShowButton,\n  SimpleForm,\n  TextField,\n  TextInput,\n  TitleProps,\n  Toolbar,\n  ToolbarProps,\n  useTranslate\n} from 'react-admin'\nimport { formatTime } from '../../../core/common/date-time'\nimport { AccessDto } from '../../../core/dto/access.dto'\nimport { AccessActivePeriodStartingOptions } from '../../../core/enum/AccessActivePeriodStartingOptions'\nimport { AccessBonuses } from '../../../core/enum/AccessBonuses'\nimport { DayOfWeek } from '../../../core/enum/DayOfWeek'\nimport { ResourceName } from '../../../core/ResourceName'\nimport { SelectWithPaginationInput } from '../../common/SelectWithPaginationInput'\n\nconst validateAccessEdit = (values: AccessDto) => {\n  const errors: { [n: string]: string } = {}\n  if (!values.name) {\n    errors.name = 'ra.validation.required'\n  }\n  if (!values.entranceId) {\n    errors.entranceId = 'ra.validation.required'\n  }\n  if (Number.isNaN(Number(values.multiple)))\n    errors.multiple = 'ra.validation.not_numeric'\n  if (Number.isNaN(Number(values.usePriority)))\n    errors.usePriority = 'ra.validation.not_numeric'\n  if (Number.isNaN(Number(values.releaseDayOfMonth)))\n    errors.releaseDayOfMonth = 'ra.validation.not_numeric'\n  return errors\n}\n\ninterface AccessTitleProps extends TitleProps {\n  record?: AccessDto\n}\n\nconst EditTitle = (data: AccessTitleProps) => {\n  const {\n    record,\n  } = data\n  const translate = useTranslate()\n  return (\n    <span>\n      {translate('resources.accesses.titles.edit')}: {record?.id}. {record?.name}{' '}\n    </span>\n  )\n}\n\nconst EditToolbar = (props: ToolbarProps) => (\n  <Toolbar {...props}>\n    <SaveButton />\n    <ShowButton icon={<Cancel />} label=\"const.cancel\" />\n  </Toolbar>\n)\n\nexport const AccessEdit = (props: EditProps) => {\n  const theme = useTheme()\n  const smallScreen = useMediaQuery(theme.breakpoints.down(\"sm\"))\n  return (\n    <Edit\n      {...props}\n      hasShow={false}\n      title={<EditTitle />}>\n      <SimpleForm\n        redirect=\"show\"\n        toolbar={<EditToolbar />}\n        validate={validateAccessEdit}>\n        <TextField\n          source=\"id\"\n          label=\"ID\" />\n        <TextInput\n          source=\"name\" />\n        <SelectInput\n          source=\"bonus\"\n          choices={[\n            { id: null, name: \"N/A\" },\n            ...Object.entries(AccessBonuses)\n              .map(([value]) => ({ id: value, name: `resources.enums.bonus.${value}` }))\n          ]} />\n        <ReferenceInput\n          source=\"entranceId\"\n          reference={ResourceName.ENTRANCES}\n          sort={{ field: 'note', order: 'ASC' }}\n          perPage={smallScreen ? 5 : 15}\n        >\n          <SelectWithPaginationInput\n            optionText=\"note\"\n            paginationProps={{ rowsPerPageOptions: [smallScreen ? 5 : 15] }}\n          />\n        </ReferenceInput>\n        <BooleanInput\n          source=\"allowReenter\" />\n        <BooleanInput\n          source=\"multipleEntry\" />\n        <TextInput\n          source=\"multiple\" />\n        <TextInput\n          source=\"usePriority\" />\n        <BooleanInput\n          source=\"isTicketUnlockedWithNextDay\" />\n        <DateTimeInput\n          source=\"releaseTime\"\n          type=\"time\"\n          format={formatTime}\n          parse={(value: string) => value}\n        />\n        <SelectInput\n          source=\"releaseDayOfWeek\"\n          choices={[\n            { id: null, name: \"N/A\" },\n            ...Object.entries(DayOfWeek)\n              .map(([value]) =>\n                ({ id: value, name: `resources.enums.dayOfWeek.${value}` }))\n          ]} />\n        <TextInput\n          source=\"releaseDayOfMonth\" />\n        <TextInput\n          source=\"delay\" />\n        <TextInput\n          source=\"activePeriod\" />\n        <SelectInput\n          source=\"activePeriodStartingFrom\"\n          choices={[\n            { id: null, name: \"N/A\" },\n            ...Object.entries(AccessActivePeriodStartingOptions)\n              .map(([value]) =>\n                ({ id: value, name: `resources.enums.activePeriodStartingFrom.${value}` }))\n          ]} />\n      </SimpleForm>\n    </Edit>\n  )\n}","import { Chip } from \"@material-ui/core\"\nimport React from \"react\"\nimport { useTranslate } from 'react-admin'\nimport { ResourceName } from \"../../core/ResourceName\"\n\ninterface QuickFilterProps {\n  label?: string\n  resource?: keyof ResourceName\n  source: string\n}\n\nconst QuickFilter = (props: QuickFilterProps) => {\n  const translate = useTranslate()\n  const { label, resource, source } = props\n  return (\n    <Chip style={{ marginBottom: \"1em\" }} label={translate(`resources.${resource as string}.fields.${label || source}`)} />\n  )\n}\n\nexport default QuickFilter","import { useMediaQuery, useTheme } from \"@material-ui/core\"\nimport React from \"react\"\nimport { List, ListProps, Datagrid, TextField, Pagination, FunctionField, useTranslate, DateField, TextInput, SelectInput, Filter } from 'react-admin'\nimport { Authority } from \"../../../core/auth/Authority\"\nimport { AccessDto } from \"../../../core/dto/access.dto\"\nimport { ResourceName } from \"../../../core/ResourceName\"\nimport FilterProps from '../../common/FilterProps'\nimport QuickFilter from \"../../common/QuickFilter\"\nimport { useHasAuthority } from \"../../hooks/useHasAuthority\"\n\nconst AccessFilters = (props: FilterProps) => {\n  const translate = useTranslate()\n  return (\n    <Filter {...props}>\n      <TextInput source=\"name\" alwaysOn />\n      <TextInput source=\"id\" />\n      <SelectInput source=\"bonus\"\n        choices={[\n          {\n            id: 'N',\n            name: translate('resources.enums.bonus.N')\n          },\n          {\n            id: 'Y',\n            name: translate('resources.enums.bonus.Y')\n          },\n          {\n            id: 'Z',\n            name: translate('resources.enums.bonus.Z')\n          },\n          {\n            id: 'D',\n            name: translate('resources.enums.bonus.D')\n          },\n        ]} />\n      <TextInput source=\"entranceId\" />\n      <QuickFilter source=\"allowReenter\" />\n      <QuickFilter source=\"multipleEntry\" />\n      <QuickFilter source=\"isTicketUnlockedWithNextDay\" />\n    </Filter>\n  )\n}\n\nexport const AccessList = (props: ListProps) => {\n  const translate = useTranslate()\n  const theme = useTheme()\n  const smallScreen = useMediaQuery(theme.breakpoints.down('sm'))\n  const hasAuthority = useHasAuthority()\n  return (\n    <List\n      perPage={20}\n      exporter={false}\n      pagination={<Pagination rowsPerPageOptions={[20, 50, 100]} />}\n      sort={{ field: 'id', order: 'DESC' }}\n      {...props}\n      bulkActionButtons={false}\n      filters={\n        <AccessFilters />\n      }\n      hasCreate={hasAuthority(Authority.CREATE_ACCESSES)}\n    >\n      <Datagrid rowClick={id => `${ResourceName.ACCESSES}/${id}/show`}>\n        <TextField source=\"name\" />\n        <FunctionField<AccessDto> source=\"bonus\" render={(record?: AccessDto) => translate(`resources.enums.bonus.${record?.bonus}`)} />\n        <TextField source=\"entranceId\" />\n        {!smallScreen && <DateField source=\"modifiedAt\" />}\n        {!smallScreen && <DateField source=\"createdAt\" />}\n      </Datagrid>\n    </List>\n  )\n}","import { Checkbox, CheckboxProps, Typography } from '@material-ui/core';\nimport { SwitchBaseProps } from '@material-ui/core/internal/SwitchBase';\nimport React, { MouseEventHandler } from 'react';\nimport { useRecordContext } from 'react-admin';\n\nexport interface CheckboxFieldProps extends CheckboxProps {\n    sortable?: boolean\n    label?: string\n    source: string\n    checkBySource?: (sourceValue: any) => SwitchBaseProps['checked']\n    onClick?: (sourceValue: any) => MouseEventHandler | undefined\n}\n\nconst sanitizeFieldRestProps: (props: any) => any = ({\n    addLabel, // eslint-disable-line @typescript-eslint/no-unused-vars\n    allowEmpty, // eslint-disable-line @typescript-eslint/no-unused-vars\n    basePath, // eslint-disable-line @typescript-eslint/no-unused-vars\n    cellClassName, // eslint-disable-line @typescript-eslint/no-unused-vars\n    className, // eslint-disable-line @typescript-eslint/no-unused-vars\n    emptyText, // eslint-disable-line @typescript-eslint/no-unused-vars\n    formClassName, // eslint-disable-line @typescript-eslint/no-unused-vars\n    fullWidth, // eslint-disable-line @typescript-eslint/no-unused-vars\n    headerClassName, // eslint-disable-line @typescript-eslint/no-unused-vars\n    label, // eslint-disable-line @typescript-eslint/no-unused-vars\n    linkType, // eslint-disable-line @typescript-eslint/no-unused-vars\n    link, // eslint-disable-line @typescript-eslint/no-unused-vars\n    locale, // eslint-disable-line @typescript-eslint/no-unused-vars\n    record, // eslint-disable-line @typescript-eslint/no-unused-vars\n    refetch, // eslint-disable-line @typescript-eslint/no-unused-vars\n    resource, // eslint-disable-line @typescript-eslint/no-unused-vars\n    sortable, // eslint-disable-line @typescript-eslint/no-unused-vars\n    sortBy, // eslint-disable-line @typescript-eslint/no-unused-vars\n    sortByOrder, // eslint-disable-line @typescript-eslint/no-unused-vars\n    source, // eslint-disable-line @typescript-eslint/no-unused-vars\n    textAlign, // eslint-disable-line @typescript-eslint/no-unused-vars\n    translateChoice, // eslint-disable-line @typescript-eslint/no-unused-vars\n    ...props\n}) => props;\n\nexport const CheckboxField = ({ sortable, label, source, checkBySource, onClick, className, style, ...props }: CheckboxFieldProps): JSX.Element => {\n    const record = useRecordContext();\n    const value = record[source as string];\n    return (\n        <Typography aria-label={label} className={className} style={style}>\n            <Checkbox aria-sort={sortable ? undefined : 'none'} {...sanitizeFieldRestProps(props) as CheckboxProps} checked={checkBySource && checkBySource(value)} onClick={onClick && onClick(value)} />\n        </Typography>\n    );\n}\n","import {\n    Button as MuiButton, IconButton, PropTypes as MuiPropTypes, Theme, Tooltip, useMediaQuery\n} from '@material-ui/core';\nimport { ButtonProps as MuiButtonProps } from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport classnames from 'classnames';\nimport { LocationDescriptor } from 'history';\nimport PropTypes from 'prop-types';\nimport { Record, RedirectionSideEffect, useTranslate } from 'ra-core';\nimport * as React from 'react';\nimport { ReactElement, ReactNode, SyntheticEvent } from 'react';\n\n/**\n * A generic Button with side icon. Only the icon is displayed on small screens.\n *\n * The component translates the label. Pass the icon as child.\n * The icon displays on the left side of the button by default. Set alignIcon prop to 'right' to inverse.\n *\n * @example\n *\n * <Button label=\"Edit\" color=\"secondary\" onClick={doEdit}>\n *   <ContentCreate />\n * </Button>\n *\n */\n\n const useStyles = makeStyles(\n    {\n        button: {\n            display: 'inline-flex',\n            alignItems: 'center',\n        },\n        label: {\n            paddingLeft: '0.5em',\n        },\n        labelRightIcon: {\n            paddingRight: '0.5em',\n        },\n        smallIcon: {\n            fontSize: 20,\n        },\n        mediumIcon: {\n            fontSize: 22,\n        },\n        largeIcon: {\n            fontSize: 24,\n        },\n    },\n    { name: 'RaButton' }\n);\n\nexport const sanitizeButtonRestProps = ({\n    // The next props are injected by Toolbar\n    basePath, // eslint-disable-line @typescript-eslint/no-unused-vars\n    handleSubmit, // eslint-disable-line @typescript-eslint/no-unused-vars\n    handleSubmitWithRedirect, // eslint-disable-line @typescript-eslint/no-unused-vars\n    invalid, // eslint-disable-line @typescript-eslint/no-unused-vars\n    onSave, // eslint-disable-line @typescript-eslint/no-unused-vars\n    pristine, // eslint-disable-line @typescript-eslint/no-unused-vars\n    record, // eslint-disable-line @typescript-eslint/no-unused-vars\n    redirect, // eslint-disable-line @typescript-eslint/no-unused-vars\n    resource, // eslint-disable-line @typescript-eslint/no-unused-vars\n    saving, // eslint-disable-line @typescript-eslint/no-unused-vars\n    submitOnEnter, // eslint-disable-line @typescript-eslint/no-unused-vars\n    undoable, // eslint-disable-line @typescript-eslint/no-unused-vars\n    ...rest\n}: any) => rest;\n\nconst Button = (props: ButtonProps) => {\n    const {\n        alignIcon = 'left',\n        children,\n        classes: classesOverride, // eslint-disable-line @typescript-eslint/no-unused-vars\n        className,\n        color,\n        disabled,\n        label,\n        size = 'small',\n        useSmallVersionBreakpoint: useSmallVersion,\n        ...rest\n    } = props;\n    const translate = useTranslate();\n    const classes = useStyles(props);\n    const isXSmall = useMediaQuery((theme: Theme) =>\n        theme.breakpoints.down('xs')\n    );\n    const restProps = sanitizeButtonRestProps(rest);\n    // eslint-disable-next-line no-nested-ternary\n    return isXSmall && useSmallVersion ? (\n        label && !disabled ? (\n            <Tooltip title={translate(label, { _: label })}>\n                <IconButton\n                    aria-label={translate(label, { _: label })}\n                    className={className}\n                    color={color}\n                    {...restProps}\n                >\n                    {children}\n                </IconButton>\n            </Tooltip>\n        ) : (\n            <IconButton\n                className={className}\n                color={color}\n                disabled={disabled}\n                {...restProps}\n            >\n                {children}\n            </IconButton>\n        )\n    ) : (\n        <MuiButton\n            className={classnames(classes.button, className)}\n            color={color}\n            size={size}\n            aria-label={label ? translate(label, { _: label }) : undefined}\n            disabled={disabled}\n            {...restProps}\n        >\n            {alignIcon === 'left' &&\n                children &&\n                React.cloneElement(children, {\n                    className: classes[`${size}Icon`],\n                })}\n            {label && (\n                <span\n                    className={classnames({\n                        [classes.label]: alignIcon === 'left',\n                        [classes.labelRightIcon]: alignIcon !== 'left',\n                    })}\n                >\n                    {translate(label, { _: label })}\n                </span>\n            )}\n            {alignIcon === 'right' &&\n                children &&\n                React.cloneElement(children, {\n                    className: classes[`${size}Icon`],\n                })}\n        </MuiButton>\n    );\n};\n\ninterface Props {\n    alignIcon?: 'left' | 'right';\n    children?: ReactElement;\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    classes?: object;\n    className?: string;\n    color?: MuiPropTypes.Color;\n    component?: ReactNode;\n    to?: string | LocationDescriptor;\n    disabled?: boolean;\n    label?: string;\n    size?: 'small' | 'medium' | 'large';\n    icon?: ReactElement;\n    redirect?: RedirectionSideEffect;\n    variant?: string;\n    // May be injected by Toolbar\n    basePath?: string;\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    handleSubmit?: (event?: SyntheticEvent<HTMLFormElement>) => Promise<Object>;\n    handleSubmitWithRedirect?: (redirect?: RedirectionSideEffect) => void;\n    invalid?: boolean;\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    onSave?: (values: object, redirect: RedirectionSideEffect) => void;\n    saving?: boolean;\n    submitOnEnter?: boolean;\n    pristine?: boolean;\n    record?: Record;\n    resource?: string;\n    undoable?: boolean;\n    useSmallVersionBreakpoint?: boolean;\n}\n\nexport type ButtonProps = Props & MuiButtonProps;\n\nButton.propTypes = {\n    alignIcon: PropTypes.oneOf(['left', 'right']),\n    children: PropTypes.element,\n    // eslint-disable-next-line react/forbid-prop-types\n    classes: PropTypes.object,\n    className: PropTypes.string,\n    color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary']),\n    disabled: PropTypes.bool,\n    label: PropTypes.string,\n    size: PropTypes.oneOf(['small', 'medium', 'large']),\n    useSmallVersionBreakpoint: PropTypes.bool,\n};\n\nButton.defaultProps = {\n    color: 'primary',\n    size: 'small',\n    useSmallVersionBreakpoint: true\n};\n\nexport default Button;\n","export enum Multiplicities {\n  SINGLE = 'SINGLE',\n  MULTIPLE = 'MULTIPLE',\n  CHECK_ALL = 'CHECK_ALL'\n}","import { Box, ButtonGroup, Divider } from \"@material-ui/core\"\nimport React from \"react\"\nimport { BooleanInput, Datagrid, DateField, EditButton, FunctionField, GET_LIST, List, Pagination, ReferenceField, ResourceContextProvider, sanitizeFetchType, Show, ShowProps, Tab, TabbedShowLayout, TabbedShowLayoutProps, TextField, TextInput, TitleProps, TopToolbar, useListContext, useMutation, useNotify, useShowContext, useTranslate } from \"react-admin\"\nimport { Authority } from \"../../../core/auth/Authority\"\nimport { formatTime } from \"../../../core/common/date-time\"\nimport { AccessDto } from \"../../../core/dto/access.dto\"\nimport { EntranceDto } from \"../../../core/dto/entrance.dto\"\nimport { VariantDto } from \"../../../core/dto/variant.dto\"\nimport { AccessActivePeriodStartingOptions } from \"../../../core/enum/AccessActivePeriodStartingOptions\"\nimport { ResourceName } from \"../../../core/ResourceName\"\nimport { CheckboxField } from \"../../common/CheckboxField\"\nimport Button from '../../common/customized-mui-components/Button'\nimport { useHasAuthority } from \"../../hooks/useHasAuthority\"\n\ntype AccessTabsProps = Omit<TabbedShowLayoutProps, 'children'>\n\ninterface AccessTitleProps extends TitleProps {\n  record?: AccessDto\n}\n\nconst ShowTitle = (data: AccessTitleProps) => {\n  const { record: variant } = data\n  const translate = useTranslate()\n  return (\n    <span>\n      {translate('resources.accesses.titles.show')}: {variant?.id}. {variant?.name}\n    </span>\n  )\n}\n\nconst GeneralActions = () => {\n  const { record: access } = useShowContext<AccessDto>()\n  const hasAuthority = useHasAuthority()\n  return (\n    <>\n      <Divider />\n      <Box p={1} display=\"block\" textAlign=\"right\">\n        <EditButton\n          basePath=\"/accesses\"\n          record={access}\n          variant=\"contained\"\n          style={{ margin: '2px' }}\n          disabled={!hasAuthority(Authority.EDIT_ACCESSES)} />\n      </Box>\n    </>\n  )\n}\n\nconst RelationTab = ({ source, mode }: { source: ResourceName.VARIANTS, mode: 'show' | 'edit' }) => {\n  const [mutate] = useMutation()\n  const notify = useNotify()\n  const { record: access, basePath, refetch } = useShowContext<AccessDto>()\n  const translate = useTranslate()\n\n  const handleAttach = async (idsToAttach: number[]) => {\n    switch (source) {\n      case ResourceName.VARIANTS:\n        await mutate(\n          {\n            type: sanitizeFetchType('attachVariants'),\n            resource: ResourceName.ACCESSES,\n            payload: {\n              accessId: access?.id,\n              variantsIds: idsToAttach,\n            },\n          },\n          { returnPromise: true },\n        )\n        break\n      default:\n        notify(`Source '${source}' is not implemented yet.`)\n    }\n    if (refetch) {\n      refetch()\n    }\n  }\n\n  const handleDetach = async (idsToDetach: number[]) => {\n    switch (source) {\n      case ResourceName.VARIANTS:\n        await mutate(\n          {\n            type: sanitizeFetchType('detachVariants'),\n            resource: ResourceName.ACCESSES,\n            payload: {\n              accessId: access?.id,\n              variantsIds: idsToDetach,\n            },\n          },\n          { returnPromise: true },\n        )\n        break\n      default:\n        notify(`Source '${source}' is not implemented yet.`)\n    }\n    if (refetch) {\n      refetch()\n    }\n  }\n\n  const isAttached = (relatedRecordId: number) => {\n    switch (source) {\n      case ResourceName.VARIANTS:\n        return access?.variantsIds?.includes(relatedRecordId)\n      default:\n        notify(`Source '${source}' is not implemented yet.`)\n        return false\n    }\n  }\n\n  const listFilters = () => {\n    switch (source) {\n      case ResourceName.VARIANTS:\n        return ([<TextInput source=\"name\" alwaysOn />,\n        <BooleanInput label=\"common.related-records.actions.attached-only\" source=\"filterAccessId\" alwaysOn />])\n      default: return ([])\n    }\n  }\n\n  const listSort = () => {\n    switch (source) {\n      case ResourceName.VARIANTS:\n        return ({ field: 'id', order: 'DESC' })\n      default: return (undefined)\n    }\n  }\n\n  const listColumns = () => {\n    switch (source) {\n      case ResourceName.VARIANTS:\n        return ([\n          <TextField source=\"id\" label=\"ID\" key='id' />,\n          <TextField source=\"name\" key='name' />,\n          <FunctionField<VariantDto>\n            source=\"active\"\n            key=\"active\"\n            render={(r?: VariantDto) =>\n              r?.active ?\n                translate('const.yes') :\n                translate('const.no')} />])\n      default: return ([])\n    }\n  }\n\n  const Actions = () => {\n    const { filterValues, refetch: refetchList } = useListContext<VariantDto>()\n    const getFilteredRelatedRecordsIds = async () =>\n      (await mutate(\n        {\n          type: sanitizeFetchType(GET_LIST),\n          resource: source,\n          payload: {\n            filter: {\n              ...filterValues\n            }\n          }\n        },\n        { returnPromise: true }\n      ))?.data?.map((record: VariantDto) => record?.id)\n\n    const handleAttachAll = async () => {\n      await handleAttach(await getFilteredRelatedRecordsIds())\n      if (filterValues?.filterAccessId === true) {\n        refetchList()\n      }\n    }\n\n    const handleDetachAll = async () => {\n      await handleDetach(await getFilteredRelatedRecordsIds())\n      if (filterValues?.filterAccessId === true) {\n        refetchList()\n      }\n    }\n\n    return (\n      <TopToolbar>\n        <ButtonGroup>\n          <Button\n            variant=\"contained\"\n            onClick={() => handleAttachAll()}\n            label=\"common.related-records.actions.attach-all\"\n            useSmallVersionBreakpoint={false}\n          />\n          <Button\n            variant=\"outlined\"\n            onClick={() => handleDetachAll()}\n            label=\"common.related-records.actions.detach-all\"\n            useSmallVersionBreakpoint={false}\n          />\n        </ButtonGroup>\n      </TopToolbar>\n    )\n  }\n\n  const AttachedCheckbox = ({ ...props }) => {\n    const { filterValues, refetch: refetchList } = useListContext<VariantDto>()\n\n    return (\n      <CheckboxField\n        {...props}\n        disabled={mode !== 'edit'}\n        sortable={false}\n        checkBySource={(id: number) => isAttached(id)}\n        source=\"id\"\n        onClick={\n          (id: number) => isAttached(id as number)\n            ? async () => {\n              await handleDetach([id as number])\n              if (filterValues?.filterAccessId === true) {\n                refetchList()\n              }\n            }\n            : async () => {\n              await handleAttach([id as number])\n              if (filterValues?.filterAccessId === true) {\n                refetchList()\n              }\n            }\n        } />\n    )\n  }\n\n  return (\n    <ResourceContextProvider value={source} >\n      <List\n        basePath={basePath}\n        exporter={false}\n        title=\" \"\n        filters={listFilters()}\n        filterDefaultValues={{ accessId: access?.id, filterAccessId: true }}\n        sort={listSort()}\n        pagination={<Pagination rowsPerPageOptions={[10, 20, 50, 100]} />}\n        perPage={20}\n        actions={mode === 'edit' ? <Actions /> : <></>}\n      >\n        <>\n          <Datagrid size=\"small\" style={{ tableLayout: 'fixed' }} >\n            {listColumns()}\n            <AttachedCheckbox label=\"common.related-records.fields.is-attached\" />\n          </Datagrid>\n        </>\n      </List>\n    </ResourceContextProvider>\n  )\n}\n\nconst AccessTabs = (props: AccessTabsProps) => {\n  const { record: access } = props\n  const translate = useTranslate()\n  const hasAuthority = useHasAuthority()\n\n  return (\n    <TabbedShowLayout {...props}>\n      <Tab\n        label=\"resources.accesses.tabs.details\">\n        <TextField source=\"id\" />\n        <TextField source=\"name\" />\n        <FunctionField<AccessDto>\n          source=\"bonus\"\n          render={(r?: AccessDto) =>\n            <div>\n              {translate(`resources.enums.bonus.${r?.bonus}`)}\n            </div>\n          }\n        />\n        <ReferenceField\n          source=\"entranceId\"\n          reference={ResourceName.ENTRANCES}\n          link={false}\n        >\n          <FunctionField<EntranceDto>\n            render={(record?: EntranceDto) =>\n              <div>{record?.id} ({record?.note})</div>} />\n        </ReferenceField>\n        <ReferenceField\n          source=\"modifiedById\"\n          reference={ResourceName.USERS}\n          link={false}\n        >\n          <TextField\n            source=\"userName\" />\n        </ReferenceField>\n        <ReferenceField\n          source=\"createdById\"\n          reference={ResourceName.USERS}\n          link={false}\n        >\n          <TextField\n            source=\"userName\" />\n        </ReferenceField>\n        <FunctionField<AccessDto>\n          source=\"allowReenter\"\n          render={(r?: AccessDto) =>\n            <div>\n              {r?.allowReenter\n                ? translate('const.yes')\n                : translate('const.no')}\n            </div>} />\n        <FunctionField<AccessDto>\n          source=\"multipleEntry\"\n          render={(r?: AccessDto) =>\n            <div>\n              {r?.multipleEntry\n                ? translate('const.yes')\n                : translate('const.no')}\n            </div>} />\n        <TextField source=\"multiple\" />\n        <TextField source=\"usePriority\" />\n        <TextField source=\"delay\" />\n        {access?.releaseTime &&\n          <FunctionField<AccessDto>\n            source=\"releaseTime\"\n            render={(record?: AccessDto) =>\n              <div>{formatTime(record?.releaseTime)}</div>}\n          />}\n        {access?.releaseDayOfMonth &&\n          <TextField source=\"releaseDayOfMonth\" />}\n        {access?.releaseDayOfWeek &&\n          <FunctionField<AccessDto>\n          source=\"releaseDayOfWeek\"\n          render={(r?: AccessDto) =>\n            <div>\n              {translate(\n                `resources.enums.dayOfWeek.${r?.releaseDayOfWeek}`\n              )}\n            </div>} />}\n        <DateField source=\"createdAt\" showTime />\n        <DateField source=\"modifiedAt\" showTime />\n        {access?.activePeriodStartingFrom !== AccessActivePeriodStartingOptions.NO_LIMIT &&\n          <TextField source=\"activePeriod\" />}\n        <FunctionField<AccessDto>\n          source=\"activePeriodStartingFrom\"\n          render={(r?: AccessDto) =>\n            <div>\n              {translate(\n                `resources.enums.activePeriodStartingFrom.${r?.activePeriodStartingFrom}`\n              )}\n            </div>} />\n        <GeneralActions />\n      </Tab>\n      {hasAuthority(Authority.VIEW_VARIANTS) &&\n        <Tab path=\"variants\"\n          label=\"resources.accesses.tabs.variants\">\n          <RelationTab source={ResourceName.VARIANTS}\n            mode={hasAuthority(Authority.EDIT_VARIANTS) ? 'edit' : 'show'} />\n        </Tab>}\n    </TabbedShowLayout>\n  )\n}\n\nexport const AccessShow = (props: ShowProps) => (\n  <Show {...props} actions={false} title={<ShowTitle />}>\n    <AccessTabs />\n  </Show>\n)","import {\n  Create, CreateProps, TextInput, useTranslate,\n  BooleanInput, SimpleForm\n} from \"react-admin\"\nimport React from \"react\"\nimport { VariantDto } from \"../../../core/dto/variant.dto\"\n\nconst validateVariantCreate = (values: VariantDto) => {\n  const errors: { [n: string]: string } = {}\n  if (!values.name) {\n    errors.name = 'ra.validation.required'\n  }\n  return errors\n}\n\nconst CreateTitle = () => {\n  const translate = useTranslate()\n  return (\n    <span>{translate('resources.variants.titles.create')}</span>\n  )\n}\n\nexport const VariantCreate = (props: CreateProps) => (\n  <Create {...props} title={<CreateTitle />}>\n    <SimpleForm redirect=\"show\" validate={validateVariantCreate}>\n      <TextInput source=\"name\" />\n      <BooleanInput source=\"active\" />\n    </SimpleForm>\n  </Create>\n)","import { Cancel } from '@material-ui/icons'\nimport React from 'react'\nimport {\n  Edit,\n  EditProps,\n  SaveButton,\n  ShowButton,\n  SimpleForm,\n  TextField,\n  TextInput,\n  TitleProps,\n  Toolbar,\n  ToolbarProps,\n  useTranslate,\n  BooleanInput\n} from 'react-admin'\nimport { VariantDto } from '../../../core/dto/variant.dto'\n\nconst validateVariantEdit = (values: VariantDto) => {\n  const errors: { [n: string]: string } = {}\n  if (!values.name) {\n    errors.name = 'ra.validation.required'\n  }\n  return errors\n}\n\ninterface VariantTitleProps extends TitleProps {\n  record?: VariantDto\n}\n\nconst EditTitle = (data: VariantTitleProps) => {\n  const {\n    record,\n  } = data\n  const translate = useTranslate()\n  return (\n    <span>\n      {translate('resources.variants.titles.edit')}: {record?.id}. {record?.name}{' '}\n    </span>\n  )\n}\n\nconst EditToolbar = (props: ToolbarProps) => (\n  <Toolbar {...props}>\n    <SaveButton />\n    <ShowButton icon={<Cancel />} label=\"const.cancel\" />\n  </Toolbar>\n)\n\nexport const VariantEdit = (props: EditProps) => (\n  <Edit {...props} hasShow={false} title={<EditTitle />}>\n    <SimpleForm redirect=\"show\" toolbar={<EditToolbar />}\n      validate={validateVariantEdit}>\n      <TextField source=\"id\" label=\"ID\" />\n      <TextInput source=\"name\" />\n      <BooleanInput source=\"active\" />\n    </SimpleForm>\n  </Edit>\n)","import React from \"react\"\nimport {\n  ListProps, List, Pagination, TextField, FunctionField,\n  Datagrid, useTranslate, Filter, TextInput\n} from 'react-admin'\nimport { Authority } from \"../../../core/auth/Authority\"\nimport { VariantDto } from \"../../../core/dto/variant.dto\"\nimport { ResourceName } from \"../../../core/ResourceName\"\nimport FilterProps from '../../common/FilterProps'\nimport { useHasAuthority } from \"../../hooks/useHasAuthority\"\n\nconst VariantsFilters = (props: FilterProps) => (\n  <Filter {...props}>\n    <TextInput source=\"name\" alwaysOn />\n  </Filter>\n)\n\nexport const VariantList = (props: ListProps) => {\n  const translate = useTranslate()\n  const hasAuthority = useHasAuthority()\n  return (\n    <List\n      perPage={20}\n      exporter={false}\n      pagination={<Pagination\n        rowsPerPageOptions={[20, 50, 100]} />}\n      sort={{ field: 'id', order: 'DESC' }}\n      {...props}\n      bulkActionButtons={false}\n      filters={<VariantsFilters />}\n      hasCreate={hasAuthority(Authority.CREATE_VARIANTS)}\n    >\n      <Datagrid rowClick={id =>\n        `${ResourceName.VARIANTS}/${id}/show`}>\n        <TextField source=\"id\" />\n        <TextField source=\"name\" />\n        <FunctionField<VariantDto>\n          source=\"active\"\n          render={(record?: VariantDto) =>\n            record?.active ?\n              translate('const.yes') :\n              translate('const.no')} />\n      </Datagrid>\n    </List>\n  )\n}","import { Box, ButtonGroup, Divider, useMediaQuery, useTheme } from \"@material-ui/core\"\nimport React from \"react\"\nimport {\n  ShowProps, Show, TabbedShowLayout, Tab, TextField, FunctionField, useTranslate, GET_LIST,\n  useShowContext, TabbedShowLayoutProps, useMutation, useNotify, sanitizeFetchType, TextInput, BooleanInput,\n  useListContext, TopToolbar, ResourceContextProvider, List, Pagination, Datagrid, TitleProps, EditButton\n} from 'react-admin'\nimport { AccessDto } from \"../../../core/dto/access.dto\"\nimport { VariantDto } from \"../../../core/dto/variant.dto\"\nimport { ResourceName } from \"../../../core/ResourceName\"\nimport Button from '../../common/customized-mui-components/Button'\nimport { CheckboxField } from \"../../common/CheckboxField\"\nimport { useHasAuthority } from \"../../hooks/useHasAuthority\"\nimport { Authority } from \"../../../core/auth/Authority\"\n\ntype VariantTabsProps = Omit<TabbedShowLayoutProps, 'children'>\n\ninterface VariantTitleProps extends TitleProps {\n  record?: VariantDto\n}\n\nconst ShowTitle = (data: VariantTitleProps) => {\n  const { record: variant } = data\n  const translate = useTranslate()\n  return (\n    <span>\n      {translate('resources.variants.titles.show')}: {variant?.id}. {variant?.name}\n    </span>\n  )\n}\n\nconst GeneralActions = () => {\n  const { record: variant } = useShowContext<VariantDto>()\n  const hasAuthority = useHasAuthority()\n  return (\n    <>\n      <Divider />\n      <Box p={1} display=\"block\" textAlign=\"right\">\n        <EditButton\n        basePath=\"/variants\"\n        record={variant}\n        variant=\"contained\"\n        style={{ margin: '2px' }}\n        disabled={!hasAuthority(Authority.EDIT_VARIANTS)} />\n      </Box>\n    </>\n  )\n}\n\nconst RelationTab = ({ source, mode }: { source: ResourceName.ACCESSES, mode: 'show' | 'edit' }) => {\n  const [mutate] = useMutation()\n  const notify = useNotify()\n  const { record: variant, basePath, refetch } = useShowContext<VariantDto>()\n  const translate = useTranslate()\n  const theme = useTheme()\n  const smallScreen = useMediaQuery(theme.breakpoints.down('sm'))\n\n  const handleAttach = async (idsToAttach: number[]) => {\n    switch (source) {\n      case ResourceName.ACCESSES:\n        await mutate(\n          {\n            type: sanitizeFetchType('attachAccesses'),\n            resource: ResourceName.VARIANTS,\n            payload: {\n              variantId: variant?.id,\n              accessesIds: idsToAttach,\n            },\n          },\n          { returnPromise: true },\n        )\n        break\n      default:\n        notify(`Source '${source}' is not implemented yet.`)\n    }\n    if (refetch) {\n      refetch()\n    }\n  }\n\n  const handleDetach = async (idsToDetach: number[]) => {\n    switch (source) {\n      case ResourceName.ACCESSES:\n        await mutate(\n          {\n            type: sanitizeFetchType('detachAccesses'),\n            resource: ResourceName.VARIANTS,\n            payload: {\n              variantId: variant?.id,\n              accessesIds: idsToDetach,\n            },\n          },\n          { returnPromise: true },\n        )\n        break\n      default:\n        notify(`Source '${source}' is not implemented yet.`)\n    }\n    if (refetch) {\n      refetch()\n    }\n  }\n\n  const isAttached = (relatedRecordId: number) => {\n    switch (source) {\n      case ResourceName.ACCESSES:\n        return variant?.accessesIds?.includes(relatedRecordId)\n      default:\n        notify(`Source '${source}' is not implemented yet.`)\n        return false\n    }\n  }\n\n  const listFilters = () => {\n    switch (source) {\n      case ResourceName.ACCESSES:\n        return ([<TextInput source=\"name\" alwaysOn />,\n        <BooleanInput label=\"common.related-records.actions.attached-only\" source=\"filterVariantId\" alwaysOn />])\n      default: return ([])\n    }\n  }\n\n  const listSort = () => {\n    switch (source) {\n      case ResourceName.ACCESSES:\n        return ({ field: 'id', order: 'DESC' })\n      default: return (undefined)\n    }\n  }\n\n  const listColumns = () => {\n    switch (source) {\n      case ResourceName.ACCESSES:\n        return ([\n          <TextField source=\"id\" label=\"ID\" key='id' />,\n          <TextField source=\"name\" key='name' />,\n          !smallScreen && <FunctionField<AccessDto>\n            source=\"bonus\"\n            key=\"bonus\"\n            render={(r?: AccessDto) =>\n              translate(`resources.enums.bonus.${r?.bonus}`)} />,\n          !smallScreen && <TextField source=\"entranceId\" key='entranceId' />])\n      default: return ([])\n    }\n  }\n\n  const Actions = () => {\n    const { filterValues, refetch: refetchList } = useListContext<AccessDto>()\n    const getFilteredRelatedRecordsIds = async () =>\n      (await mutate(\n        {\n          type: sanitizeFetchType(GET_LIST),\n          resource: source,\n          payload: {\n            filter: {\n              ...filterValues\n            }\n          }\n        },\n        { returnPromise: true }\n      ))?.data?.map((record: AccessDto) => record?.id)\n\n    const handleAttachAll = async () => {\n      await handleAttach(await getFilteredRelatedRecordsIds())\n      if (filterValues?.filterVariantId === true) {\n        refetchList()\n      }\n    }\n\n    const handleDetachAll = async () => {\n      await handleDetach(await getFilteredRelatedRecordsIds())\n      if (filterValues?.filterVariantId === true) {\n        refetchList()\n      }\n    }\n\n    return (\n      <TopToolbar>\n        <ButtonGroup>\n          <Button\n            variant=\"contained\"\n            onClick={() => handleAttachAll()}\n            label=\"common.related-records.actions.attach-all\"\n            useSmallVersionBreakpoint={false}\n          />\n          <Button\n            variant=\"outlined\"\n            onClick={() => handleDetachAll()}\n            label=\"common.related-records.actions.detach-all\"\n            useSmallVersionBreakpoint={false}\n          />\n        </ButtonGroup>\n      </TopToolbar>\n    )\n  }\n\n  const AttachedCheckbox = ({ ...props }) => {\n    const { filterValues, refetch: refetchList } = useListContext<AccessDto>()\n\n    return (\n      <CheckboxField\n        {...props}\n        disabled={mode !== 'edit'}\n        sortable={false}\n        checkBySource={(id: number) => isAttached(id)}\n        source=\"id\"\n        onClick={\n          (id: number) => isAttached(id as number)\n            ? async () => {\n              await handleDetach([id as number])\n              if (filterValues?.filterVariantId === true) {\n                refetchList()\n              }\n            }\n            : async () => {\n              await handleAttach([id as number])\n              if (filterValues?.filterVariantId === true) {\n                refetchList()\n              }\n            }\n        } />\n    )\n  }\n\n  return (\n    <ResourceContextProvider value={source} >\n      <List\n        basePath={basePath}\n        exporter={false}\n        title=\" \"\n        filters={listFilters()}\n        filterDefaultValues={{ variantId: variant?.id, filterVariantId: true }}\n        sort={listSort()}\n        pagination={<Pagination rowsPerPageOptions={[10, 20, 50, 100]} />}\n        perPage={20}\n        actions={mode === 'edit' ? <Actions /> : <></>}\n      >\n        <>\n          <Datagrid size=\"small\" style={{ tableLayout: 'fixed' }} >\n            {listColumns()}\n            <AttachedCheckbox label=\"common.related-records.fields.is-attached\" />\n          </Datagrid>\n        </>\n      </List>\n    </ResourceContextProvider>\n  )\n}\n\nconst VariantTabs = (props: VariantTabsProps) => {\n  const translate = useTranslate()\n  const hasAuthority = useHasAuthority()\n  return (\n    <TabbedShowLayout {...props}>\n      <Tab label=\"resources.variants.tabs.general\">\n        <TextField source=\"id\" />\n        <TextField source=\"name\" />\n        <FunctionField<VariantDto>\n          source=\"active\"\n          render={(r?: VariantDto) =>\n            <div>\n              {r?.active ?\n                translate('const.yes') :\n                translate('const.no')}\n            </div>} />\n        <GeneralActions />\n      </Tab>\n      {hasAuthority(Authority.VIEW_ACCESSES) &&\n        <Tab path=\"accesses\"\n          label=\"resources.variants.tabs.accesses\">\n          <RelationTab source={ResourceName.ACCESSES}\n            mode={hasAuthority(Authority.EDIT_ACCESSES) ? 'edit' : 'show'} />\n        </Tab>}\n    </TabbedShowLayout>\n  )\n}\n\nexport const VariantShow = (props: ShowProps) => (\n  <Show {...props} actions={false} title={<ShowTitle />}>\n    <VariantTabs />\n  </Show>\n)","import * as React from 'react'\nimport { useListContext } from 'react-admin';\nimport { Button, Toolbar, Grid, Paper, ButtonGroup, Select, MenuItem } from '@material-ui/core';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\n\nexport const MobilePostPagination = () => {\n  const { page, perPage, total, setPage, setPerPage } = useListContext();\n  const nbPages = Math.ceil(total / perPage) || 1;\n  return (\n      nbPages > 1 ?\n        <Toolbar>\n          <Grid container>\n            <Grid item xs={3}>\n            <Paper elevation={0}\n              style={{height: '100%', display: 'flex', flexDirection: 'row', justifyContent: 'flex-end', alignItems: 'center'}}>\n              <Select value={perPage} style={{width: '100%', height: '70%', textAlign: 'center'}} variant='outlined'\n              onChange={e => setPerPage(parseInt(e.target.value as string, 10))}>\n                <MenuItem value={20}> 20 </MenuItem>\n                <MenuItem value={50}> 50 </MenuItem>\n                <MenuItem value={100}> 100 </MenuItem>\n              </Select>\n            </Paper>\n            </Grid>\n            <Grid item xs={4} />\n            <Grid item xs={5}>\n              <Paper elevation={0}\n              style={{height: '100%', display: 'flex', flexDirection: 'row', justifyContent: 'flex-end', alignItems: 'center'}}>\n                <ButtonGroup style={{height: '70%'}}>\n                  {page > 1 ?\n                    <Button variant=\"outlined\" color=\"primary\" key=\"prev\" onClick={() => setPage(page - 1)}>\n                      <ChevronLeft />\n                    </Button> :\n                    <Button variant=\"outlined\" color=\"primary\" disabled>\n                      <ChevronLeft />\n                    </Button> \n                  }\n                  <Button disabled variant=\"contained\"> {page} </Button>\n                  {page !== nbPages ?\n                    <Button variant=\"outlined\" color=\"primary\" key=\"next\" onClick={() => setPage(page + 1)}>\n                      <ChevronRight />\n                    </Button> :\n                    <Button variant=\"outlined\" color=\"primary\" disabled>\n                      <ChevronRight />\n                    </Button>\n                  }\n                </ButtonGroup>\n              </Paper>\n            </Grid>\n          </Grid>\n        </Toolbar> :\n        <div />\n  );\n}","import React from \"react\"\nimport { ListProps, List, Pagination, FunctionField, TextField, Datagrid, ReferenceField, DateField } from \"react-admin\"\nimport { useMediaQuery, useTheme } from \"@material-ui/core\"\nimport { MobilePostPagination } from '../common/Pagination'\nimport { ResourceName } from \"../../core/ResourceName\"\nimport { EventDto } from \"../../core/dto/event/event.dto\"\n\nexport const BookingList = (props: ListProps) => {\n  const theme = useTheme()\n  return (\n    <List\n      perPage={20}\n      exporter={false}\n      pagination={\n        useMediaQuery(theme.breakpoints.up('md')) ? (\n          <Pagination rowsPerPageOptions={[20, 50, 100]} />\n        ) : (\n          <MobilePostPagination />\n        )\n      }\n      sort={{ field: 'id', order: 'DESC' }}\n      {...props}\n      bulkActionButtons={false}\n    >\n      <Datagrid rowClick={(id) => `/${ResourceName.TICKET_DETAILS}/${id}/show`}>\n        <ReferenceField link={false}\n          reference={ResourceName.EVENTS}\n          source=\"eventId\">\n          <FunctionField<EventDto>\n            render={() => (\n              <div> <TextField source=\"id\" />. <TextField source=\"name\" /> <DateField source=\"dateStart\" /> </div>\n            )} />\n        </ReferenceField>\n        <TextField source=\"id\" />\n        <ReferenceField link={false}\n          reference={ResourceName.VARIANTS}\n          source=\"variantId\">\n          <TextField source=\"name\" />\n        </ReferenceField>\n      </Datagrid>\n    </List>\n  )\n}","import {\n  DateField,\n  FunctionField,\n  Record,\n  ResourceContextProvider,\n  Show,\n  ShowProps,\n  Tab,\n  TabbedShowLayout,\n  TextField,\n  useShowContext,\n  useTranslate,\n} from 'react-admin'\nimport React, { useMemo } from 'react'\nimport { Box } from '@material-ui/core'\nimport { LogList } from '../logs/LogList'\nimport { ResourceName } from '../../core/ResourceName'\nimport { BookingList } from './CustomerBookingsList'\nimport { useHasAuthority } from '../hooks/useHasAuthority'\nimport { Authority } from '../../core/auth/Authority'\n\nconst CustomerBookingsView = () => {\n  const { record, basePath } = useShowContext()\n  return (\n    <Box paddingY={2}>\n      <ResourceContextProvider value={ResourceName.BOOKINGS}>\n        <BookingList\n          basePath={basePath}\n          filter={{ id: record?.bookingsIds.join(',') }}\n          filters={undefined}\n          actions={false}\n          title=\" \"\n        />\n      </ResourceContextProvider>\n    </Box>\n  )\n}\n\nconst CustomerLogsView = () => {\n  const { record, basePath } = useShowContext()\n  return (\n    <Box paddingY={2}>\n      <ResourceContextProvider value={ResourceName.TICKET_LOGS}>\n        <LogList\n          basePath={basePath}\n          filter={{ bookingId: record?.bookingsIds.join(',') }}\n          filters={undefined}\n          actions={false}\n          title=\" \"\n        />\n      </ResourceContextProvider>\n    </Box>\n  )\n}\n\nconst CustomerTabs = () => {\n  const { record } = useShowContext()\n  const translate = useTranslate()\n  const hasAuthority = useHasAuthority()\n  const bookingPresent = useMemo(() => record?.bookingsIds.length > 0, [record])\n  return (\n    <TabbedShowLayout>\n      <Tab label={translate('resources.customer-details.tabs.profile')}>\n        <TextField\n          source=\"firstname\"\n          label=\"resources.customer-details.fields.firstname\"\n        />\n        <TextField\n          source=\"lastname\"\n          label=\"resources.customer-details.fields.lastname\"\n        />\n        {record?.company && (\n          <TextField\n            source=\"company\"\n            label=\"resources.customer-details.fields.company\"\n          />\n        )}\n        {record?.birthdate && (\n          <>\n            {record.birthdate.split('.')[0].length === 1 && 0}\n            <DateField\n              source=\"birthdate\"\n              label=\"resources.customer-details.fields.birthdate\"\n            />\n          </>\n        )}\n        {record?.documentType && (\n          <TextField\n            source=\"documentType\"\n            label=\"resources.customer-details.fields.documentType\"\n          />\n        )}\n        {record?.pesel ? (\n          <TextField\n            source=\"pesel\"\n            label=\"resources.customer-details.fields.pesel\"\n          />\n        ) : (\n          <TextField\n            source=\"documentNumber\"\n            label=\"resources.customer-details.fields.documentNumber\"\n          />\n        )}\n        {record?.nationality && (\n          <TextField\n            source=\"nationality\"\n            label=\"resources.customer-details.fields.nationality\"\n          />\n        )}\n        {record?.gender && (\n          <FunctionField\n            label=\"resources.customer-details.fields.gender\"\n            render={(r: Record | undefined) =>\n              r && translate(`resources.enums.gender.${r.gender}`)\n            }\n          />\n        )}\n      </Tab>\n      {bookingPresent && (\n        <Tab path=\"bookings\"\n          label={translate('resources.customer-details.tabs.bookings')}>\n          <CustomerBookingsView />\n        </Tab>\n      )}\n      {bookingPresent && hasAuthority(Authority.VIEW_LOGS) && (\n        <Tab path=\"logs\"\n          label={translate('resources.customer-details.tabs.logs')}>\n          <CustomerLogsView />\n        </Tab>\n      )}\n    </TabbedShowLayout>\n  )\n}\n\nexport const CustomerDetailsView = (props: ShowProps) => (\n  <Show {...props}>\n    <CustomerTabs />\n  </Show>\n)\n","/**\n * @example\n * maskMiddlePart('importantValue', 3) === 'imp********lue'\n */\nexport const maskMiddlePart = (word: string, threshold: number) => {\n  const firstChars = word.substring(0, threshold)\n  const lastChars = word.slice(-threshold)\n  const restCharsLength = word.length - firstChars.length - lastChars.length\n  return `${firstChars}${'*'.repeat(\n    restCharsLength > 0 ? restCharsLength : 0,\n  )}${lastChars}`\n}\n","import * as React from 'react'\nimport { TextField, TextFieldProps, useRecordContext } from 'react-admin'\nimport { maskMiddlePart } from '../../core/common/mask.utils'\n\nexport const MaskField = ({ source, ...rest }: TextFieldProps) => {\n  const record = useRecordContext()\n  const properRecord = record[source as string]\n    ? {\n      ...record,\n      [source as string]: maskMiddlePart(record[source as string], 2),\n    }\n    : record\n  return <TextField {...rest} record={properRecord} source={source} />\n}\n","import { Box, Typography, Divider, useMediaQuery, useTheme } from '@material-ui/core'\nimport React from 'react'\nimport {\n  List,\n  ListProps,\n  useListContext,\n  useTranslate,\n  Datagrid,\n  TextField,\n  TextInput,\n  FunctionField,\n  Filter\n} from 'react-admin'\nimport { CustomerInfo } from '../../core/customer-info/customer-info'\nimport { ResourceName } from '../../core/ResourceName'\nimport { MaskField } from '../common/MaskField'\nimport FilterProps from '../common/FilterProps'\n\nconst CustomerInfoGrid = () => {\n  const {\n    loading,\n    filterValues: { info },\n  } = useListContext()\n  const t = useTranslate()\n  const theme = useTheme()\n  const smallDevice = useMediaQuery(theme.breakpoints.down('sm'))\n  return (\n    <>\n      {info &&\n        <Box m={2}>\n          <Typography variant=\"h5\" paragraph>\n            {t('resources.customer-info.search-list-title', { info })}\n          </Typography>\n        </Box>}\n      <Divider />\n      <Datagrid\n        loaded={!loading}\n        rowClick={(id) => `${ResourceName.CUSTOMER_DETAILS}/${id}/show`}\n      >\n        <TextField source=\"firstname\" />\n        <TextField source=\"lastname\" />\n        {smallDevice &&\n          <FunctionField<CustomerInfo> source=\"pesel\"\n            label=\"resources.customer-info.fields.documentNumber\"\n            render={(record?: CustomerInfo) => (\n              record?.pesel ?\n                <MaskField source=\"pesel\" /> :\n                <MaskField source=\"documentNumber\" />\n            )} />}\n        {!smallDevice && <MaskField source=\"pesel\" />}\n        {!smallDevice && <MaskField source=\"documentNumber\" />}\n      </Datagrid>\n    </>\n  )\n}\n\nconst CustomerInfoFilters = (props: FilterProps) => (\n  <Filter {...props}>\n    <TextInput source=\"firstname\" />\n    <TextInput source=\"lastname\" />\n    <TextInput source=\"pesel\" />\n    <TextInput source=\"documentNumber\" />\n    <TextInput source=\"info\" />\n  </Filter>\n)\n\nexport const CustomerInfoList = (props: ListProps) => (\n  <List\n    exporter={false}\n    {...props}\n    sort={{ field: 'lastname', order: 'ASC' }}\n    filters={<CustomerInfoFilters />}\n  >\n    <CustomerInfoGrid />\n  </List>\n)\n","import { Typography } from '@material-ui/core'\nimport { Cancel } from '@material-ui/icons'\nimport React from 'react'\nimport {\n  BooleanInput,\n  DateField, Edit,\n  EditProps, FunctionField, Labeled, Record, SaveButton, SelectInput, ShowButton, SimpleForm,\n  TextField,\n  TextInput, TitleProps,\n  Toolbar,\n  ToolbarProps, useEditContext, useTranslate\n} from 'react-admin'\nimport { EngineDto } from '../../../core/dto/device/engine/engine.dto'\nimport { DeviceDirection } from '../../../core/enum/DeviceDirection'\nimport { Multiplicities } from '../../../core/enum/Multiplicities'\n\nconst validateEngineEdit = (values: EngineDto) => {\n  const errors: { [n: string]: string } = {}\n  if (!values.name) {\n    errors.name = 'ra.validation.required'\n  }\n  if (!values.address) {\n    errors.address = 'ra.validation.required'\n  }\n  return errors\n}\n\ninterface EngineTitleProps extends TitleProps {\n  record?: EngineDto\n}\n\nconst EditTitle = (data: EngineTitleProps) => {\n  const {\n    record,\n  } = data\n  const translate = useTranslate()\n  return (\n    <span>\n      {translate('resources.engines.titles.edit')}: {record?.id}. {record?.name}{' '}\n    </span>\n  )\n}\n\nconst HidingField = ({ source }: { source: keyof EngineDto }) => {\n  const { record } = useEditContext<EngineDto>()\n  return (\n    <>\n      {record && record[source] && (\n        <Labeled label=\"resources.engines.fields.disabled\">\n          <Typography component=\"span\" color=\"textPrimary\">\n            {record[source]}\n          </Typography>\n        </Labeled>\n      )}\n    </>\n  )\n}\n\nconst EditToolbar = (props: ToolbarProps) => (\n  <Toolbar {...props}>\n    <SaveButton />\n    <ShowButton icon={<Cancel />} label=\"const.cancel\" />\n  </Toolbar>\n)\n\nexport const EngineEdit = (props: EditProps) => {\n  const translate = useTranslate()\n  return (\n    <Edit {...props} hasShow={false} title={<EditTitle />}>\n      <SimpleForm redirect=\"show\" toolbar={<EditToolbar />} validate={validateEngineEdit}>\n        <TextField source=\"id\" label=\"ID\" />\n        <TextInput source=\"name\" />\n        <BooleanInput source=\"isWatched\" />\n        <DateField\n          source=\"lastRefresh\"\n          showTime\n          options={{ day: \"2-digit\", month: \"2-digit\", year: \"numeric\", hour: \"2-digit\", minute: \"2-digit\" }}\n        />\n        <TextInput source=\"address\" />\n        <SelectInput\n          source=\"direction\"\n          choices={[\n            { id: DeviceDirection.IN, name: translate(`resources.enums.deviceDirection.IN`) },\n            { id: DeviceDirection.OUT, name: translate(`resources.enums.deviceDirection.OUT`) },\n            { id: DeviceDirection.INFO, name: translate(`resources.enums.deviceDirection.INFO`) }\n          ]}\n        />\n        <TextInput source=\"categoryId\" />\n        <FunctionField\n          source=\"stanbyMode\"\n          render={(record: Record | undefined) => <TextField\n            emptyText={translate(`resources.enums.standbyMode.${record?.stanbyMode}`)}\n          />}\n        />\n        <HidingField source=\"disabled\" />\n        <BooleanInput source=\"onlineInfixCeck\" />\n        <SelectInput\n          source=\"multiplicity\"\n          choices={[\n            { id: Multiplicities.SINGLE, name: translate(`resources.enums.multiplicities.SINGLE`) },\n            { id: Multiplicities.MULTIPLE, name: translate(`resources.enums.multiplicities.MULTIPLE`) },\n            { id: Multiplicities.CHECK_ALL, name: translate(`resources.enums.multiplicities.CHECK_ALL`) }\n          ]}\n        />\n      </SimpleForm>\n    </Edit>\n  )\n}\n\n\n\n","export enum StanbyMode {\n  SENSOR = 'Sensor',\n  ALWAYS_ON = 'AlwaysOn',\n  ALWAYS_OFF = 'AlwaysOff'\n}","import { useMediaQuery, useTheme } from '@material-ui/core'\nimport React from 'react'\nimport { Datagrid, List, ListProps, Pagination, TextField, TextInput, useListContext } from 'react-admin'\nimport { ResourceName } from '../../../core/ResourceName'\n\nconst EngineGrid = () => {\n  const { loading } = useListContext()\n  const theme = useTheme()\n  const smallScreen = useMediaQuery(theme.breakpoints.down('sm'))\n  return (\n    <Datagrid\n      size=\"small\"\n      loaded={!loading}\n      rowClick={(id) => `${ResourceName.ENGINES}/${id}/show`}\n    >\n      <TextField source=\"id\" label=\"ID\" />\n      <TextField source=\"name\" />\n      {!smallScreen && <TextField source=\"address\" />}\n      <TextField source=\"categoryId\" sortable={false} />\n      {!smallScreen && <TextField source=\"disabled\" sortable={false} />}\n    </Datagrid>\n  )\n}\n\nexport const EngineList = ({ ...props }: ListProps) =>\n  <List\n    {...props}\n    perPage={20}\n    pagination={<Pagination rowsPerPageOptions={[10, 20, 50]} />}\n    exporter={false}\n    filters={[\n      <TextInput source=\"name\" alwaysOn />,\n      <TextInput source=\"categoryId\" />\n    ]}\n  >\n    <EngineGrid />\n  </List>\n","import {\n  createStyles, Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle, makeStyles, MenuItem, Select, TextField, Theme\n} from '@material-ui/core'\nimport React, { useEffect, useState } from 'react'\nimport {\n  sanitizeFetchType, useMutation,\n  useRefresh, useShowContext, useTranslate\n} from 'react-admin'\nimport useStateRef from 'react-usestateref'\nimport { EngineDto } from '../../../core/dto/device/engine/engine.dto'\nimport { StanbyMode } from '../../../core/enum/StanbyMode'\nimport { ResourceName } from '../../../core/ResourceName'\nimport Button from '../../common/customized-mui-components/Button'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    dialogProperty: {\n      marginBottom: theme.spacing(1)\n    }\n  })\n)\n\nexport const ConfirmDialog = ({\n  confirm,\n  cancel,\n  source,\n  open,\n  action,\n}: {\n  confirm: () => void\n  cancel: () => void\n  source: 'setStandbyMode' | 'lock' | 'setTSCanCredentials'\n  open: boolean\n  action: 'set' | 'remove'\n}) => {\n  const translate = useTranslate()\n  return (\n    <Dialog open={open}>\n      <DialogTitle>\n        {translate(`resources.engines.dialogs.confirm.${source}.${action}`)}\n      </DialogTitle>\n      <DialogActions>\n        <Button variant=\"contained\" onClick={confirm} label={translate('ra.action.save')} useSmallVersionBreakpoint={false} />\n        <Button variant=\"contained\" onClick={cancel} label={translate('const.cancel')} useSmallVersionBreakpoint={false} />\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nexport const SetTSCanCredentialsModal = ({\n  open,\n  close,\n}: {\n  open: boolean\n  close: () => void\n}) => {\n  const classes = useStyles()\n  const [loginValue, setLoginValue] = useState('')\n  const [loginError, setLoginError, loginErrorCurrentValue] = useStateRef(false)\n  const [loginErrorText, setLoginErrorText] = useState('')\n  const [passwordValue, setPasswordValue] = useState('')\n  const [passwordError, setPasswordError, passwordErrorCurrentValue] = useStateRef(false)\n  const [passwordErrorText, setPasswordErrorText] = useState('')\n  const [confirmOpen, setConfirmOpen] = useState(false)\n  const { record: engine } = useShowContext<EngineDto>()\n  const [mutate] = useMutation()\n  const refresh = useRefresh()\n  const translate = useTranslate()\n\n  const handleClose = () => {\n    setLoginValue('')\n    setPasswordValue('')\n    setLoginError(false)\n    setPasswordError(false)\n    setLoginErrorText('')\n    setPasswordErrorText('')\n    close()\n  }\n\n  const handleSetTSCanCredentials = async () => {\n    setConfirmOpen(false)\n    setLoginError(false)\n    setPasswordError(false)\n    setLoginErrorText('')\n    setPasswordErrorText('')\n    if (loginValue.replace(/\\s/g, '').length === 0) {\n      setLoginError(true)\n      setLoginErrorText(translate('resources.engines.dialogs.setTSCanCredentials.login.error-bad-string'))\n    } else if (loginValue.replace(/\\s/g, '').length !== loginValue.length) {\n      setLoginError(true)\n      setLoginErrorText(translate('resources.engines.dialogs.setTSCanCredentials.login.error-no-spaces'))\n    }\n    if (passwordValue.replace(/\\s/g, '').length === 0) {\n      setPasswordError(true)\n      setPasswordErrorText(translate('resources.engines.dialogs.setTSCanCredentials.password.error-bad-string'))\n    } else if (passwordValue.replace(/\\s/g, '').length !== passwordValue.length) {\n      setPasswordError(true)\n      setPasswordErrorText(translate('resources.engines.dialogs.setTSCanCredentials.password.error-no-spaces'))\n    }\n\n    if (!loginErrorCurrentValue.current && !passwordErrorCurrentValue.current) {\n      await mutate(\n        {\n          type: sanitizeFetchType('setTSCanCredentials'),\n          resource: ResourceName.ENGINES,\n          payload: {\n            engineId: engine?.id,\n            login: loginValue,\n            password: passwordValue\n          },\n        },\n        { returnPromise: true },\n      )\n      refresh()\n      handleClose()\n    }\n  }\n\n  return (\n    <Dialog open={open} onClose={handleClose}>\n      <ConfirmDialog\n        open={confirmOpen}\n        cancel={() => setConfirmOpen(false)}\n        confirm={handleSetTSCanCredentials}\n        source=\"setTSCanCredentials\"\n        action=\"set\"\n      />\n      <DialogTitle>\n        {translate('resources.engines.dialogs.setTSCanCredentials.title')}\n      </DialogTitle>\n      <DialogContent>\n        <TextField\n          className={classes.dialogProperty}\n          label={translate('resources.engines.dialogs.setTSCanCredentials.login.label')}\n          variant=\"outlined\"\n          value={loginValue}\n          onChange={(e) => setLoginValue(e.target.value)}\n          fullWidth\n          error={loginError}\n          helperText={loginErrorText}\n        />\n        <TextField\n          className={classes.dialogProperty}\n          label={translate('resources.engines.dialogs.setTSCanCredentials.password.label')}\n          variant=\"outlined\"\n          value={passwordValue}\n          onChange={(e) => setPasswordValue(e.target.value)}\n          fullWidth\n          type='password'\n          autoComplete=\"new-password\"\n          error={passwordError}\n          helperText={passwordErrorText}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button variant=\"contained\" onClick={() => setConfirmOpen(true)} label={translate('ra.action.save')} useSmallVersionBreakpoint={false} />\n        <Button variant=\"contained\" onClick={handleClose} label={translate('const.cancel')} useSmallVersionBreakpoint={false} />\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nexport const SetStandbyModeModal = ({\n  open,\n  close,\n}: {\n  open: boolean\n  close: () => void\n}) => {\n  const classes = useStyles()\n  const [value, setValue] = useState('')\n  const [confirmOpen, setConfirmOpen] = useState(false)\n  const { record: engine } = useShowContext<EngineDto>()\n  const [mutate] = useMutation()\n  const refresh = useRefresh()\n  const translate = useTranslate()\n\n  const handleClose = () => {\n    setValue('')\n    close()\n  }\n\n  const handleSetStandbyMode = async () => {\n    setConfirmOpen(false)\n    await mutate(\n      {\n        type: sanitizeFetchType('setStandbyMode'),\n        resource: ResourceName.ENGINES,\n        payload: {\n          engineId: engine?.id,\n          stanbyMode: value,\n        },\n      },\n      { returnPromise: true },\n    )\n    setValue('')\n    refresh()\n    close()\n  }\n\n  useEffect(() => {\n    if (open && engine?.stanbyMode) {\n      setValue(engine?.stanbyMode as string)\n    }\n  }, [open, engine?.stanbyMode])\n\n  return (\n    <Dialog open={open} onClose={handleClose}>\n      <ConfirmDialog\n        open={confirmOpen}\n        cancel={() => setConfirmOpen(false)}\n        confirm={handleSetStandbyMode}\n        source=\"setStandbyMode\"\n        action=\"set\"\n      />\n      <DialogTitle>\n        {translate('resources.engines.dialogs.setStandbyMode.title')}\n      </DialogTitle>\n      <DialogContent>\n        <Select\n          className={classes.dialogProperty}\n          variant=\"outlined\"\n          value={value}\n          onChange={(e) => setValue(e.target.value as string)}\n          fullWidth>\n          <MenuItem value={StanbyMode.ALWAYS_ON}>{translate(`resources.enums.standbyMode.${StanbyMode.ALWAYS_ON}`)}</MenuItem>\n          <MenuItem value={StanbyMode.ALWAYS_OFF}>{translate(`resources.enums.standbyMode.${StanbyMode.ALWAYS_OFF}`)}</MenuItem>\n          <MenuItem value={StanbyMode.SENSOR}>{translate(`resources.enums.standbyMode.${StanbyMode.SENSOR}`)}</MenuItem>\n        </Select>\n      </DialogContent>\n      <DialogActions>\n        <Button variant=\"contained\" onClick={() => setConfirmOpen(true)} label={translate('ra.action.save')} useSmallVersionBreakpoint={false} />\n        <Button variant=\"contained\" onClick={handleClose} label={translate('const.cancel')} useSmallVersionBreakpoint={false} />\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nexport const LockModal = ({\n  open,\n  close,\n}: {\n  open: boolean\n  close: () => void\n}) => {\n  const classes = useStyles()\n  const [value, setValue] = useState('')\n  const [error, setError] = useState(false)\n  const [errorText, setErrorText] = useState('')\n  const [confirmOpen, setConfirmOpen] = useState(false)\n  const { record: engine } = useShowContext<EngineDto>()\n  const [mutate] = useMutation()\n  const refresh = useRefresh()\n  const translate = useTranslate()\n\n  const handleClose = () => {\n    setValue('')\n    setError(false)\n    setErrorText('')\n    close()\n  }\n\n  const handleLock = async () => {\n    setConfirmOpen(false)\n    if (value.replace(/\\s/g, '').length === 0) {\n      setError(true)\n      setErrorText(translate('resources.engines.dialogs.lock.error-bad-string'))\n    } else if (value.replace(/\\s/g, '').length !== value.length) {\n      setError(true)\n      setErrorText(translate('resources.engines.dialogs.lock.error-no-spaces'))\n    } else {\n      await mutate(\n        {\n          type: sanitizeFetchType('lock'),\n          resource: ResourceName.ENGINES,\n          payload: {\n            engineId: engine?.id,\n            lockName: value,\n          },\n        },\n        { returnPromise: true },\n      )\n      handleClose()\n      refresh()\n    }\n  }\n\n  return (\n    <Dialog open={open} onClose={handleClose}>\n      <ConfirmDialog\n        open={confirmOpen}\n        cancel={() => setConfirmOpen(false)}\n        confirm={handleLock}\n        source=\"lock\"\n        action=\"set\"\n      />\n      <DialogTitle>\n        {translate('resources.engines.dialogs.lock.title')}\n      </DialogTitle>\n      <DialogContent>\n        <TextField\n          className={classes.dialogProperty}\n          variant=\"outlined\"\n          value={value}\n          onChange={(e) => setValue(e.target.value)}\n          fullWidth\n          error={error}\n          helperText={errorText}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button variant=\"contained\" onClick={() => setConfirmOpen(true)} label={translate('ra.action.save')} useSmallVersionBreakpoint={false} />\n        <Button variant=\"contained\" onClick={handleClose} label={translate('const.cancel')} useSmallVersionBreakpoint={false} />\n      </DialogActions>\n    </Dialog>\n  )\n}\n","export enum ToggleType {\n  BLOCK = 'BLOCK',\n  UNBLOCK = 'UNBLOCK',\n  DISABLED = 'DISABLED',\n}\n\nexport type ToggleButtonState = {\n  type: ToggleType\n  text: string\n}\n\nexport type ToggleButtonAction = { type: ToggleType }\n","import {\n  Box, ButtonGroup, Divider\n} from '@material-ui/core'\nimport React, { useState } from 'react'\nimport {\n  BooleanInput, Datagrid, DateField, EditButton, FunctionField, GET_LIST, List, Pagination, Record, ResourceContextProvider, sanitizeFetchType, Show,\n  ShowProps, Tab, TabbedShowLayout, TextField, TextInput,\n  TitleProps, TopToolbar, useListContext, useMutation, useNotify, useRefresh, useShowContext, useTranslate\n} from 'react-admin'\nimport { Authority } from '../../../core/auth/Authority'\nimport { EngineDto } from '../../../core/dto/device/engine/engine.dto'\nimport { EntranceDto } from '../../../core/dto/entrance.dto'\nimport { EventDto } from '../../../core/dto/event/event.dto'\nimport { ResourceName } from '../../../core/ResourceName'\nimport { CheckboxField } from '../../common/CheckboxField'\nimport Button from '../../common/customized-mui-components/Button'\nimport { useHasAuthority } from '../../hooks/useHasAuthority'\nimport { ConfirmDialog, LockModal, SetStandbyModeModal, SetTSCanCredentialsModal } from './EngineDialogs'\n\ninterface EngineTitleProps extends TitleProps {\n  record?: EngineDto\n}\n\nconst ShowTitle = (data: EngineTitleProps) => {\n  const {\n    record: engine,\n  } = data\n  const translate = useTranslate()\n  return (\n    <span>\n      {translate('resources.engines.titles.show')}: {engine?.id}. {engine?.name}\n    </span>\n  )\n}\n\nconst GeneralActions = () => {\n  const { record: engine } = useShowContext<EngineDto>()\n  const [lockModalOpen, setLockModalOpen] = useState(false)\n  const [unlockDialogOpen, setUnlockDialogOpen] = useState(false)\n  const [standbyModeModalOpen, setStandbyModeModalOpen] = useState(false)\n  const [removeTSCanCredentialsDialogOpen, setRemoveTSCanCredentialsDialogOpen] = useState(false)\n  const [tsCanCredentialsModalOpen, setTSCanCredentialsModalOpen] = useState(false)\n  const [mutate] = useMutation()\n  const refresh = useRefresh()\n\n  const handleSetTSCanCredentialsDialog = () => {\n    setTSCanCredentialsModalOpen(true)\n  }\n\n  const handleRemoveTSCanCredentials = async () => {\n    setRemoveTSCanCredentialsDialogOpen(false)\n    await mutate(\n      {\n        type: sanitizeFetchType('removeTSCanCredentials'),\n        resource: ResourceName.ENGINES,\n        payload: {\n          engineId: engine?.id,\n        },\n      },\n      { returnPromise: true },\n    )\n    refresh()\n  }\n\n  const handleRemoveTSCanCredentialsDialog = () => {\n    setRemoveTSCanCredentialsDialogOpen(true)\n  }\n\n  const handleSetStandbyModeDialog = () => {\n    setStandbyModeModalOpen(true)\n  }\n\n  const handleLock = async () => {\n    setUnlockDialogOpen(false)\n    await mutate(\n      {\n        type: sanitizeFetchType('unlock'),\n        resource: ResourceName.ENGINES,\n        payload: {\n          engineId: engine?.id,\n        },\n      },\n      { returnPromise: true },\n    )\n    refresh()\n  }\n\n  const handleLockDialog = () => {\n    if (engine?.disabled) setUnlockDialogOpen(true)\n    else setLockModalOpen(true)\n  }\n\n  return (\n    <>\n      <Divider />\n      <SetTSCanCredentialsModal\n        open={tsCanCredentialsModalOpen}\n        close={() => setTSCanCredentialsModalOpen(false)}\n      />\n      <SetStandbyModeModal\n        open={standbyModeModalOpen}\n        close={() => setStandbyModeModalOpen(false)}\n      />\n      <LockModal open={lockModalOpen} close={() => setLockModalOpen(false)} />\n      <ConfirmDialog\n        open={unlockDialogOpen}\n        confirm={handleLock}\n        source=\"lock\"\n        cancel={() => setUnlockDialogOpen(false)}\n        action=\"remove\"\n      />\n      <ConfirmDialog\n        open={removeTSCanCredentialsDialogOpen}\n        confirm={handleRemoveTSCanCredentials}\n        source=\"setTSCanCredentials\"\n        cancel={() => setRemoveTSCanCredentialsDialogOpen(false)}\n        action=\"remove\"\n      />\n      <Box p={1} display=\"block\" textAlign=\"right\">\n        <Button\n          variant=\"contained\"\n          onClick={handleSetTSCanCredentialsDialog}\n          color=\"primary\"\n          style={{ margin: '2px' }}\n          label=\"resources.engines.actions.setTSCanCredentials\"\n          useSmallVersionBreakpoint={false}\n        />\n        <Button\n          variant=\"contained\"\n          onClick={handleRemoveTSCanCredentialsDialog}\n          color=\"primary\"\n          style={{ margin: '2px' }}\n          label=\"resources.engines.actions.removeTSCanCredentials\"\n          useSmallVersionBreakpoint={false}\n        />\n        <Button\n          variant=\"contained\"\n          onClick={handleSetStandbyModeDialog}\n          color=\"primary\"\n          style={{ margin: '2px' }}\n          label=\"resources.engines.actions.setStandbyMode\"\n          useSmallVersionBreakpoint={false}\n        />\n        <Button\n          variant=\"contained\"\n          onClick={handleLockDialog}\n          color=\"primary\"\n          style={{ margin: '2px' }}\n          label={engine?.disabled\n            ? \"resources.engines.actions.unlock\"\n            : \"resources.engines.actions.lock\"}\n          useSmallVersionBreakpoint={false}\n        />\n        <EditButton basePath=\"/engines\" record={engine} variant=\"contained\" style={{ margin: '2px' }} />\n      </Box>\n    </>\n  )\n}\n\nconst RelationTab = ({ source, mode }: { source: ResourceName.EVENTS | ResourceName.ENTRANCES, mode: 'show' | 'edit' }) => {\n  const [mutate] = useMutation()\n  const notify = useNotify()\n  const { record: engine, basePath, refetch } = useShowContext<EngineDto>()\n\n  const handleAttach = async (idsToAttach: number[]) => {\n    switch (source) {\n      case ResourceName.EVENTS:\n        await mutate(\n          {\n            type: sanitizeFetchType('attachEvents'),\n            resource: ResourceName.ENGINES,\n            payload: {\n              engineId: engine?.id,\n              eventsIds: idsToAttach,\n            },\n          },\n          { returnPromise: true },\n        )\n        break\n      case ResourceName.ENTRANCES:\n        await mutate(\n          {\n            type: sanitizeFetchType('attachEntrances'),\n            resource: ResourceName.ENGINES,\n            payload: {\n              engineId: engine?.id,\n              entrancesIds: idsToAttach,\n            },\n          },\n          { returnPromise: true },\n        )\n        break\n      default:\n        notify(`Source '${source}' is not implemented yet.`)\n    }\n    if (refetch) {\n      refetch()\n    }\n  }\n\n  const handleDetach = async (idsToDetach: number[]) => {\n    switch (source) {\n      case ResourceName.EVENTS:\n        await mutate(\n          {\n            type: sanitizeFetchType('detachEvents'),\n            resource: ResourceName.ENGINES,\n            payload: {\n              engineId: engine?.id,\n              eventsIds: idsToDetach,\n            },\n          },\n          { returnPromise: true },\n        )\n        break\n      case ResourceName.ENTRANCES:\n        await mutate(\n          {\n            type: sanitizeFetchType('detachEntrances'),\n            resource: ResourceName.ENGINES,\n            payload: {\n              engineId: engine?.id,\n              entrancesIds: idsToDetach,\n            },\n          },\n          { returnPromise: true },\n        )\n        break\n      default:\n        notify(`Source '${source}' is not implemented yet.`)\n    }\n    if (refetch) {\n      refetch()\n    }\n  }\n\n  const isAttached = (relatedRecordId: number) => {\n    switch (source) {\n      case ResourceName.EVENTS:\n        return engine?.eventsIds?.includes(relatedRecordId)\n      case ResourceName.ENTRANCES:\n        return engine?.entrancesIds?.includes(relatedRecordId)\n      default:\n        notify(`Source '${source}' is not implemented yet.`)\n        return false\n    }\n  }\n\n  const listFilters = () => {\n    switch (source) {\n      case ResourceName.EVENTS:\n        return ([<TextInput source=\"name\" alwaysOn />,\n        <BooleanInput label=\"common.related-records.actions.attached-only\" source=\"filterVerifierDeviceId\" alwaysOn />])\n      case ResourceName.ENTRANCES:\n        return ([<TextInput source=\"note\" alwaysOn />,\n        <BooleanInput label=\"common.related-records.actions.attached-only\" source=\"filterVerifierDeviceId\" alwaysOn />])\n      default: return ([])\n    }\n  }\n\n  const listSort = () => {\n    switch (source) {\n      case ResourceName.EVENTS:\n        return ({ field: 'dateStart', order: 'DESC' })\n      case ResourceName.ENTRANCES:\n        return ({ field: 'note', order: 'ASC' })\n      default: return (undefined)\n    }\n  }\n\n  const listColumns = () => {\n    switch (source) {\n      case ResourceName.EVENTS:\n        return ([\n          <TextField source=\"id\" label=\"ID\" key='id' />,\n          <TextField source=\"name\" key='name' />])\n      case ResourceName.ENTRANCES:\n        return ([\n          <TextField source=\"id\" label=\"ID\" key='id' />,\n          <TextField source=\"note\" key='note' />])\n      default: return ([])\n    }\n  }\n\n  const Actions = () => {\n    const { filterValues, refetch: refetchList } = useListContext<EventDto | EntranceDto>()\n    const getFilteredRelatedRecordsIds = async () =>\n      (await mutate(\n        {\n          type: sanitizeFetchType(GET_LIST),\n          resource: source,\n          payload: {\n            filter: {\n              ...filterValues\n            }\n          }\n        },\n        { returnPromise: true }\n      ))?.data?.map((record: EventDto | EntranceDto) => record?.id)\n\n    const handleAttachAll = async () => {\n      await handleAttach(await getFilteredRelatedRecordsIds())\n      if (filterValues?.filterVerifierDeviceId === true) {\n        refetchList()\n      }\n    }\n\n    const handleDetachAll = async () => {\n      await handleDetach(await getFilteredRelatedRecordsIds())\n      if (filterValues?.filterVerifierDeviceId === true) {\n        refetchList()\n      }\n    }\n\n    return (\n      <TopToolbar>\n        <ButtonGroup>\n          <Button\n            variant=\"contained\"\n            onClick={() => handleAttachAll()}\n            label=\"common.related-records.actions.attach-all\"\n            useSmallVersionBreakpoint={false}\n          />\n          <Button\n            variant=\"outlined\"\n            onClick={() => handleDetachAll()}\n            label=\"common.related-records.actions.detach-all\"\n            useSmallVersionBreakpoint={false}\n          />\n        </ButtonGroup>\n      </TopToolbar>\n    )\n  }\n\n  const AttachedCheckbox = ({ ...props }) => {\n    const { filterValues, refetch: refetchList } = useListContext<EventDto | EntranceDto>()\n\n    return (\n      <CheckboxField\n        {...props}\n        disabled={mode !== 'edit'}\n        sortable={false}\n        checkBySource={(id: number) => isAttached(id)}\n        source=\"id\"\n        onClick={\n          (id: number) => isAttached(id as number)\n            ? async () => {\n              await handleDetach([id as number])\n              if (filterValues?.filterVerifierDeviceId === true) {\n                refetchList()\n              }\n            }\n            : async () => {\n              await handleAttach([id as number])\n              if (filterValues?.filterVerifierDeviceId === true) {\n                refetchList()\n              }\n            }\n        } />\n    )\n  }\n\n  return (\n    <ResourceContextProvider value={source} >\n      <List\n        basePath={basePath}\n        exporter={false}\n        title=\" \"\n        filters={listFilters()}\n        filterDefaultValues={{ verifierDeviceId: engine?.id, filterVerifierDeviceId: true }}\n        sort={listSort()}\n        pagination={<Pagination rowsPerPageOptions={[10, 20, 50, 100]} />}\n        perPage={20}\n        actions={mode === 'edit' ? <Actions /> : <></>}\n      >\n        <>\n          <Datagrid size=\"small\" style={{ tableLayout: 'fixed' }} >\n            {listColumns()}\n            <AttachedCheckbox label=\"common.related-records.fields.is-attached\" />\n          </Datagrid>\n        </>\n      </List>\n    </ResourceContextProvider>\n  )\n}\n\nconst EngineTabs = ({ ...props }) => {\n  const translate = useTranslate()\n  const { record: engine } = useShowContext<EngineDto>()\n  const hasAuthority = useHasAuthority()\n\n  return (\n    <TabbedShowLayout {...props}>\n      <Tab\n        label=\"resources.engines.tabs.general\">\n        <TextField label=\"ID\" source=\"id\" />\n        <TextField source=\"name\" />\n        <FunctionField\n          source=\"isWatched\"\n          render={(record: Record | undefined) => <TextField\n            emptyText={record?.isWatched ? translate('const.yes') : translate('const.no')}\n          />}\n        />\n        <DateField\n          source=\"lastRefresh\"\n          showTime\n          options={{ day: \"2-digit\", month: \"2-digit\", year: \"numeric\", hour: \"2-digit\", minute: \"2-digit\" }}\n        />\n        <TextField\n          source=\"address\"\n        />\n        <FunctionField\n          source=\"direction\"\n          render={(record: Record | undefined) => <TextField\n            emptyText={translate(`resources.enums.deviceDirection.${record?.direction}`)}\n          />}\n        />\n        <TextField\n          source=\"categoryId\"\n        />\n        {engine?.disabled && (\n          <TextField\n            source=\"disabled\"\n          />\n        )}\n        <FunctionField\n          source=\"stanbyMode\"\n          render={(record: Record | undefined) => <TextField\n            emptyText={translate(`resources.enums.standbyMode.${record?.stanbyMode}`)}\n          />}\n        />\n        <FunctionField\n          source=\"onlineInfixCeck\"\n          render={(record: Record | undefined) =>\n            <TextField\n              emptyText={record?.onlineInfixCeck\n                ? translate('const.yes')\n                : translate('const.no')}\n            />}\n        />\n        <FunctionField\n          source=\"multiplicity\"\n          render={(record: Record | undefined) => <TextField\n            emptyText={translate(`resources.enums.multiplicities.${record?.multiplicity}`)}\n          />}\n        />\n        <GeneralActions />\n      </Tab>\n      {hasAuthority(Authority.VIEW_EVENTS) && (\n        <Tab path=\"events\"\n          label={translate('resources.engines.tabs.events')}>\n          <RelationTab source={ResourceName.EVENTS} mode={hasAuthority(Authority.EDIT_EVENTS) ? 'edit' : 'show'} />\n        </Tab>\n      )}\n      <Tab path=\"entrances\"\n        label={translate('resources.engines.tabs.entrances')}>\n        <RelationTab source={ResourceName.ENTRANCES} mode='edit' />\n      </Tab>\n    </TabbedShowLayout>\n  )\n}\n\nexport const EngineShow = (props: ShowProps) => (\n  <Show {...props} actions={false} title={<ShowTitle />}>\n    <EngineTabs />\n  </Show>\n)","import { Typography } from '@material-ui/core'\nimport { Cancel } from '@material-ui/icons'\nimport React from 'react'\nimport {\n  BooleanInput, DateField, Edit,\n  EditProps, Labeled, SaveButton, SelectInput, ShowButton, SimpleForm,\n  TextField,\n  TextInput, TitleProps,\n  Toolbar,\n  ToolbarProps, useEditContext, useTranslate\n} from 'react-admin'\nimport { PalmDto } from '../../../core/dto/device/palm/palm.dto'\nimport { DeviceDirection } from '../../../core/enum/DeviceDirection'\nimport { Multiplicities } from '../../../core/enum/Multiplicities'\n\nconst validatePalmEdit = (values: PalmDto) => {\n  const errors: { [n: string]: string } = {}\n  if (!values.name) {\n    errors.name = 'ra.validation.required'\n  }\n  return errors\n}\n\ninterface PalmTitleProps extends TitleProps {\n  record?: PalmDto\n}\n\nconst EditTitle = (data: PalmTitleProps) => {\n  const {\n    record,\n  } = data\n  const translate = useTranslate()\n  return (\n    <span>\n      {translate('resources.palms.titles.edit')}: {record?.id}. {record?.name}{' '}\n    </span>\n  )\n}\n\nconst HidingField = ({ source }: { source: keyof PalmDto }) => {\n  const { record } = useEditContext<PalmDto>()\n  return (\n    <>\n      {record && record[source] && (\n        <Labeled label=\"resources.palms.fields.disabled\">\n          <Typography component=\"span\" color=\"textPrimary\">\n            {record[source]}\n          </Typography>\n        </Labeled>\n      )}\n    </>\n  )\n}\n\nconst EditToolbar = (props: ToolbarProps) => (\n  <Toolbar {...props}>\n    <SaveButton />\n    <ShowButton icon={<Cancel />} label=\"const.cancel\" />\n  </Toolbar>\n)\n\nexport const PalmEdit = (props: EditProps) => {\n  const translate = useTranslate()\n  return (\n    <Edit {...props} hasShow={false} title={<EditTitle />}>\n      <SimpleForm redirect=\"show\" toolbar={<EditToolbar />} validate={validatePalmEdit}>\n        <TextField source=\"id\" label=\"ID\" />\n        <TextInput source=\"name\" />\n        <BooleanInput source=\"isWatched\" />\n        <DateField\n          source=\"lastRefresh\"\n          showTime\n          options={{ day: \"2-digit\", month: \"2-digit\", year: \"numeric\", hour: \"2-digit\", minute: \"2-digit\" }}\n        />\n        <SelectInput\n          source=\"direction\"\n          choices={[\n            { id: DeviceDirection.IN, name: translate(`resources.enums.deviceDirection.IN`) },\n            { id: DeviceDirection.OUT, name: translate(`resources.enums.deviceDirection.OUT`) },\n            { id: DeviceDirection.INFO, name: translate(`resources.enums.deviceDirection.INFO`) }\n          ]}\n        />\n        <TextInput source=\"categoryId\" />\n        <HidingField source=\"disabled\" />\n        <BooleanInput source=\"onlineInfixCeck\" />\n        <SelectInput\n          source=\"multiplicity\"\n          choices={[\n            { id: Multiplicities.SINGLE, name: translate(`resources.enums.multiplicities.SINGLE`) },\n            { id: Multiplicities.MULTIPLE, name: translate(`resources.enums.multiplicities.MULTIPLE`) },\n            { id: Multiplicities.CHECK_ALL, name: translate(`resources.enums.multiplicities.CHECK_ALL`) }\n          ]}\n        />\n        <TextField source=\"mobileDeviceId\" />\n      </SimpleForm>\n    </Edit>\n  )\n}\n","import { useMediaQuery, useTheme } from '@material-ui/core'\nimport React from 'react'\nimport { Datagrid, List, ListProps, Pagination, TextField, TextInput, useListContext } from 'react-admin'\nimport { ResourceName } from '../../../core/ResourceName'\n\nconst PalmGrid = () => {\n  const { loading } = useListContext()\n  const theme = useTheme()\n  const smallScreen = useMediaQuery(theme.breakpoints.down('sm'))\n  return (\n    <Datagrid\n      size=\"small\"\n      loaded={!loading}\n      rowClick={(id) => `${ResourceName.PALMS}/${id}/show`}\n    >\n      <TextField source=\"id\" label=\"ID\" />\n      <TextField source=\"name\" />\n      <TextField source=\"categoryId\" sortable={false} />\n      {!smallScreen && <TextField source=\"disabled\" sortable={false} />}\n      {!smallScreen && <TextField source=\"mobileDeviceId\" sortable={false} />}\n    </Datagrid>\n  )\n}\n\nexport const PalmList = (props: ListProps) =>\n  <List\n    {...props}\n    perPage={20}\n    pagination={<Pagination rowsPerPageOptions={[10, 20, 50]} />}\n    exporter={false}\n    filters={[\n      <TextInput source=\"name\" alwaysOn />,\n      <TextInput source=\"categoryId\" />\n    ]}\n  >\n    <PalmGrid />\n  </List>\n","import {\n  createStyles,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  makeStyles,\n  TextField,\n  Theme\n} from '@material-ui/core'\nimport React, { useState } from 'react'\nimport {\n  sanitizeFetchType, useMutation,\n  useRefresh, useShowContext, useTranslate\n} from 'react-admin'\nimport { PalmDto } from '../../../core/dto/device/palm/palm.dto'\nimport { ResourceName } from '../../../core/ResourceName'\nimport Button from '../../common/customized-mui-components/Button'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    dialogProperty: {\n      marginBottom: theme.spacing(1)\n    }\n  })\n)\n\nexport const ConfirmDialog = ({\n  confirm,\n  cancel,\n  source,\n  open,\n  action,\n}: {\n  confirm: () => void\n  cancel: () => void\n  source: 'deviceId' | 'lock'\n  open: boolean\n  action: 'set' | 'remove'\n}) => {\n  const translate = useTranslate()\n  return (\n    <Dialog open={open}>\n      <DialogTitle>\n        {translate(`resources.palms.dialogs.confirm.${source}.${action}`)}\n      </DialogTitle>\n      <DialogActions>\n        <Button variant=\"contained\" onClick={confirm} label={translate('ra.action.save')} useSmallVersionBreakpoint={false} />\n        <Button variant=\"contained\" onClick={cancel} label={translate('const.cancel')} useSmallVersionBreakpoint={false} />\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nexport const DeviceIdModal = ({\n  open,\n  close,\n}: {\n  open: boolean\n  close: () => void\n}) => {\n  const classes = useStyles()\n  const [value, setValue] = useState('')\n  const [error, setError] = useState(false)\n  const [errorText, setErrorText] = useState('')\n  const [confirmOpen, setConfirmOpen] = useState(false)\n  const { record: palm } = useShowContext<PalmDto>()\n  const [mutate] = useMutation()\n  const refresh = useRefresh()\n  const translate = useTranslate()\n\n  const handleClose = () => {\n    setValue('')\n    setError(false)\n    setErrorText('')\n    close()\n  }\n\n  const handleSetMobileDeviceId = async () => {\n    setConfirmOpen(false)\n    if (value.replace(/\\s/g, '').length === 0) {\n      setError(true)\n      setErrorText(\n        translate('resources.palms.dialogs.deviceId.error-bad-string'),\n      )\n    } else if (value.replace(/\\s/g, '').length !== value.length) {\n      setError(true)\n      setErrorText(\n        translate('resources.palms.dialogs.deviceId.error-no-spaces'),\n      )\n    } else {\n      await mutate(\n        {\n          type: sanitizeFetchType('setMobileDeviceId'),\n          resource: ResourceName.PALMS,\n          payload: {\n            palmId: palm?.id,\n            mobileDeviceId: value,\n          },\n        },\n        { returnPromise: true },\n      )\n      setValue('')\n      setError(false)\n      setErrorText('')\n      refresh()\n      close()\n    }\n  }\n\n  return (\n    <Dialog open={open} onClose={handleClose}>\n      <ConfirmDialog\n        open={confirmOpen}\n        cancel={() => setConfirmOpen(false)}\n        confirm={handleSetMobileDeviceId}\n        source=\"deviceId\"\n        action=\"set\"\n      />\n      <DialogTitle>\n        {translate('resources.palms.dialogs.deviceId.title')}\n      </DialogTitle>\n      <DialogContent>\n        <TextField\n          className={classes.dialogProperty}\n          variant=\"outlined\"\n          value={value}\n          onChange={(e) => setValue(e.target.value)}\n          fullWidth\n          error={error}\n          helperText={errorText}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button variant=\"contained\" onClick={() => setConfirmOpen(true)} label={translate('ra.action.save')} useSmallVersionBreakpoint={false} />\n        <Button variant=\"contained\" onClick={handleClose} label={translate('const.cancel')} useSmallVersionBreakpoint={false} />\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nexport const LockModal = ({\n  open,\n  close,\n}: {\n  open: boolean\n  close: () => void\n}) => {\n  const classes = useStyles()\n  const [value, setValue] = useState('')\n  const [error, setError] = useState(false)\n  const [errorText, setErrorText] = useState('')\n  const [confirmOpen, setConfirmOpen] = useState(false)\n  const { record: palm } = useShowContext<PalmDto>()\n  const [mutate] = useMutation()\n  const refresh = useRefresh()\n  const translate = useTranslate()\n\n  const handleClose = () => {\n    setValue('')\n    setError(false)\n    setErrorText('')\n    close()\n  }\n\n  const handleLock = async () => {\n    setConfirmOpen(false)\n    if (value.replace(/\\s/g, '').length === 0) {\n      setError(true)\n      setErrorText(translate('resources.palms.dialogs.lock.error-bad-string'))\n    } else if (value.replace(/\\s/g, '').length !== value.length) {\n      setError(true)\n      setErrorText(translate('resources.palms.dialogs.lock.error-no-spaces'))\n    } else {\n      await mutate(\n        {\n          type: sanitizeFetchType('lock'),\n          resource: ResourceName.PALMS,\n          payload: {\n            palmId: palm?.id,\n            lockName: value,\n          },\n        },\n        { returnPromise: true },\n      )\n      handleClose()\n      refresh()\n    }\n  }\n\n  return (\n    <Dialog open={open} onClose={handleClose}>\n      <ConfirmDialog\n        open={confirmOpen}\n        cancel={() => setConfirmOpen(false)}\n        confirm={handleLock}\n        source=\"lock\"\n        action=\"set\"\n      />\n      <DialogTitle>\n        {translate('resources.palms.dialogs.lock.title')}\n      </DialogTitle>\n      <DialogContent>\n        <TextField\n          className={classes.dialogProperty}\n          variant=\"outlined\"\n          value={value}\n          onChange={(e) => setValue(e.target.value)}\n          fullWidth\n          error={error}\n          helperText={errorText}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button variant=\"contained\" onClick={() => setConfirmOpen(true)} label={translate('ra.action.save')} useSmallVersionBreakpoint={false} />\n        <Button variant=\"contained\" onClick={handleClose} label={translate('const.cancel')} useSmallVersionBreakpoint={false} />\n      </DialogActions>\n    </Dialog>\n  )\n}\n","import {\n  Box, ButtonGroup, Divider\n} from '@material-ui/core'\nimport React, { useState } from 'react'\nimport {\n  BooleanInput,\n  Datagrid,\n  DateField, EditButton, FunctionField, GET_LIST, List, Pagination, Record, ResourceContextProvider, sanitizeFetchType, Show,\n  ShowProps, Tab, TabbedShowLayout, TextField, TextInput,\n  TitleProps, TopToolbar, useListContext, useMutation, useNotify, useRefresh, useShowContext, useTranslate\n} from 'react-admin'\nimport { Authority } from '../../../core/auth/Authority'\nimport { PalmDto } from '../../../core/dto/device/palm/palm.dto'\nimport { EntranceDto } from '../../../core/dto/entrance.dto'\nimport { EventDto } from '../../../core/dto/event/event.dto'\nimport { ResourceName } from '../../../core/ResourceName'\nimport { CheckboxField } from '../../common/CheckboxField'\nimport Button from '../../common/customized-mui-components/Button'\nimport { useHasAuthority } from '../../hooks/useHasAuthority'\nimport { ConfirmDialog, DeviceIdModal, LockModal } from './PalmDialogs'\n\ninterface PalmTitleProps extends TitleProps {\n  record?: PalmDto\n}\n\nconst ShowTitle = (data: PalmTitleProps) => {\n  const {\n    record: palm,\n  } = data\n  const translate = useTranslate()\n  return (\n    <span>\n      {translate('resources.palms.titles.show')}: {palm?.id}. {palm?.name}\n    </span>\n  )\n}\n\nconst GeneralActions = () => {\n  const { record: palm } = useShowContext<PalmDto>()\n  const [deviceIdModalOpen, setDeviceIdModalOpen] = useState(false)\n  const [lockModalOpen, setLockModalOpen] = useState(false)\n  const [unlockDialogOpen, setUnlockDialogOpen] = useState(false)\n  const [resetIdDialogOpen, setResetIdDialogOpen] = useState(false)\n  const [mutate] = useMutation()\n  const refresh = useRefresh()\n\n  const handleSetMobileDeviceId = async () => {\n    setResetIdDialogOpen(false)\n    await mutate(\n      {\n        type: sanitizeFetchType('resetMobileDeviceId'),\n        resource: ResourceName.PALMS,\n        payload: {\n          palmId: palm?.id,\n        },\n      },\n      { returnPromise: true },\n    )\n    refresh()\n  }\n\n  const handleSetMobileDeviceIdDialog = () => {\n    if (palm?.mobileDeviceId) setResetIdDialogOpen(true)\n    else setDeviceIdModalOpen(true)\n  }\n\n  const handleLock = async () => {\n    setUnlockDialogOpen(false)\n    await mutate(\n      {\n        type: sanitizeFetchType('unlock'),\n        resource: ResourceName.PALMS,\n        payload: {\n          palmId: palm?.id,\n        },\n      },\n      { returnPromise: true },\n    )\n    refresh()\n  }\n\n  const handleLockDialog = () => {\n    if (palm?.disabled) setUnlockDialogOpen(true)\n    else setLockModalOpen(true)\n  }\n\n  return (\n    <>\n      <Divider />\n      <DeviceIdModal\n        open={deviceIdModalOpen}\n        close={() => setDeviceIdModalOpen(false)}\n      />\n      <LockModal open={lockModalOpen} close={() => setLockModalOpen(false)} />\n      <ConfirmDialog\n        open={unlockDialogOpen}\n        confirm={handleLock}\n        source=\"lock\"\n        cancel={() => setUnlockDialogOpen(false)}\n        action=\"remove\"\n      />\n      <ConfirmDialog\n        open={resetIdDialogOpen}\n        confirm={handleSetMobileDeviceId}\n        source=\"deviceId\"\n        cancel={() => setResetIdDialogOpen(false)}\n        action=\"remove\"\n      />\n      <Box p={1} display=\"flex\" justifyContent=\"flex-end\">\n        <Button\n          variant=\"contained\"\n          onClick={handleSetMobileDeviceIdDialog}\n          color=\"primary\"\n          style={{ margin: '2px' }}\n          label={palm?.mobileDeviceId\n            ? 'resources.palms.actions.resetMobileDeviceId'\n            : 'resources.palms.actions.setMobileDeviceId'}\n          useSmallVersionBreakpoint={false}\n        />\n        <Button\n          variant=\"contained\"\n          onClick={handleLockDialog}\n          color=\"primary\"\n          style={{ margin: '2px' }}\n          label={palm?.disabled\n            ? 'resources.palms.actions.unlock'\n            : 'resources.palms.actions.lock'}\n          useSmallVersionBreakpoint={false}\n        />\n        <EditButton basePath=\"/palms\" record={palm} variant=\"contained\" style={{ margin: '2px' }} />\n      </Box>\n    </>\n  )\n}\n\nconst RelationTab = ({ source, mode }: { source: ResourceName.EVENTS | ResourceName.ENTRANCES, mode: 'show' | 'edit' }) => {\n  const [mutate] = useMutation()\n  const notify = useNotify()\n  const { record: palm, basePath, refetch } = useShowContext<PalmDto>()\n\n  const handleAttach = async (idsToAttach: number[]) => {\n    switch (source) {\n      case ResourceName.EVENTS:\n        await mutate(\n          {\n            type: sanitizeFetchType('attachEvents'),\n            resource: ResourceName.PALMS,\n            payload: {\n              palmId: palm?.id,\n              eventsIds: idsToAttach,\n            },\n          },\n          { returnPromise: true },\n        )\n        break\n      case ResourceName.ENTRANCES:\n        await mutate(\n          {\n            type: sanitizeFetchType('attachEntrances'),\n            resource: ResourceName.PALMS,\n            payload: {\n              palmId: palm?.id,\n              entrancesIds: idsToAttach,\n            },\n          },\n          { returnPromise: true },\n        )\n        break\n      default:\n        notify(`Source '${source}' is not implemented yet.`)\n    }\n    if (refetch) {\n      refetch()\n    }\n  }\n\n  const handleDetach = async (idsToDetach: number[]) => {\n    switch (source) {\n      case ResourceName.EVENTS:\n        await mutate(\n          {\n            type: sanitizeFetchType('detachEvents'),\n            resource: ResourceName.PALMS,\n            payload: {\n              palmId: palm?.id,\n              eventsIds: idsToDetach,\n            },\n          },\n          { returnPromise: true },\n        )\n        break\n      case ResourceName.ENTRANCES:\n        await mutate(\n          {\n            type: sanitizeFetchType('detachEntrances'),\n            resource: ResourceName.PALMS,\n            payload: {\n              palmId: palm?.id,\n              entrancesIds: idsToDetach,\n            },\n          },\n          { returnPromise: true },\n        )\n        break\n      default:\n        notify(`Source '${source}' is not implemented yet.`)\n    }\n    if (refetch) {\n      refetch()\n    }\n  }\n\n  const isAttached = (relatedRecordId: number) => {\n    switch (source) {\n      case ResourceName.EVENTS:\n        return palm?.eventsIds?.includes(relatedRecordId)\n      case ResourceName.ENTRANCES:\n        return palm?.entrancesIds?.includes(relatedRecordId)\n      default:\n        notify(`Source '${source}' is not implemented yet.`)\n        return false\n    }\n  }\n\n  const listFilters = () => {\n    switch (source) {\n      case ResourceName.EVENTS:\n        return ([<TextInput source=\"name\" alwaysOn />,\n        <BooleanInput label=\"common.related-records.actions.attached-only\" source=\"filterVerifierDeviceId\" alwaysOn />])\n      case ResourceName.ENTRANCES:\n        return ([<TextInput source=\"note\" alwaysOn />,\n        <BooleanInput label=\"common.related-records.actions.attached-only\" source=\"filterVerifierDeviceId\" alwaysOn />])\n      default: return ([])\n    }\n  }\n\n  const listSort = () => {\n    switch (source) {\n      case ResourceName.EVENTS:\n        return ({ field: 'dateStart', order: 'DESC' })\n      case ResourceName.ENTRANCES:\n        return ({ field: 'note', order: 'ASC' })\n      default: return (undefined)\n    }\n  }\n\n  const listColumns = () => {\n    switch (source) {\n      case ResourceName.EVENTS:\n        return ([\n          <TextField source=\"id\" label=\"ID\" key='id' />,\n          <TextField source=\"name\" key='name' />])\n      case ResourceName.ENTRANCES:\n        return ([\n          <TextField source=\"id\" label=\"ID\" key='id' />,\n          <TextField source=\"note\" key='note' />])\n      default: return ([])\n    }\n  }\n\n  const Actions = () => {\n    const { filterValues, refetch: refetchList } = useListContext<EventDto | EntranceDto>()\n    const getFilteredRelatedRecordsIds = async () =>\n      (await mutate(\n        {\n          type: sanitizeFetchType(GET_LIST),\n          resource: source,\n          payload: {\n            filter: {\n              ...filterValues\n            }\n          }\n        },\n        { returnPromise: true }\n      ))?.data?.map((record: EventDto | EntranceDto) => record?.id)\n\n    const handleAttachAll = async () => {\n      await handleAttach(await getFilteredRelatedRecordsIds())\n      if (filterValues?.filterVerifierDeviceId === true) {\n        refetchList()\n      }\n    }\n\n    const handleDetachAll = async () => {\n      await handleDetach(await getFilteredRelatedRecordsIds())\n      if (filterValues?.filterVerifierDeviceId === true) {\n        refetchList()\n      }\n    }\n\n    return (\n      <TopToolbar>\n        <ButtonGroup>\n          <Button\n            variant=\"contained\"\n            onClick={() => handleAttachAll()}\n            label=\"common.related-records.actions.attach-all\"\n            useSmallVersionBreakpoint={false}\n          />\n          <Button\n            variant=\"outlined\"\n            onClick={() => handleDetachAll()}\n            label=\"common.related-records.actions.detach-all\"\n            useSmallVersionBreakpoint={false}\n          />\n        </ButtonGroup>\n      </TopToolbar>\n    )\n  }\n\n  const AttachedCheckbox = ({ ...props }) => {\n    const { filterValues, refetch: refetchList } = useListContext<EventDto | EntranceDto>()\n\n    return (\n      <CheckboxField\n        {...props}\n        disabled={mode !== 'edit'}\n        sortable={false}\n        checkBySource={(id: number) => isAttached(id)}\n        source=\"id\"\n        onClick={\n          (id: number) => isAttached(id as number)\n            ? async () => {\n              await handleDetach([id as number])\n              if (filterValues?.filterVerifierDeviceId === true) {\n                refetchList()\n              }\n            }\n            : async () => {\n              await handleAttach([id as number])\n              if (filterValues?.filterVerifierDeviceId === true) {\n                refetchList()\n              }\n            }\n        } />\n    )\n  }\n\n  return (\n    <ResourceContextProvider value={source} >\n      <List\n        basePath={basePath}\n        exporter={false}\n        title=\" \"\n        filters={listFilters()}\n        filterDefaultValues={{ verifierDeviceId: palm?.id, filterVerifierDeviceId: true }}\n        sort={listSort()}\n        pagination={<Pagination rowsPerPageOptions={[10, 20, 50, 100]} />}\n        perPage={20}\n        actions={mode === 'edit' ? <Actions /> : <></>}\n      >\n        <>\n          <Datagrid size=\"small\" style={{ tableLayout: 'fixed' }} >\n            {listColumns()}\n            <AttachedCheckbox label=\"common.related-records.fields.is-attached\" />\n          </Datagrid>\n        </>\n      </List>\n    </ResourceContextProvider>\n  )\n}\n\nconst PalmTabs = ({ ...props }) => {\n  const translate = useTranslate()\n  const { record: palm } = useShowContext<PalmDto>()\n  const hasAuthority = useHasAuthority()\n\n  return (\n    <TabbedShowLayout {...props}>\n      <Tab label={translate('resources.palms.tabs.general')}>\n        <TextField label=\"ID\" source=\"id\" />\n        <TextField source=\"name\" />\n        <FunctionField\n          source=\"isWatched\"\n          render={(record: Record | undefined) => <TextField\n            emptyText={record?.isWatched ? translate('const.yes') : translate('const.no')}\n          />}\n        />\n        <DateField\n          source=\"lastRefresh\"\n          showTime\n          options={{ day: \"2-digit\", month: \"2-digit\", year: \"numeric\", hour: \"2-digit\", minute: \"2-digit\" }}\n        />\n        <FunctionField\n          source=\"direction\"\n          render={(record: Record | undefined) => <TextField\n            emptyText={translate(`resources.enums.deviceDirection.${record?.direction}`)}\n          />}\n        />\n        <TextField\n          source=\"categoryId\"\n        />\n        {palm?.disabled && (\n          <TextField\n            source=\"disabled\"\n          />\n        )}\n        <FunctionField\n          source=\"onlineInfixCeck\"\n          render={(record: Record | undefined) =>\n            <TextField\n              emptyText={record?.onlineInfixCeck\n                ? translate('const.yes')\n                : translate('const.no')}\n            />}\n        />\n        <FunctionField\n          source=\"multiplicity\"\n          render={(record: Record | undefined) => <TextField\n            emptyText={translate(`resources.enums.multiplicities.${record?.multiplicity}`)}\n          />}\n        />\n        {palm?.mobileDeviceId && (\n          <TextField\n            source=\"mobileDeviceId\"\n          />\n        )}\n        <GeneralActions />\n      </Tab>\n      {hasAuthority(Authority.VIEW_EVENTS) && (\n        <Tab path=\"events\"\n          label={translate('resources.engines.tabs.events')}>\n          <RelationTab source={ResourceName.EVENTS} mode={hasAuthority(Authority.EDIT_EVENTS) ? 'edit' : 'show'} />\n        </Tab>\n      )}\n      <Tab path=\"entrances\"\n        label={translate('resources.engines.tabs.entrances')}>\n        <RelationTab source={ResourceName.ENTRANCES} mode='edit' />\n      </Tab>\n    </TabbedShowLayout>\n  )\n}\n\nexport const PalmShow = (props: ShowProps) => (\n  <Show {...props} actions={false} title={<ShowTitle />}>\n    <PalmTabs />\n  </Show>\n)\n","import { ButtonGroup } from \"@material-ui/core\"\nimport { Cancel } from \"@material-ui/icons\"\nimport React from \"react\"\nimport { BooleanInput, Create, CreateProps, Datagrid, DateTimeInput, FormTab, GET_LIST, List, ListButton, Pagination, ResourceContextProvider, sanitizeFetchType, SaveButton, TabbedForm, TextField, TextInput, Toolbar, ToolbarProps, TopToolbar, useEditContext, useListContext, useMutation, useNotify, useTranslate } from \"react-admin\"\nimport { useField } from \"react-final-form\"\nimport { EventDto } from \"../../core/dto/event/event.dto\"\nimport { ObjectDto } from \"../../core/dto/object.dto\"\nimport { ResourceName } from \"../../core/ResourceName\"\nimport { CheckboxField } from \"../common/CheckboxField\"\nimport Button from \"../common/customized-mui-components/Button\"\n\nconst validateEventCreate = (values: EventDto) => {\n  const errors: { [n: string]: string } = {}\n  if (!values.name) {\n    errors.name = 'ra.validation.required'\n  }\n  if (!values.dateStart) {\n    errors.dateStart = 'ra.validation.required'\n  }\n  if (!values.dateEnd) {\n    errors.dateEnd = 'ra.validation.required'\n  }\n  if (new Date(values.dateStart) > new Date(values.dateEnd)) {\n    errors.dateStart = 'ra.validation.incorrect_date'\n    errors.dateEnd = 'ra.validation.incorrect_date'\n  }\n  return errors\n}\n\nconst CreateTitle = () => {\n  const translate = useTranslate()\n  return (\n    <span>{translate('resources.events.titles.create')}</span>\n  )\n}\n\nconst RelationInputTab = ({ sourceProperty, source }: { sourceProperty: keyof EventDto, source: ResourceName.OBJECTS}) => {\n  const [mutate] = useMutation()\n  const notify = useNotify()\n  const { basePath } = useEditContext<EventDto>()\n  const {\n    input: { onChange, value: relationsIds }\n  } = useField<number[]>(sourceProperty)\n\n  const handleAttach = (idsToAttach: number[]) => {\n    switch (source) {\n      case ResourceName.OBJECTS:\n        onChange([...relationsIds, ...idsToAttach])\n        break\n      default:\n        notify(`Source '${source}' is not implemented yet.`)\n    }\n  }\n\n  const handleDetach = (idsToDetach: number[]) => {\n    switch (source) {\n      case ResourceName.OBJECTS:\n        onChange(relationsIds.filter((id: number) => !(idsToDetach.includes(id))))\n        break\n      default:\n        notify(`Source '${source}' is not implemented yet.`)\n    }\n  }\n\n  const isAttached = (relatedRecordId: number) => {\n    switch (source) {\n      case ResourceName.OBJECTS:\n        return relationsIds?.includes(relatedRecordId)\n      default:\n        notify(`Source '${source}' is not implemented yet.`)\n        return false\n    }\n  }\n\n  // const listFilters = () => {\n  //   switch (source) {\n  //     case ResourceName.OBJECTS:\n  //       return ([<TextInput source=\"name\" alwaysOn />])\n  //     default: return ([])\n  //   }\n  // }\n\n  const listSort = () => {\n    switch (source) {\n      case ResourceName.OBJECTS:\n        return ({ field: 'name', order: 'ASC' })\n      default: return (undefined)\n    }\n  }\n\n  const listColumns = () => {\n    switch (source) {\n      case ResourceName.OBJECTS:\n        return ([\n          <TextField source=\"id\" label=\"ID\" key='id' />,\n          <TextField source=\"name\" key='name' />])\n      default: return ([])\n    }\n  }\n\n  const Actions = () => {\n    const { filterValues } = useListContext<ObjectDto>()\n    const getFilteredRelatedRecordsIds = async () =>\n      (await mutate(\n        {\n          type: sanitizeFetchType(GET_LIST),\n          resource: source,\n          payload: {\n            filter: {\n              ...filterValues\n            }\n          }\n        },\n        { returnPromise: true }\n      ))?.data?.map((record: ObjectDto) => record?.id)\n\n    const handleAttachAll = async () => handleAttach(await getFilteredRelatedRecordsIds())\n\n    const handleDetachAll = async () => handleDetach(await getFilteredRelatedRecordsIds())\n\n    return (\n      <TopToolbar>\n        {/* <FilterButton/> */}\n        <ButtonGroup>\n          <Button\n            variant=\"contained\"\n            onClick={() => handleAttachAll()}\n            label=\"common.related-records.actions.attach-all\"\n            useSmallVersionBreakpoint={false}\n          />\n          <Button\n            variant=\"outlined\"\n            onClick={() => handleDetachAll()}\n            label=\"common.related-records.actions.detach-all\"\n            useSmallVersionBreakpoint={false}\n          />\n        </ButtonGroup>\n      </TopToolbar>\n    )\n  }\n\n  const AttachedCheckbox = ({ ...props }) =>\n    <CheckboxField\n      {...props}\n      sortable={false}\n      checkBySource={(id: number) => isAttached(id)}\n      source=\"id\"\n      onClick={\n        (id: number) => isAttached(id as number)\n          ? () => handleDetach([id as number])\n          : () => handleAttach([id as number])\n      } />\n\n  return (\n    <ResourceContextProvider value={source} >\n      <List\n        basePath={basePath}\n        exporter={false}\n        title=\" \"\n        // filters={listFilters()} // FilterForm cannot be descendant of another Form component\n        sort={listSort()}\n        pagination={<Pagination rowsPerPageOptions={[10, 20, 50, 100]} />}\n        perPage={20}\n        actions={<Actions />}\n      >\n        <>\n          <Datagrid size=\"small\" style={{ tableLayout: 'fixed' }} >\n            {listColumns()}\n            <AttachedCheckbox label=\"common.related-records.fields.is-attached\" />\n          </Datagrid>\n        </>\n      </List>\n    </ResourceContextProvider>\n  )\n}\n\nconst CreateToolbar = (props: ToolbarProps) =>\n  <Toolbar {...props}>\n    <SaveButton />\n    <ListButton icon={<Cancel />} label='const.cancel' />\n  </Toolbar>\n\nexport const EventCreate = (props: CreateProps) => {\n  const translate = useTranslate()\n  return (\n    <Create {...props} title={<CreateTitle />}>\n      <TabbedForm redirect=\"show\" toolbar={<CreateToolbar />} validate={validateEventCreate}>\n        <FormTab label={translate(\"resources.events.tabs.general\")}>\n          <TextInput source=\"name\" />\n          <DateTimeInput source=\"dateStart\" />\n          <DateTimeInput source=\"dateEnd\" />\n          <TextInput source=\"externalId\" />\n          <TextInput source=\"infix\" />\n          <BooleanInput source=\"active\" />\n        </FormTab>\n        <FormTab label={translate(\"resources.events.tabs.objects\")}>\n          <RelationInputTab sourceProperty=\"objectsIds\" source={ResourceName.OBJECTS} />\n        </FormTab>\n      </TabbedForm>\n    </Create>\n  )\n}","import { Cancel } from \"@material-ui/icons\"\nimport React, { useMemo } from \"react\"\nimport {\n  DateTimeInput, Edit, EditProps, FunctionField, Record, SaveButton, ShowButton, SimpleForm, TextField, TextInput, TitleProps, Toolbar, ToolbarProps, useTranslate\n} from \"react-admin\"\nimport { EventDto } from \"../../core/dto/event/event.dto\"\n\ninterface EventTitleProps extends TitleProps {\n  record?: EventDto\n}\n\nconst validateEventEdit = (values: EventDto) => {\n  const errors: { [n: string]: string } = {}\n  if (!values.name) {\n    errors.name = 'ra.validation.required'\n  }\n  if (!values.dateStart) {\n    errors.dateStart = 'ra.validation.required'\n  }\n  if (!values.dateEnd) {\n    errors.dateEnd = 'ra.validation.required'\n  }\n  if (new Date(values.dateStart) > new Date(values.dateEnd)) {\n    errors.dateStart = 'ra.validation.incorrect_date'\n    errors.dateEnd = 'ra.validation.incorrect_date'\n  }\n  return errors\n}\n\nconst EditTitle = (data: EventTitleProps) => {\n  const {\n    record\n  } = data\n  const translate = useTranslate()\n  const date = useMemo(() => !((record?.dateStart as any) instanceof Date) ? record?.dateStart.replace('T', ' ') : '', [record?.dateStart])\n  return (\n    <span>{translate('resources.events.titles.edit')}: {record?.name} {date} {record?.id}</span>\n  )\n}\n\nconst EditToolbar = (props: ToolbarProps) => (\n  <Toolbar {...props}>\n    <SaveButton />\n    <ShowButton icon={<Cancel />} label='const.cancel' />\n  </Toolbar>\n)\n\nexport const EventEdit = (props: EditProps) => {\n  const translate = useTranslate()\n  return (\n    <Edit {...props} title={<EditTitle />} actions={false}>\n      <SimpleForm redirect=\"show\" toolbar={<EditToolbar />} validate={validateEventEdit}>\n        <TextField source=\"id\" label=\"ID\" />\n        <TextInput source=\"name\" />\n        <DateTimeInput source=\"dateStart\" />\n        <DateTimeInput source=\"dateEnd\" />\n        <FunctionField\n          source=\"status\"\n          render={(r: Record | undefined) => <TextField\n            emptyText={(translate(`resources.enums.eventStatus.${r?.status.toLowerCase()}`))}\n          />}\n        />\n      </SimpleForm>\n    </Edit>\n  )\n}","import { Box, ButtonGroup, Divider } from '@material-ui/core'\nimport React, { useMemo } from \"react\"\nimport { BooleanInput, Datagrid, DateField, EditButton, FilterButton, FunctionField, GET_LIST, List, Pagination, Record, ResourceContextProvider, sanitizeFetchType, Show, ShowProps, Tab, TabbedShowLayout, TextField, TextInput, TitleProps, TopToolbar, useListContext, useMutation, useNotify, useQuery, useRefresh, useShowContext, useTranslate } from \"react-admin\"\nimport { Authority } from '../../core/auth/Authority'\nimport { CompanyDto } from '../../core/dto/company.dto'\nimport { EngineDto } from \"../../core/dto/device/engine/engine.dto\"\nimport { PalmDto } from \"../../core/dto/device/palm/palm.dto\"\nimport { EventCompaniesDto } from '../../core/dto/event/event-companies.dto'\nimport { EventDevicesDto } from '../../core/dto/event/event-devices.dto'\nimport { EventDto } from '../../core/dto/event/event.dto'\nimport { ObjectDto } from '../../core/dto/object.dto'\nimport { EventStatus } from \"../../core/enum/EventStatus\"\nimport { ResourceName } from \"../../core/ResourceName\"\nimport { CheckboxField } from '../common/CheckboxField'\nimport Button from '../common/customized-mui-components/Button'\nimport { useHasAuthority } from '../hooks/useHasAuthority'\n\ninterface EventTitleProps extends TitleProps {\n  record?: EventDto\n}\n\nconst ShowTitle = (data: EventTitleProps) => {\n  const { record: event } = data\n  const translate = useTranslate()\n  const date = useMemo(() => !((event?.dateStart as any) instanceof Date) ? event?.dateStart.replace('T', ' ') : '', [event?.dateStart])\n  return (\n    <span>{translate('resources.events.titles.show')}: {event?.name} {date} {event?.id}</span>\n  )\n}\n\nconst GeneralActions = () => {\n  const { record: event } = useShowContext<EventDto>()\n  const [mutate] = useMutation()\n  const refresh = useRefresh()\n  const translate = useTranslate()\n  const hasAuthority = useHasAuthority()\n\n  const handleActivation = async () => {\n    if (event?.status !== EventStatus.IN_TRANSITION) {\n      if (event?.status === EventStatus.ACTIVE) {\n        await mutate({\n          type: sanitizeFetchType(\"deactivate\"),\n          resource: ResourceName.EVENTS,\n          payload: {\n            eventId: event?.id\n          }\n        }, { returnPromise: false })\n      }\n      else {\n        await mutate({\n          type: sanitizeFetchType(\"activate\"),\n          resource: ResourceName.EVENTS,\n          payload: {\n            eventId: event?.id\n          }\n        }, { returnPromise: false })\n      }\n      refresh()\n    }\n  }\n\n  return (\n    <>\n      <Divider />\n      <Box p={1} display=\"flex\" justifyContent=\"flex-end\">\n        <Button variant=\"contained\"\n          onClick={handleActivation}\n          color=\"primary\"\n          style={{ marginRight: '5px' }}\n          label={event?.status === EventStatus.INACTIVE ?\n            translate('resources.events.actions.activate') :\n            translate('resources.events.actions.deactivate')}\n          useSmallVersionBreakpoint={false}\n          disabled={!hasAuthority(Authority.EDIT_EVENTS) || event?.status === EventStatus.IN_TRANSITION} />\n        <EditButton variant=\"contained\"\n          basePath=\"/events\"\n          record={event}\n          disabled={!hasAuthority(Authority.EDIT_EVENTS)} />\n      </Box>\n    </>\n  )\n}\n\nconst RelationTab = ({ source, mode }: { source: ResourceName.COMPANIES | ResourceName.OBJECTS | ResourceName.ENGINES | ResourceName.PALMS, mode: 'show' | 'edit' }) => {\n  const [mutate] = useMutation()\n  const notify = useNotify()\n  const { record: event, basePath, refetch } = useShowContext<EventDto>()\n  const getRelationsFetchType = () => {\n    switch (source) {\n      case ResourceName.COMPANIES:\n        return `getCompaniesList`\n      case ResourceName.ENGINES:\n      case ResourceName.PALMS:\n        return `getDevicesList`\n      default:\n        return ''\n    }\n  }\n  const { data: relationsDto, refetch: refetchRelationsIds } = useQuery({\n    type: sanitizeFetchType(getRelationsFetchType()),\n    resource: ResourceName.EVENTS,\n    payload: {\n      eventId: event?.id,\n    }\n  }, {\n    enabled: getRelationsFetchType() !== ''\n  })\n\n  const handleAttach = async (idsToAttach: number[]) => {\n    switch (source) {\n      case ResourceName.COMPANIES:\n        await mutate({\n          type: sanitizeFetchType(\"attachCompanies\"),\n          resource: ResourceName.EVENTS,\n          payload: {\n            eventId: event?.id,\n            companiesIds: idsToAttach\n          }\n        }, { returnPromise: true })\n        break\n      case ResourceName.OBJECTS:\n        await mutate({\n          type: sanitizeFetchType(\"attachObjects\"),\n          resource: ResourceName.EVENTS,\n          payload: {\n            eventId: event?.id,\n            objectsIds: idsToAttach\n          }\n        }, { returnPromise: true })\n        break\n      case ResourceName.ENGINES:\n      case ResourceName.PALMS:\n        await mutate({\n          type: sanitizeFetchType(\"attachDevices\"),\n          resource: ResourceName.EVENTS,\n          payload: {\n            eventId: event?.id,\n            verifierDevicesIds: idsToAttach\n          }\n        }, { returnPromise: true })\n        break\n      default:\n        notify(`Source '${source}' is not implemented yet.`)\n    }\n    if (refetch) {\n      refetch()\n    }\n    refetchRelationsIds()\n  }\n\n  const handleDetach = async (idsToDetach: number[]) => {\n    switch (source) {\n      case ResourceName.COMPANIES:\n        await mutate({\n          type: sanitizeFetchType(\"detachCompanies\"),\n          resource: ResourceName.EVENTS,\n          payload: {\n            eventId: event?.id,\n            companiesIds: idsToDetach\n          }\n        }, { returnPromise: true })\n        break\n      case ResourceName.OBJECTS:\n        await mutate({\n          type: sanitizeFetchType(\"detachObjects\"),\n          resource: ResourceName.EVENTS,\n          payload: {\n            eventId: event?.id,\n            objectsIds: idsToDetach\n          }\n        }, { returnPromise: true })\n        break\n      case ResourceName.ENGINES:\n      case ResourceName.PALMS:\n        await mutate({\n          type: sanitizeFetchType(\"detachDevices\"),\n          resource: ResourceName.EVENTS,\n          payload: {\n            eventId: event && event.id,\n            verifierDevicesIds: idsToDetach\n          }\n        }, { returnPromise: true })\n        break\n      default:\n        notify(`Source '${source}' is not implemented yet.`)\n    }\n    if (refetch) {\n      refetch()\n    }\n    refetchRelationsIds()\n  }\n\n  const isAttached = (relatedRecordId: number) => {\n    switch (source) {\n      case ResourceName.COMPANIES:\n        return (relationsDto as EventCompaniesDto)?.companiesIds?.includes(relatedRecordId) === true\n      case ResourceName.OBJECTS:\n        return event?.objectsIds?.includes(relatedRecordId)\n      case ResourceName.ENGINES:\n      case ResourceName.PALMS:\n        return (relationsDto as EventDevicesDto)?.verifierDevicesIds?.includes(relatedRecordId) === true\n      default:\n        notify(`Source '${source}' is not implemented yet.`)\n        return false\n    }\n  }\n\n  const listFilters = () => {\n    switch (source) {\n      case ResourceName.COMPANIES:\n      case ResourceName.OBJECTS:\n        return ([<TextInput source=\"name\" alwaysOn />,\n        <BooleanInput label=\"common.related-records.actions.attached-only\" source=\"filterEventId\" alwaysOn />])\n      case ResourceName.ENGINES:\n      case ResourceName.PALMS:\n        return ([<TextInput source=\"name\" alwaysOn />,\n        <BooleanInput label=\"common.related-records.actions.attached-only\" source=\"filterEventId\" alwaysOn />,\n        <TextInput source=\"categoryId\" />])\n      default: return ([])\n    }\n  }\n\n  const listSort = () => {\n    switch (source) {\n      case ResourceName.COMPANIES:\n      case ResourceName.OBJECTS:\n      case ResourceName.ENGINES:\n      case ResourceName.PALMS:\n        return ({ field: 'name', order: 'ASC' })\n      default: return (undefined)\n    }\n  }\n\n  const listColumns = () => {\n    switch (source) {\n      case ResourceName.COMPANIES:\n      case ResourceName.OBJECTS:\n      case ResourceName.ENGINES:\n      case ResourceName.PALMS:\n        return ([\n          <TextField source=\"id\" label=\"ID\" key='id' />,\n          <TextField source=\"name\" key='name' />])\n      default: return ([])\n    }\n  }\n\n  const Actions = () => {\n    const { filterValues, refetch: refetchList } = useListContext<CompanyDto | ObjectDto | EngineDto | PalmDto>()\n    const getFilteredRelatedRecordsIds = async () =>\n      (await mutate(\n        {\n          type: sanitizeFetchType(GET_LIST),\n          resource: source,\n          payload: {\n            filter: {\n              ...filterValues\n            }\n          }\n        },\n        { returnPromise: true }\n      ))?.data?.map((record: CompanyDto | ObjectDto | EngineDto | PalmDto) => record?.id)\n\n    const handleAttachAll = async () => {\n      await handleAttach(await getFilteredRelatedRecordsIds())\n      if (filterValues?.filterEventId === true) {\n        refetchList()\n      }\n    }\n\n    const handleDetachAll = async () => {\n      await handleDetach(await getFilteredRelatedRecordsIds())\n      if (filterValues?.filterEventId === true) {\n        refetchList()\n      }\n    }\n\n    return (\n      <TopToolbar>\n        <FilterButton />\n        <ButtonGroup>\n          <Button\n            variant=\"contained\"\n            onClick={() => handleAttachAll()}\n            label=\"common.related-records.actions.attach-all\"\n            useSmallVersionBreakpoint={false}\n          />\n          <Button\n            variant=\"outlined\"\n            onClick={() => handleDetachAll()}\n            label=\"common.related-records.actions.detach-all\"\n            useSmallVersionBreakpoint={false}\n          />\n        </ButtonGroup>\n      </TopToolbar>\n    )\n  }\n\n  const AttachedCheckbox = ({ ...props }) => {\n    const { filterValues, refetch: refetchList } = useListContext<CompanyDto | ObjectDto | EngineDto | PalmDto>()\n\n    return (\n      <CheckboxField\n        {...props}\n        disabled={mode !== 'edit'}\n        sortable={false}\n        checkBySource={(id: number) => isAttached(id)}\n        source=\"id\"\n        onClick={\n          (id: number) => isAttached(id as number)\n            ? async () => {\n              await handleDetach([id as number])\n              if (filterValues?.filterEventId === true) {\n                refetchList()\n              }\n            }\n            : async () => {\n              await handleAttach([id as number])\n              if (filterValues?.filterEventId === true) {\n                refetchList()\n              }\n            }\n        } />\n    )\n  }\n\n  return (\n    <ResourceContextProvider value={source} >\n      <List\n        basePath={basePath}\n        exporter={false}\n        title=\" \"\n        filters={listFilters()}\n        filterDefaultValues={{ eventId: event?.id, filterEventId: true }}\n        sort={listSort()}\n        pagination={<Pagination rowsPerPageOptions={[10, 20, 50, 100]} />}\n        perPage={20}\n        actions={mode === 'edit' ? <Actions /> : <></>}\n      >\n        <>\n          <Datagrid size=\"small\" style={{ tableLayout: 'fixed' }} >\n            {listColumns()}\n            <AttachedCheckbox label=\"common.related-records.fields.is-attached\" />\n          </Datagrid>\n        </>\n      </List>\n    </ResourceContextProvider>\n  )\n}\n\nconst EventTabs = ({ ...props }) => {\n  const translate = useTranslate()\n\n  return (\n    <TabbedShowLayout {...props}>\n      <Tab label={translate(\"resources.events.tabs.general\")}>\n        <TextField source=\"id\" label=\"ID\" />\n        <TextField source=\"name\" />\n        <DateField source=\"dateStart\" showTime />\n        <DateField source=\"dateEnd\" showTime />\n        <FunctionField\n          source=\"status\"\n          render={(r: Record | undefined) => <TextField\n            emptyText={(translate(`resources.enums.eventStatus.${r?.status.toLowerCase()}`))}\n          />}\n        />\n        <GeneralActions />\n      </Tab>\n      <Tab path=\"companies\"\n        label={translate('resources.events.tabs.companies')}>\n        <RelationTab source={ResourceName.COMPANIES} mode='edit' />\n      </Tab>\n      <Tab path=\"objects\"\n        label={translate('resources.events.tabs.objects')}>\n        <RelationTab source={ResourceName.OBJECTS} mode='edit' />\n      </Tab>\n      <Tab path=\"engines\"\n        label={translate('resources.events.tabs.engines')}>\n        <RelationTab source={ResourceName.ENGINES} mode='edit' />\n      </Tab>\n      <Tab path=\"palms\"\n        label={translate('resources.events.tabs.palms')}>\n        <RelationTab source={ResourceName.PALMS} mode='edit' />\n      </Tab>\n    </TabbedShowLayout>\n  )\n}\n\nexport const EventShow = (props: ShowProps) =>\n  <Show {...props} actions={false} title={<ShowTitle />}>\n    <EventTabs />\n  </Show>","import React from 'react'\nimport {\n  makeStyles,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from '@material-ui/core'\nimport { Show, ShowProps, useTranslate, ArrayField, Datagrid, TextField } from 'react-admin'\n\nconst useStyles = makeStyles({\n  noBottomBorder: {\n    borderBottom: 'none',\n  },\n  quarterWidth: {\n    width: '25%',\n  },\n})\n\nconst ViewTitle = (record: any) => {\n  const {\n    record: { eventName, date, id },\n  } = record\n  const t = useTranslate()\n  const description = `${eventName} ${date.replace('T', ' ')} ${id}`\n  return (\n    <span>{`${t('resources.stats-overall-view.name')}: ${description}`}</span>\n  )\n}\n\nconst BlockGrid = (props: any) => {\n  const {\n    record: {\n      soldAbo, soldInfix, soldNormal, soldPoints, soldService\n    }\n  } = props\n  const classes = useStyles()\n  const translate = useTranslate()\n\n  const firstColumnEntries = [\n    { label: \"abo\", value: soldAbo },\n    { label: \"infix\", value: soldInfix },\n    { label: \"normal\", value: soldNormal },\n    { label: \"points\", value: soldPoints },\n    { label: \"service\", value: soldService },\n  ].map(({ label, value }) => (\n    !!value && (\n      <div key={label}>{translate(`resources.stats-overall-view.fields.${label}`)}</div>\n    )\n  ))\n\n  const secondColumnEntries = [\n    { label: \"enteredAbo\", value: soldAbo },\n    { label: \"enteredInfix\", value: soldInfix },\n    { label: \"enteredNormal\", value: soldNormal },\n    { label: \"enteredPoints\", value: soldPoints },\n    { label: \"enteredService\", value: soldService },\n  ].map(({ label, value }) =>\n    !!value && (\n      <TextField key={label} source={label} label=\" \" />\n    ))\n\n  const thirdColumnEntries = [\n    { label: \"soldAbo\", value: soldAbo },\n    { label: \"soldInfix\", value: soldInfix },\n    { label: \"soldNormal\", value: soldNormal },\n    { label: \"soldPoints\", value: soldPoints },\n    { label: \"soldService\", value: soldService },\n  ].map(({ label, value }) => (\n    !!value && (\n      <TextField key={label} source={label} label=\" \" />\n    )\n  ))\n\n  return (\n    <TableContainer style={{ paddingTop: \"10px\", marginBottom: \"10px\" }}>\n      <Table padding=\"none\">\n        <TableBody>\n          <TableRow>\n            <TableCell style={{ width: \"15%\" }} className={classes.noBottomBorder} />\n            <TableCell style={{ width: \"40%\" }} className={classes.noBottomBorder}>{firstColumnEntries}</TableCell>\n            <TableCell style={{ width: \"15%\" }} className={classes.noBottomBorder}>{secondColumnEntries}</TableCell>\n            <TableCell style={{ width: \"15%\" }} className={classes.noBottomBorder}>{thirdColumnEntries}</TableCell>\n            <TableCell style={{ width: \"15%\" }} className={classes.noBottomBorder} />\n          </TableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n\nconst TribuneGrid = () => {\n  const translate = useTranslate()\n\n  const TribuneHeader = () => (\n    <TableHead>\n      <TableRow>\n        <TableCell style={{ width: \"15%\" }} />\n        <TableCell style={{ width: \"40%\" }}>{translate('resources.stats-overall-view.fields.block')}</TableCell>\n        <TableCell style={{ width: \"15%\" }} />\n        <TableCell style={{ width: \"15%\" }} />\n        <TableCell style={{ width: \"15%\" }} />\n      </TableRow>\n    </TableHead>\n  )\n\n  return (\n    <ArrayField source=\"blocks\">\n      <Datagrid expand={<BlockGrid />} padding=\"none\" header={<TribuneHeader />} isRowExpandable={record => !!record.sold}>\n        <TextField source=\"name\" label=\"Sektor\" />\n        <TextField source=\"entered\" label=\" \" />\n        <TextField source=\"sold\" label=\" \" />\n        <TextField source=\"capacity\" label=\" \" />\n      </Datagrid>\n    </ArrayField>\n  )\n}\n\nconst ObjectGrid = () => {\n  const translate = useTranslate()\n\n  const objectHeader = () => (\n    <TableHead>\n      <TableRow>\n        <TableCell style={{ width: \"10%\" }} />\n        <TableCell style={{ width: \"45%\" }}>{translate('resources.stats-overall-view.fields.tribune')}</TableCell>\n        <TableCell style={{ width: \"15%\" }} />\n        <TableCell style={{ width: \"15%\" }} />\n        <TableCell style={{ width: \"15%\" }} />\n      </TableRow>\n    </TableHead>\n  )\n\n  return (\n    <ArrayField source=\"tribunes\">\n      <Datagrid expand={<TribuneGrid />} padding=\"none\" header={objectHeader}>\n        <TextField source=\"name\" label=\"Trybuna\" />\n        <TextField source=\"entered\" label=\" \" />\n        <TextField source=\"sold\" label=\" \" />\n        <TextField source=\"capacity\" label=\" \" />\n      </Datagrid>\n    </ArrayField>\n  )\n}\n\nexport const OverallView = (props: ShowProps) => {\n  const translate = useTranslate()\n\n  const overallHeader = () => (\n    <TableHead>\n      <TableRow>\n        <TableCell style={{ width: \"5%\" }} />\n        <TableCell style={{ width: \"50%\" }}>{translate('resources.stats-overall-view.fields.name')}</TableCell>\n        <TableCell style={{ width: \"15%\" }}>{translate('resources.stats-overall-view.fields.entered')}</TableCell>\n        <TableCell style={{ width: \"15%\" }}>{translate('resources.stats-overall-view.fields.sold')}</TableCell>\n        <TableCell style={{ width: \"15%\" }}>{translate('resources.stats-overall-view.fields.capacity')}</TableCell>\n      </TableRow>\n    </TableHead>\n  )\n\n  return (\n    <Show title={<ViewTitle />} {...props}>\n      <ArrayField source=\"objects\">\n        <Datagrid expand={<ObjectGrid />} padding=\"none\" header={overallHeader}>\n          <TextField source=\"name\" label=\"Obiekt\" />\n          <TextField source=\"entered\" />\n          <TextField source=\"sold\" />\n          <TextField source=\"capacity\" />\n        </Datagrid>\n      </ArrayField>\n    </Show>\n  )\n}","import * as React from 'react'\nimport {\n  Datagrid,\n  DateField,\n  Filter,\n  List,\n  ListProps,\n  TextField,\n  TextInput,\n  useListContext,\n} from 'react-admin'\nimport { ResourceName } from '../../../core/ResourceName'\nimport { useHasAuthority } from '../../hooks/useHasAuthority'\nimport { Authority } from '../../../core/auth/Authority'\nimport FilterProps from '../../common/FilterProps'\n\nconst OverallViewGrid = () => {\n  const { loading } = useListContext()\n  const hasAuthority = useHasAuthority()\n  // TODO: header doesn't change color when theme value is switched\n  //  the reason is the need to change the theme at <Admin> level - not at <Layout> level\n  //  the solution is here - https://stackoverflow.com/a/63967145 -> after that customReducer needs to be removed\n  return (\n    <Datagrid\n      loaded={!loading}\n      rowClick={\n        hasAuthority(Authority.VIEW_STATS_OVERALL_VIEW)\n          ? (id) => `${ResourceName.STATS_OVERALL_VIEW}/${id}/show`\n          : undefined\n      }\n    >\n      <TextField source=\"id\" />\n      <TextField source=\"name\" />\n      <DateField source=\"dateStart\" showTime />\n      <DateField source=\"dateEnd\" showTime />\n    </Datagrid>\n  )\n}\n\nconst OverallViewFilters = (props: FilterProps) => (\n  <Filter {...props}>\n    <TextInput source=\"name\" alwaysOn />\n  </Filter>\n)\n\nexport const OverallViewList = (props: ListProps) => (\n  <List\n    {...props}\n    actions={false}\n    filters={<OverallViewFilters />}\n    sort={{ field: 'id', order: 'DESC' }}\n  >\n    <OverallViewGrid />\n  </List>\n)\n","import {\n  List,\n  ListProps,\n  useListContext,\n  useTranslate,\n  useMutation,\n  sanitizeFetchType,\n  UPDATE_MANY,\n  TextField,\n  DateField,\n  FunctionField,\n  DatagridHeaderProps,\n  DatagridHeader,\n  DatagridRow,\n  DatagridBodyProps,\n  Datagrid\n} from 'react-admin'\nimport React from 'react'\nimport {\n  Button,\n  Grid,\n  IconButton,\n  TableBody,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core'\nimport { Power, PowerOff } from '@material-ui/icons'\nimport { AccessUsingDto } from '../../../core/dto/access-using.dto'\nimport { ResourceName } from '../../../core/ResourceName'\nimport { AccessUsing } from '../../../core/access-usings/access-using'\n\nconst AccessUsingsExpand = () => {\n  const translate = useTranslate()\n  return (\n    <Grid container spacing={1}>\n      <Grid item xs={6}>\n        {translate(\"resources.access-usings.fields.ticketId\")}\n      </Grid>\n      <Grid item xs={6}\n        style={{ textAlign: \"center\" }}>\n        <TextField\n          source=\"ticketCode\"\n        />\n      </Grid>\n    </Grid>\n  )\n}\n\nconst AccessUsingsBody = ({ data, ids, expand }: DatagridBodyProps) => {\n  const translate = useTranslate()\n  const [mutate] = useMutation()\n  const { refetch } = useListContext()\n  const theme = useTheme()\n  const xSmallScreen = useMediaQuery(theme.breakpoints.down('xs'))\n\n  const patchAccess = async (access: AccessUsingDto) => {\n    await mutate(\n      {\n        type: sanitizeFetchType(UPDATE_MANY),\n        resource: ResourceName.ACCESS_USINGS,\n        payload: {\n          ids: [access.id],\n          data: {\n            active: !access.active,\n          },\n        },\n      },\n      { returnPromise: true },\n    )\n    refetch()\n  }\n\n  return (\n    <TableBody>\n      {ids && ids.map((id) =>\n        data && data[id] && (\n          <DatagridRow\n            expand={expand}\n            key={id}\n            id={id}\n            record={data[id]}\n            resource={ResourceName.ACCESS_USINGS}\n          >\n            <DateField\n              source=\"date\"\n              record={data[id] as AccessUsingDto}\n              showTime\n            />\n            <FunctionField<AccessUsing>\n              record={data[id] as AccessUsing}\n              render={(record?: AccessUsing) => (\n                translate(`resources.enums.deviceDirection.${record?.direction}`)\n              )} />\n            {!xSmallScreen && <TextField\n              source=\"ticketCode\"\n            />}\n            {!xSmallScreen &&\n              <FunctionField<AccessUsing>\n                render={(record?: AccessUsing) =>\n                  record?.active\n                    ? translate('const.yes')\n                    : translate('const.no')\n                }\n              />}\n            <FunctionField<AccessUsing> render={(record?: AccessUsing) =>\n              xSmallScreen ?\n                <IconButton color=\"primary\" onClick={() =>\n                  patchAccess(record as AccessUsingDto)}>\n                  {record?.active ?\n                    <Power /> :\n                    <PowerOff />}\n                </IconButton> :\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  style={{ width: '100%', fontSize: '13px' }}\n                  onClick={() => patchAccess(record as AccessUsingDto)}\n                >\n                  {translate(\n                    `resources.access-usings.actions.${record?.active ? `deactivate` : `activate`\n                    }`,\n                  )}\n                </Button>\n            } />\n          </DatagridRow>\n        ))}\n    </TableBody>\n  )\n}\n\nconst AccessUsingsHeader = (props: DatagridHeaderProps) => {\n  const theme = useTheme()\n  const xSmallScreen = useMediaQuery(theme.breakpoints.down('xs'))\n  return (\n    <DatagridHeader {...props}>\n      <TextField source=\"date\" />\n      <TextField source=\"direction\" />\n      {!xSmallScreen && <TextField source=\"ticketId\" />}\n      <TextField source=\"active\" />\n    </DatagridHeader>\n  )\n}\n\nexport const AccessUsingsList = (props: ListProps) => {\n  const theme = useTheme()\n  const xSmallScreen = useMediaQuery(theme.breakpoints.down('xs'))\n  return (\n    <List\n      {...props}\n      exporter={false}\n      perPage={20}\n      sort={{ field: 'date', order: 'DESC' }}\n    >\n      <>\n        <Datagrid\n          body={<AccessUsingsBody />}\n          header={<AccessUsingsHeader />}\n          padding={xSmallScreen ? \"checkbox\" : \"default\"}\n          isRowExpandable={() => xSmallScreen}\n          expand={<AccessUsingsExpand />}\n        >\n          <div />\n        </Datagrid>\n      </>\n    </List>\n  )\n}\n","import { TicketType } from '../enum/TicketType'\nimport { BookingType } from '../enum/BookingType'\n\nconst bookingTypeMapping: Record<BookingType, string> = {\n  [BookingType.NORMAL]: 'resources.enums.bookingType.normal',\n  [BookingType.ABO]: 'resources.enums.bookingType.abo',\n  [BookingType.INFIX]: 'resources.enums.bookingType.infix',\n  [BookingType.POINTS]: 'resources.enums.bookingType.points',\n  [BookingType.SERVICE]: 'resources.enums.bookingType.service',\n}\n\nconst ticketTypeMapping: Record<TicketType, string> = {\n  [TicketType.K]: 'resources.enums.ticketType.k',\n  [TicketType.M]: 'resources.enums.ticketType.m',\n  [TicketType.Z]: 'resources.enums.ticketType.z',\n  [TicketType.N]: 'resources.enums.ticketType.n',\n  [TicketType.P]: 'resources.enums.ticketType.p',\n  [TicketType.U]: 'resources.enums.ticketType.u',\n  [TicketType.R]: 'resources.enums.ticketType.r',\n}\n\nexport const mapFromBookingType = (bookingType: BookingType): string =>\n  bookingTypeMapping[bookingType]\n\nexport const mapFromTicketType = (ticketType: TicketType): string =>\n  ticketTypeMapping[ticketType]\n","import * as React from 'react'\nimport { useShowContext } from 'react-admin'\nimport {\n  Box,\n  createStyles,\n  makeStyles,\n  Theme,\n  Typography,\n} from '@material-ui/core'\nimport { TicketDetails } from '../../core/ticket-details/ticket-details'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    header: {\n      letterSpacing: theme.spacing(0.2),\n    },\n  }),\n)\nexport const TicketDetailsHeader = () => {\n  const classes = useStyles()\n  const { record } = useShowContext<TicketDetails>()\n  return (\n    <Box m={2}>\n      <Typography className={classes.header} variant=\"h5\" paragraph>\n        {record?.firstname} {record?.lastname}\n      </Typography>\n    </Box>\n  )\n}\n","import * as React from 'react'\nimport {\n  DateField,\n  Labeled,\n  TextField,\n  TextFieldProps,\n  useRecordContext,\n  useTranslate,\n} from 'react-admin'\nimport {\n  Chip,\n  createStyles,\n  Grid,\n  makeStyles,\n  Paper,\n  Theme,\n} from '@material-ui/core'\nimport { mapFromTicketType } from '../../core/ticket-details/ticket-details-values.mapper'\nimport { TicketDetails } from '../../core/ticket-details/ticket-details'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ticketBox: {\n      display: 'flex',\n      flexDirection: 'column',\n      padding: theme.spacing(1),\n      marginLeft: theme.spacing(1),\n    },\n    ticketField: {\n      padding: theme.spacing(0),\n      margin: theme.spacing(0),\n      marginBottom: theme.spacing(0.5),\n    },\n  }),\n)\n\nexport const TicketDetailsTicketsField = ({ label }: TextFieldProps) => {\n  const classes = useStyles()\n  const t = useTranslate()\n  const record = useRecordContext<TicketDetails>()\n  const mappedRecords = (record.tickets || []).map(\n    ({ id, ticketType, createdAt, ticketCode }) => ({\n      id,\n      ticketCode,\n      ticketType: mapFromTicketType(ticketType),\n      createdAt,\n    }),\n  )\n  const fields = mappedRecords.map((mappedRecord) => (\n    <Grid\n      item\n      xs={12}\n      sm={6}\n      key={mappedRecord.id}>\n      <Paper\n        variant=\"elevation\"\n        className={classes.ticketBox}\n      >\n        <Labeled\n          className={classes.ticketField}\n          label=\"resources.ticket-details.fields.tickets.fields.id\"\n        >\n          <TextField\n            className={classes.ticketField}\n            record={mappedRecord}\n            source=\"id\"\n          />\n        </Labeled>\n        <Labeled\n          className={classes.ticketField}\n          label=\"resources.ticket-details.fields.tickets.fields.ticketCode\"\n        >\n          <TextField\n            className={classes.ticketField}\n            record={mappedRecord}\n            source=\"ticketCode\"\n          />\n        </Labeled>\n        <Labeled\n          className={classes.ticketField}\n          label=\"resources.ticket-details.fields.tickets.fields.ticketType\"\n        >\n          <Chip\n            label={t(mappedRecord.ticketType)}\n            className={classes.ticketField}\n          />\n        </Labeled>\n        <Labeled\n          className={classes.ticketField}\n          label=\"resources.ticket-details.fields.tickets.fields.createdAt\"\n        >\n          <DateField\n            className={classes.ticketField}\n            record={mappedRecord}\n            source=\"createdAt\"\n            showTime\n          />\n        </Labeled>\n      </Paper>\n    </Grid>\n  ))\n  return (\n    <Labeled label={label}>\n      <Grid container>\n        {fields}\n      </Grid>\n    </Labeled>\n  )\n}\n","import {\n  CREATE,\n  CreateParams,\n  sanitizeFetchType,\n  UPDATE_MANY,\n  UpdateManyParams,\n} from 'react-admin'\nimport { TicketDetails } from './ticket-details'\nimport { ResourceName } from '../ResourceName'\nimport { AccessUsingsCreateParams } from '../access-usings/access-usings-create.params'\nimport {\n  ToggleType,\n  ToggleButtonAction,\n  ToggleButtonState,\n} from './toggle-button'\n\ntype Mutation = {\n  type: string\n  resource: string\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  payload?: object\n}\n\nconst blockMutation = (ticketDetails: TicketDetails): Mutation => {\n  const { accessesIds, tickets } = ticketDetails\n  const ticketIds = tickets.map((t) => t.id)\n  return {\n    type: sanitizeFetchType(CREATE),\n    resource: ResourceName.ACCESS_USINGS,\n    payload: {\n      data: { ticketIds, accessIds: accessesIds },\n    } as CreateParams<AccessUsingsCreateParams>,\n  }\n}\n\nconst unblockMutation = ({ tickets }: TicketDetails): Mutation => {\n  const activeAccessUsingIds = tickets\n    .flatMap((t) => t.accessUsings)\n    .filter((au) => au.active)\n    .map((au) => au.id)\n  return {\n    type: sanitizeFetchType(UPDATE_MANY),\n    resource: ResourceName.ACCESS_USINGS,\n    payload: {\n      ids: activeAccessUsingIds,\n      data: {\n        active: false,\n      },\n    } as UpdateManyParams,\n  }\n}\n\ntype State = {\n  mutateQuery?: (ticketDetails: TicketDetails) => Mutation\n} & ToggleButtonState\n\nexport const blockAccessButtonInitialState = {\n  type: ToggleType.DISABLED,\n  text: 'resources.ticket-details.actions.blockAccessNA',\n}\n\nexport const toggleAccessButtonReducer = (\n  state: State,\n  { type }: ToggleButtonAction,\n): State => {\n  switch (type) {\n    case ToggleType.BLOCK: {\n      return {\n        type,\n        text: 'resources.ticket-details.actions.blockAccess',\n        mutateQuery: blockMutation,\n      }\n    }\n    case ToggleType.UNBLOCK: {\n      return {\n        type,\n        text: 'resources.ticket-details.actions.unblockAccess',\n        mutateQuery: unblockMutation,\n      }\n    }\n    case ToggleType.DISABLED: {\n      return blockAccessButtonInitialState\n    }\n    default:\n      throw new Error()\n  }\n}\n","import * as React from 'react'\nimport { useEffect, useReducer } from 'react'\nimport {\n  useMutation,\n  useNotify,\n  useRecordContext,\n  useRefresh,\n  useShowContext,\n  useTranslate,\n} from 'react-admin'\nimport { Button, createStyles, makeStyles, Theme } from '@material-ui/core'\nimport { ToggleType } from '../../core/ticket-details/toggle-button'\nimport { TicketDetails } from '../../core/ticket-details/ticket-details'\nimport {\n  blockAccessButtonInitialState,\n  toggleAccessButtonReducer,\n} from '../../core/ticket-details/toggle-access-button.reducer'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    button: {\n      color: theme.palette.common.white,\n      marginLeft: theme.spacing(1),\n    },\n  }),\n)\n\nexport const ToggleAccessButton = () => {\n  const classes = useStyles()\n  const t = useTranslate()\n  const notify = useNotify()\n  const { loading } = useShowContext()\n  const [{ type, text, mutateQuery }, dispatch] = useReducer(\n    toggleAccessButtonReducer,\n    blockAccessButtonInitialState,\n  )\n  const ticketDetails = useRecordContext<TicketDetails>()\n  const [mutate, { loading: mutationLoading }] = useMutation()\n  const refresh = useRefresh()\n\n  const isActive = (td: TicketDetails) =>\n    td.tickets.some((ticket) => ticket.accessUsings.some((a) => a.active))\n\n  useEffect(() => {\n    if (isActive(ticketDetails)) {\n      dispatch({ type: ToggleType.UNBLOCK })\n    } else {\n      dispatch({ type: ToggleType.BLOCK })\n    }\n  }, [ticketDetails])\n\n  const onClick = async () => {\n    try {\n      const query = mutateQuery?.(ticketDetails)\n      await mutate(query, { returnPromise: true })\n      refresh()\n    } catch (err) {\n      notify((err as Error)?.message, 'error')\n    }\n  }\n\n  return (\n    <Button\n      disabled={type === ToggleType.DISABLED || loading || mutationLoading}\n      className={classes.button}\n      variant=\"contained\"\n      color=\"secondary\"\n      onClick={onClick}\n    >\n      {t(text)}\n    </Button>\n  )\n}\n","import {\n  ToggleType,\n  ToggleButtonAction,\n  ToggleButtonState,\n} from './toggle-button'\nimport { BookingUpdateRequest } from '../bookings/booking-update.request'\nimport { BookingDisabledOption } from '../enum/BookingDisabledOption'\n\ntype State = {\n  mutateParam?: BookingUpdateRequest['disabled']\n} & ToggleButtonState\n\nexport const blockTicketButtonInitialState = {\n  type: ToggleType.DISABLED,\n  text: 'resources.ticket-details.actions.blockTicketNA',\n}\n\nexport const toggleTicketButtonReducer = (\n  state: State,\n  { type }: ToggleButtonAction,\n): State => {\n  switch (type) {\n    case ToggleType.BLOCK: {\n      return {\n        type,\n        text: 'resources.ticket-details.actions.blockTicket',\n        mutateParam: BookingDisabledOption.ADMIN,\n      }\n    }\n    case ToggleType.UNBLOCK: {\n      return {\n        type,\n        text: 'resources.ticket-details.actions.unblockTicket',\n        mutateParam: null,\n      }\n    }\n    case ToggleType.DISABLED: {\n      return blockTicketButtonInitialState\n    }\n    default:\n      throw new Error()\n  }\n}\n","import * as React from 'react'\nimport { useEffect, useReducer } from 'react'\nimport {\n  sanitizeFetchType,\n  UPDATE,\n  UpdateParams,\n  useMutation,\n  useNotify,\n  useRecordContext,\n  useRefresh,\n  useShowContext,\n  useTranslate,\n} from 'react-admin'\nimport { Button, createStyles, makeStyles, Theme } from '@material-ui/core'\nimport { TicketDetails } from '../../core/ticket-details/ticket-details'\nimport { BookingUpdateRequest } from '../../core/bookings/booking-update.request'\nimport { BookingDisabledOption } from '../../core/enum/BookingDisabledOption'\nimport { ResourceName } from '../../core/ResourceName'\nimport {\n  blockTicketButtonInitialState,\n  toggleTicketButtonReducer,\n} from '../../core/ticket-details/toggle-ticket-button.reducer'\nimport { ToggleType } from '../../core/ticket-details/toggle-button'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    button: {\n      color: theme.palette.common.white,\n      marginLeft: theme.spacing(1),\n    },\n  }),\n)\n\nexport const ToggleTicketButton = () => {\n  const classes = useStyles()\n  const t = useTranslate()\n  const notify = useNotify()\n  const { loading } = useShowContext()\n  const [{ type, text, mutateParam }, dispatch] = useReducer(\n    toggleTicketButtonReducer,\n    blockTicketButtonInitialState,\n  )\n  const { id: bookingId, bookingDisabled } = useRecordContext<TicketDetails>()\n  const [mutate, { loading: mutationLoading }] = useMutation()\n  const refresh = useRefresh()\n\n  useEffect(() => {\n    if (bookingDisabled === null) {\n      dispatch({ type: ToggleType.BLOCK })\n    } else if (bookingDisabled === BookingDisabledOption.ADMIN) {\n      dispatch({ type: ToggleType.UNBLOCK })\n    } else {\n      dispatch({ type: ToggleType.DISABLED })\n    }\n  }, [bookingDisabled])\n\n  const onClick = async () => {\n    try {\n      await mutate(\n        {\n          type: sanitizeFetchType(UPDATE),\n          resource: ResourceName.BOOKINGS,\n          payload: {\n            data: { id: bookingId, disabled: mutateParam },\n          } as UpdateParams<BookingUpdateRequest>,\n        },\n        { returnPromise: true },\n      )\n      refresh()\n    } catch (err) {\n      notify((err as Error)?.message, 'error')\n    }\n  }\n\n  return (\n    <Button\n      disabled={type === ToggleType.DISABLED || loading || mutationLoading}\n      className={classes.button}\n      variant=\"contained\"\n      color=\"secondary\"\n      onClick={onClick}\n    >\n      {t(text)}\n    </Button>\n  )\n}\n","import React from 'react'\nimport {\n  useMediaQuery,\n  useTheme,\n  TableContainer,\n  Table,\n  TableHead,\n  TableBody,\n  TableRow,\n  TableCell,\n} from '@material-ui/core'\nimport { ListProps, List, Pagination, useListContext, useTranslate } from 'react-admin'\nimport { MobilePostPagination } from '../../common/Pagination'\n\ninterface AccessListProps extends ListProps {\n  setSelected: (prop: number | undefined) => void\n}\n\nconst AccessGrid = ({\n  setSelected,\n}: {\n  setSelected: (prop: number | undefined) => void\n}) => {\n  const translate = useTranslate()\n  const { data, ids } = useListContext()\n\n  return (\n    <>\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>ID</TableCell>\n              <TableCell>{translate('resources.accesses.fields.name')}</TableCell>\n              <TableCell>{translate('resources.accesses.fields.entranceId')}</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {ids.map((id) => (\n              <TableRow key={id} style={{ cursor: 'pointer' }} hover>\n                <TableCell onClick={() => setSelected(id as number)}>\n                  {data[id]?.id}\n                </TableCell>\n                <TableCell onClick={() => setSelected(id as number)}>\n                  {data[id]?.name}\n                </TableCell>\n                <TableCell onClick={() => setSelected(id as number)}>\n                  {data[id]?.entranceId}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  )\n}\n\nexport const AccessList = ({setSelected, ...props}: AccessListProps) => {\n  const theme = useTheme()\n\n  return (\n    <List\n      perPage={20}\n      exporter={false}\n      pagination={\n        useMediaQuery(theme.breakpoints.up('md')) ? (\n          <Pagination rowsPerPageOptions={[20, 50, 100]} />\n        ) : (\n          <MobilePostPagination />\n        )\n      }\n      {...props}\n    >\n      <AccessGrid setSelected={setSelected} />\n    </List>\n  )\n}\n","import { ButtonBase, Typography, withStyles } from '@material-ui/core'\n\nexport const FullWidthButton = withStyles({\n  root: {\n    width: '100%',\n    height: '52px',\n    fontSize: '17px',\n    marginBottom: '1px',\n    '&:hover': {\n      color: 'initial',\n    },\n    '&:active': {\n      color: 'grey'\n    }\n  },\n})(ButtonBase)\n\nexport const BackButton = withStyles({\n  root: {\n    height: '100%',\n    writingMode: 'vertical-lr',\n    textOrientation: 'mixed',\n    width: '100%',\n    '&:hover': {\n      color: 'lightgrey'\n    },\n    '&:active': {\n      color: 'grey'\n    }\n  }\n})(ButtonBase)\n\nexport const BackButtonText = withStyles({\n  root: {\n    writingMode: 'vertical-lr',\n    textOrientation: 'mixed',\n  }\n})(Typography)","import {\n  List,\n  ListProps,\n  TextField,\n  DateField,\n  Datagrid,\n  FunctionField,\n  useTranslate\n} from 'react-admin'\nimport React from 'react'\nimport { Grid, useMediaQuery, useTheme } from '@material-ui/core'\nimport { AccessDateDto } from '../../../core/dto/access-date.dto'\n\nconst AccessDateExpand = ({ record }: { record?: AccessDateDto }) => {\n  const translate = useTranslate()\n  const theme = useTheme()\n  const xSmallScreen = useMediaQuery(theme.breakpoints.down('xs'))\n  return (\n    <Grid container spacing={1}>\n      <Grid item xs={6}>\n        {translate(\"resources.access-dates.fields.timeFrom\")}\n      </Grid>\n      <Grid item xs={6}\n        style={{ textAlign: \"center\" }}>\n        <FunctionField<AccessDateDto>\n          source=\"timeFrom\"\n          render={(r?: AccessDateDto) => (\n            r?.timeFrom.substring(11, 19)\n          )} />\n      </Grid>\n      <Grid item xs={6}>\n        {translate(\"resources.access-dates.fields.timeTo\")}\n      </Grid>\n      {record?.dayOfWeek && xSmallScreen &&\n        <>\n          <Grid item xs={6}\n            style={{ textAlign: \"center\" }}>\n            <FunctionField<AccessDateDto>\n              source=\"timeTo\"\n              render={(r?: AccessDateDto) => (\n                r?.timeTo.substring(11, 19)\n              )} />\n          </Grid>\n          <Grid item xs={6}>\n            {translate(\"resources.access-dates.fields.dayOfWeek\")}\n          </Grid>\n          <Grid item xs={6}\n            style={{ textAlign: \"center\" }}>\n            <TextField source=\"dayOfWeek\" />\n          </Grid>\n        </>}\n    </Grid>\n  )\n}\n\nexport const AccessDatesList = (props: ListProps) => {\n  const theme = useTheme()\n  const smallScreen = useMediaQuery(theme.breakpoints.down('sm'))\n  const xSmallScreen = useMediaQuery(theme.breakpoints.down('xs'))\n  const translate = useTranslate()\n  return (\n    <List\n      {...props}\n      exporter={false}\n      perPage={20}\n      sort={{ field: 'id', order: 'DESC' }}\n    >\n      <>\n        <Datagrid\n          isRowExpandable={() => smallScreen}\n          expand={<AccessDateExpand />}\n          padding={xSmallScreen ? 'checkbox' : 'default'} >\n          <DateField source=\"activeFrom\" />\n          <DateField source=\"activeTo\" />\n          {!smallScreen && <FunctionField<AccessDateDto>\n            source=\"timeFrom\"\n            render={(r?: AccessDateDto) => (\n              r?.timeFrom.substring(11, 19)\n            )} />}\n          {!smallScreen && <FunctionField<AccessDateDto>\n            source=\"timeTo\"\n            render={(r?: AccessDateDto) => (\n              r?.timeTo.substring(11, 19)\n            )} />}\n          <FunctionField<AccessDateDto>\n            source=\"type\"\n            render={(r?: AccessDateDto) => (\n              translate(`resources.enums.accessDateTypes.${r?.type}`)\n            )} />\n          <TextField source=\"priority\" />\n          {!xSmallScreen && <TextField source=\"dayOfWeek\" />}\n        </Datagrid>\n      </>\n    </List>\n  )\n}\n","import React, { useState } from 'react'\nimport {\n  ShowProps,\n  Show,\n  useShowContext,\n  ResourceContextProvider,\n  useTranslate,\n  TextField,\n  DateField,\n  FunctionField,\n  Pagination,\n  useQueryWithStore,\n  sanitizeFetchType,\n  GET_ONE\n} from 'react-admin'\nimport {\n  TableContainer,\n  Table,\n  TableBody,\n  TableRow,\n  TableCell,\n  Grid,\n  Paper,\n  Box,\n  useTheme,\n  useMediaQuery,\n} from '@material-ui/core'\nimport { FullWidthButton } from '../TicketDetailsComponents'\nimport { ResourceName } from '../../../core/ResourceName'\nimport { AccessUsingsList } from './AccessUsingsList'\nimport { AccessDatesList } from './AccessDatesList'\nimport { AccessActivePeriodStartingOptions } from '../../../core/enum/AccessActivePeriodStartingOptions'\nimport { AccessDto } from '../../../core/dto/access.dto'\n\nconst TabButton = ({\n  value,\n  selected,\n  change,\n  children,\n}: {\n  value: number\n  selected: number\n  change: (prop: number) => void\n  children: any\n}) => (\n  <FullWidthButton\n    style={{\n      background: selected === value ? 'rgba(0,0,0,0.2)' : 'inherit',\n    }}\n    onClick={() => change(value)}\n  >\n    {children}\n  </FullWidthButton>\n)\n\nconst AccessDetails = () => {\n  const translate = useTranslate()\n  const { record: access } = useShowContext<AccessDto>()\n\n  const { data: entrance } = useQueryWithStore({\n    type: sanitizeFetchType(GET_ONE),\n    resource: ResourceName.ENTRANCES,\n    payload: {\n      id: access?.entranceId\n    }\n  })\n\n  const { data: createdBy } = useQueryWithStore({\n    type: sanitizeFetchType(GET_ONE),\n    resource: ResourceName.USERS,\n    payload: {\n      id: access?.createdById\n    }\n  })\n\n  const { data: modifiedBy } = useQueryWithStore({\n    type: sanitizeFetchType(GET_ONE),\n    resource: ResourceName.USERS,\n    payload: {\n      id: access?.modifiedById\n    }\n  })\n\n  return (\n    <TableContainer>\n      <Table>\n        <TableBody>\n          <TableRow>\n            <TableCell style={{ width: '50%' }}>ID</TableCell>\n            <TableCell style={{ width: '50%' }}>\n              <TextField source=\"id\" />\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>{translate('resources.accesses.fields.name')}</TableCell>\n            <TableCell>\n              <TextField source=\"name\" />\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>{translate('resources.accesses.fields.bonus')}</TableCell>\n            <TableCell>\n              <FunctionField<AccessDto>\n                render={(record?: AccessDto) =>\n                  translate(`resources.enums.bonus.${record?.bonus}`)\n                }\n              />\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              {translate('resources.accesses.fields.entranceId')}\n            </TableCell>\n            <TableCell>\n              <FunctionField<AccessDto>\n                render={(record?: AccessDto) =>\n                  <div>{record?.entranceId} ({entrance?.note})</div>} />\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              {translate('resources.accesses.fields.modifiedById')}\n            </TableCell>\n            <TableCell>\n              <TextField record={modifiedBy} source=\"userName\" />\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              {translate('resources.accesses.fields.createdById')}\n            </TableCell>\n            <TableCell>\n              <TextField record={createdBy} source=\"userName\" />\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              {translate('resources.accesses.fields.allowReenter')}\n            </TableCell>\n            <TableCell>\n              <FunctionField<AccessDto>\n                render={(record?: AccessDto) =>\n                  record?.allowReenter\n                    ? translate('const.yes')\n                    : translate('const.no')\n                }\n              />\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              {translate('resources.accesses.fields.multipleEntry')}\n            </TableCell>\n            <TableCell>\n              <FunctionField<AccessDto>\n                render={(record?: AccessDto) =>\n                  record?.multipleEntry\n                    ? translate('const.yes')\n                    : translate('const.no')\n                }\n              />\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              {translate('resources.accesses.fields.multiple')}\n            </TableCell>\n            <TableCell>\n              <TextField source=\"multiple\" />\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              {translate('resources.accesses.fields.usePriority')}\n            </TableCell>\n            <TableCell>\n              <TextField source=\"usePriority\" />\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>{translate('resources.accesses.fields.delay')}</TableCell>\n            <TableCell>\n              <TextField source=\"delay\" />\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              {translate('resources.accesses.fields.releaseTime')}\n            </TableCell>\n            <TableCell>\n              <DateField source=\"releaseTime\" />\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              {translate('resources.accesses.fields.releaseDayOfMonth')}\n            </TableCell>\n            <TableCell>\n              <TextField source=\"releaseDayOfMonth\" />\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              {translate('resources.accesses.fields.releaseDayOfWeek')}\n            </TableCell>\n            <TableCell>\n              <TextField source=\"releaseDayOfWeek\" />\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              {translate('resources.accesses.fields.createdAt')}\n            </TableCell>\n            <TableCell>\n              <DateField source=\"createdAt\" />\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              {translate('resources.accesses.fields.modifiedAt')}\n            </TableCell>\n            <TableCell>\n              <DateField source=\"modifiedAt\" />\n            </TableCell>\n          </TableRow>\n          {access?.activePeriodStartingFrom !==\n            AccessActivePeriodStartingOptions.NO_LIMIT && (\n              <TableRow>\n                <TableCell>\n                  {translate('resources.accesses.fields.activePeriod')}\n                </TableCell>\n                <TableCell>\n                  <TextField source=\"activePeriod\" />\n                </TableCell>\n              </TableRow>\n            )}\n          <TableRow>\n            <TableCell>\n              {translate('resources.accesses.fields.activePeriodStartingFrom')}\n            </TableCell>\n            <TableCell>\n              <FunctionField<AccessDto>\n                render={(record?: AccessDto) =>\n                  translate(\n                    `resources.enums.activePeriodStartingFrom.${record?.activePeriodStartingFrom}`,\n                  )\n                }\n              />\n            </TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n\nconst AccessDates = () => {\n  const { basePath, record } = useShowContext<AccessDto>()\n  return (\n    <Box>\n      <ResourceContextProvider value={ResourceName.ACCESS_DATES}>\n        <AccessDatesList\n          title=\" \"\n          basePath={basePath}\n          filter={{\n            id: record?.accessDatesIds.join(','),\n          }}\n          actions={false}\n          perPage={20}\n          pagination={<Pagination rowsPerPageOptions={[20, 50, 100]} />}\n        />\n      </ResourceContextProvider>\n    </Box>\n  )\n}\n\nconst AccessUses = ({ id, tickets }: { id: string; tickets: number[] }) => {\n  const { basePath } = useShowContext<AccessDto>()\n  return (\n    <Box>\n      <ResourceContextProvider value={ResourceName.ACCESS_USINGS}>\n        <AccessUsingsList\n          title=\" \"\n          basePath={basePath}\n          filter={{\n            ticketId: tickets.join(' '),\n            accessId: id,\n          }}\n          actions={false}\n          perPage={20}\n          pagination={<Pagination rowsPerPageOptions={[20, 50, 100]} />}\n        />\n      </ResourceContextProvider>\n    </Box>\n  )\n}\n\nexport const AccessShow = (props: ShowProps) => {\n  const translate = useTranslate()\n  const [selectedTab, setSelectedTab] = useState(0)\n  const { record } = useShowContext()\n  const { id } = props\n  const theme = useTheme()\n  const smallScreen = useMediaQuery(theme.breakpoints.down('sm'))\n\n  const handleTabChange = (prop: number) => setSelectedTab(prop)\n\n  return (\n    <Show {...props}>\n      <>\n        <Grid container>\n          <Grid item xs={smallScreen ? 12 : 4}>\n            <Paper style={{ height: '100%' }}>\n              <Grid container>\n                <Grid item xs={smallScreen ? 4 : 12}>\n                  <TabButton\n                    value={0}\n                    selected={selectedTab}\n                    change={handleTabChange}\n                  >\n                    {translate('resources.accesses.tabs.details')}\n                  </TabButton>\n                </Grid>\n                <Grid item xs={smallScreen ? 4 : 12}>\n                  <TabButton\n                    value={1}\n                    selected={selectedTab}\n                    change={handleTabChange}\n                  >\n                    {translate('resources.accesses.tabs.dates')}\n                  </TabButton>\n                </Grid>\n                <Grid item xs={smallScreen ? 4 : 12}>\n                  <TabButton\n                    value={2}\n                    selected={selectedTab}\n                    change={handleTabChange}\n                  >\n                    {translate('resources.accesses.tabs.uses')}\n                  </TabButton>\n                </Grid>\n              </Grid>\n            </Paper>\n          </Grid>\n          <Grid item xs={smallScreen ? 12 : 8}>\n            <Paper style={{ height: '100%' }}>\n              {selectedTab === 0 && <AccessDetails />}\n              {selectedTab === 1 && <AccessDates />}\n              {selectedTab === 2 && (\n                <AccessUses\n                  id={id as string}\n                  tickets={\n                    record?.tickets.map((ticket: any) => ticket.id) as number[]\n                  }\n                />\n              )}\n            </Paper>\n          </Grid>\n        </Grid>\n      </>\n    </Show>\n  )\n}\n","import React, { useEffect } from 'react'\nimport {\n  ChipFieldProps,\n  DateField,\n  Labeled,\n  ResourceContextProvider,\n  Show,\n  ShowProps,\n  Tab,\n  TabbedShowLayout,\n  TextField,\n  useRecordContext,\n  useShowContext,\n  useTranslate,\n} from 'react-admin'\nimport { Box, Chip, Divider, Grid, Hidden, Typography } from '@material-ui/core'\nimport { TicketDetails } from '../../core/ticket-details/ticket-details'\nimport { mapFromBookingType } from '../../core/ticket-details/ticket-details-values.mapper'\nimport { TicketDetailsHeader } from './TicketDetailsHeader'\nimport { TicketDetailsTicketsField } from './TicketDetailsTicketsField'\nimport { ToggleAccessButton } from './ToggleAccessButton'\nimport { ToggleTicketButton } from './ToggleTicketButton'\nimport { ResourceName } from '../../core/ResourceName'\nimport { LogList } from '../logs/LogList'\nimport { AccessList } from './accesses/AccessList'\nimport { AccessShow } from './accesses/AccessShow'\nimport { BackButton, BackButtonText } from './TicketDetailsComponents'\nimport { useHasAuthority } from '../hooks/useHasAuthority'\nimport { Authority } from '../../core/auth/Authority'\n\nconst MappedChipField = <T extends unknown>({\n  mapper,\n  source,\n}: ChipFieldProps & { mapper: (value: T) => string }) => {\n  const record = useRecordContext<TicketDetails>()\n  const t = useTranslate()\n  const mappedValue = mapper(record[source as string])\n  return <Chip label={t(mappedValue)} />\n}\n\nconst AccessDetailsView = () => {\n  const { record, basePath } = useShowContext()\n  const translate = useTranslate()\n  const [selectedAccess, setSelectedAccess] = React.useState<\n    number | undefined\n  >(undefined)\n\n  const handleAccessChange = (prop: number | undefined) => {\n    setSelectedAccess(prop)\n  }\n\n  useEffect(() => {\n    if (record?.accessesIds && record.accessesIds.length === 1)\n      setSelectedAccess(record?.accessesIds.toString())\n  }, [record, setSelectedAccess])\n\n  return (\n    <>\n      <Divider />\n      <Hidden xlDown={!!selectedAccess && record?.accessesIds.length === 1}>\n        <Typography variant=\"h5\">\n          {translate('resources.accesses.actions.choose')}\n        </Typography>\n        <ResourceContextProvider value={ResourceName.ACCESSES}>\n          <AccessList\n            basePath={basePath}\n            actions={false}\n            filters={undefined}\n            filter={{ id: record?.accessesIds.toString() }}\n            title=\" \"\n            setSelected={handleAccessChange}\n          />\n        </ResourceContextProvider>\n      </Hidden>\n      {selectedAccess && (\n        <Box paddingY={2}>\n          <Grid container>\n            <Hidden xlDown={record?.accessesIds.length === 1}>\n              <Grid item xs={1}>\n                <BackButton onClick={() => setSelectedAccess(undefined)}>\n                  <BackButtonText>\n                    {translate('resources.accesses.actions.back')}\n                  </BackButtonText>\n                </BackButton>\n              </Grid>\n            </Hidden>\n            <Grid item xs={record?.accessesIds.length === 1 ? 12 : 11}>\n              <AccessShow\n                basePath={basePath}\n                actions={false}\n                id={selectedAccess.toString()}\n                resource={ResourceName.ACCESSES}\n                title=\" \"\n              />\n            </Grid>\n          </Grid>\n        </Box>\n      )}\n    </>\n  )\n}\n\nconst ProfileDetailsView = () => {\n  const { record } = useShowContext()\n  return (\n    <Tab label=\"resources.ticket-details.tabs.profile\">\n      {record?.documentType && (\n        <TextField\n          addLabel\n          label=\"resources.ticket-details.fields.documentType\"\n          source=\"documentType\"\n        />\n      )}\n      {record?.pesel && (\n        <TextField\n          label=\"resources.ticket-details.fields.pesel\"\n          source=\"pesel\"\n        />\n      )}\n      {record?.documentNumber && (\n        <TextField\n          label=\"resources.ticket-details.fields.documentNumber\"\n          source=\"documentNumber\"\n        />\n      )}\n      <TextField\n        label=\"resources.ticket-details.fields.firstname\"\n        source=\"firstname\"\n      />\n      <TextField\n        label=\"resources.ticket-details.fields.lastname\"\n        source=\"lastname\"\n      />\n      {record?.gender && (\n        <TextField\n          label=\"resources.ticket-details.fields.gender\"\n          source=\"gender\"\n        />\n      )}\n      {record?.birthdate && (\n        <DateField\n          label=\"resources.ticket-details.fields.birthdate\"\n          source=\"birthdate\"\n        />\n      )}\n      {record?.company && (\n        <TextField\n          label=\"resources.ticket-details.fields.company\"\n          source=\"company\"\n        />\n      )}\n      {record?.nationality && (\n        <TextField\n          label=\"resources.ticket-details.fields.nationality\"\n          source=\"nationality\"\n        />\n      )}\n    </Tab>\n  )\n}\n\nconst StatusButtons = () => (\n  <>\n    <Divider />\n    <Box p={1} display=\"flex\" justifyContent=\"flex-end\">\n      <ToggleAccessButton />\n      <ToggleTicketButton />\n    </Box>\n  </>\n)\n\nconst TicketMainView = () => {\n  const { record: ticketDetails } = useShowContext<TicketDetails>()\n  return (\n    <Tab label=\"resources.ticket-details.tabs.booking\">\n      {ticketDetails?.eventName && (\n        <TextField\n          label=\"resources.ticket-details.fields.eventName\"\n          source=\"eventName\"\n        />\n      )}\n      {ticketDetails?.seatId && (\n        <TextField\n          label=\"resources.ticket-details.fields.seatId\"\n          source=\"seatId\"\n        />\n      )}\n      {ticketDetails?.blockId && (\n        <TextField\n          label=\"resources.ticket-details.fields.blockId\"\n          source=\"blockId\"\n        />\n      )}\n      {ticketDetails?.objectName && (\n        <TextField\n          label=\"resources.ticket-details.fields.objectName\"\n          source=\"objectName\"\n        />\n      )}\n      {ticketDetails?.tribuneName && (\n        <TextField\n          label=\"resources.ticket-details.fields.tribuneName\"\n          source=\"tribuneName\"\n        />\n      )}\n      {ticketDetails?.blockName && (\n        <TextField\n          label=\"resources.ticket-details.fields.blockName\"\n          source=\"blockName\"\n        />\n      )}\n      {ticketDetails?.rowNumber && (\n        <TextField\n          label=\"resources.ticket-details.fields.rowNumber\"\n          source=\"rowNumber\"\n        />\n      )}\n      {ticketDetails?.seatNumber && (\n        <TextField\n          label=\"resources.ticket-details.fields.seatNumber\"\n          source=\"seatNumber\"\n        />\n      )}\n      <Labeled label=\"resources.ticket-details.fields.bookingType\">\n        <MappedChipField source=\"bookingType\" mapper={mapFromBookingType} />\n      </Labeled>\n      {ticketDetails?.activeFrom && (\n        <DateField\n          label=\"resources.ticket-details.fields.activeFrom\"\n          source=\"activeFrom\"\n          showTime\n        />\n      )}\n      {ticketDetails?.activeTo && (\n        <DateField\n          label=\"resources.ticket-details.fields.activeTo\"\n          source=\"activeTo\"\n          showTime\n        />\n      )}\n      <TicketDetailsTicketsField label=\"resources.ticket-details.fields.tickets.name\" />\n      <DateField\n        label=\"resources.ticket-details.fields.createdAt\"\n        source=\"createdAt\"\n        showTime\n      />\n      <DateField\n        label=\"resources.ticket-details.fields.modifiedAt\"\n        source=\"modifiedAt\"\n        showTime\n      />\n      <StatusButtons />\n    </Tab>\n  )\n}\n\nconst TicketLogsView = () => {\n  const { record, basePath } = useShowContext()\n  return (\n    <ResourceContextProvider value={ResourceName.TICKET_LOGS}>\n      <LogList\n        basePath={basePath}\n        filter={{ bookingId: record?.id }}\n        filters={undefined}\n        actions={false}\n        title=\" \"\n        noBooking\n      />\n    </ResourceContextProvider>\n  )\n}\n\nexport const TicketDetailsView = (props: ShowProps) => {\n  const hasAuthority = useHasAuthority()\n  return (\n    <Show {...props}>\n      <>\n        <TicketDetailsHeader />\n        <Divider />\n        <TabbedShowLayout>\n          <Tab label=\"resources.ticket-details.tabs.booking\">\n            <TicketMainView />\n          </Tab>\n          {hasAuthority(Authority.VIEW_LOGS) && (\n            <Tab path=\"logs\"\n              label=\"resources.ticket-details.tabs.logs\">\n              <TicketLogsView />\n            </Tab>\n          )}\n          <Tab path=\"profile\"\n            label=\"resources.ticket-details.tabs.profile\">\n            <ProfileDetailsView />\n          </Tab>\n          <Tab path=\"accesses\"\n            label=\"resources.ticket-details.tabs.accesses\">\n            <TextField\n              label=\"resources.ticket-details.fields.variantName\"\n              source=\"variantName\"\n            />\n            <AccessDetailsView />\n          </Tab>\n        </TabbedShowLayout>\n      </>\n    </Show>\n  )\n}\n","import { Box, Divider, Grid, Typography, useMediaQuery, useTheme } from '@material-ui/core'\nimport * as React from 'react'\nimport {\n  Datagrid,\n  List,\n  ListProps,\n  TextField,\n  useListContext,\n  useTranslate,\n  FunctionField,\n  Record,\n  Pagination,\n  TextInput,\n  Filter\n} from 'react-admin'\nimport { maskMiddlePart } from '../../core/common/mask.utils'\nimport { ResourceName } from '../../core/ResourceName'\nimport { TicketInfo } from '../../core/ticket-info/ticket-info'\nimport { MaskField } from '../common/MaskField'\nimport FilterProps from '../common/FilterProps'\n\nconst TicketInfoExpand = ({ record }: { record?: TicketInfo }) => {\n  const t = useTranslate()\n  return (\n    <Box padding={1}>\n      <Grid container spacing={1}>\n        <Grid item xs={4}>\n          {t(\"resources.ticket-info.fields.bookingId\")}\n        </Grid>\n        <Grid item xs={8} style={{ textAlign: \"center\" }}>\n          <TextField record={record} source=\"bookingId\" />\n        </Grid>\n      </Grid>\n    </Box>\n  )\n}\n\nconst TicketInfoGrid = () => {\n  const {\n    loading,\n    filterValues: { ticketCode },\n    data\n  } = useListContext()\n  const t = useTranslate()\n  const theme = useTheme()\n  const smallScreen = useMediaQuery(theme.breakpoints.down('sm'))\n  const xSmallScreen = useMediaQuery(theme.breakpoints.down('xs'))\n  return (\n    <>\n      {ticketCode &&\n        <Box padding={1} display=\"inline-flex\">\n          <Typography variant=\"h5\" paragraph style={{ wordBreak: \"break-word\" }} >\n            {t('resources.ticket-info.search-list-title', { ticketCode })}\n          </Typography>\n        </Box>\n      }\n      <Divider />\n      <Datagrid\n        padding={smallScreen ? \"checkbox\" : \"default\"}\n        loaded={!loading}\n        rowClick={(id) => `${ResourceName.TICKET_DETAILS}/${data[id]?.bookingId}/show`}\n        isRowExpandable={() => xSmallScreen}\n        expand={<TicketInfoExpand />}\n      >\n        {!smallScreen && <TextField source=\"firstname\" sortable={false} />}\n        {!smallScreen && <TextField source=\"lastname\" sortable={false} />}\n        {!smallScreen && <MaskField source=\"pesel\" sortable={false} />}\n        {smallScreen && <FunctionField source=\"customer\" sortable={false}\n          render={(record: Record | undefined) =>\n            `${record?.firstname} ${record?.lastname} ${record?.pesel ? maskMiddlePart(record.pesel, 2) : \"\"}`\n          } />}\n        <TextField source=\"ticketCode\" sortable />\n        <FunctionField\n          label='resources.ticket-info.fields.eventName'\n          render={(record: Record | undefined) => record?.eventId ? `${record?.eventName} ${record?.eventDate?.replace(\"T\", \" \")} ${record?.eventId}` : \"-\" } />\n        {!xSmallScreen && <TextField source=\"bookingId\" sortable />}\n      </Datagrid>\n    </>\n  )\n}\n\nconst TicketInfoFilters = (props: FilterProps) => (\n  <Filter {...props}>\n    <TextInput source=\"ticketCode\" alwaysOn />\n  </Filter>\n)\n\nexport const TicketInfoList = (props: ListProps) => (\n  <List exporter={false} perPage={20} sort={{ field: \"id\", order: \"DESC\" }}\n    pagination={<Pagination rowsPerPageOptions={[10, 20, 50]} />} {...props}\n    filters={<TicketInfoFilters />}>\n    <TicketInfoGrid />\n  </List>\n)\n","import PersonIcon from '@material-ui/icons/Person'\nimport ReceiptIcon from '@material-ui/icons/Receipt'\nimport ViewComfyIcon from '@material-ui/icons/ViewComfy'\nimport React from 'react'\nimport { Resource } from 'react-admin'\nimport { Authority } from '../core/auth/Authority'\nimport { ResourceName } from '../core/ResourceName'\nimport { AccessCreate } from './configuration/accesses/AccessCreate'\nimport { AccessEdit } from './configuration/accesses/AccessEdit'\nimport { AccessList } from './configuration/accesses/AccessList'\nimport { AccessShow } from './configuration/accesses/AccessShow'\nimport { VariantCreate } from './configuration/variants/VariantCreate'\nimport { VariantEdit } from './configuration/variants/VariantEdit'\nimport { VariantList } from './configuration/variants/VariantList'\nimport { VariantShow } from './configuration/variants/VariantShow'\nimport { CustomerDetailsView } from './customer-details/CustomerDetailsView'\nimport { CustomerInfoList } from './customer-info/CustomerInfoList'\nimport { EngineEdit } from './devices/engines/EngineEdit'\nimport { EngineList } from './devices/engines/EngineList'\nimport { EngineShow } from './devices/engines/EngineShow'\nimport { PalmEdit } from './devices/palms/PalmEdit'\nimport { PalmList } from './devices/palms/PalmList'\nimport { PalmShow } from './devices/palms/PalmShow'\nimport { EventCreate } from './events/EventCreate'\nimport { EventEdit } from './events/EventEdit'\nimport { EventList } from './events/EventList'\nimport { EventShow } from './events/EventShow'\nimport { hasAuthorityWithGivenPermissions as hasAuthority } from './hooks/useHasAuthority'\nimport { LogList } from './logs/LogList'\nimport { OverallView } from './stats/overall-view/OverallView'\nimport { OverallViewList } from './stats/overall-view/OverallViewList'\nimport { AccessUsingsList } from './ticket-details/accesses/AccessUsingsList'\nimport { TicketDetailsView } from './ticket-details/TicketDetailsView'\nimport { TicketInfoList } from './ticket-info/TicketInfoList'\n\nexport const generateResourcesBasedOnPermissions = (\n  permissions: Set<string>,\n) => [\n    <Resource\n      icon={ReceiptIcon}\n      name={ResourceName.TICKET_INFO}\n      list={TicketInfoList}\n    />,\n    <Resource name={ResourceName.TICKET_DETAILS} show={TicketDetailsView} />,\n    <Resource name={ResourceName.ACCESS_USINGS} list={AccessUsingsList} />,\n    <Resource\n      icon={PersonIcon}\n      name={ResourceName.CUSTOMER_INFO}\n      list={CustomerInfoList}\n    />,\n    <Resource name={ResourceName.CUSTOMER_DETAILS} show={CustomerDetailsView} />,\n    hasAuthority(Authority.VIEW_LOGS, permissions) && (\n      <Resource name={ResourceName.LOGS} list={LogList} />\n    ),\n    hasAuthority(Authority.VIEW_EVENTS, permissions) && (\n      <Resource\n        name={ResourceName.EVENTS}\n        list={EventList}\n        show={EventShow}\n        edit={hasAuthority(Authority.EDIT_EVENTS, permissions) ? EventEdit : undefined}\n        create={hasAuthority(Authority.CREATE_EVENTS, permissions) ? EventCreate : undefined}\n      />\n    ),\n    hasAuthority(Authority.VIEW_STATS_OVERALL_VIEW, permissions) && (\n      <Resource\n        icon={ViewComfyIcon}\n        name={ResourceName.STATS_OVERALL_VIEW_LIST}\n        list={OverallViewList}\n      />\n    ),\n    hasAuthority(Authority.VIEW_STATS_OVERALL_VIEW, permissions) && (\n      <Resource\n        icon={ViewComfyIcon}\n        name={ResourceName.STATS_OVERALL_VIEW}\n        show={OverallView}\n      />\n    ),\n    <Resource\n      name={ResourceName.PALMS}\n      list={PalmList}\n      show={PalmShow}\n      edit={PalmEdit}\n    />,\n    <Resource name={ResourceName.ACCESS_DATES} />,\n    hasAuthority(Authority.VIEW_ACCESSES, permissions) && (\n      <Resource name={ResourceName.ACCESSES}\n        list={AccessList}\n        show={AccessShow}\n        edit={AccessEdit}\n        create={AccessCreate} />\n    ),\n    <Resource name={ResourceName.BOOKINGS} />,\n    hasAuthority(Authority.VIEW_COMPANIES, permissions) && (\n      <Resource name={ResourceName.COMPANIES} />\n    ),\n    <Resource\n      name={ResourceName.ENGINES}\n      list={EngineList}\n      show={EngineShow}\n      edit={EngineEdit}\n    />,\n    <Resource name={ResourceName.ENTRANCES} />,\n    <Resource name={ResourceName.OBJECTS} />,\n    <Resource name={ResourceName.TICKET_LOGS} />,\n    hasAuthority(Authority.VIEW_VARIANTS, permissions) && (\n      <Resource name={ResourceName.VARIANTS}\n        list={VariantList}\n        show={VariantShow}\n        edit={VariantEdit}\n        create={VariantCreate} />\n    ),\n    hasAuthority(Authority.VIEW_USERS, permissions) && (\n      <Resource name={ResourceName.USERS} />\n    )\n  ]\n","import {\n  DashboardAction,\n  DashboardItem,\n  DashboardState,\n  INACTIVE_COMPONENTS_KEY,\n} from './dashboard'\nimport { UPDATE_DASHBOARD } from '../constants/reducer.actions'\n\nconst initialState: DashboardState['dashboard'] = {\n  inactiveComponents:\n    (localStorage\n      .getItem(INACTIVE_COMPONENTS_KEY)\n      ?.split(',') as DashboardItem[]) || [],\n}\n\nconst save = (state: DashboardState['dashboard']) => {\n  const { inactiveComponents } = state\n  if (inactiveComponents.length) {\n    localStorage.setItem(INACTIVE_COMPONENTS_KEY, inactiveComponents.join())\n  } else {\n    localStorage.removeItem(INACTIVE_COMPONENTS_KEY)\n  }\n  return state\n}\n\nexport const dashboardReducer = (\n  state = initialState,\n  { type, payload: dashboardItem }: DashboardAction,\n): DashboardState['dashboard'] => {\n  if (type === UPDATE_DASHBOARD) {\n    const { inactiveComponents } = state\n    if (inactiveComponents.includes(dashboardItem)) {\n      return save({\n        ...state,\n        inactiveComponents: inactiveComponents.filter(\n          (v) => v !== dashboardItem,\n        ),\n      })\n    }\n    return save({\n      ...state,\n      inactiveComponents: [...inactiveComponents, dashboardItem],\n    })\n  }\n  return state\n}\n","import React from 'react'\nimport { Admin } from 'react-admin'\nimport themeReducer from './core/common/theme.reducer'\nimport { providersFactory } from './core/providers.factory'\nimport { AppLayout } from './main/common/AppLayout'\nimport { Dashboard } from './main/Dashboard'\nimport routes from './main/common/routes'\nimport { generateResourcesBasedOnPermissions } from './main/Resources'\nimport { dashboardReducer } from './core/common/dashboard.reducer'\n\nconst App = () => {\n  const { authProvider, dataProvider, i18nProvider } = providersFactory(\n    process.env.NODE_ENV,\n  )\n  return (\n    <Admin\n      dashboard={Dashboard}\n      authProvider={authProvider}\n      dataProvider={dataProvider}\n      i18nProvider={i18nProvider}\n      customReducers={{\n        theme: themeReducer,\n        dashboard: dashboardReducer,\n      }}\n      customRoutes={routes}\n      layout={AppLayout}\n    >\n      {generateResourcesBasedOnPermissions}\n    </Admin>\n  )\n}\n\nexport default App\n","import { AuthProvider, DataProvider, I18nProvider, LegacyDataProvider } from 'react-admin'\nimport fakeDataProvider from './fake/fake-data.provider'\nimport fakeAuthProvider from './fake/providers/fake-auth.provider'\nimport authProvider from './auth/auth.provider'\nimport dataProvider from './data.provider'\nimport i18nProvider from './i18n.provider'\nimport { withSynchronizedPermissions } from './auth/withSyncPermissions'\n\ninterface Providers {\n  readonly authProvider: AuthProvider\n  readonly dataProvider: DataProvider | LegacyDataProvider\n  readonly i18nProvider: I18nProvider\n}\n\nexport const providersFactory = (\n  env: 'development' | 'test' | 'production',\n): Providers => {\n  switch (env) {\n    case 'production':\n      return {\n        authProvider: withSynchronizedPermissions(authProvider),\n        dataProvider,\n        i18nProvider,\n      }\n    case 'development':\n      return {\n        authProvider,\n        dataProvider,\n        i18nProvider,\n      }\n    default:\n      return {\n        authProvider: fakeAuthProvider,\n        dataProvider: fakeDataProvider,\n        i18nProvider,\n      }\n  }\n}\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import { initReactI18next } from 'react-i18next'\nimport i18n from 'i18next'\nimport plTranslation from './locales/pl/translation.json'\nimport enTranslation from './locales/en/translation.json'\n\nconst identity = localStorage.getItem('username')\nconst lng = identity && localStorage.getItem(`${identity}.lng`)\n\ni18n.use(initReactI18next)\n  .init({\n    lng: lng || 'pl',\n    fallbackLng: 'pl',\n    debug: false,\n    interpolation: {\n      escapeValue: false, // not needed for react as it escapes by default\n    },\n    resources: {\n      pl: { translation: plTranslation },\n      en: { translation: enTranslation },\n    },\n  })\n\nexport default i18n\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport './i18n.init'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}